/**
   * TASK_ENTER_COVER
   *
   * @param {number} ped
   * @return {void}
   */
export const TASK_ENTER_COVER = '0x4972a022ae6dafa1';
/**
   * TASK_EXIT_COVER
   *
   * @param {number} ped
   * @return {void}
   */
export const TASK_EXIT_COVER = '0x2bc4a6d92d140112';
/**
   * _0x140B3CB1D424A945
   * weaponHash can also be -1
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {void}
   */
export const _0x140B3CB1D424A945 = '0x140b3cb1d424a945';
/**
   * _0x3C7A9C2C953128FE
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x3C7A9C2C953128FE = '0x3c7a9c2c953128fe';
/**
   * _0x53E4D0C079CA6855
   *
   * @param {number} handle
   * @return {number}
   */
export const _0x53E4D0C079CA6855 = '0x53e4d0c079ca6855';
/**
   * _0x64340DC208D671D5
   * coverLayer: see levels_0/levels/rdr3/coverlayers
   *
   * @param {string | number} coverLayer
   * @return {void}
   */
export const _0x64340DC208D671D5 = '0x64340dc208d671d5';
/**
   * _ADD_COVER_BLOCKING_AREA
   * args: f_0 = Volume Handle
   * f_1 = integer (?) (only the number 1 is ever used here, or is not used at all)
   * f_2 = integer (-1 to 32 in R* Scripts)
   *
   * @param {DataView} args
   * @return {void}
   */
export const _ADD_COVER_BLOCKING_AREA = '0x733077295ab51304';
/**
   * _0x7A1FDCF35EAA140F
   * coverLayer: see levels_0/levels/rdr3/coverlayers
   *
   * @param {string | number} coverLayer
   * @return {void}
   */
export const _0x7A1FDCF35EAA140F = '0x7a1fdcf35eaa140f';
/**
   * _0x957D7E750216D74B
   *
   * @param {number} ped
   * @return {number}
   */
export const _0x957D7E750216D74B = '0x957d7e750216d74b';
/**
   * _0xEBA51A294C73292E
   *
   * @param {DataView} args
   * @return {void}
   */
export const _0xEBA51A294C73292E = '0xeba51a294c73292e';
/**
   * _ADD_SCRIPTED_COVER_POINT
   *
   * @param {DataView} data
   * @return {number}
   */
export const _ADD_SCRIPTED_COVER_POINT = '0x975bd6351648935f';
/**
   * _ARE_LOAD_COVER_ANIMS_LOADED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _ARE_LOAD_COVER_ANIMS_LOADED = '0x8cbe916cfc64ad5c';
/**
   * _DOES_COVER_POINT_EXIST
   *
   * @param {number} handle
   * @return {boolean}
   */
export const _DOES_COVER_POINT_EXIST = '0xc276fe69dda22bad';
/**
   * _GET_COVER_POINT_STATE_FROM_PED
   * 1 = In cover while crouched
   * 2 = In cover while standing
   * 3 = Not in cover
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_COVER_POINT_STATE_FROM_PED = '0x5f5b1b7e8e8f94c6';
/**
   * _REQUEST_FLINCH_COVER_ANIM
   * Makes ped flinch (if in cover) like they have been shot at
   *
   * @param {number} ped
   * @return {void}
   */
export const _REQUEST_FLINCH_COVER_ANIM = '0x2a31d13c5f021d0d';
/**
   * _STOP_RUNNING_COVER_ANIMS
   * Stops running cover anims and releases them
   * _STOP_RENDERING_* - _STOP_SCRIPTED*
   *
   * @param {number} ped
   * @return {void}
   */
export const _STOP_RUNNING_COVER_ANIMS = '0x1a7a802b2301edc0';
/**
   * _TASK_AI_SEEK_COVER_TO_COVER_POINT
   *
   * @param {DataView} args
   * @return {void}
   */
export const _TASK_AI_SEEK_COVER_TO_COVER_POINT = '0x89783fddf079c88d';
/**
   * GET_TRANSPORT_CONFIG_FLAG
   * flagId: see SET_TRANSPORT_CONFIG_FLAG
   *
   * @param {number} transportEntity
   * @param {number} flagId
   * @param {boolean} p2
   * @return {boolean}
   */
export const GET_TRANSPORT_CONFIG_FLAG = '0xf382c92ccc1ccdbc';
/**
   * IS_PED_ENTERING_TRANSPORT
   *
   * @param {number} ped
   * @param {number} transportEntity
   * @param {boolean} p2
   * @return {boolean}
   */
export const IS_PED_ENTERING_TRANSPORT = '0x619e63980bfc0096';
/**
   * IS_PED_EXITING_TRANSPORT
   *
   * @param {number} ped
   * @param {number} transportEntity
   * @return {boolean}
   */
export const IS_PED_EXITING_TRANSPORT = '0x660639bc60157048';
/**
   * SET_PED_OFF_TRANSPORT_SEAT
   *
   * @param {number} ped
   * @param {number} flags
   * @return {void}
   */
export const SET_PED_OFF_TRANSPORT_SEAT = '0x8886d83a430537fd';
/**
   * SET_PED_ON_TRANSPORT_SEAT
   * seat: see CREATE_PED_INSIDE_VEHICLE
   *
   * @param {number} ped
   * @param {number} transportEntity
   * @param {number} seat
   * @param {number} flags
   * @return {void}
   */
export const SET_PED_ON_TRANSPORT_SEAT = '0xe588b5a8a005cb5e';
/**
   * SET_TRANSPORT_ACCESSIBLE_SEAT_FLAGS
   *
   * @param {number} transportEntity
   * @param {number} flags
   * @return {void}
   */
export const SET_TRANSPORT_ACCESSIBLE_SEAT_FLAGS = '0xdd0660c997de94fd';
/**
   * SET_TRANSPORT_CONFIG_FLAG
   * flagId:
   * enum eTransportConfigFlags
   * {
   *   TCF_NotConsideredForEntryByLocalPlayer,
   *   TCF_0xB78D6624,
   *   TCF_0xA9700425,
   *   TCF_0x8D7E4641,
   *   TCF_0xF24BAA1F,
   *   TCF_0x63B77935,
   *   TCF_NotConsideredForEntryByAllPlayers,
   *   TCF_0xD17A2AFD,
   *   TCF_0xD4E4FDD5,
   *   TCF_0x8227C929,
   *   TCF_0x812C1070,
   *   TCF_0x0E1AB26F,
   *   TCF_0xBF4EC863,
   *   TCF_0x75660C36,
   *   TCF_0xA2539E20,
   *   TCF_0x9162C633,
   *   TCF_DisableHonorModifiers,
   *   TCF_0xF9E71CB6,
   *   TCF_0x933ECD3F,
   *   TCF_0x18513A34
   * };
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/TRANSPORT_CONFIG_FLAGS
   *
   * @param {number} transportEntity
   * @param {number} flagId
   * @param {boolean} value
   * @return {void}
   */
export const SET_TRANSPORT_CONFIG_FLAG = '0xba8818212633500a';
/**
   * TASK_ENTER_TRANSPORT
   *
   * @param {DataView} args
   * @return {void}
   */
export const TASK_ENTER_TRANSPORT = '0xaee3add08829cb6f';
/**
   * TASK_EXIT_TRANSPORT
   *
   * @param {DataView} args
   * @return {void}
   */
export const TASK_EXIT_TRANSPORT = '0xc273a5b8488f7838';
/**
   * _0x4248AB2EEB3C75AD
   * _SET_TRANSPORT_*
   *
   * @param {number} transportEntity
   * @param {number} ped
   * @param {boolean} p2
   * @return {void}
   */
export const _0x4248AB2EEB3C75AD = '0x4248ab2eeb3c75ad';
/**
   * _0x4B6C9A43F7D9109B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x4B6C9A43F7D9109B = '0x4b6c9a43f7d9109b';
/**
   * _0x5639FBEA922788DA
   * _CLEAR_A*
   *
   * @param {number} transportEntity
   * @return {void}
   */
export const _0x5639FBEA922788DA = '0x5639fbea922788da';
/**
   * _0x8C8371EDFAF014A0
   * _SET_TRANSPORT_*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x8C8371EDFAF014A0 = '0x8c8371edfaf014a0';
/**
   * _0xF8C20282B237E3F7
   * _SET_TRANSPORT_*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xF8C20282B237E3F7 = '0xf8c20282b237e3f7';
/**
   * _GET_PED_IN_TRANSPORT_SEAT
   * seatIndex: see CREATE_PED_INSIDE_VEHICLE
   *
   * @param {number} transportEntity
   * @param {number} seatIndex
   * @return {number}
   */
export const _GET_PED_IN_TRANSPORT_SEAT = '0xffec4b0a1a3ed515';
/**
   * _GET_TRANSPORT_USAGE_FLAGS
   * See _SET_TRANSPORT_USAGE_FLAGS
   *
   * @param {number} transportEntity
   * @return {[any, number]}
   */
export const _GET_TRANSPORT_USAGE_FLAGS = '0xe195c5a82156321d';
/**
   * _IS_PED_ON_TRANSPORT_ENTITY
   * Checks if ped is placed on target transportEntity
   *
   * @param {number} ped
   * @param {number} transportEntity
   * @return {boolean}
   */
export const _IS_PED_ON_TRANSPORT_ENTITY = '0x159ef5b6edce00e8';
/**
   * _IS_PED_ON_TRANSPORT_SEAT
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {boolean}
   */
export const _IS_PED_ON_TRANSPORT_SEAT = '0xdc44f405a6b98d03';
/**
   * _IS_TRANSPORT_SEAT_FREE
   * Called together with IS_VEHICLE_SEAT_FREE
   *
   * @param {number} transportEntity
   * @param {number} seatIndex
   * @return {boolean}
   */
export const _IS_TRANSPORT_SEAT_FREE = '0x43ff27fc1829c202';
/**
   * _IS_TRANSPORT_SEAT_OCCUPIED
   *
   * @param {number} transportEntity
   * @param {number} seatIndex
   * @return {boolean}
   */
export const _IS_TRANSPORT_SEAT_OCCUPIED = '0x2e2e06023d07631e';
/**
   * _SET_AI_CAN_USE_TRANSPORT
   *
   * @param {number} transportEntity
   * @param {boolean} state
   * @return {void}
   */
export const _SET_AI_CAN_USE_TRANSPORT = '0x67f7ceac2391e114';
/**
   * _SET_PED_USE_TRANSPORT_SEAT_PREFERENCE
   *
   * @param {number} ped
   * @param {number} transportEntity
   * @param {number} preferenceSlot
   * @param {number} p3
   * @param {number} seatIndex
   * @return {void}
   */
export const _SET_PED_USE_TRANSPORT_SEAT_PREFERENCE = '0xb7079f4c72896756';
/**
   * _SET_TRANSPORT_PRIORITY_SEAT
   *
   * @param {number} transportEntity
   * @param {number} seatIndex
   * @return {void}
   */
export const _SET_TRANSPORT_PRIORITY_SEAT = '0x13f138225c202f66';
/**
   * _SET_TRANSPORT_USAGE_FLAGS
   * enum eTransportUsageFlags
   * {
   *   TUF_INVALID = 0,
   *   TUF_ALLOW_DRIVER_ME = (1 << 0),
   *   TUF_ALLOW_DRIVER_GANG = (1 << 1),
   *   TUF_ALLOW_DRIVER_CREW = (1 << 2),
   *   TUF_ALLOW_DRIVER_FRIENDS = (1 << 3),
   *   TUF_ALLOW_DRIVER_ANYONE = (1 << 4),
   *   TUF_ALLOW_PASSENGER_ME = (1 << 5),
   *   TUF_ALLOW_PASSENGER_GANG = (1 << 6),
   *   TUF_ALLOW_PASSENGER_CREW = (1 << 7),
   *   TUF_ALLOW_PASSENGER_FRIENDS = (1 << 8),
   *   TUF_ALLOW_PASSENGER_ANYONE = (1 << 9),
   *   TUF_ALLOW_ACCESS_AI = (1 << 10)
   * };
   *
   * @param {number} transportEntity
   * @param {number} flags
   * @return {void}
   */
export const _SET_TRANSPORT_USAGE_FLAGS = '0xe2487779957fe897';
/**
   * ABORT_ANIM_SCENE
   *
   * @param {number} animScene
   * @param {boolean} p1
   * @return {void}
   */
export const ABORT_ANIM_SCENE = '0x718cf1328d20c2b3';
/**
   * ATTACH_ANIM_SCENE_TO_ENTITY
   *
   * @param {number} animScene
   * @param {number} entity
   * @param {number} p2
   * @return {void}
   */
export const ATTACH_ANIM_SCENE_TO_ENTITY = '0xdc418495dba327a1';
/**
   * ATTACH_ANIM_SCENE_TO_ENTITY_PRESERVING_LOCATION
   *
   * @param {number} animScene
   * @param {number} entity
   * @param {number} p2
   * @return {void}
   */
export const ATTACH_ANIM_SCENE_TO_ENTITY_PRESERVING_LOCATION = '0x1c0b105c3f30b88d';
/**
   * BLOCK_ANIM_SCENE_FADING_NEXT_FRAME
   *
   * @param {boolean} p0
   * @param {boolean} p1
   * @return {void}
   */
export const BLOCK_ANIM_SCENE_FADING_NEXT_FRAME = '0x1b70811d3bf75db9';
/**
   * CHECK_OWNERSHIP_OF_ANIM_SCENE
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const CHECK_OWNERSHIP_OF_ANIM_SCENE = '0x661b8683611b9b97';
/**
   * COULD_ANIM_SCENE_ENTITY_REACH_EXIT_NEXT_FRAME
   *
   * @param {number} animScene
   * @param {string | number} entityName
   * @param {any} p2
   * @param {any} p3
   * @return {boolean}
   */
export const COULD_ANIM_SCENE_ENTITY_REACH_EXIT_NEXT_FRAME = '0x73616e64696c616e';
/**
   * DETACH_ANIM_SCENE
   *
   * @param {number} animScene
   * @return {void}
   */
export const DETACH_ANIM_SCENE = '0x6843a1aa3a336dff';
/**
   * DETACH_ANIM_SCENE_PRESERVING_LOCATION
   *
   * @param {number} animScene
   * @return {void}
   */
export const DETACH_ANIM_SCENE_PRESERVING_LOCATION = '0xa2507c4948c83d2e';
/**
   * DOES_ANIM_SCENE_EXIST
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const DOES_ANIM_SCENE_EXIST = '0x25557e324489393c';
/**
   * FADE_ANIM_SCENE_AUDIO_IN
   *
   * @param {number} animScene
   * @param {number} p1
   * @return {void}
   */
export const FADE_ANIM_SCENE_AUDIO_IN = '0xa41351ea2a18a0ad';
/**
   * FADE_ANIM_SCENE_AUDIO_OUT
   *
   * @param {number} animScene
   * @param {number} p1
   * @return {void}
   */
export const FADE_ANIM_SCENE_AUDIO_OUT = '0x323e3ad772ba5d57';
/**
   * GET_ANIM_SCENE_BOOL
   *
   * @param {number} animScene
   * @param {string | number} name
   * @return {boolean}
   */
export const GET_ANIM_SCENE_BOOL = '0x07a6f6447eca9b64';
/**
   * GET_ANIM_SCENE_CURRENT_ACTIVE_CAMERA_COUNT
   *
   * @param {number} animScene
   * @return {number}
   */
export const GET_ANIM_SCENE_CURRENT_ACTIVE_CAMERA_COUNT = '0x4822a65d5af64e69';
/**
   * GET_ANIM_SCENE_ENTITY_LOCATION_DATA
   *
   * @param {number} animScene
   * @param {string | number} entityName
   * @param {boolean} p3
   * @param {string | number} playbackListName
   * @param {number} p5
   * @return {[boolean, Vector3]}
   */
export const GET_ANIM_SCENE_ENTITY_LOCATION_DATA = '0x8398438d8f14f56d';
/**
   * GET_ANIM_SCENE_FLOAT
   *
   * @param {number} animScene
   * @param {string | number} name
   * @return {number}
   */
export const GET_ANIM_SCENE_FLOAT = '0xcc24cb07f60b496e';
/**
   * GET_ANIM_SCENE_INT
   *
   * @param {number} animScene
   * @param {string | number} name
   * @return {number}
   */
export const GET_ANIM_SCENE_INT = '0x2b7277484cc095fd';
/**
   * GET_ANIM_SCENE_ORIGIN
   *
   * @param {number} animScene
   * @param {number} order
   * @return {[Vector3, Vector3]}
   */
export const GET_ANIM_SCENE_ORIGIN = '0xadf1d53f3b1fe0a7';
/**
   * GET_ANIM_SCENE_PHASE
   *
   * @param {number} animScene
   * @return {number}
   */
export const GET_ANIM_SCENE_PHASE = '0x3fbc3f51bf12dfbf';
/**
   * HAS_ANIM_SCENE_EXITED
   *
   * @param {number} animScene
   * @param {boolean} p1
   * @return {boolean}
   */
export const HAS_ANIM_SCENE_EXITED = '0xf94692eb9dc15d74';
/**
   * HAS_ENTITY_EXITED_ANIM_SCENE
   *
   * @param {number} animScene
   * @param {string | number} entityName
   * @return {boolean}
   */
export const HAS_ENTITY_EXITED_ANIM_SCENE = '0xb89fcff19dafff28';
/**
   * IS_ANIM_SCENE_EXITING_THIS_FRAME
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const IS_ANIM_SCENE_EXITING_THIS_FRAME = '0xcdc5512a407cf08d';
/**
   * IS_ANIM_SCENE_FINISHED
   *
   * @param {number} animScene
   * @param {boolean} p1
   * @return {boolean}
   */
export const IS_ANIM_SCENE_FINISHED = '0xd8254cb2c586412b';
/**
   * IS_ANIM_SCENE_IN_SECTION
   *
   * @param {number} animScene
   * @param {string | number} sectionName
   * @param {boolean} p2
   * @return {boolean}
   */
export const IS_ANIM_SCENE_IN_SECTION = '0x8d81e7824b7753f7';
/**
   * IS_ANIM_SCENE_LOADED
   *
   * @param {number} animScene
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {boolean}
   */
export const IS_ANIM_SCENE_LOADED = '0x477122b8d05e7968';
/**
   * IS_ANIM_SCENE_METADATA_LOADED
   *
   * @param {number} animScene
   * @param {boolean} p1
   * @return {boolean}
   */
export const IS_ANIM_SCENE_METADATA_LOADED = '0x95531a4a20cce7bc';
/**
   * IS_ANIM_SCENE_RUNNING
   *
   * @param {number} animScene
   * @param {boolean} p1
   * @return {boolean}
   */
export const IS_ANIM_SCENE_RUNNING = '0xcbfc7725de6ce2e0';
/**
   * IS_ENTITY_EXITING_ANIM_SCENE_THIS_FRAME
   *
   * @param {number} animScene
   * @param {string | number} entityName
   * @return {boolean}
   */
export const IS_ENTITY_EXITING_ANIM_SCENE_THIS_FRAME = '0x005e6f28dd7ed58d';
/**
   * IS_ENTITY_PLAYING_ANIM_SCENE
   *
   * @param {number} entity
   * @param {number} animScene
   * @return {boolean}
   */
export const IS_ENTITY_PLAYING_ANIM_SCENE = '0x3ab6c7b0bb0df4b1';
/**
   * LOAD_ANIM_SCENE
   *
   * @param {number} animScene
   * @return {void}
   */
export const LOAD_ANIM_SCENE = '0xaf068580194d9dc7';
/**
   * REMOVE_ANIM_SCENE_ENTITY
   *
   * @param {number} animScene
   * @param {string | number} entityName
   * @param {number} entity
   * @return {void}
   */
export const REMOVE_ANIM_SCENE_ENTITY = '0x2bf96692c67f3e53';
/**
   * REQUEST_ANIM_SCENE_PLAY_LIST
   *
   * @param {number} animScene
   * @param {string | number} playlistName
   * @return {boolean}
   */
export const REQUEST_ANIM_SCENE_PLAY_LIST = '0xdf7b5144e25cd3fe';
/**
   * RESET_ANIM_SCENE
   *
   * @param {number} animScene
   * @param {string | number} playbackListName
   * @return {void}
   */
export const RESET_ANIM_SCENE = '0x8fdf221f13537936';
/**
   * RESUME_ANIM_SCENE_FROM_LAST_CHECKPOINT
   *
   * @param {number} animScene
   * @return {void}
   */
export const RESUME_ANIM_SCENE_FROM_LAST_CHECKPOINT = '0x8e1ba705f63c1925';
/**
   * SET_ANIM_SCENE_BOOL
   *
   * @param {number} animScene
   * @param {string | number} name
   * @param {boolean} value
   * @param {boolean} p3
   * @return {void}
   */
export const SET_ANIM_SCENE_BOOL = '0x519e96c2c68b404b';
/**
   * SET_ANIM_SCENE_ENTITY
   *
   * @param {number} animScene
   * @param {string | number} entityName
   * @param {number} entity
   * @param {number} flags
   * @return {void}
   */
export const SET_ANIM_SCENE_ENTITY = '0x8b720ad451ca2ab3';
/**
   * SET_ANIM_SCENE_FLOAT
   *
   * @param {number} animScene
   * @param {string | number} name
   * @param {number} value
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const SET_ANIM_SCENE_FLOAT = '0x6bc5104e68cbefe8';
/**
   * SET_ANIM_SCENE_INT
   *
   * @param {number} animScene
   * @param {string | number} name
   * @param {number} value
   * @param {boolean} p3
   * @return {void}
   */
export const SET_ANIM_SCENE_INT = '0x3a379d2166cf5b92';
/**
   * SET_ANIM_SCENE_ORIGIN
   *
   * @param {number} animScene
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} order
   * @return {void}
   */
export const SET_ANIM_SCENE_ORIGIN = '0x020894bf17a02ef2';
/**
   * SET_ANIM_SCENE_PAUSED
   *
   * @param {number} animScene
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ANIM_SCENE_PAUSED = '0xd6824b7d24dc0ce0';
/**
   * SET_ANIM_SCENE_PLAYBACK_LIST
   *
   * @param {number} animScene
   * @param {string | number} playbackListName
   * @return {void}
   */
export const SET_ANIM_SCENE_PLAYBACK_LIST = '0xab5e7cab074d6b84';
/**
   * SET_ANIM_SCENE_PLAY_LIST
   *
   * @param {number} animScene
   * @param {string | number} playlistName
   * @param {boolean} p2
   * @return {void}
   */
export const SET_ANIM_SCENE_PLAY_LIST = '0x15598cfb25f3dc7e';
/**
   * SET_ANIM_SCENE_RATE
   *
   * @param {number} animScene
   * @param {number} rate
   * @return {void}
   */
export const SET_ANIM_SCENE_RATE = '0x75820b801cff262a';
/**
   * START_ANIM_SCENE
   *
   * @param {number} animScene
   * @return {void}
   */
export const START_ANIM_SCENE = '0xf4d94af761768700';
/**
   * TAKE_OWNERSHIP_OF_ANIM_SCENE
   *
   * @param {number} animScene
   * @return {void}
   */
export const TAKE_OWNERSHIP_OF_ANIM_SCENE = '0xf7a4c571e572d237';
/**
   * TRIGGER_ANIM_SCENE_SKIP
   *
   * @param {number} animScene
   * @return {void}
   */
export const TRIGGER_ANIM_SCENE_SKIP = '0x4b85b3cf9197aedf';
/**
   * WAS_ANIM_SCENE_SKIPPED
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const WAS_ANIM_SCENE_SKIPPED = '0xef324e9550a394d5';
/**
   * _0x1407F5115FB9583E
   * Used in SP R* Scripts only
   * Params: p1 = 2B-LowHonor, 2A-HighHonor
   *
   * @param {number} animScene
   * @param {string | number} p1
   * @return {boolean}
   */
export const _0x1407F5115FB9583E = '0x1407f5115fb9583e';
/**
   * _0x1AD896BF43619551
   * Used in braithwaites2 SP R* Scripts only
   * _A*
   *
  
   * @return {void}
   */
export const _0x1AD896BF43619551 = '0x1ad896bf43619551';
/**
   * _0x1C5D33A4293E6DDE
   * Used in SP R* Scripts only
   * _IS_ANIM_SCENE_P*
   *
   * @param {number} animScene
   * @param {string | number} phaseName
   * @return {boolean}
   */
export const _0x1C5D33A4293E6DDE = '0x1c5d33a4293e6dde';
/**
   * _0x2DB524750DC41ED4
   * Used in SP R* Scripts only
   * _IS_PED_* - _IS_SC*
   *
  
   * @return {boolean}
   */
export const _0x2DB524750DC41ED4 = '0x2db524750dc41ed4';
/**
   * _0x3641FCD53E59B335
   * p2: MINIGAME_GET_SECONDARY_VOICE_STRING
   * _SET_*
   *
   * @param {number} mgmHandle
   * @param {number} ped
   * @param {string | number} secondaryVoiceString
   * @return {void}
   */
export const _0x3641FCD53E59B335 = '0x3641fcd53e59b335';
/**
   * _0x3B393716C3FD8237
   * Used in SP R* Scripts only
   * _IS_*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x3B393716C3FD8237 = '0x3b393716c3fd8237';
/**
   * _0x4B85B3CF91972222
   * Used in Script Function CUTSCENE_MANAGE_SKIP
   * _CHECK_* (?)
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const _0x4B85B3CF91972222 = '0x4b85b3cf91972222';
/**
   * _0x5D7BFDA2290B4E39
   * Used in SP R* Scripts only
   * _IS_ANIM_SCENE_R* - _IS_ANIM_SCENE_S*
   *
   * @param {string | number} p0
   * @return {boolean}
   */
export const _0x5D7BFDA2290B4E39 = '0x5d7bfda2290b4e39';
/**
   * _0x61B2AAEF645DDAF0
   * Only used in tg_p R* Script
   * Returns true when mgm event success
   * _PREPARE_* - _REGISTER_*
   *
   * @param {number} mgmEventHandle
   * @param {string | number} p1
   * @param {number} seatId
   * @param {number} p3
   * @param {boolean} p4
   * @return {boolean}
   */
export const _0x61B2AAEF645DDAF0 = '0x61b2aaef645ddaf0';
/**
   * _0x73616E64696C132E
   * Used in SP R* Scripts only
   * _CO* - _CR*
   *
   * @param {number} animScene
   * @param {boolean} p1
   * @return {boolean}
   */
export const _0x73616E64696C132E = '0x73616e64696c132e';
/**
   * _0x9AAE3C1148A09BCA
   * Used in SP R* Scripts only
   * _IS_ANIM_SCENE_*
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const _0x9AAE3C1148A09BCA = '0x9aae3c1148a09bca';
/**
   * _0xA96619FE85159ED2
   * Used in SP R* Scripts only
   * _WAS_ANIM_SCENE_*
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const _0xA96619FE85159ED2 = '0xa96619fe85159ed2';
/**
   * _0xAE6DE22DE0ED4554
   * _UNLOAD_* - _WAS_ANIM_SCENE_*
   *
   * @param {number} mgmHandle
   * @param {number} ped
   * @return {void}
   */
export const _0xAE6DE22DE0ED4554 = '0xae6de22de0ed4554';
/**
   * _0xB1A196BAFE650402
   * _PREPARE_* - _REGISTER_*
   *
   * @param {number} mgmHandle
   * @param {number} ped
   * @return {void}
   */
export const _0xB1A196BAFE650402 = '0xb1a196bafe650402';
/**
   * _0xC1193521E3B9FADD
   * Used in SP R* Scripts only
   * _RESUME_* - _SET_A*
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {void}
   */
export const _0xC1193521E3B9FADD = '0xc1193521e3b9fadd';
/**
   * _0xCDCD7B2D49AEE73A
   * Used in SP R* Scripts only
   * _SET_P*
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0xCDCD7B2D49AEE73A = '0xcdcd7b2d49aee73a';
/**
   * _0xD70C7A30412F8FA0
   * Used in SP R* Scripts only
   * _IS_ANIM_SCENE_*
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const _0xD70C7A30412F8FA0 = '0xd70c7a30412f8fa0';
/**
   * _0xE12D7B4B959644CD
   * Used in SP R* Scripts only
   * _SET_B* - _SET_C*
   *
  
   * @return {void}
   */
export const _0xE12D7B4B959644CD = '0xe12d7b4b959644cd';
/**
   * _0xEA41D44A8D42057B
   * Used in SP R* Scripts only
   * _PAUSE_* - _PLAY_*
   *
  
   * @return {boolean}
   */
export const _0xEA41D44A8D42057B = '0xea41d44a8d42057b';
/**
   * _CLEAR_ANIM_SCENE_WAS_SKIPPED
   *
   * @param {number} animScene
   * @return {void}
   */
export const _CLEAR_ANIM_SCENE_WAS_SKIPPED = '0x8a8208ae92bf87a5';
/**
   * _CLEAR_BREAKOUT_ARCHETYPE
   *
   * @param {number} ped
   * @return {void}
   */
export const _CLEAR_BREAKOUT_ARCHETYPE = '0xbc781d24aa11f179';
/**
   * _CREATE_ANIM_SCENE
   * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimSceneFlag
   *
   * @param {string | number} animDict
   * @param {number} flags
   * @param {string | number} playbackListName
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {number}
   */
export const _CREATE_ANIM_SCENE = '0x1fca98e33c1437b3';
/**
   * _CREATE_MGM_SYSTEM
   * Returns mgmHandle
   *
   * @param {string | number} mgmFilename
   * @return {number}
   */
export const _CREATE_MGM_SYSTEM = '0xa1300de03e5d1973';
/**
   * _DELETE_ANIM_SCENE
   *
   * @param {number} animScene
   * @return {void}
   */
export const _DELETE_ANIM_SCENE = '0x84eedb2c6e650000';
/**
   * _DELETE_MGM_SYSTEM
   *
   * @param {number} mgmHandle
   * @return {void}
   */
export const _DELETE_MGM_SYSTEM = '0x53cb3970ba02e3cc';
/**
   * _DOES_ANIM_SCENE_OWNERSHIP_OF_ENTITY_EXIST
   *
   * @param {number} animScene
   * @param {string | number} entityName
   * @return {boolean}
   */
export const _DOES_ANIM_SCENE_OWNERSHIP_OF_ENTITY_EXIST = '0x9d1eca9337be9fc3';
/**
   * _DOES_ANIM_SCENE_PLAY_LIST_EXIST
   *
   * @param {number} animScene
   * @param {string | number} playbackListName
   * @return {boolean}
   */
export const _DOES_ANIM_SCENE_PLAY_LIST_EXIST = '0xa9016536015de29d';
/**
   * _DOES_ENTITY_WITH_ID_EXIST_IN_ANIM_SCENE
   *
   * @param {number} animScene
   * @param {string | number} entityId
   * @return {boolean}
   */
export const _DOES_ENTITY_WITH_ID_EXIST_IN_ANIM_SCENE = '0x6f1f0b17109309da';
/**
   * _GET_ANIM_SCENE_DICT
   *
   * @param {number} animScene
   * @return {number}
   */
export const _GET_ANIM_SCENE_DICT = '0xae5ada4fe3e21adc';
/**
   * _GET_ANIM_SCENE_DURATION
   *
   * @param {number} animScene
   * @return {number}
   */
export const _GET_ANIM_SCENE_DURATION = '0x49f1d143ade32656';
/**
   * _GET_ANIM_SCENE_OBJECT
   *
   * @param {number} animScene
   * @param {string | number} name
   * @param {boolean} isNetwork
   * @return {number}
   */
export const _GET_ANIM_SCENE_OBJECT = '0xfb5674687a1b2814';
/**
   * _GET_ANIM_SCENE_PED
   *
   * @param {number} animScene
   * @param {string | number} name
   * @param {boolean} isNetwork
   * @return {number}
   */
export const _GET_ANIM_SCENE_PED = '0xe5822422197bbba3';
/**
   * _GET_ANIM_SCENE_PLAYBACK_LIST_PHASE_AUDIO_LOAD_STRESS
   *
   * @param {number} animScene
   * @param {string | number} phaseName
   * @return {number}
   */
export const _GET_ANIM_SCENE_PLAYBACK_LIST_PHASE_AUDIO_LOAD_STRESS = '0x9e036d5204ffbbc8';
/**
   * _GET_ANIM_SCENE_RATE
   *
   * @param {number} animScene
   * @return {number}
   */
export const _GET_ANIM_SCENE_RATE = '0x43c21623e42b821b';
/**
   * _GET_ANIM_SCENE_TIME
   *
   * @param {number} animScene
   * @return {number}
   */
export const _GET_ANIM_SCENE_TIME = '0x61be7d6186260002';
/**
   * _GET_ANIM_SCENE_VEHICLE
   *
   * @param {number} animScene
   * @param {string | number} name
   * @param {boolean} isNetwork
   * @return {number}
   */
export const _GET_ANIM_SCENE_VEHICLE = '0x430ee0a19bc5a287';
/**
   * _HAS_ENTITY_ENTERED_ANIM_SCENE
   * _HAS_L* (?)
   *
   * @param {number} animScene
   * @param {string | number} entityName
   * @return {boolean}
   */
export const _HAS_ENTITY_ENTERED_ANIM_SCENE = '0x337f1cc8ee895601';
/**
   * _IS_ANIM_SCENE_ABORTED
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const _IS_ANIM_SCENE_ABORTED = '0x34a0671be613d3d0';
/**
   * _IS_ANIM_SCENE_LOADING
   *
   * @param {number} animScene
   * @param {boolean} p1
   * @return {boolean}
   */
export const _IS_ANIM_SCENE_LOADING = '0x59606519ff9d3ec2';
/**
   * _IS_ANIM_SCENE_METADATA_ASSET_IN_RANGE_LOADING
   *
   * @param {number} animScene
   * @param {boolean} p1
   * @return {boolean}
   */
export const _IS_ANIM_SCENE_METADATA_ASSET_IN_RANGE_LOADING = '0xf8d1d2dab6007eef';
/**
   * _IS_ANIM_SCENE_PAUSED
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const _IS_ANIM_SCENE_PAUSED = '0x4b4038796f0d6566';
/**
   * _IS_ANIM_SCENE_PLAYBACK_LIST_PHASE_ACTIVE
   *
   * @param {number} animScene
   * @param {string | number} phaseName
   * @return {boolean}
   */
export const _IS_ANIM_SCENE_PLAYBACK_LIST_PHASE_ACTIVE = '0x1f0e401031e20146';
/**
   * _IS_ANIM_SCENE_PLAYBACK_LIST_PHASE_LOADED
   *
   * @param {number} animScene
   * @param {string | number} phaseName
   * @return {boolean}
   */
export const _IS_ANIM_SCENE_PLAYBACK_LIST_PHASE_LOADED = '0x23e33cb9f4a3f547';
/**
   * _IS_ANIM_SCENE_PLAYBACK_LIST_PHASE_LOADING
   *
   * @param {number} animScene
   * @param {string | number} phaseName
   * @return {boolean}
   */
export const _IS_ANIM_SCENE_PLAYBACK_LIST_PHASE_LOADING = '0x0df57f86fe71dbe5';
/**
   * _IS_ANIM_SCENE_SKIPPABLE
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const _IS_ANIM_SCENE_SKIPPABLE = '0x4cdffe3189ebdbd0';
/**
   * _IS_MGM_SYSTEM_LOADED
   * MGM stands for MiniGameMoments.
   *
   * @param {string | number} mgmFilename
   * @return {boolean}
   */
export const _IS_MGM_SYSTEM_LOADED = '0xfdfc14799373283f';
/**
   * _LOAD_MGM_ASSETS
   * Used to request MiniGameMoments Assets.
   * 
   * mgmFilename's:
   * Poker
   * PokerArthur
   * PokerArthurCamp
   * PokerJohn
   * PokerJohnCamp
   *
   * @param {string | number} mgmFilename
   * @return {boolean}
   */
export const _LOAD_MGM_ASSETS = '0xb727a847862cb00a';
/**
   * _PAUSE_SCRIPT_THREADS
   * Pauses all script threads except the one that called it.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _PAUSE_SCRIPT_THREADS = '0x37c1257849def24a';
/**
   * _RELEASE_ANIM_SCENE_PLAY_LIST
   *
   * @param {number} animScene
   * @param {string | number} playlistName
   * @return {boolean}
   */
export const _RELEASE_ANIM_SCENE_PLAY_LIST = '0xae6ada8fe7e84acc';
/**
   * _REQUEST_PHOTO_MODE_DEFREEZE
   *
  
   * @return {void}
   */
export const _REQUEST_PHOTO_MODE_DEFREEZE = '0x41afa5f228b0b6b0';
/**
   * _REQUEST_PHOTO_MODE_FREEZE
   *
  
   * @return {void}
   */
export const _REQUEST_PHOTO_MODE_FREEZE = '0x7c709c01d43d94cd';
/**
   * _SET_BREAKOUT_ARCHETYPE
   *
   * @param {number} ped
   * @param {string | number} archetype
   * @return {void}
   */
export const _SET_BREAKOUT_ARCHETYPE = '0x99b2a2e3655deaf1';
/**
   * _SET_MGM_EVENT
   *
   * @param {number} mgmEventHandle
   * @param {string | number} p1
   * @param {any} seatId
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const _SET_MGM_EVENT = '0x07706c4cc9c6cc9e';
/**
   * ADD_ATTRIBUTE_POINTS
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @param {number} p2
   * @return {void}
   */
export const ADD_ATTRIBUTE_POINTS = '0x75415ee0cb583760';
/**
   * DISABLE_ATTRIBUTE_OVERPOWER
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {void}
   */
export const DISABLE_ATTRIBUTE_OVERPOWER = '0xf8dac3d85636c241';
/**
   * ENABLE_ATTRIBUTE_OVERPOWER
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   * 
   * Old name: _SET_ATTRIBUTE_OVERPOWER_VALUE
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @param {number} value
   * @param {boolean} makeSound
   * @return {void}
   */
export const ENABLE_ATTRIBUTE_OVERPOWER = '0xf6a7c08df2e28b28';
/**
   * GET_ATTRIBUTE_BASE_RANK
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {number}
   */
export const GET_ATTRIBUTE_BASE_RANK = '0x147149f2e909323c';
/**
   * GET_ATTRIBUTE_BONUS_RANK
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} coreIndex
   * @return {number}
   */
export const GET_ATTRIBUTE_BONUS_RANK = '0x0efa71f4b4330e04';
/**
   * GET_ATTRIBUTE_POINTS
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {number}
   */
export const GET_ATTRIBUTE_POINTS = '0x219da04baa9cb065';
/**
   * GET_ATTRIBUTE_RANK
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {number}
   */
export const GET_ATTRIBUTE_RANK = '0xa4c8e23e29040de0';
/**
   * GET_DEFAULT_ATTRIBUTE_POINTS_NEEDED_FOR_RANK
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} modelHash
   * @param {number} attributeIndex
   * @param {number} rank
   * @return {number}
   */
export const GET_DEFAULT_ATTRIBUTE_POINTS_NEEDED_FOR_RANK = '0x94a7f191db49a44d';
/**
   * GET_DEFAULT_ATTRIBUTE_RANK
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {number}
   */
export const GET_DEFAULT_ATTRIBUTE_RANK = '0x958dd43d41f89a47';
/**
   * GET_DEFAULT_MAX_ATTRIBUTE_RANK
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {number}
   */
export const GET_DEFAULT_MAX_ATTRIBUTE_RANK = '0x7c059c55ad940cb4';
/**
   * GET_MAX_ATTRIBUTE_POINTS
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {number}
   */
export const GET_MAX_ATTRIBUTE_POINTS = '0x223bf310f854871c';
/**
   * GET_MAX_ATTRIBUTE_RANK
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {number}
   */
export const GET_MAX_ATTRIBUTE_RANK = '0x704674a0535a471d';
/**
   * SET_ATTRIBUTE_BASE_RANK
   * attributeIndex:
   * enum ePedAttribute
   * {
   *   PA_HEALTH,
   *   PA_STAMINA,
   *   PA_SPECIALABILITY,
   *   PA_COURAGE,
   *   PA_AGILITY,
   *   PA_SPEED,
   *   PA_ACCELERATION,
   *   PA_BONDING,
   *   SA_HUNGER,
   *   SA_FATIGUED,
   *   SA_INEBRIATED,
   *   SA_POISONED,
   *   SA_BODYHEAT,
   *   SA_BODYWEIGHT,
   *   SA_OVERFED,
   *   SA_SICKNESS,
   *   SA_DIRTINESS,
   *   SA_DIRTINESSHAT,
   *   MTR_STRENGTH,
   *   MTR_GRIT,
   *   MTR_INSTINCT,
   *   PA_UNRULINESS,
   *   SA_DIRTINESSSKIN
   * };
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @param {number} newValue
   * @return {void}
   */
export const SET_ATTRIBUTE_BASE_RANK = '0x5da12e025d47d4e5';
/**
   * SET_ATTRIBUTE_BONUS_RANK
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @param {number} newValue
   * @return {void}
   */
export const SET_ATTRIBUTE_BONUS_RANK = '0x920f9488bd115efb';
/**
   * SET_ATTRIBUTE_POINTS
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @param {number} p2
   * @return {void}
   */
export const SET_ATTRIBUTE_POINTS = '0x09a59688c26d88df';
/**
   * STOP_ITEM_PREVIEW
   *
  
   * @return {void}
   */
export const STOP_ITEM_PREVIEW = '0xd962f8579d702db5';
/**
   * _ENABLE_ATTRIBUTE_CORE_OVERPOWER
   * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
   * 
   * Previously incorrectly named ENABLE_ATTRIBUTE_OVERPOWER
   *
   * @param {number} ped
   * @param {number} coreIndex
   * @param {number} value
   * @param {boolean} makeSound
   * @return {void}
   */
export const _ENABLE_ATTRIBUTE_CORE_OVERPOWER = '0x4af5a4c7b9157d14';
/**
   * _GET_ATTRIBUTE_CORE_OVERPOWER_SECONDS_LEFT
   *
   * @param {number} ped
   * @param {number} coreIndex
   * @return {number}
   */
export const _GET_ATTRIBUTE_CORE_OVERPOWER_SECONDS_LEFT = '0xb429f58803d285b1';
/**
   * _GET_ATTRIBUTE_CORE_VALUE
   * Gets the ped's core value on a scale of 0 to 100.
   * coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
   *
   * @param {number} ped
   * @param {number} coreIndex
   * @return {number}
   */
export const _GET_ATTRIBUTE_CORE_VALUE = '0x36731ac041289bb1';
/**
   * _GET_ATTRIBUTE_OVERPOWER_SECONDS_LEFT
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {number}
   */
export const _GET_ATTRIBUTE_OVERPOWER_SECONDS_LEFT = '0x4c9f782180712742';
/**
   * _IS_ATTRIBUTE_CORE_OVERPOWERED
   *
   * @param {number} ped
   * @param {number} coreIndex
   * @return {boolean}
   */
export const _IS_ATTRIBUTE_CORE_OVERPOWERED = '0x200373a8df081f22';
/**
   * _IS_ATTRIBUTE_OVERPOWERED
   * attributeIndex: see SET_ATTRIBUTE_BASE_RANK
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {boolean}
   */
export const _IS_ATTRIBUTE_OVERPOWERED = '0x103c2f885abeb00b';
/**
   * _SET_ATTRIBUTE_CORE_VALUE
   * coreIndex:
   * enum eAttributeCore
   * {
   *   ATTRIBUTE_CORE_HEALTH,
   *   ATTRIBUTE_CORE_STAMINA,
   *   ATTRIBUTE_CORE_DEADEYE
   * };
   *
   * @param {number} ped
   * @param {number} coreIndex
   * @param {number} value
   * @return {void}
   */
export const _SET_ATTRIBUTE_CORE_VALUE = '0xc6258f41d86676e0';
/**
   * _SET_STATUS_EFFECT_CORE_ICON
   * Displays status effects on core icons (includes warnings).
   * 
   * enum eUiRpgStatusEffect
   * {
   *   STATUS_NONE,
   *   STATUS_COLD,
   *   STATUS_HOT,
   *   STATUS_OVERFED,
   *   STATUS_DIRTY,
   *   STATUS_SNAKE_VENOM,
   *   STATUS_ARROW_WOUNDED,
   *   STATUS_ARROW_DRAINED,
   *   STATUS_ARROW_DISORIENTED,
   *   STATUS_ARROW_TRACKED,
   *   STATUS_ARROW_CONFUSION,
   *   STATUS_UNDERWEIGHT,
   *   STATUS_OVERWEIGHT,
   *   STATUS_SICK_1,
   *   STATUS_SICK_2,
   *   STATUS_PREDATOR_INVULNERABLE
   * };
   *
   * @param {number} statusEffectType
   * @return {void}
   */
export const _SET_STATUS_EFFECT_CORE_ICON = '0xa4d3a1c008f250df';
/**
   * _SET_STATUS_EFFECT_PERIODIC_ICON
   * Starts core periodic icon.
   * statusEffectType: see 0xA4D3A1C008F250DF
   *
   * @param {number} statusEffectType
   * @return {void}
   */
export const _SET_STATUS_EFFECT_PERIODIC_ICON = '0xfb6e111908502871';
/**
   * _START_ITEM_PREVIEW
   * Params: p1 is related to satchel_category
   *
   * @param {any} p0
   * @param {number} p1
   * @return {void}
   */
export const _START_ITEM_PREVIEW = '0x7e2c766adb2c5f1a';
/**
   * _STOP_STATUS_EFFECT_PERIODIC_ICON
   * Stops periodic icon.
   * statusEffectType: see 0xA4D3A1C008F250DF
   *
   * @param {number} statusEffectType
   * @return {void}
   */
export const _STOP_STATUS_EFFECT_PERIODIC_ICON = '0x3fc4c027fd0936f4';
/**
   * ADD_ENTITY_TO_AUDIO_MIX_GROUP
   *
   * @param {number} entity
   * @param {string | number} groupName
   * @param {number} p2
   * @return {void}
   */
export const ADD_ENTITY_TO_AUDIO_MIX_GROUP = '0x153973ab99fe8980';
/**
   * ADD_PED_TO_CONVERSATION
   *
   * @param {string | number} convoRoot
   * @param {number} ped
   * @param {string | number} characterName
   * @return {void}
   */
export const ADD_PED_TO_CONVERSATION = '0x95d9f4bc443956e7';
/**
   * AUDIO_IS_MUSIC_PLAYING
   * Old name: AUDIO_IS_SCRIPTED_MUSIC_PLAYING
   *
  
   * @return {boolean}
   */
export const AUDIO_IS_MUSIC_PLAYING = '0x845ffc3a4feefa3e';
/**
   * AUDIO_TRIGGER_EXPLOSION
   *
   * @param {string | number} name
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const AUDIO_TRIGGER_EXPLOSION = '0x374f0e716bfcde82';
/**
   * CANCEL_MUSIC_EVENT
   *
   * @param {string | number} eventName
   * @return {boolean}
   */
export const CANCEL_MUSIC_EVENT = '0x5b17a90291133da5';
/**
   * CLEAR_AMBIENT_ZONE_LIST_STATE
   *
   * @param {string | number} ambientZone
   * @param {boolean} p1
   * @return {void}
   */
export const CLEAR_AMBIENT_ZONE_LIST_STATE = '0x120c48c614909fa4';
/**
   * CLEAR_AMBIENT_ZONE_STATE
   *
   * @param {string | number} zoneName
   * @param {boolean} p1
   * @return {void}
   */
export const CLEAR_AMBIENT_ZONE_STATE = '0x218dd44aaac964ff';
/**
   * CLEAR_CONVERSATION_HISTORY
   *
  
   * @return {void}
   */
export const CLEAR_CONVERSATION_HISTORY = '0x33d51f801cb16e4f';
/**
   * CREATE_NEW_SCRIPTED_CONVERSATION
   *
   * @param {string | number} convoRoot
   * @return {boolean}
   */
export const CREATE_NEW_SCRIPTED_CONVERSATION = '0xd2c91a0b572aae56';
/**
   * DISABLE_PED_PAIN_AUDIO
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const DISABLE_PED_PAIN_AUDIO = '0xa9a41c1e940fb0e8';
/**
   * DOES_CONTEXT_EXIST_FOR_THIS_PED
   * Checks if the ped can play the speech or has the speech file, last parameter is usually false.
   *
   * @param {number} ped
   * @param {string | number} speechName
   * @param {boolean} unk
   * @return {boolean}
   */
export const DOES_CONTEXT_EXIST_FOR_THIS_PED = '0x49b99bf3fda89a7a';
/**
   * FORCE_PED_PANIC_WALLA
   *
  
   * @return {void}
   */
export const FORCE_PED_PANIC_WALLA = '0x062d5ead4da2fa6a';
/**
   * FORCE_USE_AUDIO_GAME_OBJECT
   * Old name: _FORCE_VEHICLE_ENGINE_AUDIO
   *
   * @param {number} vehicle
   * @param {string | number} audioName
   * @return {void}
   */
export const FORCE_USE_AUDIO_GAME_OBJECT = '0x4f0c413926060b38';
/**
   * GET_CURRENT_SCRIPTED_CONVERSATION_LINE
   *
   * @param {string | number} p0
   * @return {number}
   */
export const GET_CURRENT_SCRIPTED_CONVERSATION_LINE = '0x480357ee890c295a';
/**
   * GET_MUSIC_PLAYTIME
   *
  
   * @return {number}
   */
export const GET_MUSIC_PLAYTIME = '0xe7a0d23dc414507b';
/**
   * GET_SOUND_ID
   *
  
   * @return {number}
   */
export const GET_SOUND_ID = '0x430386fe9bf80b45';
/**
   * IS_AMBIENT_SPEECH_DISABLED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_AMBIENT_SPEECH_DISABLED = '0x932c2d096a2c3fff';
/**
   * IS_AMBIENT_SPEECH_PLAYING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_AMBIENT_SPEECH_PLAYING = '0x9072c8b49907bfad';
/**
   * IS_ANIMAL_VOCALIZATION_PLAYING
   *
   * @param {number} pedHandle
   * @return {boolean}
   */
export const IS_ANIMAL_VOCALIZATION_PLAYING = '0xc265df9fb44a9fbd';
/**
   * IS_ANY_SPEECH_PLAYING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_ANY_SPEECH_PLAYING = '0x729072355fa39ec9';
/**
   * IS_AUDIO_SCENE_ACTIVE
   *
   * @param {string | number} scene
   * @return {boolean}
   */
export const IS_AUDIO_SCENE_ACTIVE = '0xb65b60556e2a9225';
/**
   * IS_HORN_ACTIVE
   * Checks whether the horn of a vehicle is currently played.
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_HORN_ACTIVE = '0x9d6bfc12b05c6121';
/**
   * IS_PED_IN_CURRENT_CONVERSATION
   *
   * @param {string | number} p0
   * @param {number} ped
   * @param {any} p2
   * @return {boolean}
   */
export const IS_PED_IN_CURRENT_CONVERSATION = '0x049e937f18f4020c';
/**
   * IS_SCRIPTED_CONVERSATION_LOADED
   *
   * @param {string | number} convoRoot
   * @return {boolean}
   */
export const IS_SCRIPTED_CONVERSATION_LOADED = '0xdf0d54be7a776737';
/**
   * IS_SCRIPTED_CONVERSATION_PLAYING
   *
   * @param {string | number} p0
   * @return {boolean}
   */
export const IS_SCRIPTED_CONVERSATION_PLAYING = '0x1ecc76792f661cf5';
/**
   * IS_SCRIPTED_SPEECH_PLAYING
   *
   * @param {any} p0
   * @return {boolean}
   */
export const IS_SCRIPTED_SPEECH_PLAYING = '0xcc9aa18dcc7084f4';
/**
   * IS_STREAM_PLAYING
   *
   * @param {number} streamId
   * @return {boolean}
   */
export const IS_STREAM_PLAYING = '0xd11fa52eb849d978';
/**
   * LOAD_STREAM
   *
   * @param {string | number} streamName
   * @param {string | number} soundSet
   * @return {boolean}
   */
export const LOAD_STREAM = '0x1f1f957154ec51df';
/**
   * PAUSE_SCRIPTED_CONVERSATION
   *
   * @param {string | number} p0
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const PAUSE_SCRIPTED_CONVERSATION = '0x8530ad776cd72b12';
/**
   * PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE
   * Old name: _PLAY_AMBIENT_SPEECH_AT_COORDS
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {DataView} params
   * @return {boolean}
   */
export const PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE = '0xed640017ed337e45';
/**
   * PLAY_ANIMAL_VOCALIZATION
   *
   * @param {number} ped
   * @param {string | number} vocalizationName
   * @param {boolean} p2
   * @return {void}
   */
export const PLAY_ANIMAL_VOCALIZATION = '0xee066c7006c49c0a';
/**
   * PLAY_END_CREDITS_MUSIC
   *
   * @param {boolean} play
   * @return {void}
   */
export const PLAY_END_CREDITS_MUSIC = '0xcd536c4d33dcc900';
/**
   * PLAY_PAIN
   * Valid pain IDs: 0..12  these names are not official, but here is a list of the IDs:
   *  1 burning,
   *  2 drowning,
   *  3 coughing,
   *  4 nothing,
   *  5 nothing,
   *  6 coughing_2,
   *  7 nothing,
   *  8 nothing,
   *  9 hurtingSick?,
   *  10 hurtingFall?,
   *  11 nothing,
   *  12 choking
   *
   * @param {number} ped
   * @param {number} painId
   * @param {number} p2
   * @param {boolean} p3
   * @param {boolean} isNetwork
   * @return {void}
   */
export const PLAY_PAIN = '0xbc9ae166038a5cec';
/**
   * PLAY_PED_AMBIENT_SPEECH_NATIVE
   * struct ScriptedSpeechParams
   * {
   *   const char* speechName;
   *   const char* voiceName;
   *   alignas(8) int variation;
   *   alignas(8) Hash speechParamHash;
   *   alignas(8) Ped listenerPed;
   *   alignas(8) BOOL syncOverNetwork;
   *   alignas(8) int v7;
   *   alignas(8) int v8;
   * };
   * 
   * static_assert(sizeof(ScriptedSpeechParams) == 0x40, "incorrect ScriptedSpeechParams size");
   * 
   * 
   * Example:
   * 
   * ScriptedSpeechParams params{"RE_PH_RHD_V3_AGGRO", "0405_U_M_M_RhdSheriff_01", 1, joaat("SPEECH_PARAMS_BEAT_SHOUTED_CLEAR"), 0, true, 1, 1};
   * PLAY_PED_AMBIENT_SPEECH_NATIVE(PLAYER_PED_ID(), (Any*)&params);
   * 
   * Old name: _PLAY_AMBIENT_SPEECH1
   * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_banks
   *
   * @param {number} speaker
   * @param {DataView} params
   * @return {boolean}
   */
export const PLAY_PED_AMBIENT_SPEECH_NATIVE = '0x8e04fedd28d42462';
/**
   * PLAY_SOUND
   *
   * @param {string | number} audioName
   * @param {string | number} audioRef
   * @param {boolean} p2
   * @param {any} p3
   * @param {boolean} p4
   * @param {any} p5
   * @return {void}
   */
export const PLAY_SOUND = '0x7ff4944cc209192d';
/**
   * PLAY_SOUND_FROM_ENTITY
   *
   * @param {string | number} audioName
   * @param {number} entity
   * @param {string | number} audioRef
   * @param {boolean} isNetwork
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const PLAY_SOUND_FROM_ENTITY = '0x6fb1da3ca9da7d90';
/**
   * PLAY_SOUND_FRONTEND
   * https://github.com/femga/rdr3_discoveries/tree/master/audio/frontend_soundsets
   *
   * @param {string | number} audioName
   * @param {string | number} audioRef
   * @param {boolean} p2
   * @param {any} p3
   * @return {void}
   */
export const PLAY_SOUND_FRONTEND = '0x67c540aa08e4a6f5';
/**
   * PLAY_STREAM_FROM_PED
   *
   * @param {number} ped
   * @param {number} streamId
   * @return {void}
   */
export const PLAY_STREAM_FROM_PED = '0x89049dd63c08b5d1';
/**
   * PLAY_STREAM_FROM_POSITION
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} streamId
   * @return {void}
   */
export const PLAY_STREAM_FROM_POSITION = '0x21442f412e8de56b';
/**
   * PLAY_STREAM_FRONTEND
   *
   * @param {number} streamId
   * @return {void}
   */
export const PLAY_STREAM_FRONTEND = '0x58fce43488f9f5f4';
/**
   * PRELOAD_SCRIPT_CONVERSATION
   *
   * @param {string | number} convoRoot
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} clone
   * @return {void}
   */
export const PRELOAD_SCRIPT_CONVERSATION = '0x3b3cad6166916d87';
/**
   * PREPARE_MUSIC_EVENT
   *
   * @param {string | number} eventName
   * @return {boolean}
   */
export const PREPARE_MUSIC_EVENT = '0x1e5185b72ef5158a';
/**
   * PREPARE_SOUND
   * soundId maybe be incorrect name for param p2, in the decompiles is always -2
   *
   * @param {string | number} soundName
   * @param {string | number} soundsetName
   * @param {number} soundId
   * @return {boolean}
   */
export const PREPARE_SOUND = '0xe368e8422c860ba7';
/**
   * PREPARE_SOUNDSET
   * https://github.com/femga/rdr3_discoveries/tree/master/audio/soundsets
   *
   * @param {string | number} soundsetName
   * @param {boolean} p1
   * @return {boolean}
   */
export const PREPARE_SOUNDSET = '0xd9130842d7226045';
/**
   * PREPARE_SOUND_WITH_ENTITY
   *
   * @param {string | number} soundName
   * @param {number} entity
   * @param {string | number} soundsetName
   * @param {number} soundId
   * @return {boolean}
   */
export const PREPARE_SOUND_WITH_ENTITY = '0x4ad019591e94c064';
/**
   * REGISTER_SCRIPT_WITH_AUDIO
   * nullsub, doesn't do anything
   *
   * @param {boolean} p0
   * @return {void}
   */
export const REGISTER_SCRIPT_WITH_AUDIO = '0xc6ed9d5092438d91';
/**
   * RELEASE_NAMED_SCRIPT_AUDIO_BANK
   *
   * @param {string | number} audioBank
   * @return {void}
   */
export const RELEASE_NAMED_SCRIPT_AUDIO_BANK = '0x77ed170667f50170';
/**
   * RELEASE_SCRIPT_AUDIO_BANK
   *
  
   * @return {void}
   */
export const RELEASE_SCRIPT_AUDIO_BANK = '0x7a2d8ad0a9eb9c3f';
/**
   * RELEASE_SOUND_ID
   *
   * @param {number} soundId
   * @return {void}
   */
export const RELEASE_SOUND_ID = '0x353fc880830b88fa';
/**
   * REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP
   *
   * @param {number} entity
   * @param {number} p1
   * @return {void}
   */
export const REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP = '0x18eb48cfc41f2ea0';
/**
   * REMOVE_PORTAL_SETTINGS_OVERRIDE
   *
   * @param {string | number} p0
   * @return {void}
   */
export const REMOVE_PORTAL_SETTINGS_OVERRIDE = '0xb4bbfd9cd8b3922b';
/**
   * REQUEST_SCRIPT_AUDIO_BANK
   *
   * @param {string | number} audioBank
   * @return {boolean}
   */
export const REQUEST_SCRIPT_AUDIO_BANK = '0x2f844a8b08d76685';
/**
   * RESTART_SCRIPTED_CONVERSATION
   *
   * @param {string | number} p0
   * @return {void}
   */
export const RESTART_SCRIPTED_CONVERSATION = '0x9aeb285d1818c9ac';
/**
   * SET_AMBIENT_VOICE_NAME
   *
   * @param {number} ped
   * @param {string | number} name
   * @return {void}
   */
export const SET_AMBIENT_VOICE_NAME = '0x6c8065a3b780185b';
/**
   * SET_AMBIENT_ZONE_LIST_STATE
   *
   * @param {string | number} ambientZone
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const SET_AMBIENT_ZONE_LIST_STATE = '0x9748fa4de50cce3e';
/**
   * SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT
   *
   * @param {string | number} ambientZone
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT = '0xf3638dae8c4045e1';
/**
   * SET_AMBIENT_ZONE_STATE
   *
   * @param {string | number} zoneName
   * @param {boolean} isEnabled
   * @param {boolean} p2
   * @return {void}
   */
export const SET_AMBIENT_ZONE_STATE = '0xbda07e5950085e46';
/**
   * SET_AMBIENT_ZONE_STATE_PERSISTENT
   *
   * @param {string | number} ambientZone
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const SET_AMBIENT_ZONE_STATE_PERSISTENT = '0x1d6650420cec9d3b';
/**
   * SET_ANIMAL_MOOD
   * Not implemented.
   *
   * @param {number} animal
   * @param {number} mood
   * @return {void}
   */
export const SET_ANIMAL_MOOD = '0xcc97b29285b1dc3b';
/**
   * SET_AUDIO_FLAG
   * https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_flags
   *
   * @param {string | number} flagName
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_AUDIO_FLAG = '0xb9efd5c25018725a';
/**
   * SET_AUDIO_ONLINE_TRANSITION_STAGE
   *
   * @param {string | number} p0
   * @return {void}
   */
export const SET_AUDIO_ONLINE_TRANSITION_STAGE = '0x9b1fc259187c97c0';
/**
   * SET_AUDIO_SCENE_VARIABLE
   *
   * @param {string | number} scene
   * @param {string | number} variable
   * @param {number} value
   * @return {void}
   */
export const SET_AUDIO_SCENE_VARIABLE = '0xef21a9ef089a2668';
/**
   * SET_AUDIO_VEHICLE_PRIORITY
   *
   * @param {number} vehicle
   * @param {any} p1
   * @return {void}
   */
export const SET_AUDIO_VEHICLE_PRIORITY = '0xe5564483e407f914';
/**
   * SET_GPS_ACTIVE
   * nullsub, doesn't do anything
   *
   * @param {boolean} active
   * @return {void}
   */
export const SET_GPS_ACTIVE = '0x3bd3f52ba9b1e4e8';
/**
   * SET_HORN_ENABLED
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_HORN_ENABLED = '0x76d683c108594d0e';
/**
   * SET_IS_SCRIPTED_SPEECH_DISABLED
   *
   * @param {number} ped
   * @param {boolean} disabled
   * @return {any}
   */
export const SET_IS_SCRIPTED_SPEECH_DISABLED = '0xb2de3aebe31150e2';
/**
   * SET_PED_INTERIOR_WALLA_DENSITY
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const SET_PED_INTERIOR_WALLA_DENSITY = '0x8bf907833be275de';
/**
   * SET_PED_IS_DRUNK
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_IS_DRUNK = '0x95d2d383d5396b8a';
/**
   * SET_PED_WALLA_DENSITY
   * https://en.m.wikipedia.org/wiki/Walla
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const SET_PED_WALLA_DENSITY = '0x149aee66f0cb3a99';
/**
   * SET_PORTAL_SETTINGS_OVERRIDE
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @return {void}
   */
export const SET_PORTAL_SETTINGS_OVERRIDE = '0x044dbad7a7fa2be5';
/**
   * SET_STATIC_EMITTER_ENABLED
   *
   * @param {string | number} emitterName
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_STATIC_EMITTER_ENABLED = '0x399d2d3b33f1b8eb';
/**
   * SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE
   *
   * @param {string | number} p0
   * @return {void}
   */
export const SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE = '0x9663fe6b7a61eb00';
/**
   * START_AUDIO_SCENE
   *
   * @param {string | number} scene
   * @return {boolean}
   */
export const START_AUDIO_SCENE = '0x013a80fc08f6e4f2';
/**
   * START_PRELOADED_CONVERSATION
   *
   * @param {string | number} convoRoot
   * @return {void}
   */
export const START_PRELOADED_CONVERSATION = '0x23641afe870af385';
/**
   * START_SCRIPT_CONVERSATION
   *
   * @param {string | number} convoRoot
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} clone
   * @return {void}
   */
export const START_SCRIPT_CONVERSATION = '0x6b17c62c9635d2dc';
/**
   * STOP_AUDIO_SCENE
   *
   * @param {string | number} scene
   * @return {void}
   */
export const STOP_AUDIO_SCENE = '0xdfe8422b3b94e688';
/**
   * STOP_AUDIO_SCENES
   *
  
   * @return {void}
   */
export const STOP_AUDIO_SCENES = '0xbac7fc81a75ec1a1';
/**
   * STOP_CURRENT_PLAYING_AMBIENT_SPEECH
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const STOP_CURRENT_PLAYING_AMBIENT_SPEECH = '0xb8bec0ca6f0edb0f';
/**
   * STOP_CURRENT_PLAYING_SPEECH
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const STOP_CURRENT_PLAYING_SPEECH = '0x79d2f0e66f81d90d';
/**
   * STOP_PED_SPEAKING
   *
   * @param {number} ped
   * @param {boolean} shaking
   * @return {void}
   */
export const STOP_PED_SPEAKING = '0x9d64d7405520e3d3';
/**
   * STOP_SCRIPTED_CONVERSATION
   *
   * @param {string | number} p0
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {number}
   */
export const STOP_SCRIPTED_CONVERSATION = '0xd79deefb53455eba';
/**
   * STOP_STREAM
   *
   * @param {number} streamId
   * @return {void}
   */
export const STOP_STREAM = '0xa4718a1419d18151';
/**
   * TRIGGER_MUSIC_EVENT
   * https://github.com/femga/rdr3_discoveries/blob/master/audio/music_events/music_events.lua
   *
   * @param {string | number} eventName
   * @return {boolean}
   */
export const TRIGGER_MUSIC_EVENT = '0x706d57b0f50da710';
/**
   * UNREGISTER_SCRIPT_WITH_AUDIO
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const UNREGISTER_SCRIPT_WITH_AUDIO = '0xa8638be228d4751a';
/**
   * USE_FOOTSTEP_SCRIPT_SWEETENERS
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {number} hash
   * @return {void}
   */
export const USE_FOOTSTEP_SCRIPT_SWEETENERS = '0xbf4dc1784be94dfa';
/**
   * _0x017492B2201E3428
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x017492B2201E3428 = '0x017492b2201e3428';
/**
   * _0x018ABE833CA64D2A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x018ABE833CA64D2A = '0x018abe833ca64d2a';
/**
   * _0x06C5DF5EE444BC6B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x06C5DF5EE444BC6B = '0x06c5df5ee444bc6b';
/**
   * _0x078F77FD1A43EAB3
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x078F77FD1A43EAB3 = '0x078f77fd1a43eab3';
/**
   * _0x0CB3D1919E8D7CBA
   *
   * @param {string | number} convoRoot
   * @return {boolean}
   */
export const _0x0CB3D1919E8D7CBA = '0x0cb3d1919e8d7cba';
/**
   * _0x0D7FD6A55FD63AEF
   * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType 
   * p1 is possibly naSpeechAudibility, naSpeechType, or naSpeechEventTypeRequestPriority
   * SKIP_* - START_*
   *
   * @param {number} speechEventType
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0x0D7FD6A55FD63AEF = '0x0d7fd6a55fd63aef';
/**
   * _0x0FAF7171BF613B80
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0FAF7171BF613B80 = '0x0faf7171bf613b80';
/**
   * _0x131EC9247E7A2903
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x131EC9247E7A2903 = '0x131ec9247e7a2903';
/**
   * _0x138ADB94F8B90616
   *
  
   * @return {void}
   */
export const _0x138ADB94F8B90616 = '0x138adb94f8b90616';
/**
   * _0x139A4B9DF2D26CBF
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x139A4B9DF2D26CBF = '0x139a4b9df2d26cbf';
/**
   * _0x152ED1B56E8F1F50
   *
   * @param {string | number} p0
   * @param {number} currentScriptedConvoLine
   * @return {number}
   */
export const _0x152ED1B56E8F1F50 = '0x152ed1b56e8f1f50';
/**
   * _0x1E6F9A9FE1A99F36
   *
   * @param {string | number} audSpeechEvent
   * @return {void}
   */
export const _0x1E6F9A9FE1A99F36 = '0x1e6f9a9fe1a99f36';
/**
   * _0x254B0241E964B450
   *
   * @param {string | number} p0
   * @param {number} currentScriptedConvoLine
   * @return {number}
   */
export const _0x254B0241E964B450 = '0x254b0241e964b450';
/**
   * _0x259ACC5B52A2B2D9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x259ACC5B52A2B2D9 = '0x259acc5b52a2b2d9';
/**
   * _0x2651DDC0EA269073
   *
   * @param {number} ropeId
   * @param {number} p1
   * @return {void}
   */
export const _0x2651DDC0EA269073 = '0x2651ddc0ea269073';
/**
   * _0x295859EB18F48D82
   *
   * @param {string | number} p0
   * @return {number}
   */
export const _0x295859EB18F48D82 = '0x295859eb18f48d82';
/**
   * _0x2B101AD9F651243A
   *
  
   * @return {any}
   */
export const _0x2B101AD9F651243A = '0x2b101ad9f651243a';
/**
   * _0x2B9C37C01BF25EDB
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x2B9C37C01BF25EDB = '0x2b9c37c01bf25edb';
/**
   * _0x2FFF4A78384AFFDF
   *
   * @param {number} entity
   * @return {any}
   */
export const _0x2FFF4A78384AFFDF = '0x2fff4a78384affdf';
/**
   * _0x341CDD17EFC2472E
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x341CDD17EFC2472E = '0x341cdd17efc2472e';
/**
   * _0x35B8C070E0C16E2F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x35B8C070E0C16E2F = '0x35b8c070e0c16e2f';
/**
   * _0x380A2E353AD30917
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x380A2E353AD30917 = '0x380a2e353ad30917';
/**
   * _0x3A00D87B20A2A5E4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3A00D87B20A2A5E4 = '0x3a00d87b20a2a5e4';
/**
   * _0x3A3BE6B920525237
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3A3BE6B920525237 = '0x3a3be6b920525237';
/**
   * _0x3D0BBCCF401B5FDB
   *
  
   * @return {void}
   */
export const _0x3D0BBCCF401B5FDB = '0x3d0bbccf401b5fdb';
/**
   * _0x3E93DDDCBB6111E4
   *
   * @param {string | number} p0
   * @param {number} p1
   * @return {void}
   */
export const _0x3E93DDDCBB6111E4 = '0x3e93dddcbb6111e4';
/**
   * _0x3E98AC9D8C56C62C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x3E98AC9D8C56C62C = '0x3e98ac9d8c56c62c';
/**
   * _0x40CA665AB9D8D505
   *
   * @param {string | number} convoRoot
   * @param {number} singleLineIndex
   * @return {void}
   */
export const _0x40CA665AB9D8D505 = '0x40ca665ab9d8d505';
/**
   * _0x43037ABFE214A851
   *
  
   * @return {void}
   */
export const _0x43037ABFE214A851 = '0x43037abfe214a851';
/**
   * _0x448F2647DD6F2E27
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x448F2647DD6F2E27 = '0x448f2647dd6f2e27';
/**
   * _0x44A5EEF54F62E823
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x44A5EEF54F62E823 = '0x44a5eef54f62e823';
/**
   * _0x4A98E228A936DBCC
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x4A98E228A936DBCC = '0x4a98e228a936dbcc';
/**
   * _0x4BE3EC91C01F0FE8
   *
  
   * @return {void}
   */
export const _0x4BE3EC91C01F0FE8 = '0x4be3ec91c01f0fe8';
/**
   * _0x569ABC36E28DDEAA
   *
  
   * @return {void}
   */
export const _0x569ABC36E28DDEAA = '0x569abc36e28ddeaa';
/**
   * _0x580D71DFE0088E34
   * _IS_SOUND_RUNNING(?)
   *
   * @param {string | number} audioName
   * @param {string | number} audioRef
   * @return {boolean}
   */
export const _0x580D71DFE0088E34 = '0x580d71dfe0088e34';
/**
   * _0x5A13586A9447931F
   *
   * @param {boolean} p0
   * @return {boolean}
   */
export const _0x5A13586A9447931F = '0x5a13586a9447931f';
/**
   * _0x5AE0CB5F35F034FD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _0x5AE0CB5F35F034FD = '0x5ae0cb5f35f034fd';
/**
   * _0x5BC885EBD75FAA7D
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x5BC885EBD75FAA7D = '0x5bc885ebd75faa7d';
/**
   * _0x5E3CCF03995388B5
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x5E3CCF03995388B5 = '0x5e3ccf03995388b5';
/**
   * _0x62377977E4F08668
   *
   * @param {number} entity
   * @return {number}
   */
export const _0x62377977E4F08668 = '0x62377977e4f08668';
/**
   * _0x64B956F4E761DF5C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x64B956F4E761DF5C = '0x64b956f4e761df5c';
/**
   * _0x660A8F876DF1D4F8
   * speechEventType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/naSpeechEventType 
   * SKIP_* - START_*
   *
   * @param {number} speechEventType
   * @return {void}
   */
export const _0x660A8F876DF1D4F8 = '0x660a8f876df1d4f8';
/**
   * _0x6652B0C8F3D414D0
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6652B0C8F3D414D0 = '0x6652b0c8f3d414d0';
/**
   * _0x6AB944DF68B512D3
   * _STOP_AUDIO_*
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6AB944DF68B512D3 = '0x6ab944df68b512d3';
/**
   * _0x6B7A88A61B41E589
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6B7A88A61B41E589 = '0x6b7a88a61b41e589';
/**
   * _GET_LAST_PLAYED_SPEECH_FOR_PED
   * Gets the hash for the last played speech line.
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_LAST_PLAYED_SPEECH_FOR_PED = '0x6bffb7c276866996';
/**
   * _0x6DA15746D5CC1A92
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0x6DA15746D5CC1A92 = '0x6da15746d5cc1a92';
/**
   * _0x72E4D1C4639BC465
   *
   * @param {number} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x72E4D1C4639BC465 = '0x72e4d1c4639bc465';
/**
   * _0x7455CD705F7E933E
   * _AUDIO_IS_* - _AUDIO_TRIGGER*
   *
  
   * @return {void}
   */
export const _0x7455CD705F7E933E = '0x7455cd705f7e933e';
/**
   * _0x7678FE0455ED1145
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x7678FE0455ED1145 = '0x7678fe0455ed1145';
/**
   * _0x79F9C57B8D0DFE90
   * Only used in R* SP Script cv_mus_shared
   *
   * @param {string | number} convoRoot
   * @param {number} animScene
   * @return {boolean}
   */
export const _0x79F9C57B8D0DFE90 = '0x79f9c57b8d0dfe90';
/**
   * _0x7E176C676F8652A9
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x7E176C676F8652A9 = '0x7e176c676f8652a9';
/**
   * _0x821C32C728B24477
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x821C32C728B24477 = '0x821c32c728b24477';
/**
   * _0x839C9F124BE74D94
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x839C9F124BE74D94 = '0x839c9f124be74d94';
/**
   * _0x847748AE5D7B1071
   *
   * @param {boolean} p0
   * @return {boolean}
   */
export const _0x847748AE5D7B1071 = '0x847748ae5d7b1071';
/**
   * _0x864A842B86993851
   * Not implemented.
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x864A842B86993851 = '0x864a842b86993851';
/**
   * _0x886657C5B3D8EDE3
   *
   * @param {number} entity
   * @return {any}
   */
export const _0x886657C5B3D8EDE3 = '0x886657c5b3d8ede3';
/**
   * _0x8D29FDF565DED9AE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x8D29FDF565DED9AE = '0x8d29fdf565ded9ae';
/**
   * _0x8E901B65206C2D3E
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x8E901B65206C2D3E = '0x8e901b65206c2d3e';
/**
   * _0x935DBD96D4A3DA1F
   *
   * @param {string | number} p0
   * @param {number} currentScriptedConvoLine
   * @return {number}
   */
export const _0x935DBD96D4A3DA1F = '0x935dbd96d4a3da1f';
/**
   * _0x9D6DEC9791A4E501
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0x9D6DEC9791A4E501 = '0x9d6dec9791a4e501';
/**
   * _0x9EB779765E68C52E
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9EB779765E68C52E = '0x9eb779765e68c52e';
/**
   * _0xA2323A2EAE32A290
   *
   * @param {number} listeningToPed
   * @param {number} ped
   * @param {string | number} listenerName
   * @return {void}
   */
export const _0xA2323A2EAE32A290 = '0xa2323a2eae32a290';
/**
   * _0xA2B851605748AD0E
   *
  
   * @return {void}
   */
export const _0xA2B851605748AD0E = '0xa2b851605748ad0e';
/**
   * _0xA6847BBA4FCDD13F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA6847BBA4FCDD13F = '0xa6847bba4fcdd13f';
/**
   * _0xA6A3A3F96B8B030E
   *
  
   * @return {any}
   */
export const _0xA6A3A3F96B8B030E = '0xa6a3a3f96b8b030e';
/**
   * _0xABDB4863D3D72021
   *
   * @param {number} entity
   * @param {any} p1
   * @param {any} p2
   * @param {number} p3
   * @param {any} p4
   * @return {void}
   */
export const _0xABDB4863D3D72021 = '0xabdb4863d3d72021';
/**
   * _0xB18FEC133C7C6C69
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xB18FEC133C7C6C69 = '0xb18fec133c7c6c69';
/**
   * _0xB93A769B8B726950
   * Used in Script Function NET_CAMP_CLIENT_UPDATE_PED_ROLE_STATE_SHOP: hash exists! Playing hash
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0xB93A769B8B726950 = '0xb93a769b8b726950';
/**
   * _0xBC07CA8FD710E7FD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xBC07CA8FD710E7FD = '0xbc07ca8fd710e7fd';
/**
   * _0xBE28DB99556FF8D9
   * Checks for MOONSHINE_BAND
   *
   * @param {number} entity
   * @return {number}
   */
export const _0xBE28DB99556FF8D9 = '0xbe28db99556ff8d9';
/**
   * _0xC369E2234E34A0CA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xC369E2234E34A0CA = '0xc369e2234e34a0ca';
/**
   * _0xC4CFCE4C656EF480
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xC4CFCE4C656EF480 = '0xc4cfce4c656ef480';
/**
   * _0xC68C02DE259C927C
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC68C02DE259C927C = '0xc68c02de259c927c';
/**
   * _0xC886CD666ADD42E1
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xC886CD666ADD42E1 = '0xc886cd666add42e1';
/**
   * _0xCBF2BEBB468A34F3
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xCBF2BEBB468A34F3 = '0xcbf2bebb468a34f3';
/**
   * _0xCFAD2C8CD1054523
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xCFAD2C8CD1054523 = '0xcfad2c8cd1054523';
/**
   * _0xD05A460328560477
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xD05A460328560477 = '0xd05a460328560477';
/**
   * _0xD0730C1FA40348D9
   * _IS_SCRIPTED_CONVERSATION_*
   *
   * @param {string | number} convoRoot
   * @return {boolean}
   */
export const _0xD0730C1FA40348D9 = '0xd0730c1fa40348d9';
/**
   * _0xD47D47EFBF103FB8
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xD47D47EFBF103FB8 = '0xd47d47efbf103fb8';
/**
   * _0xD733528B6C35647A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xD733528B6C35647A = '0xd733528b6c35647a';
/**
   * _0xDAD6CD07CAA4F382
   *
  
   * @return {void}
   */
export const _0xDAD6CD07CAA4F382 = '0xdad6cd07caa4f382';
/**
   * _0xDC2F83A0612CA34D
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xDC2F83A0612CA34D = '0xdc2f83a0612ca34d';
/**
   * _0xDC93F0948F2C28F4
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xDC93F0948F2C28F4 = '0xdc93f0948f2c28f4';
/**
   * _0xDF947FE0D551684E
   *
   * @param {number} ped
   * @param {string | number} p1
   * @return {boolean}
   */
export const _0xDF947FE0D551684E = '0xdf947fe0d551684e';
/**
   * _0xE600F61F54A444A6
   *
  
   * @return {any}
   */
export const _0xE600F61F54A444A6 = '0xe600f61f54a444a6';
/**
   * _0xE7E6CB8B713ED190
   *
  
   * @return {void}
   */
export const _0xE7E6CB8B713ED190 = '0xe7e6cb8b713ed190';
/**
   * _0xE891504B2F0E2DBA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE891504B2F0E2DBA = '0xe891504b2f0e2dba';
/**
   * _0xE9694B2D6CB87B06
   *
   * @param {number} entity
   * @param {any} p1
   * @return {void}
   */
export const _0xE9694B2D6CB87B06 = '0xe9694b2d6cb87b06';
/**
   * _0xEA546C31FD45F8CD
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xEA546C31FD45F8CD = '0xea546c31fd45f8cd';
/**
   * _0xEB4D592620B8C209
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xEB4D592620B8C209 = '0xeb4d592620b8c209';
/**
   * _0xF092B6030D6FD49C
   * Name: ROPE_SETTINGS_DEFAULT
   *
   * @param {number} ropeId
   * @param {string | number} name
   * @return {void}
   */
export const _0xF092B6030D6FD49C = '0xf092b6030d6fd49c';
/**
   * _0xF0EE69F500952FA5
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xF0EE69F500952FA5 = '0xf0ee69f500952fa5';
/**
   * _0xF232C2C546AC16D0
   *
   * @param {string | number} p0
   * @return {void}
   */
export const _0xF232C2C546AC16D0 = '0xf232c2c546ac16d0';
/**
   * _0xF336E9F989B3518F
   *
   * @param {string | number} p0
   * @return {number}
   */
export const _0xF336E9F989B3518F = '0xf336e9f989b3518f';
/**
   * _0xF64034D533CE8AAC
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xF64034D533CE8AAC = '0xf64034d533ce8aac';
/**
   * _0xFCDEC42B1C78B7F8
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xFCDEC42B1C78B7F8 = '0xfcdec42b1c78b7f8';
/**
   * _0xFD461D0ABA5559B1
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xFD461D0ABA5559B1 = '0xfd461d0aba5559b1';
/**
   * _0xFE5C6177064BD390
   *
   * @param {boolean} p0
   * @return {boolean}
   */
export const _0xFE5C6177064BD390 = '0xfe5c6177064bd390';
/**
   * _0xFFE9C53DEEA3DB0B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} isSrlLoaded
   * @param {any} p6
   * @return {any}
   */
export const _0xFFE9C53DEEA3DB0B = '0xffe9c53deea3db0b';
/**
   * _BLOCK_SPEECH_CONTEXT
   *
   * @param {string | number} context
   * @param {boolean} block
   * @return {void}
   */
export const _BLOCK_SPEECH_CONTEXT = '0x6378a235374b852f';
/**
   * _CLEAR_CONVERSATION_HISTORY_FOR_SCRIPTED_CONVERSATION
   *
   * @param {string | number} convoRoot
   * @return {void}
   */
export const _CLEAR_CONVERSATION_HISTORY_FOR_SCRIPTED_CONVERSATION = '0xef51242e35242b47';
/**
   * _GET_ENTITY_AUDIO_MIX_GROUP
   *
   * @param {number} entity
   * @return {number}
   */
export const _GET_ENTITY_AUDIO_MIX_GROUP = '0x8b25a18e390f75bf';
/**
   * _GET_LOADED_STREAM_ID_FROM_CREATION
   * Creates stream and returns streamId handle to be used with PLAY_STREAM_* natives
   * https://github.com/femga/rdr3_discoveries/tree/master/audio/create_stream
   *
   * @param {string | number} streamName
   * @param {string | number} soundSet
   * @return {number}
   */
export const _GET_LOADED_STREAM_ID_FROM_CREATION = '0x0556c784fa056628';
/**
   * _GET_PED_SONG_INDEX_HOST
   *
   * @param {number} ped
   * @return {any}
   */
export const _GET_PED_SONG_INDEX_HOST = '0x2dbbf0c5e19383ee';
/**
   * _HAS_SOUND_AUDIO_NAME_FINISHED
   *
   * @param {string | number} audioName
   * @param {string | number} soundsetName
   * @return {boolean}
   */
export const _HAS_SOUND_AUDIO_NAME_FINISHED = '0x714a0ea7de1167be';
/**
   * _HAS_SOUND_ID_FINISHED
   *
   * @param {number} soundId
   * @return {boolean}
   */
export const _HAS_SOUND_ID_FINISHED = '0x84848e1c0fc67dbb';
/**
   * _IS_ANY_CONVERSATION_PLAYING
   *
   * @param {boolean} p0
   * @return {boolean}
   */
export const _IS_ANY_CONVERSATION_PLAYING = '0xa2cac9def0195e6f';
/**
   * _IS_PED_IN_ANY_CONVERSATION
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {boolean}
   */
export const _IS_PED_IN_ANY_CONVERSATION = '0x54b187f111d9c6f8';
/**
   * _IS_SCRIPTED_AUDIO_CUSTOM
   * item: FUSE, value returned from 0x2E1CDC1FF3B8473E
   * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
   *
   * @param {number} item
   * @param {number} soundSet
   * @return {boolean}
   */
export const _IS_SCRIPTED_AUDIO_CUSTOM = '0x6df942c4179be5ab';
/**
   * _IS_SCRIPTED_CONVERSATION_CREATED
   *
   * @param {string | number} convoRoot
   * @return {boolean}
   */
export const _IS_SCRIPTED_CONVERSATION_CREATED = '0xd89504d9d7d5057d';
/**
   * _IS_SCRIPTED_CONVERSION_ONGOING
   *
   * @param {string | number} p0
   * @return {boolean}
   */
export const _IS_SCRIPTED_CONVERSION_ONGOING = '0xf01c570e0a0a1e67';
/**
   * _PLAY_ANIMAL_VOCALIZATION_PHEROMONE_VIAL_RESPONSE
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _PLAY_ANIMAL_VOCALIZATION_PHEROMONE_VIAL_RESPONSE = '0x0e53530d9b2db01d';
/**
   * _PLAY_SOUND_FROM_ENTITY_WITH_SET
   * Params: p5 seems to be always 0
   *
   * @param {number} soundId
   * @param {string | number} soundName
   * @param {number} entity
   * @param {string | number} soundsetName
   * @param {boolean} p4
   * @param {any} p5
   * @return {void}
   */
export const _PLAY_SOUND_FROM_ENTITY_WITH_SET = '0xf1c5310feaa36b48';
/**
   * _PLAY_SOUND_FROM_ITEM
   * item: value returned from 0x2E1CDC1FF3B8473E
   * soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
   *
   * @param {number} item
   * @param {number} soundSet
   * @param {any} p2
   * @return {void}
   */
export const _PLAY_SOUND_FROM_ITEM = '0xe8eaff7b41edd291';
/**
   * PLAY_SOUND_FROM_COORD
   * Old name: _PLAY_SOUND_FROM_POSITION
   *
   * @param {string | number} soundName
   * @param {number} positionX
   * @param {number} positionY
   * @param {number} positionZ
   * @param {string | number} setName
   * @param {boolean} bOverNetwork
   * @param {number} nNetworkRange
   * @param {boolean} isExteriorLoc
   * @param {number} p8
   * @return {void}
   */
export const PLAY_SOUND_FROM_COORD = '0xcce219c922737bfa';
/**
   * _PLAY_SOUND_FROM_POSITION_WITH_ID
   * Starts Audio Loop
   * _PLAY_SOUND_FROM_ENTITY* - _PLAY_SOUND_FRONTEND*
   *
   * @param {number} soundId
   * @param {string | number} soundName
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {string | number} soundsetName
   * @param {boolean} p6
   * @param {number} p7
   * @param {boolean} p8
   * @return {void}
   */
export const _PLAY_SOUND_FROM_POSITION_WITH_ID = '0xdcf5ba95bbf0faba';
/**
   * _PLAY_SOUND_FRONTEND_WITH_SOUND_ID
   *
   * @param {number} soundId
   * @param {string | number} name
   * @param {string | number} soundSet
   * @param {boolean} p3
   * @return {void}
   */
export const _PLAY_SOUND_FRONTEND_WITH_SOUND_ID = '0xce5d0ffe83939af1';
/**
   * _RELEASE_SHARD_SOUNDS
   *
   * @param {string | number} soundName
   * @param {string | number} soundsetName
   * @return {void}
   */
export const _RELEASE_SHARD_SOUNDS = '0x9d746964e0cf2c5f';
/**
   * _RELEASE_SOUNDSET
   *
   * @param {string | number} soundsetName
   * @return {void}
   */
export const _RELEASE_SOUNDSET = '0x531a78d6bf27014b';
/**
   * _SET_AMBIENT_ZONE_POSITION
   *
   * @param {string | number} ambientZone
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @return {void}
   */
export const _SET_AMBIENT_ZONE_POSITION = '0x3743ce6948194349';
/**
   * _SET_AUDIO_SCENESET
   *
   * @param {string | number} audioName
   * @param {string | number} sceneset
   * @return {boolean}
   */
export const _SET_AUDIO_SCENESET = '0xac84686c06184b0d';
/**
   * _SET_SOUND_RELATIONSHIP_ON_PED
   * p1: Entity.Relationship
   * p2: Player, Enemy, Teammate, Neutral
   *
   * @param {number} ped
   * @param {string | number} p1
   * @param {string | number} p2
   * @return {void}
   */
export const _SET_SOUND_RELATIONSHIP_ON_PED = '0x2e31aca7477cf00f';
/**
   * SET_VARIABLE_ON_SOUND
   * Old Name: _SET_VARIABLE_ON_SOUND_WITH_ID
   *
   * @param {number} soundId
   * @param {string | number} variableName
   * @param {number} variableValue
   * @return {void}
   */
export const SET_VARIABLE_ON_SOUND = '0x503703ec1781b7d6';
/**
   * _SET_VARIABLE_ON_SOUND_WITH_NAME
   *
   * @param {string | number} variableName
   * @param {number} variableValue
   * @param {string | number} audioName
   * @param {string | number} audioRef
   * @return {void}
   */
export const _SET_VARIABLE_ON_SOUND_WITH_NAME = '0x9821b68cd3e05f2b';
/**
   * _SET_VOFX_PED_VOICE
   * Hashes: VOFX_PLAYER_MALE01, VOFX_PLAYER_MALE02, VOFX_PLAYER_MALE03, VOFX_PLAYER_FEMALE01, VOFX_PLAYER_FEMALE02, VOFX_PLAYER_FEMALE03
   *
   * @param {number} ped
   * @param {number} voice
   * @return {void}
   */
export const _SET_VOFX_PED_VOICE = '0x2703efb583f0949a';
/**
   * _SET_WHISTLE_CONFIG_FOR_PED
   * whistleConfig: Ped.WhistlePitch (0.0 - 1.0), Ped.WhistleClarity (0.0 - 1.0), Ped.WhistleShape (0.0 - 10.0)
   *
   * @param {number} ped
   * @param {string | number} whistleConfig
   * @param {number} value
   * @return {void}
   */
export const _SET_WHISTLE_CONFIG_FOR_PED = '0x9963681a8bc69bf3';
/**
   * _START_AUDIO_SCENESET
   *
   * @param {string | number} audioName
   * @param {string | number} sceneset
   * @return {boolean}
   */
export const _START_AUDIO_SCENESET = '0x6339c1ea3979b5f7';
/**
   * _STOP_ALL_SCRIPTED_AUDIO_SOUNDS
   *
  
   * @return {void}
   */
export const _STOP_ALL_SCRIPTED_AUDIO_SOUNDS = '0x2e399eafbeea74d5';
/**
   * _STOP_ALL_SCRIPTED_CONVERSIONS
   *
   * @param {boolean} p0
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _STOP_ALL_SCRIPTED_CONVERSIONS = '0x36559148b78853b3';
/**
   * _STOP_AUDIO_SCENESET
   *
   * @param {string | number} sceneset
   * @return {void}
   */
export const _STOP_AUDIO_SCENESET = '0x9428447ded71fc7e';
/**
   * STOP_SOUND
   * Old Name: _STOP_SOUND_WITH_ID
   *
   * @param {number} soundId
   * @return {void}
   */
export const STOP_SOUND = '0x3210bcb36af7621b';
/**
   * _STOP_SOUND_WITH_NAME
   *
   * @param {string | number} audioName
   * @param {string | number} audioRef
   * @return {void}
   */
export const _STOP_SOUND_WITH_NAME = '0x0f2a2175734926d8';
/**
   * _TRIGGER_MUSIC_EVENT_WITH_HASH
   *
   * @param {number} eventName
   * @return {any}
   */
export const _TRIGGER_MUSIC_EVENT_WITH_HASH = '0x05d6195fb4d428f4';
/**
   * _UNLOAD_SPEECH_CONTEXT
   * _UNLOAD_[A-C]* - USE_*
   *
   * @param {string | number} speechContext
   * @return {void}
   */
export const _UNLOAD_SPEECH_CONTEXT = '0x87e6302fc61208cc';
/**
   * UPDATE_SOUND_COORD
   * Only used in R* SP Scripts
   * Old Name: _UPDATE_SOUND_POSITION
   *
   * @param {number} soundId
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const UPDATE_SOUND_COORD = '0x0286617c8fc50a53';
/**
   * BOUNTY_GET_BOUNTY_ON_PLAYER
   *
   * @param {DataView} gamerHandle
   * @param {DataView} bountyData
   * @return {boolean}
   */
export const BOUNTY_GET_BOUNTY_ON_PLAYER = '0x4ef23e04a0c8ff51';
/**
   * BOUNTY_GET_COOLDOWN_COLLECTION
   *
   * @param {DataView} p0
   * @return {boolean}
   */
export const BOUNTY_GET_COOLDOWN_COLLECTION = '0x8faf4d262faba99c';
/**
   * BOUNTY_GET_LEGENDARY_TARGET
   *
   * @param {any} p0
   * @param {DataView} p1
   * @return {boolean}
   */
export const BOUNTY_GET_LEGENDARY_TARGET = '0x85e4d7b225a30ed1';
/**
   * BOUNTY_GET_WANTED_POSTER_SLOT
   *
   * @param {number} p0
   * @param {number} p1
   * @param {DataView} p2
   * @return {boolean}
   */
export const BOUNTY_GET_WANTED_POSTER_SLOT = '0xb395a44a0c7ca615';
/**
   * BOUNTY_REQUEST_BEGIN_LEGENDARY_MISSION
   *
   * @param {DataView} outRpcGuid
   * @param {number} p1
   * @param {number} p2
   * @return {boolean}
   */
export const BOUNTY_REQUEST_BEGIN_LEGENDARY_MISSION = '0xfc81d7c7a151cfaa';
/**
   * BOUNTY_REQUEST_BEGIN_LEGENDARY_MISSION_FOR_POSSE
   *
   * @param {DataView} outRpcGuid
   * @param {number} p1
   * @param {number} p2
   * @return {boolean}
   */
export const BOUNTY_REQUEST_BEGIN_LEGENDARY_MISSION_FOR_POSSE = '0x48e4e23f1739e197';
/**
   * _0x27D3A0E1FE090A43
   * _BOUNTY_IS_* or _BOUNTY_REQUEST_*
   *
   * @param {DataView} p0
   * @return {boolean}
   */
export const _0x27D3A0E1FE090A43 = '0x27d3a0e1fe090a43';
/**
   * _0x81847C2134039BDC
   *
   * @param {DataView} p0
   * @return {boolean}
   */
export const _0x81847C2134039BDC = '0x81847c2134039bdc';
/**
   * _0x86EC5F83867C4B70
   * _BOUNTY_C* or _BOUNTY_GET_*
   *
   * @param {DataView} p0
   * @return {boolean}
   */
export const _0x86EC5F83867C4B70 = '0x86ec5f83867c4b70';
/**
   * _0xD6A67E2FF373D0E3
   * _BOUNTY_GET_*
   *
   * @param {number} p0
   * @return {number}
   */
export const _0xD6A67E2FF373D0E3 = '0xd6a67e2ff373d0e3';
/**
   * _0xF8BCC5ECA33AC9C1
   * _BOUNTY_GET_*
   *
  
   * @return {number}
   */
export const _0xF8BCC5ECA33AC9C1 = '0xf8bcc5eca33ac9c1';
/**
   * _BOUNTY_CANCEL_LEGENDARY_MISSION
   *
  
   * @return {void}
   */
export const _BOUNTY_CANCEL_LEGENDARY_MISSION = '0x2ba1bcc99826cda2';
/**
   * _BOUNTY_CANCEL_WANTED_POSTER
   *
  
   * @return {void}
   */
export const _BOUNTY_CANCEL_WANTED_POSTER = '0x6a9df0fcd0c87ff9';
/**
   * _BOUNTY_CLEAR_BEING_BOUNTY_HUNTER
   *
  
   * @return {void}
   */
export const _BOUNTY_CLEAR_BEING_BOUNTY_HUNTER = '0xa59d1997ecd99f0a';
/**
   * _BOUNTY_CLEAR_BEING_TARGET
   *
  
   * @return {void}
   */
export const _BOUNTY_CLEAR_BEING_TARGET = '0x932db3c05a7465d1';
/**
   * _BOUNTY_IS_REQUEST_PENDING
   *
   * @param {DataView} rpcGuid
   * @return {boolean}
   */
export const _BOUNTY_IS_REQUEST_PENDING = '0x03b61cd51097de60';
/**
   * _BOUNTY_REQUEST_BECOME_TARGET_OF_CHARACTER_BOUNTY_HUNT
   *
   * @param {DataView} outRpcGuid
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_BECOME_TARGET_OF_CHARACTER_BOUNTY_HUNT = '0xb096547d61868254';
/**
   * _BOUNTY_REQUEST_BEGIN_WANTED_POSTER
   *
   * @param {DataView} outRpcGuid
   * @param {number} p1
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_BEGIN_WANTED_POSTER = '0xffa13742e43507e3';
/**
   * _BOUNTY_REQUEST_BRIBE_JAIL_GUARD
   *
   * @param {DataView} outRpcGuid
   * @param {number} p1
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_BRIBE_JAIL_GUARD = '0x28717806d3bdd0d0';
/**
   * _BOUNTY_REQUEST_CLAIM_CHARACTER_BOUNTY
   *
   * @param {DataView} outRpcGuid
   * @param {number} p1
   * @param {DataView} p2
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_CLAIM_CHARACTER_BOUNTY = '0xa9c3b0f746375162';
/**
   * _BOUNTY_REQUEST_COMPLETE_LEGENDARY_MISSION
   *
   * @param {DataView} outRpcGuid
   * @param {DataView} p1
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_COMPLETE_LEGENDARY_MISSION = '0xa7309ac0dcf6d950';
/**
   * _BOUNTY_REQUEST_COMPLETE_SPLIT_WANTED_POSTER
   *
   * @param {DataView} outRpcGuid
   * @param {DataView} p1
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_COMPLETE_SPLIT_WANTED_POSTER = '0xfbd137bf0ec50fc9';
/**
   * _BOUNTY_REQUEST_COMPLETE_WANTED_POSTER
   *
   * @param {DataView} outRpcGuid
   * @param {DataView} p1
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_COMPLETE_WANTED_POSTER = '0x727ab6f008bb9f29';
/**
   * _BOUNTY_REQUEST_ESCAPED_CHARACTER_BOUNTY_HUNT
   *
   * @param {DataView} outRpcGuid
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_ESCAPED_CHARACTER_BOUNTY_HUNT = '0x12e981d53b07bf48';
/**
   * _BOUNTY_REQUEST_PAY_OFF_BOUNTY
   *
   * @param {DataView} outRpcGuid
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_PAY_OFF_BOUNTY = '0x537ce992bd2d7bcb';
/**
   * _BOUNTY_REQUEST_PAY_OFF_BOUNTY_EX
   *
   * @param {DataView} outRpcGuid
   * @param {number} p1
   * @param {number} costType
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_PAY_OFF_BOUNTY_EX = '0x587bcec31d64f382';
/**
   * _BOUNTY_REQUEST_POSSE_LEADER_CLAIM_CHARACTER_BOUNTY
   *
   * @param {DataView} outRpcGuid
   * @param {number} p1
   * @param {DataView} p2
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_POSSE_LEADER_CLAIM_CHARACTER_BOUNTY = '0x5b53ca0e2ac3ff45';
/**
   * _BOUNTY_REQUEST_POSSE_LEADER_ESCAPED_CHARACTER_BOUNTY_HUNT
   *
   * @param {DataView} outRpcGuid
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_POSSE_LEADER_ESCAPED_CHARACTER_BOUNTY_HUNT = '0x2d874ba20e8e1f20';
/**
   * _BOUNTY_REQUEST_POSSE_MEMBER_CLAIM_CHARACTER_BOUNTY_SHARE
   *
   * @param {DataView} outRpcGuid
   * @param {DataView} p1
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_POSSE_MEMBER_CLAIM_CHARACTER_BOUNTY_SHARE = '0x22d3a61ce053270c';
/**
   * _BOUNTY_REQUEST_POSSE_MEMBER_ESCAPED_CHARACTER_BOUNTY_HUNT
   *
   * @param {DataView} outRpcGuid
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_POSSE_MEMBER_ESCAPED_CHARACTER_BOUNTY_HUNT = '0x8521c2e235558278';
/**
   * _BOUNTY_REQUEST_SELF_REPORT_CRIME
   * crimeType: see _REPORT_CRIME
   *
   * @param {DataView} outRpcGuid
   * @param {number} crimeType
   * @param {boolean} p2
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_SELF_REPORT_CRIME = '0x188b748861b5ba17';
/**
   * _BOUNTY_REQUEST_SELF_REPORT_KILLED_BY_BOUNTY_HUNTER
   *
   * @param {DataView} outRpcGuid
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_SELF_REPORT_KILLED_BY_BOUNTY_HUNTER = '0xb462d69d406a2602';
/**
   * _BOUNTY_REQUEST_SERVED_FULL_JAIL_SENTENCE
   *
   * @param {DataView} outRpcGuid
   * @return {boolean}
   */
export const _BOUNTY_REQUEST_SERVED_FULL_JAIL_SENTENCE = '0x3f73aed12a5ef0ff';
/**
   * DISABLE_SCRIPT_BRAIN_SET
   *
   * @param {number} brainSet
   * @return {void}
   */
export const DISABLE_SCRIPT_BRAIN_SET = '0x3f44ea613a5b2676';
/**
   * ENABLE_SCRIPT_BRAIN_SET
   *
   * @param {number} brainSet
   * @return {void}
   */
export const ENABLE_SCRIPT_BRAIN_SET = '0x1cf6e5c6750eadbd';
/**
   * REACTIVATE_ALL_OBJECT_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE
   * Called before starting a new thread_monitor script thread in startup_mp/startup_tlg
   * Alternative name _REGISTER_SCRIPT_BRAIN
   * 
   * Old name: _PREPARE_SCRIPT_BRAIN
   *
  
   * @return {void}
   */
export const REACTIVATE_ALL_OBJECT_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE = '0xa32b0b05eff75730';
/**
   * REACTIVATE_NAMED_OBJECT_BRAINS_WAITING_TILL_OUT_OF_RANGE
   *
   * @param {string | number} scriptName
   * @return {void}
   */
export const REACTIVATE_NAMED_OBJECT_BRAINS_WAITING_TILL_OUT_OF_RANGE = '0x74c333e34df74e8a';
/**
   * REGISTER_OBJECT_SCRIPT_BRAIN
   * Registers a script for any object with a specific model hash.
   *
   * @param {string | number} scriptName
   * @param {number} modelHash
   * @param {number} p2
   * @param {number} activationRange
   * @param {number} p4
   * @param {number} p5
   * @return {void}
   */
export const REGISTER_OBJECT_SCRIPT_BRAIN = '0x16af9b4eeac3b305';
/**
   * _0x4AA5EA1EDFB25786
   * Called with flag 0 before 0xA6AC35DB4A7957A8 in net_entity_brain
   * _SET_SCRIPT_BRAIN*
   *
   * @param {number} flag
   * @return {void}
   */
export const _0x4AA5EA1EDFB25786 = '0x4aa5ea1edfb25786';
/**
   * _0xA6AC35DB4A7957A8
   * Common flags: 250, 99999
   * _SET_SCRIPT_BRAIN*
   *
   * @param {number} flag
   * @return {void}
   */
export const _0xA6AC35DB4A7957A8 = '0xa6ac35db4a7957a8';
/**
   * _GET_SCRIPT_BRAIN_ENTITY
   *
  
   * @return {number}
   */
export const _GET_SCRIPT_BRAIN_ENTITY = '0x6818d1a194e29983';
/**
   * _REMOVE_SCRIPT_BRAIN_ENTITY
   *
   * @param {number} entity
   * @return {void}
   */
export const _REMOVE_SCRIPT_BRAIN_ENTITY = '0x38f1e09224eeca09';
/**
   * _START_PRELOADED_SCRIPT_BRAIN
   * Returns threadId
   *
   * @param {number} entity
   * @param {string | number} scriptName
   * @param {number} scriptStackSize
   * @param {boolean} p3
   * @return {number}
   */
export const _START_PRELOADED_SCRIPT_BRAIN = '0x4e4507cc5e4db869';
/**
   * _START_SCRIPT_BRAIN
   * Returns threadId
   *
   * @param {number} entity
   * @param {string | number} scriptName
   * @param {number} p2
   * @param {DataView} p3
   * @param {number} p4
   * @param {boolean} p5
   * @return {number}
   */
export const _START_SCRIPT_BRAIN = '0x6f62fae266dcfc81';
/**
   * CEIL
   * Rounds a float value up to the next whole number
   *
   * @param {number} value
   * @return {number}
   */
export const CEIL = '0x11e019c8f43acc8a';
/**
   * COS
   *
   * @param {number} value
   * @return {number}
   */
export const COS = '0xd0ffb162f40a139c';
/**
   * FLOOR
   * Rounds a float value down to the next whole number
   *
   * @param {number} value
   * @return {number}
   */
export const FLOOR = '0xf34ee736cf047844';
/**
   * LOG10
   * Old name: _LOG10
   *
   * @param {number} value
   * @return {number}
   */
export const LOG10 = '0xe816e655de37fe20';
/**
   * POW
   *
   * @param {number} base
   * @param {number} exponent
   * @return {number}
   */
export const POW = '0xe3621cc40f31fe2e';
/**
   * ROUND
   *
   * @param {number} value
   * @return {number}
   */
export const ROUND = '0xf2db717a73826179';
/**
   * SETTIMERA
   *
   * @param {number} value
   * @return {void}
   */
export const SETTIMERA = '0xc1b1e9a034a63a62';
/**
   * SETTIMERB
   *
   * @param {number} value
   * @return {void}
   */
export const SETTIMERB = '0x5ae11bc36633de4e';
/**
   * SET_THIS_THREAD_PRIORITY
   * THREAD_PRIO_HIGHEST = 0
   * THREAD_PRIO_NORMAL = 1
   * THREAD_PRIO_LOWEST = 2
   * THREAD_PRIO_MANUAL_UPDATE = 100
   *
   * @param {number} priority
   * @return {void}
   */
export const SET_THIS_THREAD_PRIORITY = '0x42b65deef2edf2a1';
/**
   * SHIFT_LEFT
   *
   * @param {number} value
   * @param {number} bitShift
   * @return {number}
   */
export const SHIFT_LEFT = '0xedd95a39e5544de8';
/**
   * SHIFT_RIGHT
   *
   * @param {number} value
   * @param {number} bitShift
   * @return {number}
   */
export const SHIFT_RIGHT = '0x97ef1e5bce9dc075';
/**
   * SIN
   *
   * @param {number} value
   * @return {number}
   */
export const SIN = '0x0badbfa3b172435f';
/**
   * SQRT
   *
   * @param {number} value
   * @return {number}
   */
export const SQRT = '0x71d93b57d07f9804';
/**
   * TIMERA
   * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
   *
  
   * @return {number}
   */
export const TIMERA = '0x83666f9fb8febd4b';
/**
   * TIMERB
   *
  
   * @return {number}
   */
export const TIMERB = '0xc9d9444186b5a374';
/**
   * TIMESTEP
   * Gets the current frame time.
   *
  
   * @return {number}
   */
export const TIMESTEP = '0x0000000050597ee2';
/**
   * TO_FLOAT
   *
   * @param {number} value
   * @return {number}
   */
export const TO_FLOAT = '0xbbda792448db5a89';
/**
   * VDIST
   * Calculates distance between vectors.
   * The value returned will be in meters.
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @return {number}
   */
export const VDIST = '0x2a488c176d52cca5';
/**
   * VDIST2
   * Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
   * The value returned will be in RAGE units.
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @return {number}
   */
export const VDIST2 = '0xb7a628320eff8e47';
/**
   * VMAG
   * Calculates the magnitude of a vector.
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const VMAG = '0x652d2eeef1d3e62c';
/**
   * VMAG2
   * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const VMAG2 = '0xa8ceacb4f35ae058';
/**
   * WAIT
   *
   * @param {number} ms
   * @return {void}
   */
export const WAIT = '0x4ede34fbadd967a6';
/**
   * ADD_CAM_SPLINE_NODE
   * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
   * 
   * p8 big values ~100 will slow down the camera movement before reaching this node
   * 
   * p9 != 0 seems to override the rotation/pitch (bool?)
   *
   * @param {number} camera
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} length
   * @param {number} p8
   * @param {number} p9
   * @return {void}
   */
export const ADD_CAM_SPLINE_NODE = '0xf1f57f9d230f9cd1';
/**
   * ALLOW_MOTION_BLUR_DECAY
   *
   * @param {number} cam
   * @param {boolean} p1
   * @return {void}
   */
export const ALLOW_MOTION_BLUR_DECAY = '0x42ed56b02e05d109';
/**
   * ATTACH_CAM_TO_ENTITY
   * Last param determines if its relative to the Entity
   *
   * @param {number} cam
   * @param {number} entity
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {boolean} isRelative
   * @return {void}
   */
export const ATTACH_CAM_TO_ENTITY = '0xfdc0df7f6fb0a592';
/**
   * ATTACH_CAM_TO_PED_BONE
   * boneIndex: https://github.com/femga/rdr3_discoveries/tree/master/boneNames
   *
   * @param {number} cam
   * @param {number} ped
   * @param {number} boneIndex
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} heading
   * @return {void}
   */
export const ATTACH_CAM_TO_PED_BONE = '0xdfc1e4a44c0324ca';
/**
   * CINEMATIC_LOCATION_OVERRIDE_TARGET_ENTITY_THIS_UPDATE
   * Only used in R* Script fm_mission_controller
   *
   * @param {string | number} name
   * @param {number} entity
   * @return {void}
   */
export const CINEMATIC_LOCATION_OVERRIDE_TARGET_ENTITY_THIS_UPDATE = '0x0b0f914459731f60';
/**
   * CINEMATIC_LOCATION_STOP_SCRIPTED_SHOT_EVENT
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const CINEMATIC_LOCATION_STOP_SCRIPTED_SHOT_EVENT = '0x6d4d25c2137ff511';
/**
   * CINEMATIC_LOCATION_TRIGGER_SCRIPTED_SHOT_EVENT
   *
   * @param {string | number} dictionary
   * @param {string | number} shotName
   * @param {string | number} cameraName
   * @param {any} p3
   * @return {void}
   */
export const CINEMATIC_LOCATION_TRIGGER_SCRIPTED_SHOT_EVENT = '0x02389579a53c3276';
/**
   * CREATE_CAM
   *
   * @param {string | number} camName
   * @param {boolean} p1
   * @return {number}
   */
export const CREATE_CAM = '0xe72cdba7f0a02dd6';
/**
   * CREATE_CAMERA
   *
   * @param {number} camHash
   * @param {boolean} p1
   * @return {number}
   */
export const CREATE_CAMERA = '0x57cdf879ea466c46';
/**
   * CREATE_CAMERA_WITH_PARAMS
   *
   * @param {number} camHash
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} fov
   * @param {boolean} p8
   * @param {any} p9
   * @return {number}
   */
export const CREATE_CAMERA_WITH_PARAMS = '0x98b99b9f27e2d60b';
/**
   * CREATE_CAM_WITH_PARAMS
   *
   * @param {string | number} camName
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} fov
   * @param {boolean} p8
   * @param {number} p9
   * @return {number}
   */
export const CREATE_CAM_WITH_PARAMS = '0x40c23491ce83708e';
/**
   * DESTROY_ALL_CAMS
   * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
   *
   * @param {boolean} p0
   * @return {void}
   */
export const DESTROY_ALL_CAMS = '0x163600d6e136c9f8';
/**
   * DESTROY_CAM
   * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
   *
   * @param {number} cam
   * @param {boolean} p1
   * @return {void}
   */
export const DESTROY_CAM = '0x4e67e0b6d7fd5145';
/**
   * DETACH_CAM
   *
   * @param {number} cam
   * @return {void}
   */
export const DETACH_CAM = '0x05b41ddbeb559556';
/**
   * DISABLE_CAM_COLLISION_FOR_OBJECT
   *
   * @param {number} entity
   * @return {void}
   */
export const DISABLE_CAM_COLLISION_FOR_OBJECT = '0x7e3f546acfe6c8d9';
/**
   * DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE
   * Old name: _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME
   *
  
   * @return {void}
   */
export const DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE = '0xa5929c2e57ac90d1';
/**
   * DISABLE_FIRST_PERSON_FLASH_EFFECT_THIS_UPDATE
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const DISABLE_FIRST_PERSON_FLASH_EFFECT_THIS_UPDATE = '0x77d65669a05d1a1a';
/**
   * DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE
   * Old name: _DISABLE_FIRST_PERSON_CAM_THIS_FRAME
   *
  
   * @return {void}
   */
export const DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE = '0x9c473089a934c930';
/**
   * DOES_CAM_EXIST
   * Returns whether or not the passed camera handle exists.
   *
   * @param {number} cam
   * @return {boolean}
   */
export const DOES_CAM_EXIST = '0x153ad457764fd704';
/**
   * DO_SCREEN_FADE_IN
   * Fades the screen in.
   * 
   * duration: The time the fade should take, in milliseconds.
   *
   * @param {number} duration
   * @return {void}
   */
export const DO_SCREEN_FADE_IN = '0x6a053cf596f67df7';
/**
   * DO_SCREEN_FADE_OUT
   * Fades the screen out.
   * 
   * duration: The time the fade should take, in milliseconds.
   *
   * @param {number} duration
   * @return {void}
   */
export const DO_SCREEN_FADE_OUT = '0x40c719a5e410b9e4';
/**
   * FORCE_CINEMATIC_RENDERING_THIS_UPDATE
   *
   * @param {boolean} p0
   * @return {void}
   */
export const FORCE_CINEMATIC_RENDERING_THIS_UPDATE = '0x702b75dc9d3ede56';
/**
   * GET_CAM_COORD
   *
   * @param {number} cam
   * @return {Vector3}
   */
export const GET_CAM_COORD = '0x6b12f11c2a9f0344';
/**
   * GET_CAM_FOV
   *
   * @param {number} cam
   * @return {number}
   */
export const GET_CAM_FOV = '0x8101d32a0a6b0f60';
/**
   * GET_CAM_ROT
   * rotationOrder: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEulerRotationOrder
   *
   * @param {number} cam
   * @param {number} rotationOrder
   * @return {Vector3}
   */
export const GET_CAM_ROT = '0x9bf96b57254e7889';
/**
   * GET_CAM_SPLINE_PHASE
   * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
   * 
   * (returns 1.0f when no nodes has been added, reached end of non existing spline)
   *
   * @param {number} cam
   * @return {number}
   */
export const GET_CAM_SPLINE_PHASE = '0x095edcd24d90033a';
/**
   * GET_FINAL_RENDERED_CAM_COORD
   *
  
   * @return {Vector3}
   */
export const GET_FINAL_RENDERED_CAM_COORD = '0x5352e025ec2b416f';
/**
   * GET_FINAL_RENDERED_CAM_FOV
   *
  
   * @return {number}
   */
export const GET_FINAL_RENDERED_CAM_FOV = '0x04af77971e508f6a';
/**
   * GET_FINAL_RENDERED_CAM_ROT
   *
   * @param {number} rotationOrder
   * @return {Vector3}
   */
export const GET_FINAL_RENDERED_CAM_ROT = '0x602685bd85dd26ca';
/**
   * GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR
   *
  
   * @return {number}
   */
export const GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR = '0xb4132ca1b0ee1365';
/**
   * GET_GAMEPLAY_CAM_COORD
   *
  
   * @return {Vector3}
   */
export const GET_GAMEPLAY_CAM_COORD = '0x595320200b98596e';
/**
   * GET_GAMEPLAY_CAM_FOV
   *
  
   * @return {number}
   */
export const GET_GAMEPLAY_CAM_FOV = '0xf6a96e5aceec6e50';
/**
   * GET_GAMEPLAY_CAM_RELATIVE_HEADING
   *
  
   * @return {number}
   */
export const GET_GAMEPLAY_CAM_RELATIVE_HEADING = '0xc4abf536048998aa';
/**
   * GET_GAMEPLAY_CAM_RELATIVE_PITCH
   *
  
   * @return {number}
   */
export const GET_GAMEPLAY_CAM_RELATIVE_PITCH = '0x99aadebba803f827';
/**
   * GET_GAMEPLAY_CAM_ROT
   *
   * @param {number} rotationOrder
   * @return {Vector3}
   */
export const GET_GAMEPLAY_CAM_ROT = '0x0252d2b5582957a6';
/**
   * GET_LETTER_BOX_RATIO
   * More info: see HAS_LETTER_BOX
   *
  
   * @return {number}
   */
export const GET_LETTER_BOX_RATIO = '0xa2b1c7ef759a63ce';
/**
   * GET_RENDERING_CAM
   *
  
   * @return {number}
   */
export const GET_RENDERING_CAM = '0x03a8931ecc8015d6';
/**
   * HAS_LETTER_BOX
   * More info: https://en.wikipedia.org/wiki/Letterboxing_(filming)
   *
  
   * @return {boolean}
   */
export const HAS_LETTER_BOX = '0x81dcfd13cf39920e';
/**
   * INVALIDATE_CINEMATIC_VEHICLE_IDLE_MODE
   * Old name: _INVALIDATE_VEHICLE_IDLE_CAM
   *
  
   * @return {void}
   */
export const INVALIDATE_CINEMATIC_VEHICLE_IDLE_MODE = '0x634f4a0562cf19b8';
/**
   * IS_AIM_CAM_ACTIVE
   *
  
   * @return {boolean}
   */
export const IS_AIM_CAM_ACTIVE = '0x698f456fb909e077';
/**
   * IS_CAM_ACTIVE
   * Returns whether or not the passed camera handle is active.
   *
   * @param {number} cam
   * @return {boolean}
   */
export const IS_CAM_ACTIVE = '0x63efcc7e1810b8e6';
/**
   * IS_CAM_INTERPOLATING
   *
   * @param {number} cam
   * @return {boolean}
   */
export const IS_CAM_INTERPOLATING = '0x578f8f1caa17bd2b';
/**
   * IS_CAM_RENDERING
   *
   * @param {number} cam
   * @return {boolean}
   */
export const IS_CAM_RENDERING = '0x4415f8a6c536d39f';
/**
   * IS_CAM_SHAKING
   *
   * @param {number} cam
   * @return {boolean}
   */
export const IS_CAM_SHAKING = '0x2eeb402bd7320159';
/**
   * IS_CINEMATIC_CAM_RENDERING
   *
  
   * @return {boolean}
   */
export const IS_CINEMATIC_CAM_RENDERING = '0xbf7c780731aadbf8';
/**
   * IS_DEATH_FAIL_CAMERA_RUNNING
   *
  
   * @return {boolean}
   */
export const IS_DEATH_FAIL_CAMERA_RUNNING = '0x139efb0a71dd9011';
/**
   * IS_FIRST_PERSON_AIM_CAM_ACTIVE
   *
  
   * @return {boolean}
   */
export const IS_FIRST_PERSON_AIM_CAM_ACTIVE = '0xf63134c54b6ec212';
/**
   * IS_FIRST_PERSON_CAMERA_ACTIVE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {boolean}
   */
export const IS_FIRST_PERSON_CAMERA_ACTIVE = '0xa24c1d341c6e0d53';
/**
   * IS_FOLLOW_VEHICLE_CAM_ACTIVE
   *
  
   * @return {boolean}
   */
export const IS_FOLLOW_VEHICLE_CAM_ACTIVE = '0xa40c2f51fb589e9a';
/**
   * IS_GAMEPLAY_CAM_LOOKING_BEHIND
   *
  
   * @return {boolean}
   */
export const IS_GAMEPLAY_CAM_LOOKING_BEHIND = '0x8fe0d24ffd04d5a2';
/**
   * IS_GAMEPLAY_CAM_RENDERING
   *
  
   * @return {boolean}
   */
export const IS_GAMEPLAY_CAM_RENDERING = '0x8660ea714834e412';
/**
   * IS_GAMEPLAY_CAM_SHAKING
   *
  
   * @return {boolean}
   */
export const IS_GAMEPLAY_CAM_SHAKING = '0xea4c5f4aa0a4dbef';
/**
   * IS_GAMEPLAY_HINT_ACTIVE
   *
  
   * @return {boolean}
   */
export const IS_GAMEPLAY_HINT_ACTIVE = '0x2e04ab5fee042d4a';
/**
   * IS_INTERPOLATING_FROM_SCRIPT_CAMS
   *
  
   * @return {boolean}
   */
export const IS_INTERPOLATING_FROM_SCRIPT_CAMS = '0x251241caec707106';
/**
   * IS_INTERPOLATING_TO_SCRIPT_CAMS
   *
  
   * @return {boolean}
   */
export const IS_INTERPOLATING_TO_SCRIPT_CAMS = '0x43ab9d5a7d415478';
/**
   * IS_SCREEN_FADED_IN
   *
  
   * @return {boolean}
   */
export const IS_SCREEN_FADED_IN = '0x37f9a426fbcf4af2';
/**
   * IS_SCREEN_FADED_OUT
   *
  
   * @return {boolean}
   */
export const IS_SCREEN_FADED_OUT = '0xf5472c80df2ff847';
/**
   * IS_SCREEN_FADING_IN
   *
  
   * @return {boolean}
   */
export const IS_SCREEN_FADING_IN = '0x0ceccc63ffa2ef24';
/**
   * IS_SCREEN_FADING_OUT
   *
  
   * @return {boolean}
   */
export const IS_SCREEN_FADING_OUT = '0x02f39befe7b88d00';
/**
   * IS_SPHERE_VISIBLE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {boolean}
   */
export const IS_SPHERE_VISIBLE = '0x2e941b5ffa2989c6';
/**
   * PLAY_CAM_ANIM
   *
   * @param {number} cam
   * @param {string | number} animName
   * @param {string | number} animDictionary
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} animFlags
   * @param {number} rotOrder
   * @return {boolean}
   */
export const PLAY_CAM_ANIM = '0xa263ddf694d563f6';
/**
   * POINT_CAM_AT_COORD
   *
   * @param {number} cam
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const POINT_CAM_AT_COORD = '0x948b39341c3a40c2';
/**
   * POINT_CAM_AT_ENTITY
   *
   * @param {number} cam
   * @param {number} entity
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {boolean} p5
   * @return {void}
   */
export const POINT_CAM_AT_ENTITY = '0xfc2867e6074d3a61';
/**
   * RENDER_SCRIPT_CAMS
   * ease - smooth transition between the camera's positions
   * easeTime - Time in milliseconds for the transition to happen
   * 
   * If you have created a script (rendering) camera, and want to go back to the 
   * character (gameplay) camera, call this native with render set to FALSE.
   * Setting ease to TRUE will smooth the transition.
   *
   * @param {boolean} render
   * @param {boolean} ease
   * @param {number} easeTime
   * @param {boolean} p3
   * @param {boolean} p4
   * @param {number} p5
   * @return {void}
   */
export const RENDER_SCRIPT_CAMS = '0x33281167e4942e4f';
/**
   * SET_CAM_ACTIVE
   * Set camera as active/inactive.
   *
   * @param {number} cam
   * @param {boolean} active
   * @return {void}
   */
export const SET_CAM_ACTIVE = '0x87295bca613800c8';
/**
   * SET_CAM_ACTIVE_WITH_INTERP
   *
   * @param {number} camTo
   * @param {number} camFrom
   * @param {number} duration
   * @param {number} easeLocation
   * @param {number} easeRotation
   * @return {void}
   */
export const SET_CAM_ACTIVE_WITH_INTERP = '0x8b15ae2987c1ac8f';
/**
   * SET_CAM_AFFECTS_AIMING
   * Allows you to aim and shoot at the direction the camera is facing.
   *
   * @param {number} cam
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_CAM_AFFECTS_AIMING = '0x3cb9e8bde5e76f33';
/**
   * SET_CAM_CONTROLS_MINI_MAP_HEADING
   *
   * @param {number} cam
   * @param {boolean} p1
   * @return {void}
   */
export const SET_CAM_CONTROLS_MINI_MAP_HEADING = '0x1b8f3ce5a6001298';
/**
   * SET_CAM_COORD
   * Sets the position of the cam.
   *
   * @param {number} cam
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @return {void}
   */
export const SET_CAM_COORD = '0xf9ee7d419ee49de6';
/**
   * SET_CAM_FAR_CLIP
   *
   * @param {number} cam
   * @param {number} farClip
   * @return {void}
   */
export const SET_CAM_FAR_CLIP = '0x5e32817bf6302111';
/**
   * SET_CAM_FOV
   * Sets the field of view of the cam.
   * 
   * Min: 1.0f
   * Max: 130.0f
   *
   * @param {number} cam
   * @param {number} fieldOfView
   * @return {void}
   */
export const SET_CAM_FOV = '0x27666e5988d9d429';
/**
   * SET_CAM_MOTION_BLUR_STRENGTH
   *
   * @param {number} cam
   * @param {number} strength
   * @return {void}
   */
export const SET_CAM_MOTION_BLUR_STRENGTH = '0x45fd891364181f9e';
/**
   * SET_CAM_NEAR_CLIP
   *
   * @param {number} cam
   * @param {number} nearClip
   * @return {void}
   */
export const SET_CAM_NEAR_CLIP = '0xa924028272a61364';
/**
   * SET_CAM_PARAMS
   *
   * @param {number} cam
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} fieldOfView
   * @param {any} p8
   * @param {number} p9
   * @param {number} p10
   * @param {number} p11
   * @param {any} p12
   * @param {any} p13
   * @return {void}
   */
export const SET_CAM_PARAMS = '0xa47bbfffb83d4d0a';
/**
   * SET_CAM_ROT
   * Sets the rotation of the cam.
   *
   * @param {number} cam
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} rotationOrder
   * @return {void}
   */
export const SET_CAM_ROT = '0x63dfa6810ad78719';
/**
   * SET_CAM_SPLINE_DURATION
   *
   * @param {number} cam
   * @param {number} timeDuration
   * @return {void}
   */
export const SET_CAM_SPLINE_DURATION = '0xff6311652ca91015';
/**
   * SET_CAM_SPLINE_PHASE
   *
   * @param {number} cam
   * @param {number} p1
   * @return {void}
   */
export const SET_CAM_SPLINE_PHASE = '0xf1898a68e7c15636';
/**
   * SET_CAM_SPLINE_SMOOTHING_STYLE
   *
   * @param {number} cam
   * @param {number} smoothingStyle
   * @return {void}
   */
export const SET_CAM_SPLINE_SMOOTHING_STYLE = '0x84b3645618e726b0';
/**
   * SET_CINEMATIC_BUTTON_ACTIVE
   *
   * @param {boolean} p0
   * @return {void}
   */
export const SET_CINEMATIC_BUTTON_ACTIVE = '0xb90411f480457a6c';
/**
   * SET_CINEMATIC_MODE_ACTIVE
   *
   * @param {boolean} p0
   * @return {void}
   */
export const SET_CINEMATIC_MODE_ACTIVE = '0xce7a90b160f75046';
/**
   * SET_FIRST_PERSON_AIM_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const SET_FIRST_PERSON_AIM_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE = '0x05bd5e4088b30a66';
/**
   * SET_FIRST_PERSON_AIM_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE
   * Old name: _SET_FIRST_PERSON_CAM_PITCH_RANGE
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const SET_FIRST_PERSON_AIM_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE = '0x715b7f5e8bed32a2';
/**
   * SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE
   * Forces gameplay cam to specified ped as if you were the ped or spectating it
   *
   * @param {number} ped
   * @return {void}
   */
export const SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE = '0x82e41d6ade924fca';
/**
   * SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE
   * Old name: _DISABLE_CAM_COLLISION_FOR_ENTITY
   *
   * @param {number} entity
   * @return {void}
   */
export const SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE = '0xd904f75dbd7ab865';
/**
   * SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE
   *
   * @param {number} p0
   * @return {void}
   */
export const SET_GAMEPLAY_CAM_MAX_MOTION_BLUR_STRENGTH_THIS_UPDATE = '0x8459b3e64257b21d';
/**
   * SET_GAMEPLAY_CAM_RELATIVE_HEADING
   * Sets the camera position relative to heading in float from -360 to +360.
   * 
   * Heading is always 0 in aiming camera.
   *
   * @param {number} heading
   * @param {number} p1
   * @return {void}
   */
export const SET_GAMEPLAY_CAM_RELATIVE_HEADING = '0x5d1eb123eac5d071';
/**
   * SET_GAMEPLAY_CAM_RELATIVE_PITCH
   * Sets the camera pitch.
   * 
   * Parameters:
   * x = pitches the camera on the x axis.
   * Value2 = always seems to be hex 0x3F800000 (1.000000 float).
   *
   * @param {number} x
   * @param {number} value2
   * @return {void}
   */
export const SET_GAMEPLAY_CAM_RELATIVE_PITCH = '0xfb760af4f537b8bf';
/**
   * SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE
   * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake.
   *
   * @param {number} amplitude
   * @return {void}
   */
export const SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE = '0x570e35f5c4a44838';
/**
   * SET_GAMEPLAY_COORD_HINT
   * Hash used in finale1.ysc: 1726668277
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} duration
   * @param {number} blendOutDuration
   * @param {number} blendInDuration
   * @param {number} p6
   * @return {void}
   */
export const SET_GAMEPLAY_COORD_HINT = '0xfa33b8c69a4a6a0f';
/**
   * SET_GAMEPLAY_ENTITY_HINT
   * p6 & p7 - possibly length or time
   *
   * @param {number} entity
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {boolean} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {any} p8
   * @return {void}
   */
export const SET_GAMEPLAY_ENTITY_HINT = '0xd1f7f32640adfd12';
/**
   * SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET
   *
   * @param {number} p0
   * @return {void}
   */
export const SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET = '0x421192a2da48fd01';
/**
   * SET_GAMEPLAY_HINT_CAMERA_RELATIVE_SIDE_OFFSET
   * Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETX
   *
   * @param {number} p0
   * @return {void}
   */
export const SET_GAMEPLAY_HINT_CAMERA_RELATIVE_SIDE_OFFSET = '0xf86b6f93727c59c9';
/**
   * SET_GAMEPLAY_HINT_CAMERA_RELATIVE_VERTICAL_OFFSET
   * Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETY
   *
   * @param {number} p0
   * @return {void}
   */
export const SET_GAMEPLAY_HINT_CAMERA_RELATIVE_VERTICAL_OFFSET = '0x29e74f819150cc32';
/**
   * SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR
   *
   * @param {number} p0
   * @return {void}
   */
export const SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR = '0xdddc54181868f81f';
/**
   * SET_GAMEPLAY_HINT_FOV
   *
   * @param {number} fov
   * @return {void}
   */
export const SET_GAMEPLAY_HINT_FOV = '0x661e58bc6f00a49a';
/**
   * SET_GAMEPLAY_OBJECT_HINT
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {boolean} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const SET_GAMEPLAY_OBJECT_HINT = '0xc40551d65f2bf297';
/**
   * SET_GAMEPLAY_PED_HINT
   *
   * @param {number} p0
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {boolean} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const SET_GAMEPLAY_PED_HINT = '0x90fb951648851733';
/**
   * SET_GAMEPLAY_VEHICLE_HINT
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {boolean} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const SET_GAMEPLAY_VEHICLE_HINT = '0xe2b2bb7dac280515';
/**
   * SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE
   * Forces gameplay cam to specified vehicle as if you were in it
   *
   * @param {number} vehicle
   * @param {number} p1
   * @return {void}
   */
export const SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE = '0xfa1d5e8d1c3ccd67';
/**
   * SET_SCRIPTED_CAMERA_IS_FIRST_PERSON_THIS_FRAME
   *
   * @param {boolean} p0
   * @return {void}
   */
export const SET_SCRIPTED_CAMERA_IS_FIRST_PERSON_THIS_FRAME = '0x1dd95a8d6b24a0c9';
/**
   * SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE
   * Old name: _ANIMATE_GAMEPLAY_CAM_ZOOM
   *
   * @param {number} p0
   * @param {number} distance
   * @return {void}
   */
export const SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE = '0x2126c740a4ac370b';
/**
   * SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE
   * minimum: Degrees between -180f and 180f.
   * maximum: Degrees between -180f and 180f.
   * 
   * Clamps the gameplay camera's current yaw.
   * 
   * Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
   * 
   * Old name: _CLAMP_GAMEPLAY_CAM_YAW
   *
   * @param {number} minimum
   * @param {number} maximum
   * @return {void}
   */
export const SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE = '0x14f3947318ca8ad2';
/**
   * SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE
   * minimum: Degrees between -90f and 90f.
   * maximum: Degrees between -90f and 90f.
   * 
   * Clamps the gameplay camera's current pitch.
   * 
   * Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
   * 
   * Old name: _CLAMP_GAMEPLAY_CAM_PITCH
   *
   * @param {number} minimum
   * @param {number} maximum
   * @return {void}
   */
export const SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE = '0x326c7aa308f3df6a';
/**
   * SET_WIDESCREEN_BORDERS
   *
   * @param {boolean} p0
   * @param {number} p1
   * @return {void}
   */
export const SET_WIDESCREEN_BORDERS = '0xd7f4d54cf80afa34';
/**
   * SHAKE_CAM
   *
   * @param {number} cam
   * @param {string | number} type
   * @param {number} amplitude
   * @return {void}
   */
export const SHAKE_CAM = '0xf9a7bcf5d050d4e7';
/**
   * SHAKE_GAMEPLAY_CAM
   *
   * @param {string | number} shakeName
   * @param {number} intensity
   * @return {void}
   */
export const SHAKE_GAMEPLAY_CAM = '0xd9b31b4650520529';
/**
   * STOP_CAM_POINTING
   *
   * @param {number} cam
   * @return {void}
   */
export const STOP_CAM_POINTING = '0xca1b30a3357c71f1';
/**
   * STOP_CAM_SHAKING
   *
   * @param {number} cam
   * @param {boolean} p1
   * @return {void}
   */
export const STOP_CAM_SHAKING = '0xb78cc4b4706614b0';
/**
   * STOP_CODE_GAMEPLAY_HINT
   *
   * @param {boolean} p0
   * @return {void}
   */
export const STOP_CODE_GAMEPLAY_HINT = '0x93759a83d0d844e7';
/**
   * STOP_GAMEPLAY_CAM_SHAKING
   *
   * @param {boolean} p0
   * @return {void}
   */
export const STOP_GAMEPLAY_CAM_SHAKING = '0xe0de43d290fb65f9';
/**
   * STOP_GAMEPLAY_HINT
   *
   * @param {boolean} p0
   * @return {void}
   */
export const STOP_GAMEPLAY_HINT = '0x1bcec33d54cfca8a';
/**
   * STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP
   * This native makes the gameplay camera zoom into first person/third person with a special effect.
   * blendBackSmoothingType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eBlendBackSmoothing
   *
   * @param {boolean} render
   * @param {number} distance
   * @param {number} blendBackSmoothingType
   * @param {boolean} p3
   * @param {boolean} p4
   * @param {boolean} p5
   * @return {void}
   */
export const STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP = '0x8c7c7ff7cf0e5153';
/**
   * _0x0060B31968E60E41
   * shakeNames in script_rel: CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, POV_DRUNK_SHAKE, DRUNK_SHAKE, MINIGAME_TRAIN_SHAKE
   * _IS_GAMEPLAY_*
   *
   * @param {string | number} shakeName
   * @return {boolean}
   */
export const _0x0060B31968E60E41 = '0x0060b31968e60e41';
/**
   * _0x04084490CC302CFB
   *
  
   * @return {void}
   */
export const _0x04084490CC302CFB = '0x04084490cc302cfb';
/**
   * _0x06557F6D96C86881
   *
  
   * @return {void}
   */
export const _0x06557F6D96C86881 = '0x06557f6d96c86881';
/**
   * _SET_GAMEPLAY_CAM_PARAMS_THIS_UPDATE
   * Not official name
   * This native allows to move the gameplay cam with the given speed, enableSlide will allow to move the cam to the slideOffset, enableZoom will allow to move the cam to the zoomOffset. 
   * 
   * EXAMPLE:
   * Citizen.InvokeNative(0x066167c63111d8cf,1.0, true, -1.0, true, 2.0)
   *
   * @param {number} camSpeed
   * @param {boolean} enableSlide
   * @param {number} slideOffset
   * @param {boolean} enableZoom
   * @param {number} zoomOffset
   * @return {void}
   */
export const _SET_GAMEPLAY_CAM_PARAMS_THIS_UPDATE = '0x066167c63111d8cf';
/**
   * _0x0961B089947BA6D0
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0961B089947BA6D0 = '0x0961b089947ba6d0';
/**
   * _0x0F1FFEF5D54AE832
   * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
   * _DISABLE_*
   *
  
   * @return {void}
   */
export const _0x0F1FFEF5D54AE832 = '0x0f1ffef5d54ae832';
/**
   * _0x0FF7125F07DEB84F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0FF7125F07DEB84F = '0x0ff7125f07deb84f';
/**
   * _0x1204EB53A5FBC63D
   * Used for DUELING_LOCK_CAMERA_CONTROLS_THIS_FRAME: Disabling look/aim controls
   * _IS_SC(REEN_)* (?)
   *
  
   * @return {boolean}
   */
export const _0x1204EB53A5FBC63D = '0x1204eb53a5fbc63d';
/**
   * _0x14C4A49E36C29E49
   *
  
   * @return {any}
   */
export const _0x14C4A49E36C29E49 = '0x14c4a49e36c29e49';
/**
   * _0x16E9ABDD34DDD931
   *
  
   * @return {void}
   */
export const _0x16E9ABDD34DDD931 = '0x16e9abdd34ddd931';
/**
   * _0x1811A02277A9E49D
   *
  
   * @return {boolean}
   */
export const _0x1811A02277A9E49D = '0x1811a02277a9e49d';
/**
   * _0x18C3DFAC458783BB
   *
  
   * @return {void}
   */
export const _0x18C3DFAC458783BB = '0x18c3dfac458783bb';
/**
   * _0x190F7DA1AC09A8EF
   *
  
   * @return {any}
   */
export const _0x190F7DA1AC09A8EF = '0x190f7da1ac09a8ef';
/**
   * _0x1D931B7CC0EE3956
   *
   * @param {string | number} dictionary
   * @param {string | number} shotName
   * @param {string | number} cameraName
   * @return {boolean}
   */
export const _0x1D931B7CC0EE3956 = '0x1d931b7cc0ee3956';
/**
   * _0x1D9F72DD4FD9A9D7
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x1D9F72DD4FD9A9D7 = '0x1d9f72dd4fd9a9d7';
/**
   * _0x1F6EBD94680252CE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x1F6EBD94680252CE = '0x1f6ebd94680252ce';
/**
   * _0x1FC6C727D30FFDDE
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x1FC6C727D30FFDDE = '0x1fc6c727d30ffdde';
/**
   * _0x29E6655DF3590B0D
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x29E6655DF3590B0D = '0x29e6655df3590b0d';
/**
   * _0x2AB7C81B3F70570C
   *
  
   * @return {any}
   */
export const _0x2AB7C81B3F70570C = '0x2ab7c81b3f70570c';
/**
   * _0x2DD3149DC34A3F4C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x2DD3149DC34A3F4C = '0x2dd3149dc34a3f4c';
/**
   * _0x39073DA4EDDBC91D
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x39073DA4EDDBC91D = '0x39073da4eddbc91d';
/**
   * _0x3B8E3AD9677CE12B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x3B8E3AD9677CE12B = '0x3b8e3ad9677ce12b';
/**
   * _0x3C486E334520579D
   *
  
   * @return {void}
   */
export const _0x3C486E334520579D = '0x3c486e334520579d';
/**
   * _0x3C8F74E8FE751614
   *
  
   * @return {void}
   */
export const _0x3C8F74E8FE751614 = '0x3c8f74e8fe751614';
/**
   * _0x4138EE36BC3DC0A7
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x4138EE36BC3DC0A7 = '0x4138ee36bc3dc0a7';
/**
   * _0x41E452A3C580D1A7
   *
  
   * @return {void}
   */
export const _0x41E452A3C580D1A7 = '0x41e452a3c580d1a7';
/**
   * _0x450769C833D58844
   *
  
   * @return {any}
   */
export const _0x450769C833D58844 = '0x450769c833d58844';
/**
   * _0x465F04F68AD38197
   *
   * @param {string | number} dictionary
   * @param {string | number} shotName
   * @param {number} duration
   * @return {any}
   */
export const _0x465F04F68AD38197 = '0x465f04f68ad38197';
/**
   * _0x4D2F46D1B28D90FB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x4D2F46D1B28D90FB = '0x4d2f46d1b28d90fb';
/**
   * _0x5060FA977CEA4455
   *
  
   * @return {any}
   */
export const _0x5060FA977CEA4455 = '0x5060fa977cea4455';
/**
   * _0x5B637D6F3B67716A
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x5B637D6F3B67716A = '0x5b637d6f3b67716a';
/**
   * _0x6072B7420A83A03F
   *
  
   * @return {any}
   */
export const _0x6072B7420A83A03F = '0x6072b7420a83a03f';
/**
   * _0x632BE8D84846FA56
   * Zooms in the gameplay camera to the next zoom level?
   * USE_* - WAS_*
   *
  
   * @return {void}
   */
export const _0x632BE8D84846FA56 = '0x632be8d84846fa56';
/**
   * _0x63E5841A9264D016
   * Maintains the death camera after respawn
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x63E5841A9264D016 = '0x63e5841a9264d016';
/**
   * _0x641092322A8852AB
   *
  
   * @return {void}
   */
export const _0x641092322A8852AB = '0x641092322a8852ab';
/**
   * _0x6519238858AF5479
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6519238858AF5479 = '0x6519238858af5479';
/**
   * _0x6CAB0BA160B168D2
   *
  
   * @return {void}
   */
export const _0x6CAB0BA160B168D2 = '0x6cab0ba160b168d2';
/**
   * _0x6DFD37E586D4F44F
   *
  
   * @return {any}
   */
export const _0x6DFD37E586D4F44F = '0x6dfd37e586d4f44f';
/**
   * _0x70A6658D476C6187
   *
  
   * @return {void}
   */
export const _0x70A6658D476C6187 = '0x70a6658d476c6187';
/**
   * _FORCE_THIRD_PERSON_CLOSE_THIS_FRAME
   * Forces camera position to closest 3rd person
   *
  
   * @return {void}
   */
export const _FORCE_THIRD_PERSON_CLOSE_THIS_FRAME = '0x718c6ecf5e8cbdd4';
/**
   * _0x71D71E08A7ED5BD7
   * Zooms in the third person camera closer to ground level.
   * Must be called every frame to interpolate.
   * Pass false to reset.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x71D71E08A7ED5BD7 = '0x71d71e08a7ed5bd7';
/**
   * _0x728491FB3DFFEF99
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x728491FB3DFFEF99 = '0x728491fb3dffef99';
/**
   * _0x73FF6BE63DC18819
   *
  
   * @return {any}
   */
export const _0x73FF6BE63DC18819 = '0x73ff6be63dc18819';
/**
   * _0x796085220ADCC847
   *
  
   * @return {any}
   */
export const _0x796085220ADCC847 = '0x796085220adcc847';
/**
   * _0x7CE9DC58E3E4755F
   *
  
   * @return {any}
   */
export const _0x7CE9DC58E3E4755F = '0x7ce9dc58e3e4755f';
/**
   * _0x7E40A01B11398FCB
   *
  
   * @return {void}
   */
export const _0x7E40A01B11398FCB = '0x7e40a01b11398fcb';
/**
   * _0x80D7A3E39B120BC4
   *
  
   * @return {any}
   */
export const _0x80D7A3E39B120BC4 = '0x80d7a3e39b120bc4';
/**
   * _0x8505E05FC8822843
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x8505E05FC8822843 = '0x8505e05fc8822843';
/**
   * _0x88544C0E3291DCAE
   * UPDATE_PLAYER_PLAYING_STATE - Releasing Lasso Hint Cam
   * Return type char in ida
   * _SET_GAMEPLAY_HINT_*
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x88544C0E3291DCAE = '0x88544c0e3291dcae';
/**
   * _0x8B1A5FE7E41E52B2
   *
  
   * @return {any}
   */
export const _0x8B1A5FE7E41E52B2 = '0x8b1a5fe7e41e52b2';
/**
   * _0x8E036B41C37D0E5F
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x8E036B41C37D0E5F = '0x8e036b41c37d0e5f';
/**
   * _0x975F6EBB62632FE3
   * _IS_SCRIPTED_S*
   *
  
   * @return {boolean}
   */
export const _0x975F6EBB62632FE3 = '0x975f6ebb62632fe3';
/**
   * _0x9AC65A36D3C0C189
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9AC65A36D3C0C189 = '0x9ac65a36d3c0c189';
/**
   * _0xA54D643D0773EB65
   *
   * @param {string | number} dictionary
   * @param {string | number} shotName
   * @param {number} duration
   * @return {void}
   */
export const _0xA54D643D0773EB65 = '0xa54d643d0773eb65';
/**
   * _0xA8BA2E0204D8486F
   * NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
   * _DISABLE_*
   *
  
   * @return {void}
   */
export const _0xA8BA2E0204D8486F = '0xa8ba2e0204d8486f';
/**
   * _0xAC77757C05DE9E5A
   *
   * @param {string | number} cameraDictionary
   * @return {void}
   */
export const _0xAC77757C05DE9E5A = '0xac77757c05de9e5a';
/**
   * _0xB6A80E1E3A5444F1
   *
  
   * @return {any}
   */
export const _0xB6A80E1E3A5444F1 = '0xb6a80e1e3a5444f1';
/**
   * _0xB85C13E0BF1F2A1C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xB85C13E0BF1F2A1C = '0xb85c13e0bf1f2a1c';
/**
   * _0xC205B3C54C6A4E37
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC205B3C54C6A4E37 = '0xc205b3c54c6a4e37';
/**
   * _0xC252C0CC969AF79A
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC252C0CC969AF79A = '0xc252c0cc969af79a';
/**
   * _0xC285FD21294A1C49
   *
   * @param {string | number} cameraDictionary
   * @return {boolean}
   */
export const _0xC285FD21294A1C49 = '0xc285fd21294a1c49';
/**
   * _0xC3742F1FDF0A6824
   * Camera will be or is running
   *
  
   * @return {void}
   */
export const _0xC3742F1FDF0A6824 = '0xc3742f1fdf0a6824';
/**
   * _0xC3AEBB276825A359
   *
   * @param {string | number} dictionary
   * @param {string | number} shotName
   * @param {number} duration
   * @return {boolean}
   */
export const _0xC3AEBB276825A359 = '0xc3aebb276825a359';
/**
   * _0xC3E9E5D4F413B773
   * shakeName: REINFORCED_LASSO_STRUGGLE_SHAKE
   * _RES*
   *
   * @param {string | number} shakeName
   * @param {number} intensity
   * @return {void}
   */
export const _0xC3E9E5D4F413B773 = '0xc3e9e5d4f413b773';
/**
   * _0xCF69EA05CD9C33C9
   *
  
   * @return {void}
   */
export const _0xCF69EA05CD9C33C9 = '0xcf69ea05cd9c33c9';
/**
   * _0xDB382FE20C2DA222
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xDB382FE20C2DA222 = '0xdb382fe20c2da222';
/**
   * _0xDC62CD70658E7A02
   *
  
   * @return {any}
   */
export const _0xDC62CD70658E7A02 = '0xdc62cd70658e7a02';
/**
   * _0xDF7F5BE9150E47E4
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xDF7F5BE9150E47E4 = '0xdf7f5be9150e47e4';
/**
   * _0xE28F73212A813E82
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xE28F73212A813E82 = '0xe28f73212a813e82';
/**
   * _0xE2BB2D6A9FE2ECDE
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE2BB2D6A9FE2ECDE = '0xe2bb2d6a9fe2ecde';
/**
   * _0xE4B7945EF4F1BFB2
   *
   * @param {number} cam
   * @param {DataView} args
   * @return {void}
   */
export const _0xE4B7945EF4F1BFB2 = '0xe4b7945ef4f1bfb2';
/**
   * _0xE6F364DE6C2FDEFE
   *
  
   * @return {void}
   */
export const _0xE6F364DE6C2FDEFE = '0xe6f364de6c2fdefe';
/**
   * _0xEA113BF9B0C0C5D7
   *
   * @param {string | number} dictionary
   * @param {string | number} shotName
   * @param {number} duration
   * @return {any}
   */
export const _0xEA113BF9B0C0C5D7 = '0xea113bf9b0c0c5d7';
/**
   * _0xEF9A3132A0AA6B19
   *
  
   * @return {any}
   */
export const _0xEF9A3132A0AA6B19 = '0xef9a3132a0aa6b19';
/**
   * _0xF1A6FEEDF3776EF9
   *
  
   * @return {void}
   */
export const _0xF1A6FEEDF3776EF9 = '0xf1a6feedf3776ef9';
/**
   * _0xF48664E9C83825E3
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xF48664E9C83825E3 = '0xf48664e9c83825e3';
/**
   * _0xF824530B612FE0CE
   *
  
   * @return {any}
   */
export const _0xF824530B612FE0CE = '0xf824530b612fe0ce';
/**
   * _0xFC3F638BE2B6BB02
   *
  
   * @return {void}
   */
export const _0xFC3F638BE2B6BB02 = '0xfc3f638be2b6bb02';
/**
   * _0xFEB8646818294C75
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xFEB8646818294C75 = '0xfeb8646818294c75';
/**
   * _0xFEFDDC6E8FDF8A75
   * _SET_GAMEPLAY_P* - _SET_GAMEPLAY_V*
   *
   * @param {string | number} shakeName
   * @param {number} intensity
   * @return {void}
   */
export const _0xFEFDDC6E8FDF8A75 = '0xfefddc6e8fdf8a75';
/**
   * _CAM_CREATE
   *
   * @param {string | number} cameraDictionary
   * @return {void}
   */
export const _CAM_CREATE = '0xb8b207c34285e978';
/**
   * _CAM_CREATE_2
   *
   * @param {string | number} cameraDictionary
   * @return {void}
   */
export const _CAM_CREATE_2 = '0x7b0279170961a73f';
/**
   * _CAM_DESTROY
   *
   * @param {string | number} cameraDictionary
   * @return {void}
   */
export const _CAM_DESTROY = '0x0a5a4f1979abb40e';
/**
   * _CINEMATIC_LOCATION_SET_LOCATION_AND_ROTATION
   *
   * @param {string | number} name
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @return {void}
   */
export const _CINEMATIC_LOCATION_SET_LOCATION_AND_ROTATION = '0x0e94c95ec3185fa9';
/**
   * _CINEMATIC_LOCATION_TRIGGER_SCRIPTED_SHOT_EVENT_2
   *
   * @param {string | number} dictionary
   * @param {string | number} shotName
   * @param {number} duration
   * @return {void}
   */
export const _CINEMATIC_LOCATION_TRIGGER_SCRIPTED_SHOT_EVENT_2 = '0xbc016635d6a73b31';
/**
   * _CREATE_KILL_CAM
   * Creates Kill Cam for specified Ped Handle
   *
   * @param {number} ped
   * @return {void}
   */
export const _CREATE_KILL_CAM = '0x2f994cc29caa9d22';
/**
   * _DISABLE_CINEMATIC_MODE_THIS_FRAME
   *
  
   * @return {void}
   */
export const _DISABLE_CINEMATIC_MODE_THIS_FRAME = '0x8910c24b7e0046ec';
/**
   * _DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE_2
   * Does the same as 0x9C473089A934C930 (DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE)
   *
  
   * @return {void}
   */
export const _DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE_2 = '0x05ab44d906738426';
/**
   * _FORCE_CINEMATIC_DEATH_CAM_ON_PED
   * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
   * Params: targetPed = death cam focuses on it
   *
   * @param {number} targetPed
   * @return {void}
   */
export const _FORCE_CINEMATIC_DEATH_CAM_ON_PED = '0xe3639db78b3b5400';
/**
   * _FORCE_FIRST_PERSON_CAM_THIS_FRAME
   * Returns true if first person camera is active in saloon1.ysc
   *
  
   * @return {boolean}
   */
export const _FORCE_FIRST_PERSON_CAM_THIS_FRAME = '0x90da5ba5c2635416';
/**
   * _FORCE_LETTER_BOX_THIS_UPDATE
   *
  
   * @return {void}
   */
export const _FORCE_LETTER_BOX_THIS_UPDATE = '0xc64abc0676af262b';
/**
   * _FORCE_THIRD_PERSON_CAM_FAR_THIS_FRAME
   * Forces camera position to furthest 3rd person
   *
  
   * @return {void}
   */
export const _FORCE_THIRD_PERSON_CAM_FAR_THIS_FRAME = '0x1cfb749ad4317bde';
/**
   * _FORCE_THIRD_PERSON_CAM_THIS_FRAME
   * Forces camera position to second furthest 3rd person
   *
  
   * @return {void}
   */
export const _FORCE_THIRD_PERSON_CAM_THIS_FRAME = '0x8370d34bd2e60b73';
/**
   * _FREEZE_GAMEPLAY_CAM_THIS_FRAME
   *
  
   * @return {void}
   */
export const _FREEZE_GAMEPLAY_CAM_THIS_FRAME = '0x027cab2c3af27010';
/**
   * _GET_PHOTO_MODE_DOF
   *
  
   * @return {number}
   */
export const _GET_PHOTO_MODE_DOF = '0x4653a741d17f2cd0';
/**
   * _GET_PHOTO_MODE_FOCAL_LENGTH
   *
  
   * @return {number}
   */
export const _GET_PHOTO_MODE_FOCAL_LENGTH = '0x2533baffbe737e54';
/**
   * _GET_PHOTO_MODE_FOCUS_DISTANCE
   *
  
   * @return {number}
   */
export const _GET_PHOTO_MODE_FOCUS_DISTANCE = '0x18fc740ffdcd7454';
/**
   * _IS_ANIM_SCENE_CAM_ACTIVE
   * Only used in R* Script camera_photomode
   *
  
   * @return {boolean}
   */
export const _IS_ANIM_SCENE_CAM_ACTIVE = '0x20389408f0e93b9a';
/**
   * _IS_CAMERA_AVAILABLE
   *
   * @param {string | number} cameraDictionary
   * @return {boolean}
   */
export const _IS_CAMERA_AVAILABLE = '0x927b810e43e99932';
/**
   * _IS_CAM_DATA_DICT_LOADED
   *
   * @param {string | number} cameraDictionary
   * @return {boolean}
   */
export const _IS_CAM_DATA_DICT_LOADED = '0xdd0b7c5ae58f721d';
/**
   * _IS_CAM_PHOTOFX_RUNNING
   *
  
   * @return {boolean}
   */
export const _IS_CAM_PHOTOFX_RUNNING = '0xa14d5fe82bcb1d9e';
/**
   * _IS_CINEMATIC_CAM_LOCATION_LOADED
   *
   * @param {string | number} sLocationDictName
   * @return {boolean}
   */
export const _IS_CINEMATIC_CAM_LOCATION_LOADED = '0xaa235e2f2c09e952';
/**
   * _IS_CINEMATIC_CAM_LOCATION_LOADED_2
   * Checks data related to Cinematic Cam Locations, if the check fails, the location is being loaded using 0x1B3C2D961F5FC0E1.
   *
   * @param {string | number} locationDictName
   * @return {boolean}
   */
export const _IS_CINEMATIC_CAM_LOCATION_LOADED_2 = '0x595550376b7ea230';
/**
   * _IS_IN_CINEMATIC_MODE
   *
  
   * @return {boolean}
   */
export const _IS_IN_CINEMATIC_MODE = '0x74f1d22efa71fab8';
/**
   * _IS_IN_FULL_FIRST_PERSON_MODE
   * Returns true if player is in first person
   *
  
   * @return {boolean}
   */
export const _IS_IN_FULL_FIRST_PERSON_MODE = '0xd1ba66940e94c547';
/**
   * _LOAD_CAMERA_DATA_DICT
   *
   * @param {string | number} cameraDictionary
   * @return {void}
   */
export const _LOAD_CAMERA_DATA_DICT = '0x6a4d224fc7643941';
/**
   * _LOAD_CINEMATIC_CAM_LOCATION
   *
   * @param {string | number} locationDictName
   * @return {void}
   */
export const _LOAD_CINEMATIC_CAM_LOCATION = '0x1b3c2d961f5fc0e1';
/**
   * _PAUSE_CAMERA_FOCUS
   *
   * @param {number} cam
   * @param {boolean} pause
   * @return {void}
   */
export const _PAUSE_CAMERA_FOCUS = '0x9f97e85ec142255e';
/**
   * _REACTIVATE_PED_HEADSHOT_EXECUTE_SLOWCAM
   * Used to enable headshot kill replay when you headshot set ped.
   * Params: p1 seems to be 0 or 1 in R* Scripts
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _REACTIVATE_PED_HEADSHOT_EXECUTE_SLOWCAM = '0x986f7a51ee3e1f92';
/**
   * _REQUEST_LETTER_BOX_NOW
   * Creates Cinematic Black Bars (at top and bottom)
   * Disable instantly: false/false, Enable instantly: true/true
   *
   * @param {boolean} p0
   * @param {boolean} p1
   * @return {void}
   */
export const _REQUEST_LETTER_BOX_NOW = '0x69d65e89ffd72313';
/**
   * _REQUEST_LETTER_BOX_OVERTIME
   *
   * @param {number} p0
   * @param {number} p1
   * @param {boolean} p2
   * @param {number} p3
   * @param {boolean} p4
   * @param {boolean} p5
   * @return {void}
   */
export const _REQUEST_LETTER_BOX_OVERTIME = '0xe296208c273bd7f0';
/**
   * _SET_CAM_FOCUS_DISTANCE
   *
   * @param {number} cam
   * @param {number} distance
   * @return {void}
   */
export const _SET_CAM_FOCUS_DISTANCE = '0x11f32bb61b756732';
/**
   * _SET_GAMEPLAY_CAM_INITIAL_HEADING
   *
   * @param {number} camInitialHeading
   * @return {void}
   */
export const _SET_GAMEPLAY_CAM_INITIAL_HEADING = '0x6c1053c433a573cf';
/**
   * _SET_GAMEPLAY_CAM_INITIAL_PITCH
   *
   * @param {number} camInitialPitch
   * @return {void}
   */
export const _SET_GAMEPLAY_CAM_INITIAL_PITCH = '0x449995ea846d3fc2';
/**
   * _SET_GAMEPLAY_CAM_INITIAL_ZOOM
   * Used in Script Function SHOP_CAMERA_SUPPORT_START_NEW_ORBIT
   *
   * @param {number} camInitialZoom
   * @return {void}
   */
export const _SET_GAMEPLAY_CAM_INITIAL_ZOOM = '0xbcda0ba8762facb9';
/**
   * _SET_START_CINEMATIC_DEATH_CAM
   * Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
   * _SET_P* - _SET_S*
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _SET_START_CINEMATIC_DEATH_CAM = '0x6e969927cf632608';
/**
   * _START_CAMERA_ORBIT
   * [SHOP_CAMERA_SUPPORT_START_NEW_ORBIT]
   * p0: struct<32> |*256*|
   *
   * @param {DataView} p0
   * @return {void}
   */
export const _START_CAMERA_ORBIT = '0x65b205bf30c13ddb';
/**
   * _STOP_GAMEPLAY_CAM_SHAKING_WITH_NAME
   * script_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE, CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, HAND_SHAKE, MINIGAME_TRAIN_SHAKE
   * script_mp_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE
   * _STOP_GAMEPLAY_CAM* - _STOP_I*
   *
   * @param {string | number} shakeName
   * @param {boolean} p1
   * @return {void}
   */
export const _STOP_GAMEPLAY_CAM_SHAKING_WITH_NAME = '0x4285804fd65d8066';
/**
   * _TRIGGER_MISSION_FAILED_CAM
   *
  
   * @return {void}
   */
export const _TRIGGER_MISSION_FAILED_CAM = '0x9a92c06acbaf9731';
/**
   * _UNLOAD_CAMERA_DATA_DICT
   *
   * @param {string | number} cameraDictionary
   * @return {void}
   */
export const _UNLOAD_CAMERA_DATA_DICT = '0x798be43c9393632b';
/**
   * _UNLOAD_CINEMATIC_CAMERA_LOCATION
   *
   * @param {string | number} dictionaryName
   * @return {void}
   */
export const _UNLOAD_CINEMATIC_CAMERA_LOCATION = '0x2412216fcc7b4e3e';
/**
   * ADD_TO_CLOCK_TIME
   *
   * @param {number} hours
   * @param {number} minutes
   * @param {number} seconds
   * @return {void}
   */
export const ADD_TO_CLOCK_TIME = '0xab7c251c7701d336';
/**
   * ADVANCE_CLOCK_TIME_TO
   *
   * @param {number} hour
   * @param {number} minute
   * @param {number} second
   * @return {void}
   */
export const ADVANCE_CLOCK_TIME_TO = '0x0184750ae88d0b1d';
/**
   * GET_CLOCK_DAY_OF_MONTH
   *
  
   * @return {number}
   */
export const GET_CLOCK_DAY_OF_MONTH = '0xdf2fd796c54480a5';
/**
   * GET_CLOCK_DAY_OF_WEEK
   * Gets the current day of the week.
   * 
   * 0: Sunday
   * 1: Monday
   * 2: Tuesday
   * 3: Wednesday
   * 4: Thursday
   * 5: Friday
   * 6: Saturday
   *
  
   * @return {number}
   */
export const GET_CLOCK_DAY_OF_WEEK = '0x4dd02d4c7fb30076';
/**
   * GET_CLOCK_HOURS
   * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
   *
  
   * @return {number}
   */
export const GET_CLOCK_HOURS = '0xc82cf208c2b19199';
/**
   * GET_CLOCK_MINUTES
   * Gets the current ingame clock minute.
   *
  
   * @return {number}
   */
export const GET_CLOCK_MINUTES = '0x4e162231b823dbbf';
/**
   * GET_CLOCK_MONTH
   *
  
   * @return {number}
   */
export const GET_CLOCK_MONTH = '0x2d44e8fc79eab1ac';
/**
   * GET_CLOCK_SECONDS
   * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in RDR is only 48 minutes in real life.
   *
  
   * @return {number}
   */
export const GET_CLOCK_SECONDS = '0xb6101abe62b5f080';
/**
   * GET_CLOCK_YEAR
   *
  
   * @return {number}
   */
export const GET_CLOCK_YEAR = '0xe136dca28c4a48ba';
/**
   * GET_MILLISECONDS_PER_GAME_MINUTE
   *
  
   * @return {number}
   */
export const GET_MILLISECONDS_PER_GAME_MINUTE = '0xe4cb8d126501ec52';
/**
   * GET_POSIX_TIME
   *
  
   * @return {[number, number, number, number, number, number]}
   */
export const GET_POSIX_TIME = '0x90338ad4a784e455';
/**
   * PAUSE_CLOCK
   *
   * @param {boolean} toggle
   * @param {any} unused
   * @return {void}
   */
export const PAUSE_CLOCK = '0x4d1a590c92bf377e';
/**
   * SET_CLOCK_DATE
   *
   * @param {number} day
   * @param {number} month
   * @param {number} year
   * @return {void}
   */
export const SET_CLOCK_DATE = '0x02ad3092562941e2';
/**
   * SET_CLOCK_TIME
   * SET_CLOCK_TIME(12, 34, 56);
   *
   * @param {number} hour
   * @param {number} minute
   * @param {number} second
   * @return {void}
   */
export const SET_CLOCK_TIME = '0x3a52c59ffb2deed8';
/**
   * _ADD_TIME_TO_DATE_TIME
   *
   * @param {DataView} inDateTime
   * @param {DataView} timeToAdd
   * @param {DataView} outDateTime
   * @return {void}
   */
export const _ADD_TIME_TO_DATE_TIME = '0x28eeace9b43d9597';
/**
   * _GET_POSIX_TIME_STRUCT
   * Same as GET_POSIX_TIME except that it takes a single pointer to a struct.
   *
   * @param {DataView} outTime
   * @return {void}
   */
export const _GET_POSIX_TIME_STRUCT = '0x86a68e84e5884951';
/**
   * _GET_SECONDS_SINCE_BASE_YEAR
   * Base year is 1898.
   *
  
   * @return {number}
   */
export const _GET_SECONDS_SINCE_BASE_YEAR = '0x78fd8be812e436b2';
/**
   * _PAUSE_CLOCK_THIS_FRAME
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _PAUSE_CLOCK_THIS_FRAME = '0x568d998a9ff96774';
/**
   * _SET_MILLISECONDS_PER_GAME_MINUTE
   *
   * @param {number} ms
   * @return {void}
   */
export const _SET_MILLISECONDS_PER_GAME_MINUTE = '0x04eedb3848dacf68';
/**
   * COLLECTABLE_CATEGORY_SET_HAS_RECEIVED_LIST
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const COLLECTABLE_CATEGORY_SET_HAS_RECEIVED_LIST = '0x0b6d275d2f242e17';
/**
   * COLLECTABLE_GET_CATEGORY_ITEM_SET_BUY_AWARD
   * collectableCategory: ANTIQUE_BOTTLES, BIRD_EGGS, ARROWHEADS, FAMILY_HEIRLOOMS, WILD_FLOWERS, COINS, LOST_JEWELRY_RINGS, LOST_JEWELRY_BRACELETS, LOST_JEWELRY_EARRINGS, LOST_JEWELRY_NECKLACES, TAROT_CARDS_CUPS, TAROT_CARDS_PENTACLES, TAROT_CARDS_SWORDS, TAROT_CARDS_WANDS, FOSSILS_COMMON, FOSSILS_UNCOMMON, FOSSILS_RARE
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {number}
   */
export const COLLECTABLE_GET_CATEGORY_ITEM_SET_BUY_AWARD = '0xcc644bc1dd655269';
/**
   * _0x33825A7388A6B9F6
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {number}
   */
export const _0x33825A7388A6B9F6 = '0x33825a7388a6b9f6';
/**
   * _0x3FD91F1A148A0468
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {any}
   */
export const _0x3FD91F1A148A0468 = '0x3fd91f1a148a0468';
/**
   * _0x61BEFBA3CE7A3BC8
   * Params: collectableCategory = WEEKLY_COLLECTABLES
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {boolean}
   */
export const _0x61BEFBA3CE7A3BC8 = '0x61befba3ce7a3bc8';
/**
   * _0x6BAB7ACED1017204
   * Params: collectableCategory = WEEKLY_COLLECTABLES
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {boolean}
   */
export const _0x6BAB7ACED1017204 = '0x6bab7aced1017204';
/**
   * _0x755901C7598B97BC
   * Returns p2 (index?) for 0xB9020EC89C07DF04
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {number}
   */
export const _0x755901C7598B97BC = '0x755901c7598b97bc';
/**
   * _0x775FA1FC87666847
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {any}
   */
export const _0x775FA1FC87666847 = '0x775fa1fc87666847';
/**
   * _0x93F2E7B5DB85657B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x93F2E7B5DB85657B = '0x93f2e7b5db85657b';
/**
   * _0x9ADEE485726025D4
   * Params: collectableCategory = WEEKLY_COLLECTABLES
   *
   * @param {number} collectableCategory
   * @return {number}
   */
export const _0x9ADEE485726025D4 = '0x9adee485726025d4';
/**
   * _0xB9020EC89C07DF04
   * Accepts more hashes than 0xCC644BC1DD655269
   * Such as: CAROLINA_PARAKEETS, DINO_BONES, EGRET_FEATHERS, ...
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @param {number} index
   * @return {any}
   */
export const _0xB9020EC89C07DF04 = '0xb9020ec89c07df04';
/**
   * _0xC3CA424E1F12ED0C
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {any}
   */
export const _0xC3CA424E1F12ED0C = '0xc3ca424e1f12ed0c';
/**
   * _0xC4AC39719C1BB559
   *
   * @param {number} collectableCategory
   * @param {any} p1
   * @return {any}
   */
export const _0xC4AC39719C1BB559 = '0xc4ac39719c1bb559';
/**
   * _0xD1806FB3EDED6D11
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {any}
   */
export const _0xD1806FB3EDED6D11 = '0xd1806fb3eded6d11';
/**
   * _0xD297F68928A58130
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {any}
   */
export const _0xD297F68928A58130 = '0xd297f68928a58130';
/**
   * _COLLECTABLE_SET_ITEM_HASH_DISCOVERED
   * Returns discoveredItemHash
   * _COLLECTABLE_C* - _COLLECTABLE_G*
   *
   * @param {number} collectableItem
   * @return {number}
   */
export const _COLLECTABLE_SET_ITEM_HASH_DISCOVERED = '0xec3959e9950bf56b';
/**
   * _0xFC832B06127D8E99
   *
   * @param {number} collectableCategory
   * @param {number} p1
   * @return {boolean}
   */
export const _0xFC832B06127D8E99 = '0xfc832b06127d8e99';
/**
   * _COLLECTABLE_CATEGORY_GET_NUM_COLLECTABLES
   *
   * @param {number} collectableCategory
   * @param {number} collectableSubcategory
   * @return {number}
   */
export const _COLLECTABLE_CATEGORY_GET_NUM_COLLECTABLES = '0x62cab7db62ead434';
/**
   * _COLLECTABLE_CATEGORY_GET_NUM_FOUND
   *
   * @param {number} collectableCategory
   * @param {number} collectableSubcategory
   * @return {number}
   */
export const _COLLECTABLE_CATEGORY_GET_NUM_FOUND = '0x5461c821d00fe15a';
/**
   * _COLLECTABLE_CATEGORY_GET_NUM_TURNED_IN
   *
   * @param {number} collectableCategory
   * @param {number} collectableSubcategory
   * @return {number}
   */
export const _COLLECTABLE_CATEGORY_GET_NUM_TURNED_IN = '0x3a65f4844913a047';
/**
   * _COLLECTABLE_CATEGORY_GET_TOAST_TEXTURE_DICTIONARY
   *
   * @param {number} collectableCategory
   * @param {number} collectableSubcategory
   * @return {number}
   */
export const _COLLECTABLE_CATEGORY_GET_TOAST_TEXTURE_DICTIONARY = '0x13aaecda43318bfe';
/**
   * _COLLECTABLE_CATEGORY_GET_TOAST_TEXTURE_NAME
   *
   * @param {number} collectableCategory
   * @param {number} collectableSubcategory
   * @return {number}
   */
export const _COLLECTABLE_CATEGORY_GET_TOAST_TEXTURE_NAME = '0xd52d20b0c76bb26d';
/**
   * _COLLECTABLE_GET_CATEGORY
   * Used in Script Function NET_COLLECTABLES_HANDLE_ITEM_ADDED
   * Returns collectableCategory Hash
   *
   * @param {number} collectableItem
   * @return {number}
   */
export const _COLLECTABLE_GET_CATEGORY = '0x725d52f21a5e9ef6';
/**
   * _COLLECTABLE_GET_COLLECTABLE_ITEM_HASH
   *
   * @param {number} index
   * @param {number} collectableCategory
   * @param {number} collectableSubcategory
   * @return {number}
   */
export const _COLLECTABLE_GET_COLLECTABLE_ITEM_HASH = '0x126cbebba46693cf';
/**
   * _COLLECTABLE_GET_IPL
   *
   * @param {number} collectableItem
   * @return {number}
   */
export const _COLLECTABLE_GET_IPL = '0x922a79cd4a033b8b';
/**
   * _COLLECTABLE_GET_NUM_FOUND
   *
   * @param {number} collectableItem
   * @return {number}
   */
export const _COLLECTABLE_GET_NUM_FOUND = '0xf83d3dda4d3c8169';
/**
   * _COLLECTABLE_GET_NUM_TURNED_IN
   *
   * @param {number} collectableItem
   * @return {number}
   */
export const _COLLECTABLE_GET_NUM_TURNED_IN = '0x9a03f22ad446eeac';
/**
   * _COLLECTABLE_GET_PLACEMENT_LOCATION
   *
   * @param {number} collectableItem
   * @return {Vector3}
   */
export const _COLLECTABLE_GET_PLACEMENT_LOCATION = '0x1f1dd794908c2bfa';
/**
   * _COLLECTABLE_GET_SUBCATEGORY
   *
   * @param {number} collectableItem
   * @return {number}
   */
export const _COLLECTABLE_GET_SUBCATEGORY = '0x6052b4de6657684f';
/**
   * _COLLECTABLE_INCREMENT_NUM_FOUND
   *
   * @param {number} collectableItem
   * @param {number} amount
   * @return {void}
   */
export const _COLLECTABLE_INCREMENT_NUM_FOUND = '0x3ea62e56f386c997';
/**
   * _COLLECTABLE_INCREMENT_NUM_TURNED_IN
   *
   * @param {number} collectableItem
   * @param {number} amount
   * @return {void}
   */
export const _COLLECTABLE_INCREMENT_NUM_TURNED_IN = '0x398fab9c96a81924';
/**
   * _0x0A8FD91EDE7B328A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0A8FD91EDE7B328A = '0x0a8fd91ede7b328a';
/**
   * _0x0C6A00DAE896614C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0C6A00DAE896614C = '0x0c6a00dae896614c';
/**
   * _0x0DE02DA3C0F66955
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x0DE02DA3C0F66955 = '0x0de02da3c0f66955';
/**
   * _0x2917E634206B9E17
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x2917E634206B9E17 = '0x2917e634206b9e17';
/**
   * _0x3CAAD93FA5B9579A
   *
   * @param {number} volume
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x3CAAD93FA5B9579A = '0x3caad93fa5b9579a';
/**
   * _0x61BDA07407754A5C
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x61BDA07407754A5C = '0x61bda07407754a5c';
/**
   * _0x722FBE08EF5B87BD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {any}
   */
export const _0x722FBE08EF5B87BD = '0x722fbe08ef5b87bd';
/**
   * _0x7274F84B1501B523
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x7274F84B1501B523 = '0x7274f84b1501b523';
/**
   * _0x8FB98B719AA0075A
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x8FB98B719AA0075A = '0x8fb98b719aa0075a';
/**
   * _0x991E3346D788F20F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x991E3346D788F20F = '0x991e3346d788f20f';
/**
   * _0x9C902084F48D2E6C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9C902084F48D2E6C = '0x9c902084f48d2e6c';
/**
   * _0xA079FF7CFB9AC8BD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA079FF7CFB9AC8BD = '0xa079ff7cfb9ac8bd';
/**
   * _0xBF6583E926D13890
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xBF6583E926D13890 = '0xbf6583e926d13890';
/**
   * _0xCE27824B5968B79A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCE27824B5968B79A = '0xce27824b5968b79a';
/**
   * _0xD428C3F92FC3F6F8
   *
   * @param {number} ped
   * @param {string | number} p1
   * @return {void}
   */
export const _0xD428C3F92FC3F6F8 = '0xd428c3f92fc3f6f8';
/**
   * _0xD55A871E1CE3481B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xD55A871E1CE3481B = '0xd55a871e1ce3481b';
/**
   * _0xD730281E496621FB
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0xD730281E496621FB = '0xd730281e496621fb';
/**
   * _0xD747979C053EFA7A
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xD747979C053EFA7A = '0xd747979c053efa7a';
/**
   * _0xF06CBB8CCCA823C0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xF06CBB8CCCA823C0 = '0xf06cbb8ccca823c0';
/**
   * _ACTIVATE_COMPANION_ANALYSIS
   *
   * @param {number} groupId
   * @return {void}
   */
export const _ACTIVATE_COMPANION_ANALYSIS = '0xcbd9ec60495c728c';
/**
   * _ADD_COMPANION_FLAG
   * Used for Script Function NET_FETCH_CLIENT_ACTIVATE_COMAPNION_ANALYSIS: Hiding! Ped
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _ADD_COMPANION_FLAG = '0xdeb369f6ad168c58';
/**
   * _DEACTIVATE_COMPANION_ANALYSIS
   *
   * @param {number} groupId
   * @return {void}
   */
export const _DEACTIVATE_COMPANION_ANALYSIS = '0x72b7f65f11fc8896';
/**
   * _GET_COMPANION_ACTIVITY
   * enum _0x18F77396
   *
   * @param {number} groupId
   * @return {number}
   */
export const _GET_COMPANION_ACTIVITY = '0xb7e0590c86e1711f';
/**
   * _REMOVE_COMPANION_FLAG
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _REMOVE_COMPANION_FLAG = '0x1740e3dee0ae4d27';
/**
   * _SET_COMPANION_ACTIVITY
   * enum _0x18F77396
   *
   * @param {number} groupId
   * @param {number} activity
   * @return {void}
   */
export const _SET_COMPANION_ACTIVITY = '0x0f1cd8ca9e65d5f6';
/**
   * _0x29C733459A9011EB
   * nullsub, doesn't do anything
   *
   * @param {number} p0
   * @param {string | number} p1
   * @return {void}
   */
export const _0x29C733459A9011EB = '0x29c733459a9011eb';
/**
   * _0x74BCCEB233AD95B2
   * nullsub, doesn't do anything
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const _0x74BCCEB233AD95B2 = '0x74bcceb233ad95b2';
/**
   * _0x7AF1BB4504EA5ED9
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const _0x7AF1BB4504EA5ED9 = '0x7af1bb4504ea5ed9';
/**
   * _0xB6FD96420C0126A1
   * nullsub, doesn't do anything
   *
   * @param {number} p0
   * @param {boolean} p1
   * @return {void}
   */
export const _0xB6FD96420C0126A1 = '0xb6fd96420c0126a1';
/**
   * _0xCCB4635A071FB62D
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const _0xCCB4635A071FB62D = '0xccb4635a071fb62d';
/**
   * COMPENDIUM_ANIMAL_GET_SAMPLE_INVENTORY_ITEM
   *
   * @param {number} compendiumEntry
   * @return {any}
   */
export const COMPENDIUM_ANIMAL_GET_SAMPLE_INVENTORY_ITEM = '0x4e4acae1c671a9da';
/**
   * COMPENDIUM_ANIMAL_HAS_SAMPLE
   *
   * @param {number} compendiumEntry
   * @return {boolean}
   */
export const COMPENDIUM_ANIMAL_HAS_SAMPLE = '0x6fc24625e4fcac27';
/**
   * COMPENDIUM_ANIMAL_HAS_STAMP
   *
   * @param {number} compendiumEntry
   * @return {boolean}
   */
export const COMPENDIUM_ANIMAL_HAS_STAMP = '0xbcf569fc32fff456';
/**
   * COMPENDIUM_ANIMAL_OBSERVED_BY_STAT_NAME
   *
   * @param {number} animalType
   * @param {boolean} disableCompendiumToast
   * @return {void}
   */
export const COMPENDIUM_ANIMAL_OBSERVED_BY_STAT_NAME = '0x725d52f26a5e9e10';
/**
   * COMPENDIUM_ANIMAL_SET_DISCOVERED
   *
   * @param {number} compendiumEntry
   * @return {void}
   */
export const COMPENDIUM_ANIMAL_SET_DISCOVERED = '0x67f35c7c9f2bdcfe';
/**
   * COMPENDIUM_FISH_CAUGHT
   *
   * @param {number} ped
   * @param {number} category
   * @return {void}
   */
export const COMPENDIUM_FISH_CAUGHT = '0x725d52f21a5e9e00';
/**
   * COMPENDIUM_FISH_GET_LURE_SUITABILITY_BY_STAT_ITEM
   *
   * @param {number} animalType
   * @param {number} baitType
   * @return {number}
   */
export const COMPENDIUM_FISH_GET_LURE_SUITABILITY_BY_STAT_ITEM = '0x725d52f21a5e9e81';
/**
   * COMPENDIUM_GANG_AMBUSH_SURVIVED
   *
   * @param {any} p0
   * @return {void}
   */
export const COMPENDIUM_GANG_AMBUSH_SURVIVED = '0x725d52f21a5e9e04';
/**
   * COMPENDIUM_GANG_BOUNTY_CAPTURED
   *
   * @param {any} p0
   * @return {void}
   */
export const COMPENDIUM_GANG_BOUNTY_CAPTURED = '0x725d52f21a5e9e06';
/**
   * COMPENDIUM_GANG_CAMP_FOUND
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const COMPENDIUM_GANG_CAMP_FOUND = '0x725d52f21a5e9e03';
/**
   * COMPENDIUM_GANG_ENCOUNTERED
   *
   * @param {any} p0
   * @return {void}
   */
export const COMPENDIUM_GANG_ENCOUNTERED = '0x725d52f21a5e9e05';
/**
   * COMPENDIUM_GANG_HIDEOUT_FOUND
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const COMPENDIUM_GANG_HIDEOUT_FOUND = '0x725d52f21a5e9e08';
/**
   * COMPENDIUM_GANG_MEMBER_KILLED
   *
   * @param {any} p0
   * @return {void}
   */
export const COMPENDIUM_GANG_MEMBER_KILLED = '0x725d52f21a5e9e07';
/**
   * COMPENDIUM_GET_ENTRY_BY_INDEX_IN_SUBCATEGORY
   *
   * @param {number} category
   * @param {number} subcategory
   * @param {number} count
   * @return {number}
   */
export const COMPENDIUM_GET_ENTRY_BY_INDEX_IN_SUBCATEGORY = '0x5ceb63b2e3d9895f';
/**
   * COMPENDIUM_GET_ENTRY_BY_PED_INDEX
   *
   * @param {number} category
   * @param {number} ped
   * @return {number}
   */
export const COMPENDIUM_GET_ENTRY_BY_PED_INDEX = '0x1cfa0219d8e1cf25';
/**
   * COMPENDIUM_GET_ENTRY_BY_STAT_ITEM
   *
   * @param {number} category
   * @param {number} animalType
   * @return {number}
   */
export const COMPENDIUM_GET_ENTRY_BY_STAT_ITEM = '0x66ec938394d76c85';
/**
   * COMPENDIUM_GET_MAP_DISCOVERABLE_FROM_STAT_ITEM
   *
   * @param {number} animalStatItem
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const COMPENDIUM_GET_MAP_DISCOVERABLE_FROM_STAT_ITEM = '0x729d54121a5e9e20';
/**
   * COMPENDIUM_GET_NUM_ENTRIES_IN_SUBCATEGORY
   *
   * @param {number} category
   * @param {number} subcategory
   * @return {number}
   */
export const COMPENDIUM_GET_NUM_ENTRIES_IN_SUBCATEGORY = '0xf58a0c0e086e8e36';
/**
   * COMPENDIUM_GET_SHORT_DESCRIPTION_FROM_PED
   *
   * @param {number} ped
   * @return {number}
   */
export const COMPENDIUM_GET_SHORT_DESCRIPTION_FROM_PED = '0x6c5e5d48e48b4c65';
/**
   * COMPENDIUM_GET_STUDY_AWARD_ID
   *
   * @param {number} ped
   * @return {any}
   */
export const COMPENDIUM_GET_STUDY_AWARD_ID = '0x9f678782720349e4';
/**
   * COMPENDIUM_GET_SUBCATEGORY_PED_IS_IN
   *
   * @param {number} category
   * @param {number} ped
   * @return {number}
   */
export const COMPENDIUM_GET_SUBCATEGORY_PED_IS_IN = '0x9b657550df55ec96';
/**
   * COMPENDIUM_GET_SUBCATEGORY_SAMPLE_TOAST_DESC_COMPLETE
   *
   * @param {number} category
   * @param {number} subcategory
   * @return {string | number}
   */
export const COMPENDIUM_GET_SUBCATEGORY_SAMPLE_TOAST_DESC_COMPLETE = '0x59d4d68cdb82427c';
/**
   * COMPENDIUM_GET_SUBCATEGORY_SAMPLE_TOAST_DESC_PROGRESS
   *
   * @param {number} category
   * @param {number} subcategory
   * @return {string | number}
   */
export const COMPENDIUM_GET_SUBCATEGORY_SAMPLE_TOAST_DESC_PROGRESS = '0x82bfb5b367957699';
/**
   * COMPENDIUM_GET_SUBCATEGORY_SAMPLE_TOAST_TITLE
   *
   * @param {number} category
   * @param {number} subcategory
   * @return {string | number}
   */
export const COMPENDIUM_GET_SUBCATEGORY_SAMPLE_TOAST_TITLE = '0x5e50c67eb60951e6';
/**
   * COMPENDIUM_GET_SUBCATEGORY_TOAST_APP_ID
   *
   * @param {number} category
   * @param {number} subcategory
   * @return {any}
   */
export const COMPENDIUM_GET_SUBCATEGORY_TOAST_APP_ID = '0x2bf30d9d4d680112';
/**
   * COMPENDIUM_HERB_PICKED
   * herbType: https://alloc8or.re/rdr3/doc/enums/eHerbType.txt
   * Vector3: Player Location
   *
   * @param {number} herbType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const COMPENDIUM_HERB_PICKED = '0x725d52f21a5e9e09';
/**
   * COMPENDIUM_HORSE_BONDING
   *
   * @param {number} ped
   * @param {number} bondingLevel
   * @return {void}
   */
export const COMPENDIUM_HORSE_BONDING = '0x725d52f21a5e9e50';
/**
   * COMPENDIUM_HORSE_OBSERVED
   * Only gets called if bSetObserved is true and animalType is matching
   *
   * @param {number} ped
   * @param {boolean} disableCompendiumToast
   * @return {void}
   */
export const COMPENDIUM_HORSE_OBSERVED = '0x725d58f2125e5e50';
/**
   * COMPENDIUM_HORSE_WILD_BROKEN
   * NET_PLAYER_HORSE_PROCESS_EVENT_HORSE_BREAKING
   *
   * @param {number} ped
   * @return {void}
   */
export const COMPENDIUM_HORSE_WILD_BROKEN = '0x725852d21a2e9e50';
/**
   * COMPENDIUM_WAS_ANIMAL_OBSERVED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const COMPENDIUM_WAS_ANIMAL_OBSERVED = '0x23b5e9c5160bc04f';
/**
   * _0x725D52F21A5E9E22
   * Only used in R* SP Scripts, category = GANGS
   * _COMPENDIUM_GET_*
   *
   * @param {number} category
   * @return {number}
   */
export const _0x725D52F21A5E9E22 = '0x725d52f21a5e9e22';
/**
   * _0x729D52461AEA9E22
   * Only used in R* SP Scripts, category = GANGS
   * _COMPENDIUM_GET_NUM_OF_ENTRIES_IN_*
   *
   * @param {number} category
   * @return {number}
   */
export const _0x729D52461AEA9E22 = '0x729d52461aea9e22';
/**
   * _COMPENDIUM_GET_NUM_OF_ENTRIES_IN_CATEGORY
   *
   * @param {number} category
   * @return {number}
   */
export const _COMPENDIUM_GET_NUM_OF_ENTRIES_IN_CATEGORY = '0x729d52f61a5a9e22';
/**
   * _COMPENDIUM_GET_SUBCATEGORY_HASH_FROM_ANIMAL_TYPE
   *
   * @param {number} category
   * @param {number} animalType
   * @return {number}
   */
export const _COMPENDIUM_GET_SUBCATEGORY_HASH_FROM_ANIMAL_TYPE = '0xcd278b6bfbdbdc22';
/**
   * _0x0FD3ECF9D0C8655F
   *
   * @param {string | number} p0
   * @return {void}
   */
export const _0x0FD3ECF9D0C8655F = '0x0fd3ecf9d0c8655f';
/**
   * _0x23CCAB8F40B9CBEE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const _0x23CCAB8F40B9CBEE = '0x23ccab8f40b9cbee';
/**
   * _0x33C1D63E55FA4284
   *
   * @param {string | number} p0
   * @return {boolean}
   */
export const _0x33C1D63E55FA4284 = '0x33c1d63e55fa4284';
/**
   * _0x3A66F1963B223F61
   *
   * @param {string | number} p0
   * @return {boolean}
   */
export const _0x3A66F1963B223F61 = '0x3a66f1963b223f61';
/**
   * _0x4E42CA5BCD45444A
   *
  
   * @return {void}
   */
export const _0x4E42CA5BCD45444A = '0x4e42ca5bcd45444a';
/**
   * _0x7C680FF55617F82F
   *
  
   * @return {boolean}
   */
export const _0x7C680FF55617F82F = '0x7c680ff55617f82f';
/**
   * _0x87F005C969EF1563
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0x87F005C969EF1563 = '0x87f005c969ef1563';
/**
   * _0xA67F0B039D9CD513
   *
   * @param {boolean} p0
   * @return {boolean}
   */
export const _0xA67F0B039D9CD513 = '0xa67f0b039d9cd513';
/**
   * _0xCA0BAC376C541978
   *
   * @param {string | number} p0
   * @return {void}
   */
export const _0xCA0BAC376C541978 = '0xca0bac376c541978';
/**
   * _0xD8E3D22AA4F0E0A5
   *
   * @param {string | number} p0
   * @return {boolean}
   */
export const _0xD8E3D22AA4F0E0A5 = '0xd8e3d22aa4f0e0a5';
/**
   * _0xDA05310EA94DC8C6
   * unused = true
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @return {void}
   */
export const _0xDA05310EA94DC8C6 = '0xda05310ea94dc8c6';
/**
   * _0xE72E234B30DA7B7A
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0xE72E234B30DA7B7A = '0xe72e234b30da7b7a';
/**
   * _0xF0D545C1EEAD614A
   *
  
   * @return {boolean}
   */
export const _0xF0D545C1EEAD614A = '0xf0d545c1eead614a';
/**
   * NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT
   *
  
   * @return {number}
   */
export const NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT = '0x1f471b79acc90bef';
/**
   * NETWORK_CLAN_GET_MEMBERSHIP_DESC
   *
   * @param {DataView} memberDesc
   * @param {number} p1
   * @return {boolean}
   */
export const NETWORK_CLAN_GET_MEMBERSHIP_DESC = '0x48de78af2c8885b8';
/**
   * NETWORK_CLAN_IS_EMBLEM_READY
   *
   * @param {any} p0
   * @param {DataView} p1
   * @return {boolean}
   */
export const NETWORK_CLAN_IS_EMBLEM_READY = '0xa134777ff7f33331';
/**
   * NETWORK_CLAN_PLAYER_GET_DESC
   *
   * @param {DataView} clanDesc
   * @param {number} bufferSize
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const NETWORK_CLAN_PLAYER_GET_DESC = '0xeee6eacbe8874fba';
/**
   * NETWORK_CLAN_PLAYER_IS_ACTIVE
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const NETWORK_CLAN_PLAYER_IS_ACTIVE = '0xb124b57f571d8f18';
/**
   * NETWORK_CLAN_RELEASE_EMBLEM
   *
   * @param {any} p0
   * @return {void}
   */
export const NETWORK_CLAN_RELEASE_EMBLEM = '0x113e6e3e50e286b0';
/**
   * NETWORK_CLAN_REQUEST_EMBLEM
   *
   * @param {any} p0
   * @return {boolean}
   */
export const NETWORK_CLAN_REQUEST_EMBLEM = '0x13518ff1c6b28938';
/**
   * NETWORK_CLAN_SERVICE_IS_VALID
   *
  
   * @return {boolean}
   */
export const NETWORK_CLAN_SERVICE_IS_VALID = '0x579cced0265d4896';
/**
   * NETWORK_FIND_GAMERS_IN_CREW
   *
   * @param {number} crewId
   * @return {boolean}
   */
export const NETWORK_FIND_GAMERS_IN_CREW = '0xe532d6811b3a4d2a';
/**
   * NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR
   *
  
   * @return {any}
   */
export const NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR = '0x9aa46badad0e27ed';
/**
   * NETWORK_GET_PRIMARY_CLAN_DATA_NEW
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @return {boolean}
   */
export const NETWORK_GET_PRIMARY_CLAN_DATA_NEW = '0xc080ff658b2e41da';
/**
   * NETWORK_GET_PRIMARY_CLAN_DATA_PENDING
   *
  
   * @return {any}
   */
export const NETWORK_GET_PRIMARY_CLAN_DATA_PENDING = '0xb5074db804e28ce7';
/**
   * NETWORK_GET_PRIMARY_CLAN_DATA_START
   *
   * @param {DataView} p0
   * @param {any} p1
   * @return {boolean}
   */
export const NETWORK_GET_PRIMARY_CLAN_DATA_START = '0xce86d8191b762107';
/**
   * NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS
   *
  
   * @return {any}
   */
export const NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS = '0x5b4f04f19376a0ba';
/**
   * _0x58D378AF2C8765B7
   *
   * @param {any} p0
   * @return {boolean}
   */
export const _0x58D378AF2C8765B7 = '0x58d378af2c8765b7';
/**
   * _NETWORK_ACCEPT_CLAN_INVITE
   *
   * @param {number} crewInviteIndex
   * @return {boolean}
   */
export const _NETWORK_ACCEPT_CLAN_INVITE = '0x8e2143144b8e188d';
/**
   * _NETWORK_CLAN_INVITE_PLAYER
   *
   * @param {any} p0
   * @return {boolean}
   */
export const _NETWORK_CLAN_INVITE_PLAYER = '0xc685b014ce3d988b';
/**
   * _NETWORK_CLAN_SET_ACTIVE
   *
   * @param {any} p0
   * @return {any}
   */
export const _NETWORK_CLAN_SET_ACTIVE = '0xc080ff658b2e51da';
/**
   * DATABINDING_IS_ENTRY_VALID
   *
   * @param {number} entryId
   * @return {boolean}
   */
export const DATABINDING_IS_ENTRY_VALID = '0x1e7130793aaaab8d';
/**
   * DATABINDING_READ_INT
   *
   * @param {any} p0
   * @return {number}
   */
export const DATABINDING_READ_INT = '0x570784d782597512';
/**
   * DATABINDING_WRITE_STRING_FROM_PARENT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {string | number} p2
   * @return {void}
   */
export const DATABINDING_WRITE_STRING_FROM_PARENT = '0x4ff713b2f17a391e';
/**
   * _0x02B21B6BEEDD83CC
   *
   * @param {number} entryId
   * @param {number} p1
   * @return {any}
   */
export const _0x02B21B6BEEDD83CC = '0x02b21b6beedd83cc';
/**
   * _0x05AC9E1E02975AFB
   * _DATABINDING_WRITE_DATA_*
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x05AC9E1E02975AFB = '0x05ac9e1e02975afb';
/**
   * _0x1919D59E60FD516E
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x1919D59E60FD516E = '0x1919d59e60fd516e';
/**
   * _0x294AF5323F44B053
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x294AF5323F44B053 = '0x294af5323f44b053';
/**
   * _0x3BF0767CF33FCC88
   *
   * @param {number} entryId
   * @return {void}
   */
export const _0x3BF0767CF33FCC88 = '0x3bf0767cf33fcc88';
/**
   * _0x422179C7F6AD9304
   *
   * @param {any} p0
   * @param {DataView} gamerHandle
   * @return {void}
   */
export const _0x422179C7F6AD9304 = '0x422179c7f6ad9304';
/**
   * _0x6318FB3BE37E11B3
   *
   * @param {number} entryId
   * @param {number} index
   * @return {void}
   */
export const _0x6318FB3BE37E11B3 = '0x6318fb3be37e11b3';
/**
   * _0x6329C34BEE5BFF4B
   *
   * @param {any} p0
   * @param {number} p1
   * @return {any}
   */
export const _0x6329C34BEE5BFF4B = '0x6329c34bee5bff4b';
/**
   * _0x7FC60C94C83C5CD7
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x7FC60C94C83C5CD7 = '0x7fc60c94c83c5cd7';
/**
   * _0xB138CA787F3DD858
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xB138CA787F3DD858 = '0xb138ca787f3dd858';
/**
   * _0xBFC83DA249BEFCC9
   * _DATABINDING_WRITE_DATA_*
   *
   * @param {any} p0
   * @param {number} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xBFC83DA249BEFCC9 = '0xbfc83da249befcc9';
/**
   * _0xC900CEC8A172375B
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0xC900CEC8A172375B = '0xc900cec8a172375b';
/**
   * _0xD48993A61938C64D
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _0xD48993A61938C64D = '0xd48993a61938c64d';
/**
   * _DATABINDING_ADD_DATA_CONTAINER_FROM_PATH_BY_HASH
   * p0 seems to always be empty string, p1 is the hash of the path
   *
   * @param {string | number} p0
   * @param {number} path
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_CONTAINER_FROM_PATH_BY_HASH = '0xd7db94ab78e8ebe4';
/**
   * _0xE6AAB897120492D6
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _0xE6AAB897120492D6 = '0xe6aab897120492d6';
/**
   * _0xE6AAB897120492D7
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xE6AAB897120492D7 = '0xe6aab897120492d7';
/**
   * _0xF47E33F8D2523825
   *
   * @param {any} p0
   * @param {number} p1
   * @return {any}
   */
export const _0xF47E33F8D2523825 = '0xf47e33f8d2523825';
/**
   * _DATABINDING_ADD_DATA_BOOL
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {boolean} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_BOOL = '0x58baa5f635da2ff4';
/**
   * _DATABINDING_ADD_DATA_BOOL_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @param {boolean} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_BOOL_BY_HASH = '0xbc95d3ae2eca70d6';
/**
   * _DATABINDING_ADD_DATA_BOOL_FROM_PATH
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @param {boolean} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_BOOL_FROM_PATH = '0x37bb86a751148a6a';
/**
   * _DATABINDING_ADD_DATA_CONTAINER
   * Returns entryId Hash
   *
   * @param {number} entryId
   * @param {string | number} p1
   * @return {number}
   */
export const _DATABINDING_ADD_DATA_CONTAINER = '0xeb4f9a3537eeabcd';
/**
   * _DATABINDING_ADD_DATA_CONTAINER_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_CONTAINER_BY_HASH = '0x98bb14345bb68257';
/**
   * _DATABINDING_ADD_DATA_CONTAINER_FROM_PATH
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_CONTAINER_FROM_PATH = '0x0c827d175f1292f4';
/**
   * _DATABINDING_ADD_DATA_FLOAT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {number} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_FLOAT = '0x5154228273adb9a6';
/**
   * _DATABINDING_ADD_DATA_GANG_ID
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {any} gangId
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_GANG_ID = '0x7d0f2014db28dd00';
/**
   * _DATABINDING_ADD_DATA_HASH
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {number} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_HASH = '0x8538f1205d60eca6';
/**
   * _DATABINDING_ADD_DATA_HASH_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_HASH_BY_HASH = '0x8e173dfb041993c6';
/**
   * _DATABINDING_ADD_DATA_INT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {number} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_INT = '0x307a3247c5457bde';
/**
   * _DATABINDING_ADD_DATA_INT_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_INT_BY_HASH = '0x267f9527f4350ade';
/**
   * _DATABINDING_ADD_DATA_POSSE_ID
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {any} posseId
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_POSSE_ID = '0x7d0f2014db28dd01';
/**
   * _DATABINDING_ADD_DATA_STRING
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {string | number} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_STRING = '0x617fca1c5652bbad';
/**
   * _DATABINDING_ADD_DATA_STRING_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @param {string | number} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_STRING_BY_HASH = '0xead09e76e22630c3';
/**
   * _DATABINDING_ADD_DATA_STRING_FROM_PATH
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @param {string | number} p2
   * @return {any}
   */
export const _DATABINDING_ADD_DATA_STRING_FROM_PATH = '0xa381de86ee170c4a';
/**
   * _DATABINDING_ADD_HASH_ARRAY
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _DATABINDING_ADD_HASH_ARRAY = '0x52f5f08278ea5d75';
/**
   * _DATABINDING_ADD_STRING_ARRAY
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _DATABINDING_ADD_STRING_ARRAY = '0x1b23e0627bdbfe85';
/**
   * _DATABINDING_ADD_UI_ITEM_LIST
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _DATABINDING_ADD_UI_ITEM_LIST = '0xfe74fa57e0ce6824';
/**
   * _DATABINDING_ADD_UI_ITEM_LIST_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @return {any}
   */
export const _DATABINDING_ADD_UI_ITEM_LIST_BY_HASH = '0x3c7799283325181b';
/**
   * _DATABINDING_ADD_UI_ITEM_LIST_FROM_PATH
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _DATABINDING_ADD_UI_ITEM_LIST_FROM_PATH = '0xdb5b9a474148f699';
/**
   * _DATABINDING_CLEAR_BINDING_ARRAY
   *
   * @param {number} entryId
   * @return {void}
   */
export const _DATABINDING_CLEAR_BINDING_ARRAY = '0xa1f15c1d03df802d';
/**
   * _DATABINDING_GET_ARRAY_COUNT
   *
   * @param {number} entryId
   * @return {any}
   */
export const _DATABINDING_GET_ARRAY_COUNT = '0xd23f5de04fe717e2';
/**
   * _DATABINDING_GET_DATA_CONTAINER_FROM_CHILD_INDEX
   *
   * @param {number} entryId
   * @param {number} p1
   * @return {any}
   */
export const _DATABINDING_GET_DATA_CONTAINER_FROM_CHILD_INDEX = '0x0c827d175f1292f3';
/**
   * _DATABINDING_GET_DATA_CONTAINER_FROM_PATH
   *
   * @param {string | number} p0
   * @return {any}
   */
export const _DATABINDING_GET_DATA_CONTAINER_FROM_PATH = '0x0c827d175f1292f2';
/**
   * _DATABINDING_GET_ITEM_CONTEXT_BY_INDEX
   *
   * @param {any} p0
   * @param {number} index
   * @return {any}
   */
export const _DATABINDING_GET_ITEM_CONTEXT_BY_INDEX = '0xe96d7f9fefcc105f';
/**
   * _DATABINDING_INSERT_UI_ITEM_TO_LIST_FROM_CONTEXT_HASH_ALIAS
   *
   * @param {any} p0
   * @param {number} index
   * @param {number} p2
   * @param {any} p3
   * @return {void}
   */
export const _DATABINDING_INSERT_UI_ITEM_TO_LIST_FROM_CONTEXT_HASH_ALIAS = '0xee97a05c05f16e41';
/**
   * _DATABINDING_INSERT_UI_ITEM_TO_LIST_FROM_CONTEXT_STRING_ALIAS
   *
   * @param {any} p0
   * @param {number} index
   * @param {string | number} p2
   * @param {any} p3
   * @return {void}
   */
export const _DATABINDING_INSERT_UI_ITEM_TO_LIST_FROM_CONTEXT_STRING_ALIAS = '0x5859e970794d92f3';
/**
   * _DATABINDING_INSERT_UI_ITEM_TO_LIST_FROM_PATH_STRING_ALIAS
   *
   * @param {any} p0
   * @param {any} p1
   * @param {string | number} p2
   * @param {any} p3
   * @return {void}
   */
export const _DATABINDING_INSERT_UI_ITEM_TO_LIST_FROM_PATH_STRING_ALIAS = '0x5740774f608e4fc8';
/**
   * _DATABINDING_READ_DATA_BOOL
   *
   * @param {any} p0
   * @return {any}
   */
export const _DATABINDING_READ_DATA_BOOL = '0x5eefbd4b6d7cd6eb';
/**
   * _DATABINDING_READ_DATA_BOOL_FROM_PARENT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _DATABINDING_READ_DATA_BOOL_FROM_PARENT = '0xa8ede09fe07bd77f';
/**
   * _DATABINDING_READ_DATA_BOOL_FROM_PARENT_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @return {any}
   */
export const _DATABINDING_READ_DATA_BOOL_FROM_PARENT_BY_HASH = '0x4cdc3fddfae07eb3';
/**
   * _DATABINDING_READ_DATA_HASH_STRING_FROM_PARENT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _DATABINDING_READ_DATA_HASH_STRING_FROM_PARENT = '0x9b535990b01b62de';
/**
   * _DATABINDING_READ_DATA_HASH_STRING_FROM_PARENT_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @return {any}
   */
export const _DATABINDING_READ_DATA_HASH_STRING_FROM_PARENT_BY_HASH = '0x1f43bc25a119b252';
/**
   * _DATABINDING_READ_DATA_INT_FROM_PARENT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _DATABINDING_READ_DATA_INT_FROM_PARENT = '0xffc566a4801f6b40';
/**
   * _DATABINDING_READ_DATA_INT_FROM_PARENT_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @return {any}
   */
export const _DATABINDING_READ_DATA_INT_FROM_PARENT_BY_HASH = '0xb5f668b648ec0970';
/**
   * _DATABINDING_READ_DATA_STRING
   *
   * @param {any} p0
   * @return {any}
   */
export const _DATABINDING_READ_DATA_STRING = '0x3d290b5ffa7c5151';
/**
   * _DATABINDING_READ_DATA_STRING_FROM_PARENT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {any}
   */
export const _DATABINDING_READ_DATA_STRING_FROM_PARENT = '0x6323ad277c4a2afb';
/**
   * _DATABINDING_READ_FLOAT
   *
   * @param {number} entryId
   * @return {number}
   */
export const _DATABINDING_READ_FLOAT = '0x5fe444eb67c70ad4';
/**
   * _DATABINDING_READ_HASH
   *
   * @param {number} entryId
   * @return {number}
   */
export const _DATABINDING_READ_HASH = '0x81d7183e7a8eca72';
/**
   * _DATABINDING_REMOVE_BINDING_ARRAY_ITEM_BY_DATA_CONTEXT_ID
   *
   * @param {any} p0
   * @param {number} entryId
   * @return {void}
   */
export const _DATABINDING_REMOVE_BINDING_ARRAY_ITEM_BY_DATA_CONTEXT_ID = '0xf68b1726eaf7b285';
/**
   * _DATABINDING_REMOVE_DATA_ENTRY
   *
   * @param {number} entryId
   * @return {void}
   */
export const _DATABINDING_REMOVE_DATA_ENTRY = '0x0ae9938d0541f2da';
/**
   * _DATABINDING_SET_TEMPLATED_UI_ITEM_HASH_ALIAS
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _DATABINDING_SET_TEMPLATED_UI_ITEM_HASH_ALIAS = '0x0ae7138d0541f2de';
/**
   * _DATABINDING_SET_TEMPLATED_UI_ITEM_LIST_SIZE
   *
   * @param {any} p0
   * @param {number} p1
   * @return {void}
   */
export const _DATABINDING_SET_TEMPLATED_UI_ITEM_LIST_SIZE = '0xfe74fa57e0ce6825';
/**
   * _DATABINDING_WRITE_DATA_BOOL
   *
   * @param {any} p0
   * @param {boolean} p1
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_BOOL = '0xab888b4b91046770';
/**
   * _DATABINDING_WRITE_DATA_BOOL_FROM_PARENT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_BOOL_FROM_PARENT = '0xbdfe546e4c2d0e21';
/**
   * _DATABINDING_WRITE_DATA_FLOAT
   *
   * @param {any} p0
   * @param {number} p1
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_FLOAT = '0xdf504beceb15da93';
/**
   * _DATABINDING_WRITE_DATA_GANG_ID
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {any} gangId
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_GANG_ID = '0xc70041408e16be2d';
/**
   * _DATABINDING_WRITE_DATA_HASH_STRING
   *
   * @param {any} p0
   * @param {number} p1
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_HASH_STRING = '0xacdef586bd71b1fd';
/**
   * _DATABINDING_WRITE_DATA_HASH_STRING_FROM_PARENT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {number} p2
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_HASH_STRING_FROM_PARENT = '0x0971f04e1eaa7ae8';
/**
   * _DATABINDING_WRITE_DATA_HASH_STRING_FROM_PARENT_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @param {any} p2
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_HASH_STRING_FROM_PARENT_BY_HASH = '0x20209529689e0953';
/**
   * _DATABINDING_WRITE_DATA_INT
   *
   * @param {any} p0
   * @param {number} p1
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_INT = '0x335c3f6b3766b8d9';
/**
   * _DATABINDING_WRITE_DATA_INT_FROM_PARENT
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {number} p2
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_INT_FROM_PARENT = '0x9efa98238ba08fc4';
/**
   * _DATABINDING_WRITE_DATA_INT_FROM_PARENT_BY_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @param {any} p2
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_INT_FROM_PARENT_BY_HASH = '0x9d6e10a41d6ed6ec';
/**
   * _DATABINDING_WRITE_DATA_POSSE_ID
   *
   * @param {any} p0
   * @param {string | number} p1
   * @param {any} posseId
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_POSSE_ID = '0xc70041408e16be2e';
/**
   * _DATABINDING_WRITE_DATA_SCRIPT_VARIABLES
   *
   * @param {number} p0
   * @param {number} p1
   * @param {any[]} args
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_SCRIPT_VARIABLES = '0xab888b4b91046771';
/**
   * _DATABINDING_WRITE_DATA_STRING
   *
   * @param {any} p0
   * @param {string | number} p1
   * @return {void}
   */
export const _DATABINDING_WRITE_DATA_STRING = '0xe1bd342f2872aee9';
/**
   * _DATABINDING_WRITE_STRING_FROM_HASH
   *
   * @param {any} p0
   * @param {number} p1
   * @param {string | number} p2
   * @return {void}
   */
export const _DATABINDING_WRITE_STRING_FROM_HASH = '0xa3bd6ff95e713ee5';
/**
   * _VIRTUAL_COLLECTION_EXISTS
   *
   * @param {any} p0
   * @return {any}
   */
export const _VIRTUAL_COLLECTION_EXISTS = '0x37963b56755bfb35';
/**
   * _VIRTUAL_COLLECTION_ITEM_ADD
   *
   * @param {any} p0
   * @param {number} index
   * @param {number} p2
   * @param {any} p3
   * @return {void}
   */
export const _VIRTUAL_COLLECTION_ITEM_ADD = '0x6dcbf187221cf73d';
/**
   * _VIRTUAL_COLLECTION_RESET
   *
   * @param {any} p0
   * @return {void}
   */
export const _VIRTUAL_COLLECTION_RESET = '0x09d95666ed2b5f60';
/**
   * _VIRTUAL_COLLECTION_SET_INTEREST_INDEX
   *
   * @param {any} p0
   * @param {number} interestIndex
   * @return {void}
   */
export const _VIRTUAL_COLLECTION_SET_INTEREST_INDEX = '0x49a8447533308bcf';
/**
   * _VIRTUAL_COLLECTION_SET_SIZE
   *
   * @param {any} p0
   * @param {number} size
   * @return {void}
   */
export const _VIRTUAL_COLLECTION_SET_SIZE = '0x9dce9b01a93b58bc';
/**
   * DATAARRAY_GET_BOOL
   *
   * @param {DataView} arrayData
   * @param {number} arrayIndex
   * @return {boolean}
   */
export const DATAARRAY_GET_BOOL = '0xab1231d2de52f2d3';
/**
   * DATAARRAY_GET_COUNT
   *
   * @param {DataView} arrayData
   * @return {number}
   */
export const DATAARRAY_GET_COUNT = '0x6a885bf69239e539';
/**
   * DATAARRAY_GET_DICT
   *
   * @param {DataView} arrayData
   * @param {number} arrayIndex
   * @return {any}
   */
export const DATAARRAY_GET_DICT = '0xa010655985853485';
/**
   * DATAARRAY_GET_FLOAT
   *
   * @param {DataView} arrayData
   * @param {number} arrayIndex
   * @return {number}
   */
export const DATAARRAY_GET_FLOAT = '0xa9d003cf419cb81e';
/**
   * DATAARRAY_GET_INT
   *
   * @param {DataView} arrayData
   * @param {number} arrayIndex
   * @return {number}
   */
export const DATAARRAY_GET_INT = '0x96dea500b6ebbe53';
/**
   * DATAARRAY_GET_STRING
   *
   * @param {DataView} arrayData
   * @param {number} arrayIndex
   * @return {string | number}
   */
export const DATAARRAY_GET_STRING = '0xb6790a8ff80f889f';
/**
   * DATAARRAY_GET_TYPE
   * Types:
   * 1 = Boolean
   * 2 = Integer
   * 3 = Float
   * 4 = String
   * 5 = Vector3
   * 6 = Object
   * 7 = Array
   *
   * @param {DataView} arrayData
   * @param {number} arrayIndex
   * @return {number}
   */
export const DATAARRAY_GET_TYPE = '0x151dafe6b3b9888f';
/**
   * DATAARRAY_GET_VECTOR
   *
   * @param {DataView} arrayData
   * @param {number} arrayIndex
   * @return {Vector3}
   */
export const DATAARRAY_GET_VECTOR = '0x850da2750da14e9a';
/**
   * DATADICT_GET_ARRAY
   *
   * @param {DataView} objectData
   * @param {string | number} key
   * @return {any}
   */
export const DATADICT_GET_ARRAY = '0x1b5447cf18544b18';
/**
   * DATADICT_GET_BOOL
   *
   * @param {DataView} objectData
   * @param {string | number} key
   * @return {boolean}
   */
export const DATADICT_GET_BOOL = '0x175e915a486ee548';
/**
   * DATADICT_GET_DICT
   *
   * @param {DataView} objectData
   * @param {string | number} key
   * @return {any}
   */
export const DATADICT_GET_DICT = '0x4d7a30130f46ac9c';
/**
   * DATADICT_GET_FLOAT
   *
   * @param {DataView} objectData
   * @param {string | number} key
   * @return {number}
   */
export const DATADICT_GET_FLOAT = '0x814643eca258adf5';
/**
   * DATADICT_GET_INT
   *
   * @param {DataView} objectData
   * @param {string | number} key
   * @return {number}
   */
export const DATADICT_GET_INT = '0x9d896a3b87d96e2b';
/**
   * DATADICT_GET_STRING
   *
   * @param {DataView} objectData
   * @param {string | number} key
   * @return {string | number}
   */
export const DATADICT_GET_STRING = '0xe37b38c0b4e95dfa';
/**
   * DATADICT_GET_TYPE
   * Types:
   * 1 = Boolean
   * 2 = Integer
   * 3 = Float
   * 4 = String
   * 5 = Vector3
   * 6 = Object
   * 7 = Array
   *
   * @param {DataView} objectData
   * @param {string | number} key
   * @return {number}
   */
export const DATADICT_GET_TYPE = '0x92e11e3ca4c7cdf0';
/**
   * DATADICT_GET_VECTOR
   *
   * @param {DataView} objectData
   * @param {string | number} key
   * @return {Vector3}
   */
export const DATADICT_GET_VECTOR = '0xe459c941431e0ffa';
/**
   * DATADICT_IS_ARRAY_VALID
   *
   * @param {DataView} fileDict
   * @return {boolean}
   */
export const DATADICT_IS_ARRAY_VALID = '0xb04b69cf277d15c0';
/**
   * DATADICT_IS_DICT_VALID
   *
   * @param {DataView} fileDict
   * @return {boolean}
   */
export const DATADICT_IS_DICT_VALID = '0x4607d57c5f7d332a';
/**
   * DATADICT_SET_INT
   *
   * @param {DataView} objectData
   * @param {string | number} key
   * @param {number} value
   * @return {void}
   */
export const DATADICT_SET_INT = '0x26fdf5e99aa2f3e9';
/**
   * DATAFILE_CREATE
   *
   * @param {number} index
   * @return {void}
   */
export const DATAFILE_CREATE = '0x56b7291fb953dd51';
/**
   * DATAFILE_DELETE
   *
   * @param {number} index
   * @return {void}
   */
export const DATAFILE_DELETE = '0x9fb90eedea9f2d5c';
/**
   * DATAFILE_DELETE_REQUESTED_FILE
   *
   * @param {any} p0
   * @return {boolean}
   */
export const DATAFILE_DELETE_REQUESTED_FILE = '0x604b8ed1a482f9df';
/**
   * DATAFILE_GET_FILE_DICT
   *
   * @param {number} index
   * @return {any}
   */
export const DATAFILE_GET_FILE_DICT = '0xbbd8cf823cae557c';
/**
   * DATAFILE_HAS_LOADED_FILE_DATA
   *
   * @param {any} p0
   * @return {boolean}
   */
export const DATAFILE_HAS_LOADED_FILE_DATA = '0x17279c820464cee0';
/**
   * DATAFILE_HAS_VALID_FILE_DATA
   *
   * @param {any} p0
   * @return {boolean}
   */
export const DATAFILE_HAS_VALID_FILE_DATA = '0xe60100389e50eade';
/**
   * DATAFILE_SELECT_ACTIVE_FILE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {boolean}
   */
export const DATAFILE_SELECT_ACTIVE_FILE = '0x46102a0989ad80b5';
/**
   * DATAFILE_UGC_SELECT_DATA
   * Reloops value returned by UGC_QUERY_GET_CONTENT_NUM
   *
   * @param {any} ugcRequestId
   * @param {number} index
   * @param {any} p2
   * @return {any}
   */
export const DATAFILE_UGC_SELECT_DATA = '0x790ec421078f5c4e';
/**
   * DATAFILE_WATCH_REQUEST_ID
   * Adds the given request ID to the watch list.
   *
   * @param {number} id
   * @return {void}
   */
export const DATAFILE_WATCH_REQUEST_ID = '0xa5834834ca8fd7fc';
/**
   * PARSEDDATA_IS_FILE_LOADED
   *
   * @param {number} fileHandle
   * @return {boolean}
   */
export const PARSEDDATA_IS_FILE_LOADED = '0x603ac35fd4602c76';
/**
   * PARSEDDATA_IS_FILE_VALID
   *
   * @param {number} fileHandle
   * @return {boolean}
   */
export const PARSEDDATA_IS_FILE_VALID = '0x7907969497ea92f5';
/**
   * PARSEDDATA_RQ_FILLOUT_HASH
   * Old name: _DATAFILE_GET_HASH
   *
   * @param {DataView} p1
   * @return {[boolean, number]}
   */
export const PARSEDDATA_RQ_FILLOUT_HASH = '0xfbff3ff2f5e80c0b';
/**
   * PARSEDDATA_RQ_FILLOUT_NODE
   * Old name: _DATAFILE_GET_DATA_NODE_INDEX
   *
   * @param {DataView} p1
   * @return {[boolean, number]}
   */
export const PARSEDDATA_RQ_FILLOUT_NODE = '0x83c3ed532b6e5d07';
/**
   * PARSEDDATA_RQ_FILLOUT_STRING_127
   *
   * @param {string | number} p0
   * @param {DataView} p1
   * @return {boolean}
   */
export const PARSEDDATA_RQ_FILLOUT_STRING_127 = '0x951327435dc5164b';
/**
   * UGC2_SET_PLAYER_DATA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const UGC2_SET_PLAYER_DATA = '0xe79c70e77e0973c7';
/**
   * _0x1C65CC931C0F946F
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x1C65CC931C0F946F = '0x1c65cc931c0f946f';
/**
   * _0x277251C161B4C3F4
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x277251C161B4C3F4 = '0x277251c161b4c3f4';
/**
   * _0x3168BA5D6DECE323
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const _0x3168BA5D6DECE323 = '0x3168ba5d6dece323';
/**
   * _0x4F9E3ED7617123AC
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x4F9E3ED7617123AC = '0x4f9e3ed7617123ac';
/**
   * _0x7681B677400C7071
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x7681B677400C7071 = '0x7681b677400c7071';
/**
   * _0x9F130129EBC31B34
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x9F130129EBC31B34 = '0x9f130129ebc31b34';
/**
   * _0xBC0DF006A4952C68
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xBC0DF006A4952C68 = '0xbc0df006a4952c68';
/**
   * _0xCA56DD6AB7A39F64
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xCA56DD6AB7A39F64 = '0xca56dd6ab7a39f64';
/**
   * _0xE13634BB6BAF0734
   *
   * @param {number} p0
   * @param {number} p1
   * @return {number}
   */
export const _0xE13634BB6BAF0734 = '0xe13634bb6baf0734';
/**
   * _PARSEDDATA_GET_BOOL
   *
   * @param {DataView} p1
   * @param {number} p2
   * @return {[boolean, boolean]}
   */
export const _PARSEDDATA_GET_BOOL = '0xa63cd20f19b961ab';
/**
   * _PARSEDDATA_GET_ENTRIES
   * Returns false when there are no entries.
   *
   * @param {DataView} p0
   * @return {boolean}
   */
export const _PARSEDDATA_GET_ENTRIES = '0xed4413cee1bf142c';
/**
   * _PARSEDDATA_GET_FILE
   * Opens file.
   *
   * @param {DataView} p0
   * @return {void}
   */
export const _PARSEDDATA_GET_FILE = '0x91ded5dd64bb2691';
/**
   * _PARSEDDATA_GET_FLOAT
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {number} p2
   * @return {boolean}
   */
export const _PARSEDDATA_GET_FLOAT = '0xb2b42607f7867576';
/**
   * _PARSEDDATA_GET_INT
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {number} p2
   * @return {boolean}
   */
export const _PARSEDDATA_GET_INT = '0x52fc26d2d2fc2987';
/**
   * _PARSEDDATA_GET_NUM_CHILDREN
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _PARSEDDATA_GET_NUM_CHILDREN = '0x6beb168d5195e7ab';
/**
   * _PARSEDDATA_GET_SECTION
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {number} section
   * @return {boolean}
   */
export const _PARSEDDATA_GET_SECTION = '0x44b3a36933ac009c';
/**
   * _PARSEDDATA_LOAD_FILE_HASH
   * LOAD_PARSEDDATA_FILE_FAILSAFE_HASH
   * Returns parseddata script fileHandle
   *
   * @param {number} p0
   * @return {number}
   */
export const _PARSEDDATA_LOAD_FILE_HASH = '0xd97d8d905f1562f2';
/**
   * _PARSEDDATA_REGISTER_QUERY
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _PARSEDDATA_REGISTER_QUERY = '0xae156a747c39a741';
/**
   * _PARSEDDATA_RQ_FILLOUT_BOOL
   * Old name: _DATAFILE_GET_BOOL
   *
   * @param {DataView} p1
   * @return {[boolean, boolean]}
   */
export const _PARSEDDATA_RQ_FILLOUT_BOOL = '0x0d9138f3f8261df7';
/**
   * _PARSEDDATA_RQ_FILLOUT_FLOAT
   * Old name: _DATAFILE_GET_FLOAT
   *
   * @param {DataView} p1
   * @return {[boolean, number]}
   */
export const _PARSEDDATA_RQ_FILLOUT_FLOAT = '0x7f034fc3e891b57a';
/**
   * _PARSEDDATA_RQ_FILLOUT_INT
   * Old name: _DATAFILE_GET_INT
   *
   * @param {DataView} p1
   * @return {[boolean, number]}
   */
export const _PARSEDDATA_RQ_FILLOUT_INT = '0xef44acc657352a35';
/**
   * _PARSEDDATA_RQ_FILLOUT_STRING_63
   * Old name: _DATAFILE_GET_STRING
   *
   * @param {string | number} p0
   * @param {DataView} p1
   * @return {boolean}
   */
export const _PARSEDDATA_RQ_FILLOUT_STRING_63 = '0x08eaf8e9f2eb7b2e';
/**
   * _PARSEDDATA_RQ_FILLOUT_VECTOR
   * Old name: _DATAFILE_GET_VECTOR
   *
   * @param {DataView} p1
   * @return {[boolean, Vector3]}
   */
export const _PARSEDDATA_RQ_FILLOUT_VECTOR = '0x06fbf89b12da279c';
/**
   * _PARSEDDATA_RQ_GET_NUM_NODES
   *
   * @param {any} p0
   * @return {any}
   */
export const _PARSEDDATA_RQ_GET_NUM_NODES = '0xdf01b1f7a886b42d';
/**
   * _PARSEDDATA_UNLOAD_FILE
   *
   * @param {number} fileHandle
   * @return {void}
   */
export const _PARSEDDATA_UNLOAD_FILE = '0x129567f0c05f81b9';
/**
   * GET_GAME_VERSION_NAME
   * Return example: 1207.69_dev_pc, 1436.28_dev_live_tu
   * 
   * Old name: _GET_GAME_BUILD_STRING
   *
  
   * @return {string | number}
   */
export const GET_GAME_VERSION_NAME = '0x05a5f662ad35c573';
/**
   * _0xA8D970D8A72640A6
   * nullsub, doesn't do anything
   *
  
   * @return {any}
   */
export const _0xA8D970D8A72640A6 = '0xa8d970d8a72640a6';
/**
   * _0xACF9CB705BEFA8CB
   * nullsub, doesn't do anything
   *
  
   * @return {any}
   */
export const _0xACF9CB705BEFA8CB = '0xacf9cb705befa8cb';
/**
   * DECOR_EXIST_ON
   * Returns whether or not the specified property is set for the entity.
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @return {boolean}
   */
export const DECOR_EXIST_ON = '0xd9d1cdbf3464dcdf';
/**
   * DECOR_GET_BOOL
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @return {boolean}
   */
export const DECOR_GET_BOOL = '0xdef3f1b071abb197';
/**
   * DECOR_GET_FLOAT
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @return {number}
   */
export const DECOR_GET_FLOAT = '0xe5ff70cd842ca9d4';
/**
   * DECOR_GET_INT
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @return {number}
   */
export const DECOR_GET_INT = '0x44db62727762fd9b';
/**
   * DECOR_IS_REGISTERED_AS_TYPE
   * type: see DECOR_REGISTER
   *
   * @param {string | number} propertyName
   * @param {number} type
   * @return {boolean}
   */
export const DECOR_IS_REGISTERED_AS_TYPE = '0x72355278c069f272';
/**
   * DECOR_REGISTER
   *
   * @param {string | number} propertyName
   * @param {number} type
   * @return {void}
   */
export const DECOR_REGISTER = '0x0b253d644e3c36b3';
/**
   * DECOR_REMOVE
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @return {boolean}
   */
export const DECOR_REMOVE = '0x2ba7f5877a088a1d';
/**
   * DECOR_REMOVE_ALL
   *
   * @param {number} entity
   * @return {boolean}
   */
export const DECOR_REMOVE_ALL = '0x88942780e0adea42';
/**
   * DECOR_SET_BOOL
   * This function sets metadata of type bool to specified entity.
   * 
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @param {boolean} value
   * @return {boolean}
   */
export const DECOR_SET_BOOL = '0xfe26e4609b1c3772';
/**
   * DECOR_SET_FLOAT
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @param {number} value
   * @return {boolean}
   */
export const DECOR_SET_FLOAT = '0x238f8b0c1c7fe834';
/**
   * DECOR_SET_INT
   * Sets property to int.
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @param {number} value
   * @return {boolean}
   */
export const DECOR_SET_INT = '0xe88f4d7f52a6090f';
/**
   * DECOR_SET_STRING
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @param {string | number} value
   * @return {boolean}
   */
export const DECOR_SET_STRING = '0x0671c1a3ff7afdfc';
/**
   * _DECOR_GET_UINT8
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @return {number}
   */
export const _DECOR_GET_UINT8 = '0xb1682b2443f0540b';
/**
   * _DECOR_REGISTER_2
   *
   * @param {string | number} propertyName
   * @param {number} type
   * @param {boolean} p2
   * @return {void}
   */
export const _DECOR_REGISTER_2 = '0x4587374f88b7f6c2';
/**
   * _DECOR_SET_UINT8
   *
   * @param {number} entity
   * @param {string | number} propertyName
   * @param {number} value
   * @return {boolean}
   */
export const _DECOR_SET_UINT8 = '0x4bdc83150d43772d';
/**
   * GET_IS_LOADING_SCREEN_ACTIVE
   *
  
   * @return {boolean}
   */
export const GET_IS_LOADING_SCREEN_ACTIVE = '0x71d4bf5890659b0c';
/**
   * IS_DLC_PRESENT
   *
   * @param {number} dlcHash
   * @return {boolean}
   */
export const IS_DLC_PRESENT = '0x2763dc12bbe2bb6f';
/**
   * _GET_SPECIAL_EDITION_CASH_CAMP_BONUS_ENABLED
   *
  
   * @return {boolean}
   */
export const _GET_SPECIAL_EDITION_CASH_CAMP_BONUS_ENABLED = '0x1db9d61e505ae3fc';
/**
   * _GET_SPECIAL_EDITION_CORE_STATS_BONUS_ENABLED
   *
  
   * @return {boolean}
   */
export const _GET_SPECIAL_EDITION_CORE_STATS_BONUS_ENABLED = '0xa16b4fba7887d7ba';
/**
   * APPLY_FORCE_TO_ENTITY
   *
   * @param {number} entity
   * @param {number} forceFlags
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} offX
   * @param {number} offY
   * @param {number} offZ
   * @param {number} boneIndex
   * @param {boolean} isDirectionRel
   * @param {boolean} ignoreUpVec
   * @param {boolean} isForceRel
   * @param {boolean} p12
   * @param {boolean} p13
   * @return {void}
   */
export const APPLY_FORCE_TO_ENTITY = '0xf15e8f5d333f09c4';
/**
   * APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS
   * p6/relative - makes the xyz force not relative to world coords, but to something else
   * p7/highForce - setting false will make the force really low
   *
   * @param {number} entity
   * @param {number} forceType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} component
   * @param {boolean} isDirectionRel
   * @param {boolean} isForceRel
   * @param {boolean} p8
   * @return {void}
   */
export const APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS = '0x31da7cec5334db37';
/**
   * ATTACH_ENTITY_TO_ENTITY
   * Attaches entity1 to bone (boneIndex) of entity2.
   * 
   * boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
   * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
   * 
   * useSoftPinning - if set to false attached entity will not detach when fixed
   * collision - controls collision between the two entities (FALSE disables collision).
   * isPed - pitch doesn't work when false and roll will only work on negative numbers (only peds)
   * vertexIndex - position of vertex
   * fixedRot - if false it ignores entity vector
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} boneIndex
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {boolean} p9
   * @param {boolean} useSoftPinning
   * @param {boolean} collision
   * @param {boolean} isPed
   * @param {number} vertexIndex
   * @param {boolean} fixedRot
   * @param {boolean} p15
   * @param {boolean} p16
   * @return {void}
   */
export const ATTACH_ENTITY_TO_ENTITY = '0x6b9bbd38ab0796df';
/**
   * ATTACH_ENTITY_TO_ENTITY_PHYSICALLY
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} p2
   * @param {number} boneIndex
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @param {number} p10
   * @param {number} p11
   * @param {number} p12
   * @param {number} p13
   * @param {boolean} p14
   * @param {boolean} p15
   * @param {boolean} p16
   * @param {boolean} p17
   * @param {number} p18
   * @param {boolean} p19
   * @param {number} p20
   * @param {number} p21
   * @return {void}
   */
export const ATTACH_ENTITY_TO_ENTITY_PHYSICALLY = '0xb629a43ca1643481';
/**
   * CLEAR_ENTITY_LAST_DAMAGE_ENTITY
   *
   * @param {number} entity
   * @return {void}
   */
export const CLEAR_ENTITY_LAST_DAMAGE_ENTITY = '0xbb19ac7d4dcefd0f';
/**
   * CREATE_FORCED_OBJECT
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {any} p3
   * @param {number} modelHash
   * @param {boolean} p5
   * @return {void}
   */
export const CREATE_FORCED_OBJECT = '0x0961a905afbc34c7';
/**
   * CREATE_MODEL_HIDE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} model
   * @param {boolean} p5
   * @return {void}
   */
export const CREATE_MODEL_HIDE = '0x069848b3fb3c4426';
/**
   * CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} model
   * @param {boolean} p5
   * @return {void}
   */
export const CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS = '0xd136090a9aaab17d';
/**
   * CREATE_MODEL_SWAP
   * Only works with objects!
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} originalModel
   * @param {number} newModel
   * @param {boolean} p6
   * @return {void}
   */
export const CREATE_MODEL_SWAP = '0x10b2218320b6f5ac';
/**
   * DELETE_ENTITY
   * Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
   *
   * @param {number} entity
   * @return {void}
   */
export const DELETE_ENTITY = '0x4cd38c78bd19a497';
/**
   * DETACH_ENTITY
   *
   * @param {number} entity
   * @param {boolean} p1
   * @param {boolean} collision
   * @return {void}
   */
export const DETACH_ENTITY = '0x64cde9d6bf8ecad3';
/**
   * DOES_ENTITY_BELONG_TO_THIS_SCRIPT
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {boolean}
   */
export const DOES_ENTITY_BELONG_TO_THIS_SCRIPT = '0x622b1980cbe13332';
/**
   * DOES_ENTITY_EXIST
   * Checks if the Entity exists
   *
   * @param {number} entity
   * @return {boolean}
   */
export const DOES_ENTITY_EXIST = '0xd42bd6eb2e0f1677';
/**
   * DOES_ENTITY_HAVE_DRAWABLE
   *
   * @param {number} entity
   * @return {boolean}
   */
export const DOES_ENTITY_HAVE_DRAWABLE = '0x20487f0da9af164a';
/**
   * DOES_ENTITY_HAVE_PHYSICS
   *
   * @param {number} entity
   * @return {boolean}
   */
export const DOES_ENTITY_HAVE_PHYSICS = '0xa512b3f1b2a0b51c';
/**
   * FIND_ANIM_EVENT_PHASE
   *
   * @param {string | number} animDictionary
   * @param {string | number} animName
   * @param {string | number} p2
   * @param {DataView} p3
   * @param {DataView} p4
   * @return {boolean}
   */
export const FIND_ANIM_EVENT_PHASE = '0x42718cc559bd7776';
/**
   * FORCE_ENTITY_AI_AND_ANIMATION_UPDATE
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {void}
   */
export const FORCE_ENTITY_AI_AND_ANIMATION_UPDATE = '0x4c9e96473d4f1a88';
/**
   * FREEZE_ENTITY_POSITION
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const FREEZE_ENTITY_POSITION = '0x7d9efb7ad6b19754';
/**
   * GET_ANIM_DURATION
   *
   * @param {string | number} animDict
   * @param {string | number} animName
   * @return {number}
   */
export const GET_ANIM_DURATION = '0x9ffaf4940a54cc09';
/**
   * GET_CARRIABLE_ENTITY_STATE
   * enum eCarriableState
   * {
   *   CARRIABLE_STATE_NONE,
   *   CARRIABLE_STATE_TRANSITIONING_TO_HOGTIED,
   *   CARRIABLE_STATE_CARRIABLE_INTRO,
   *   CARRIABLE_STATE_CARRIABLE,
   *   CARRIABLE_STATE_BEING_PICKED_UP_FROM_GROUND,
   *   CARRIABLE_STATE_CARRIED_BY_HUMAN,
   *   CARRIABLE_STATE_BEING_PLACED_ON_GROUND,
   *   CARRIABLE_STATE_CARRIED_BY_MOUNT,
   *   CARRIABLE_STATE_BEING_PLACED_ON_MOUNT,
   *   CARRIABLE_STATE_BEING_PICKED_UP_FROM_MOUNT,
   *   CARRIABLE_STATE_BEING_CUT_FREE,
   *   CARRIABLE_STATE_BEING_PLACED_ON_GROUND_ESCAPE,
   *   CARRIABLE_STATE_BEING_PLACED_IN_VEHICLE
   * };
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_CARRIABLE_ENTITY_STATE = '0x61914209c36efddb';
/**
   * GET_ENTITY_ALPHA
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_ALPHA = '0x1bb501624faf2bea';
/**
   * GET_ENTITY_ATTACHED_TO
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_ATTACHED_TO = '0x56d713888a566481';
/**
   * GET_ENTITY_BONE_INDEX_BY_NAME
   *
   * @param {number} entity
   * @param {string | number} boneName
   * @return {number}
   */
export const GET_ENTITY_BONE_INDEX_BY_NAME = '0xbaca8fe9c76c124e';
/**
   * GET_ENTITY_COLLISION_DISABLED
   *
   * @param {number} entity
   * @return {boolean}
   */
export const GET_ENTITY_COLLISION_DISABLED = '0xaa2fadd30f45a9da';
/**
   * GET_ENTITY_COORDS
   * Gets the current coordinates for a specified entity.
   * `entity` = The entity to get the coordinates from.
   * `alive` = Unused by the game, potentially used by debug builds in order to assert whether or not an entity was alive.
   * 
   * If entity is a ped and it's in a vehicle or on a mount the coords of that entity are returned. Set 'realCoords' to true when you need the true ped coords.
   *
   * @param {number} entity
   * @param {boolean} alive
   * @param {boolean} realCoords
   * @return {Vector3}
   */
export const GET_ENTITY_COORDS = '0xa86d5f069399f44d';
/**
   * GET_ENTITY_FORWARD_VECTOR
   * Gets the entity's forward vector in XY(Z) eulers.
   *
   * @param {number} entity
   * @return {Vector3}
   */
export const GET_ENTITY_FORWARD_VECTOR = '0x2412d9c05bb09b97';
/**
   * GET_ENTITY_FORWARD_X
   * Gets the X-component of the entity's forward vector.
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_FORWARD_X = '0xdb0954e9960f6457';
/**
   * GET_ENTITY_FORWARD_Y
   * Gets the Y-component of the entity's forward vector.
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_FORWARD_Y = '0x9a5c073ecbda7ee7';
/**
   * GET_ENTITY_HEADING
   * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_HEADING = '0xc230dd956e2f5507';
/**
   * GET_ENTITY_HEALTH
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_HEALTH = '0x82368787ea73c0f7';
/**
   * GET_ENTITY_HEIGHT
   *
   * @param {number} entity
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} atTop
   * @param {boolean} inWorldCoords
   * @return {number}
   */
export const GET_ENTITY_HEIGHT = '0x296debc84474b375';
/**
   * GET_ENTITY_HEIGHT_ABOVE_GROUND
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_HEIGHT_ABOVE_GROUND = '0x0d3b5baea08f63e9';
/**
   * GET_ENTITY_LOD_DIST
   * Returns the LOD distance of an entity.
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_LOD_DIST = '0xdf240d0c2a948683';
/**
   * GET_ENTITY_MATRIX
   *
   * @param {number} entity
   * @return {[Vector3, Vector3, Vector3, Vector3]}
   */
export const GET_ENTITY_MATRIX = '0x3a9b1120af13fbf2';
/**
   * GET_ENTITY_MAX_HEALTH
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {number}
   */
export const GET_ENTITY_MAX_HEALTH = '0x15d757606d170c3c';
/**
   * GET_ENTITY_MODEL
   * Returns the model hash from the entity
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_MODEL = '0xda76a9f39210d365';
/**
   * GET_ENTITY_PITCH
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_PITCH = '0xef355abeff7f5005';
/**
   * GET_ENTITY_POPULATION_TYPE
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_POPULATION_TYPE = '0xade28862b6d7b85b';
/**
   * GET_ENTITY_ROLL
   * Displays the current ROLL axis of the entity [-180.0000/180.0000+]
   * (Sideways Roll) such as a vehicle tipped on its side
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_ROLL = '0xbf966536fa8b6879';
/**
   * GET_ENTITY_ROTATION
   *
   * @param {number} entity
   * @param {number} rotationOrder
   * @return {Vector3}
   */
export const GET_ENTITY_ROTATION = '0xe09caf86c32cb48f';
/**
   * GET_ENTITY_SPEED
   * Result is in meters per second (m/s)
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_SPEED = '0xfb6ba510a533df81';
/**
   * GET_ENTITY_SPEED_VECTOR
   *
   * @param {number} entity
   * @param {boolean} relative
   * @return {Vector3}
   */
export const GET_ENTITY_SPEED_VECTOR = '0xf2db09816a419dc5';
/**
   * GET_ENTITY_SUBMERGED_LEVEL
   * Get how much of the entity is submerged.  1.0f is whole entity.
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_SUBMERGED_LEVEL = '0x4a77c3f73fd9e831';
/**
   * GET_ENTITY_TYPE
   * Returns entityType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityType
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_TYPE = '0x97f696aca466b4e0';
/**
   * GET_ENTITY_UPRIGHT_VALUE
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_UPRIGHT_VALUE = '0x56398be65160c3be';
/**
   * GET_ENTITY_VELOCITY
   *
   * @param {number} entity
   * @param {number} p1
   * @return {Vector3}
   */
export const GET_ENTITY_VELOCITY = '0x4805d2b1d8cf94a9';
/**
   * GET_IS_ANIMAL
   *
   * @param {number} entity
   * @return {boolean}
   */
export const GET_IS_ANIMAL = '0x9a100f1cf4546629';
/**
   * GET_MATCHING_ENTITIES
   *
   * @param {number} volume
   * @param {number} itemSet
   * @param {number} entityType
   * @param {any} p3
   * @param {number} p4
   * @param {string | number} p5
   * @return {number}
   */
export const GET_MATCHING_ENTITIES = '0x84ccf9a12942c83d';
/**
   * GET_NEAREST_PARTICIPANT_TO_ENTITY
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_NEAREST_PARTICIPANT_TO_ENTITY = '0x6888a43c35a5f630';
/**
   * GET_NEAREST_PLAYER_TO_ENTITY
   *
   * @param {number} entity
   * @param {number} playerPedToIgnore
   * @param {number} flags
   * @return {number}
   */
export const GET_NEAREST_PLAYER_TO_ENTITY = '0x990e294fc387fb88';
/**
   * GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM
   *
   * @param {number} entity
   * @param {number} team
   * @param {number} playerPedToIgnore
   * @param {number} flags
   * @return {number}
   */
export const GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM = '0xb2c30c3b4aff718c';
/**
   * GET_OBJECT_INDEX_FROM_ENTITY_INDEX
   * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_OBJECT_INDEX_FROM_ENTITY_INDEX = '0x280bbe5601eaa983';
/**
   * GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS
   *
   * @param {number} entity
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @return {Vector3}
   */
export const GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS = '0x497c6b1a2c9ae69c';
/**
   * GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS
   * Offset values are relative to the entity.
   * 
   * x = left/right
   * y = forward/backward
   * z = up/down
   *
   * @param {number} entity
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @return {Vector3}
   */
export const GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS = '0x1899f328b0e12848';
/**
   * GET_PED_INDEX_FROM_ENTITY_INDEX
   * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_PED_INDEX_FROM_ENTITY_INDEX = '0x0f16d042bd640ea3';
/**
   * GET_VEHICLE_INDEX_FROM_ENTITY_INDEX
   * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_VEHICLE_INDEX_FROM_ENTITY_INDEX = '0xdf1e5aac561afc59';
/**
   * GET_WORLD_POSITION_OF_ENTITY_BONE
   * Returns the coordinates of an entity-bone.
   * https://github.com/femga/rdr3_discoveries/tree/master/boneNames
   *
   * @param {number} entity
   * @param {number} boneIndex
   * @return {Vector3}
   */
export const GET_WORLD_POSITION_OF_ENTITY_BONE = '0x82cfa50e34681ca5';
/**
   * HAS_ANIM_EVENT_FIRED
   *
   * @param {number} entity
   * @param {number} actionHash
   * @return {boolean}
   */
export const HAS_ANIM_EVENT_FIRED = '0x5851cc48405f4a07';
/**
   * HAS_COLLISION_LOADED_AROUND_ENTITY
   *
   * @param {number} entity
   * @return {boolean}
   */
export const HAS_COLLISION_LOADED_AROUND_ENTITY = '0xbeb1600952b9cf5c';
/**
   * HAS_COLLISION_LOADED_AROUND_POSITION
   * Old name: _HAS_COLLISION_LOADED_AT_COORDS
   *
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @return {boolean}
   */
export const HAS_COLLISION_LOADED_AROUND_POSITION = '0x6bfbdc46139c45ab';
/**
   * HAS_ENTITY_ANIM_FINISHED
   *
   * @param {number} entity
   * @param {string | number} animDict
   * @param {string | number} animName
   * @param {number} p3
   * @return {boolean}
   */
export const HAS_ENTITY_ANIM_FINISHED = '0xaeb40615337ef1e3';
/**
   * HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT
   *
   * @param {number} entity
   * @return {boolean}
   */
export const HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT = '0x73bb763880cd23a6';
/**
   * HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED
   *
   * @param {number} entity
   * @return {boolean}
   */
export const HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED = '0x9934e9c42d52d87e';
/**
   * HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE
   *
   * @param {number} entity
   * @return {boolean}
   */
export const HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE = '0x695d7c26de65c423';
/**
   * HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {boolean}
   */
export const HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY = '0x7b6e7bec1143ac86';
/**
   * HAS_ENTITY_CLEAR_LOS_TO_COORD
   *
   * @param {number} entity
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} flags
   * @return {boolean}
   */
export const HAS_ENTITY_CLEAR_LOS_TO_COORD = '0x0c9dbf48c6ba6e4c';
/**
   * HAS_ENTITY_CLEAR_LOS_TO_ENTITY
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} traceType
   * @return {boolean}
   */
export const HAS_ENTITY_CLEAR_LOS_TO_ENTITY = '0xfcdff7b72d23a1ac';
/**
   * HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT
   * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} traceType
   * @return {boolean}
   */
export const HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT = '0xe88f19660651d566';
/**
   * HAS_ENTITY_COLLIDED_WITH_ANYTHING
   *
   * @param {number} entity
   * @return {boolean}
   */
export const HAS_ENTITY_COLLIDED_WITH_ANYTHING = '0xdf18751ec74f90ff';
/**
   * IS_AN_ENTITY
   *
   * @param {number} handle
   * @return {boolean}
   */
export const IS_AN_ENTITY = '0x27cff3e5a286d3df';
/**
   * IS_ENTITY_AN_OBJECT
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_AN_OBJECT = '0x0a27a546a375fdef';
/**
   * IS_ENTITY_ATTACHED
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_ATTACHED = '0xee6ad63abf59c0b7';
/**
   * IS_ENTITY_ATTACHED_TO_ANY_OBJECT
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_ATTACHED_TO_ANY_OBJECT = '0x306c1f6178f01ab3';
/**
   * IS_ENTITY_ATTACHED_TO_ANY_PED
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_ATTACHED_TO_ANY_PED = '0xc841153ded2ca89a';
/**
   * IS_ENTITY_ATTACHED_TO_ANY_VEHICLE
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_ATTACHED_TO_ANY_VEHICLE = '0x12df6e0d2e736749';
/**
   * IS_ENTITY_ATTACHED_TO_ENTITY
   *
   * @param {number} from
   * @param {number} to
   * @return {boolean}
   */
export const IS_ENTITY_ATTACHED_TO_ENTITY = '0x154a3c529497053e';
/**
   * IS_ENTITY_AT_COORD
   * Checks if entity is within x/y/zSize distance of x/y/z. 
   * 
   * Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
   *
   * @param {number} entity
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} xSize
   * @param {number} ySize
   * @param {number} zSize
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {number} p9
   * @return {boolean}
   */
export const IS_ENTITY_AT_COORD = '0x5e58342602e94718';
/**
   * IS_ENTITY_AT_ENTITY
   * Checks if entity1 is within the box defined by x/y/zSize of entity2.
   * 
   * Last three parameters are almost always p5 = 0, p6 = 1, p7 = 0
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} xSize
   * @param {number} ySize
   * @param {number} zSize
   * @param {boolean} p5
   * @param {boolean} p6
   * @param {number} p7
   * @return {boolean}
   */
export const IS_ENTITY_AT_ENTITY = '0xc057f02b837a27f6';
/**
   * IS_ENTITY_A_MISSION_ENTITY
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_A_MISSION_ENTITY = '0x138190f64db4bbd1';
/**
   * IS_ENTITY_A_PED
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_A_PED = '0xcf8176912dda4ea5';
/**
   * IS_ENTITY_A_VEHICLE
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_A_VEHICLE = '0xc3d96af45fccec4c';
/**
   * IS_ENTITY_DEAD
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_DEAD = '0x7d5b1f88e7504bba';
/**
   * IS_ENTITY_IN_AIR
   *
   * @param {number} entity
   * @param {any} p1
   * @return {boolean}
   */
export const IS_ENTITY_IN_AIR = '0x886e37ec497200b6';
/**
   * IS_ENTITY_IN_ANGLED_AREA
   * Creates a spherical cone at origin that extends to surface with the angle specified. Then returns true if the entity is inside the spherical cone
   * 
   * Angle is measured in degrees.
   *
   * @param {number} entity
   * @param {number} originX
   * @param {number} originY
   * @param {number} originZ
   * @param {number} edgeX
   * @param {number} edgeY
   * @param {number} edgeZ
   * @param {number} angle
   * @param {boolean} p8
   * @param {boolean} p9
   * @param {any} p10
   * @return {boolean}
   */
export const IS_ENTITY_IN_ANGLED_AREA = '0xd3151e53134595e5';
/**
   * IS_ENTITY_IN_AREA
   *
   * @param {number} entity
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {any} p9
   * @return {boolean}
   */
export const IS_ENTITY_IN_AREA = '0x0c2634c40a16193e';
/**
   * IS_ENTITY_IN_VOLUME
   *
   * @param {number} entity
   * @param {number} volume
   * @param {boolean} p2
   * @param {number} p3
   * @return {boolean}
   */
export const IS_ENTITY_IN_VOLUME = '0x5a5526bc09c06623';
/**
   * IS_ENTITY_IN_WATER
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_IN_WATER = '0xdde5c125ac446723';
/**
   * IS_ENTITY_OCCLUDED
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_OCCLUDED = '0x140188e884645624';
/**
   * IS_ENTITY_ON_SCREEN
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_ON_SCREEN = '0x613c15d5d8db781f';
/**
   * IS_ENTITY_PLAYING_ANIM
   *
   * @param {number} entity
   * @param {string | number} animDict
   * @param {string | number} animName
   * @param {number} animType
   * @return {boolean}
   */
export const IS_ENTITY_PLAYING_ANIM = '0xdee49d5ca6c49148';
/**
   * IS_ENTITY_STATIC
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_STATIC = '0x86468adfa0f6b861';
/**
   * IS_ENTITY_TOUCHING_ENTITY
   *
   * @param {number} entity
   * @param {number} targetEntity
   * @return {boolean}
   */
export const IS_ENTITY_TOUCHING_ENTITY = '0x9a2304a64c3c8423';
/**
   * IS_ENTITY_TOUCHING_MODEL
   *
   * @param {number} entity
   * @param {number} modelHash
   * @return {boolean}
   */
export const IS_ENTITY_TOUCHING_MODEL = '0x2ae3ebc8deb9768b';
/**
   * IS_ENTITY_UPRIGHT
   *
   * @param {number} entity
   * @param {number} angle
   * @return {boolean}
   */
export const IS_ENTITY_UPRIGHT = '0xf6f6afd8d4fb2658';
/**
   * IS_ENTITY_UPSIDEDOWN
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_UPSIDEDOWN = '0x109de3da41aad94a';
/**
   * IS_ENTITY_VISIBLE
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_VISIBLE = '0xffc96ecb7fa404ca';
/**
   * IS_ENTITY_VISIBLE_TO_SCRIPT
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_VISIBLE_TO_SCRIPT = '0xf213c724e77f321a';
/**
   * IS_ENTITY_WAITING_FOR_WORLD_COLLISION
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_WAITING_FOR_WORLD_COLLISION = '0x5e1cc2e8dc3111dd';
/**
   * IS_MAP_ENTITY_PINNED
   *
   * @param {any} p0
   * @return {boolean}
   */
export const IS_MAP_ENTITY_PINNED = '0x1ff441d7954f8709';
/**
   * PIN_CLOSEST_MAP_ENTITY
   *
   * @param {number} modelHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} flags
   * @return {any}
   */
export const PIN_CLOSEST_MAP_ENTITY = '0x6f3068258a499e52';
/**
   * PLACE_ENTITY_ON_GROUND_PROPERLY
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {boolean}
   */
export const PLACE_ENTITY_ON_GROUND_PROPERLY = '0x9587913b9e772d29';
/**
   * PLAY_ENTITY_ANIM
   * https://github.com/femga/rdr3_discoveries/tree/master/animations
   *
   * @param {number} entity
   * @param {string | number} animName
   * @param {string | number} animDict
   * @param {number} p3
   * @param {boolean} loop
   * @param {boolean} stayInAnim
   * @param {boolean} p6
   * @param {number} delta
   * @param {any} bitset
   * @return {boolean}
   */
export const PLAY_ENTITY_ANIM = '0xdc6d22fab76d4874';
/**
   * REMOVE_FORCED_OBJECT
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const REMOVE_FORCED_OBJECT = '0x553fa683f2bcd814';
/**
   * REMOVE_MODEL_HIDE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const REMOVE_MODEL_HIDE = '0x3f38a98576f6213a';
/**
   * REMOVE_MODEL_SWAP
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} originalModel
   * @param {number} newModel
   * @param {boolean} p6
   * @return {void}
   */
export const REMOVE_MODEL_SWAP = '0x824e1c26a14cb817';
/**
   * RESET_ENTITY_ALPHA
   *
   * @param {number} entity
   * @return {void}
   */
export const RESET_ENTITY_ALPHA = '0x744b9ef44779d9ab';
/**
   * SCRIPT_OVERRIDE_ENTITY_LOOT_TABLE_PERMANENT
   * Sets the loot table an entity will carry. Returns true if loot table has been successfully set. Returns false if entity is not a ped or object.
   * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/loot_rewards.lua
   *
   * @param {number} entity
   * @param {number} lootTable
   * @return {boolean}
   */
export const SCRIPT_OVERRIDE_ENTITY_LOOT_TABLE_PERMANENT = '0x8c03cd6b5e0e85e8';
/**
   * SET_CAN_AUTO_VAULT_ON_ENTITY
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_CAN_AUTO_VAULT_ON_ENTITY = '0x80646744fa88f9d7';
/**
   * SET_CAN_CLIMB_ON_ENTITY
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_CAN_CLIMB_ON_ENTITY = '0x24aed2a608f93c4c';
/**
   * SET_ENTITY_ALPHA
   * skin - everything alpha except skin
   * Set entity alpha level. Ranging from 0 to 255 but changes occur after every 20 percent (after every 51).
   *
   * @param {number} entity
   * @param {number} alphaLevel
   * @param {boolean} skin
   * @return {void}
   */
export const SET_ENTITY_ALPHA = '0x0df7692b1d9e7ba7';
/**
   * SET_ENTITY_ALWAYS_PRERENDER
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_ALWAYS_PRERENDER = '0xacad101e1fb66689';
/**
   * SET_ENTITY_AS_MISSION_ENTITY
   * Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
   *
   * @param {number} entity
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const SET_ENTITY_AS_MISSION_ENTITY = '0xdc19c288082e586e';
/**
   * SET_ENTITY_AS_NO_LONGER_NEEDED
   * Marks the specified entity (ped, vehicle or object) as no longer needed.
   * Entities marked as no longer needed, will be deleted as the engine sees fit.
   *
   * @param {number} entity
   * @return {void}
   */
export const SET_ENTITY_AS_NO_LONGER_NEEDED = '0x4971d2f8162b9674';
/**
   * SET_ENTITY_CAN_BE_DAMAGED
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_CAN_BE_DAMAGED = '0x0d06d522b90e861f';
/**
   * SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP
   *
   * @param {number} entity
   * @param {boolean} bCanBeDamaged
   * @param {number} relGroup
   * @return {void}
   */
export const SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP = '0x0ef1afb18649e015';
/**
   * SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS
   * Sets whether the entity can be targeted without being in line-of-sight.
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS = '0x6d09f32e284d0fb7';
/**
   * SET_ENTITY_COLLISION
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @param {boolean} keepPhysics
   * @return {void}
   */
export const SET_ENTITY_COLLISION = '0xf66f820909453b8c';
/**
   * SET_ENTITY_COMPLETELY_DISABLE_COLLISION
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @param {boolean} keepPhysics
   * @return {void}
   */
export const SET_ENTITY_COMPLETELY_DISABLE_COLLISION = '0xe0580ec84813875a';
/**
   * SET_ENTITY_COORDS
   *
   * @param {number} entity
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @param {boolean} clearArea
   * @return {void}
   */
export const SET_ENTITY_COORDS = '0x06843da7060a026b';
/**
   * SET_ENTITY_COORDS_NO_OFFSET
   * Axis - Invert Axis Flags
   *
   * @param {number} entity
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @return {void}
   */
export const SET_ENTITY_COORDS_NO_OFFSET = '0x239a3351ac1da385';
/**
   * SET_ENTITY_DYNAMIC
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_DYNAMIC = '0xfbfc4473f66ce344';
/**
   * SET_ENTITY_HAS_GRAVITY
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_HAS_GRAVITY = '0x0cedb728a1083fa7';
/**
   * SET_ENTITY_HEADING
   *
   * @param {number} entity
   * @param {number} heading
   * @return {void}
   */
export const SET_ENTITY_HEADING = '0xcf2b9c0645c4651b';
/**
   * SET_ENTITY_HEALTH
   * Sets the entity's health. healthAmount sets the health value to that, and sets the maximum health core value. Setting healthAmount to 0 will kill the entity. entityKilledBy parameter can also be 0
   *
   * @param {number} entity
   * @param {number} healthAmount
   * @param {number} entityKilledBy
   * @return {void}
   */
export const SET_ENTITY_HEALTH = '0xac2767ed8bdfab15';
/**
   * SET_ENTITY_INVINCIBLE
   * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions.
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_INVINCIBLE = '0xa5c38736c426fcb8';
/**
   * SET_ENTITY_IS_TARGET_PRIORITY
   *
   * @param {number} entity
   * @param {boolean} p1
   * @param {number} p2
   * @return {void}
   */
export const SET_ENTITY_IS_TARGET_PRIORITY = '0x0a5d170c44cb2189';
/**
   * SET_ENTITY_LOAD_COLLISION_FLAG
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_LOAD_COLLISION_FLAG = '0x9b9ee31aed48072e';
/**
   * SET_ENTITY_LOD_DIST
   * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
   *
   * @param {number} entity
   * @param {number} value
   * @return {void}
   */
export const SET_ENTITY_LOD_DIST = '0x5fb407f0a7c877bf';
/**
   * SET_ENTITY_MAX_HEALTH
   *
   * @param {number} entity
   * @param {number} value
   * @return {void}
   */
export const SET_ENTITY_MAX_HEALTH = '0x166e7cf68597d8b5';
/**
   * SET_ENTITY_MOTION_BLUR
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_MOTION_BLUR = '0x516c6abd18322b63';
/**
   * SET_ENTITY_NOWEAPONDECALS
   * Old name: _SET_ENTITY_DECALS_DISABLED
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_NOWEAPONDECALS = '0xc64e597783be9a1d';
/**
   * SET_ENTITY_NO_COLLISION_ENTITY
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {boolean} thisFrameOnly
   * @return {void}
   */
export const SET_ENTITY_NO_COLLISION_ENTITY = '0xe037bf068223c38d';
/**
   * SET_ENTITY_ONLY_DAMAGED_BY_PLAYER
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_ONLY_DAMAGED_BY_PLAYER = '0x473598683095d430';
/**
   * SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP
   *
   * @param {number} entity
   * @param {boolean} p1
   * @param {number} relationshipGroup
   * @return {void}
   */
export const SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP = '0x6c1f6aa2f0add104';
/**
   * SET_ENTITY_PROOFS
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/ENTITY_PROOFS
   * BOOL p2: handles an additional special proofs flag, so it simply indicates whether it should be enabled or disabled, not sure what exactly it proofs the entity from though
   *
   * @param {number} entity
   * @param {number} proofsBitset
   * @param {boolean} specialFlag
   * @return {void}
   */
export const SET_ENTITY_PROOFS = '0xfaee099c6f890bb8';
/**
   * SET_ENTITY_QUATERNION
   *
   * @param {number} entity
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} w
   * @return {void}
   */
export const SET_ENTITY_QUATERNION = '0x100e7007d13e3687';
/**
   * SET_ENTITY_RENDER_SCORCHED
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_RENDER_SCORCHED = '0x85b8a7534e44bc23';
/**
   * SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK = '0x850c940ee3e7b8b5';
/**
   * SET_ENTITY_ROTATION
   *
   * @param {number} entity
   * @param {number} pitch
   * @param {number} roll
   * @param {number} yaw
   * @param {number} rotationOrder
   * @param {boolean} p5
   * @return {void}
   */
export const SET_ENTITY_ROTATION = '0x9cc8314dfede441e';
/**
   * SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION
   * Old name: _SET_ENTITY_CLEANUP_BY_ENGINE
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION = '0x740cb4f3f602c9f4';
/**
   * SET_ENTITY_VELOCITY
   * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
   *
   * @param {number} entity
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const SET_ENTITY_VELOCITY = '0x1c99bb7b6e96d16f';
/**
   * SET_ENTITY_VISIBLE
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENTITY_VISIBLE = '0x1794b4fcc84d812f';
/**
   * SET_OBJECT_AS_NO_LONGER_NEEDED
   * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
   *
  
   * @return {number}
   */
export const SET_OBJECT_AS_NO_LONGER_NEEDED = '0x3ae22deb5ba5a3e6';
/**
   * SET_PED_AS_NO_LONGER_NEEDED
   * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
   *
  
   * @return {number}
   */
export const SET_PED_AS_NO_LONGER_NEEDED = '0x2595dd4236549ce3';
/**
   * SET_VEHICLE_AS_NO_LONGER_NEEDED
   * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
   *
  
   * @return {number}
   */
export const SET_VEHICLE_AS_NO_LONGER_NEEDED = '0x629bfa74418d6239';
/**
   * STOP_ENTITY_ANIM
   *
   * @param {number} entity
   * @param {string | number} animation
   * @param {string | number} animGroup
   * @param {number} p3
   * @return {any}
   */
export const STOP_ENTITY_ANIM = '0x786591d986de9159';
/**
   * WOULD_ENTITY_BE_OCCLUDED
   *
   * @param {number} entityModelHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} p4
   * @return {boolean}
   */
export const WOULD_ENTITY_BE_OCCLUDED = '0x3546fab293ff2981';
/**
   * _0x002AAC783ED323ED
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x002AAC783ED323ED = '0x002aac783ed323ed';
/**
   * _0x007AAC783ED323ED
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x007AAC783ED323ED = '0x007aac783ed323ed';
/**
   * _0x0939E773925C4719
   *
  
   * @return {void}
   */
export const _0x0939E773925C4719 = '0x0939e773925c4719';
/**
   * _0x0CCEFC6C2C95DA2A
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0x0CCEFC6C2C95DA2A = '0x0ccefc6c2c95da2a';
/**
   * _0x0DB41D59E0F1502B
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0DB41D59E0F1502B = '0x0db41d59e0f1502b';
/**
   * _0x0FD7D7C232876E72
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0FD7D7C232876E72 = '0x0fd7d7c232876e72';
/**
   * _0x119A5714578F4E05
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x119A5714578F4E05 = '0x119a5714578f4e05';
/**
   * _0x120376C23F019C6C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x120376C23F019C6C = '0x120376c23f019c6c';
/**
   * _0x16908E859C3AB698
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x16908E859C3AB698 = '0x16908e859c3ab698';
/**
   * _0x188736456D1DEDE6
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x188736456D1DEDE6 = '0x188736456d1dede6';
/**
   * _0x20FAEE47427A4497
   *
  
   * @return {void}
   */
export const _0x20FAEE47427A4497 = '0x20faee47427a4497';
/**
   * _0x2A77EF9BEC8518F4
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x2A77EF9BEC8518F4 = '0x2a77ef9bec8518f4';
/**
   * _0x2D40BCBFE9305DEA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x2D40BCBFE9305DEA = '0x2d40bcbfe9305dea';
/**
   * _0x350E9211074955AF
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x350E9211074955AF = '0x350e9211074955af';
/**
   * _0x371D179701D9C082
   * Called if entity is in water and submerged level is larger than 1f. If CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION is true, it gets disabled as well.
   *
   * @param {number} entity
   * @return {void}
   */
export const _0x371D179701D9C082 = '0x371d179701d9c082';
/**
   * _0x37B01666BAE8F7EF
   * Seems to return true if entity is burned / scorched
   * _GET_ENTITY_*
   *
   * @param {number} entity
   * @return {any}
   */
export const _0x37B01666BAE8F7EF = '0x37b01666bae8f7ef';
/**
   * _0x37CEB637BA3B1A47
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x37CEB637BA3B1A47 = '0x37ceb637ba3b1a47';
/**
   * _0x383F64263F946E45
   * Used when checking if ped is in water
   *
   * @param {number} entity
   * @param {number} p2
   * @param {number} ped
   * @param {any} p4
   * @param {number} p5
   * @return {[boolean, number]}
   */
export const _0x383F64263F946E45 = '0x383f64263f946e45';
/**
   * _0x3AB3A77672F6473F
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {Vector3}
   */
export const _0x3AB3A77672F6473F = '0x3ab3a77672f6473f';
/**
   * _0x3EC28DA1FFAC9DDD
   * Used in Script Function DUELING_DID_PLAYER_DISARM_OPPONENT
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {any} p2
   * @param {any} p3
   * @return {boolean}
   */
export const _0x3EC28DA1FFAC9DDD = '0x3ec28da1ffac9ddd';
/**
   * _0x3F08C6163A4AB1D6
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x3F08C6163A4AB1D6 = '0x3f08c6163a4ab1d6';
/**
   * _ATTACH_ENTITY_TO_COORDS_PHYSICALLY
   * Attach an entity to coordinates physically better name may be perfered? seems to be used with boats `p_skiff02x` ? The last 6 params are always 0 everywhere in the base code. p7 = 500.0 some kind of time? p8 =1
   *
   * @param {number} entity
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} offsetx
   * @param {number} offsety
   * @param {number} offsetz
   * @param {number} p7
   * @param {boolean} p8
   * @param {number} p9
   * @param {number} p10
   * @param {number} p11
   * @param {number} p12
   * @param {number} p13
   * @param {number} p14
   * @return {void}
   */
export const _ATTACH_ENTITY_TO_COORDS_PHYSICALLY = '0x445d7d8ea66e373e';
/**
   * _0x56E0735D6273B227
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x56E0735D6273B227 = '0x56e0735d6273b227';
/**
   * _0x5744562E973E33CD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {any}
   */
export const _0x5744562E973E33CD = '0x5744562e973e33cd';
/**
   * _0x5826EFD6D73C4DE5
   * _REMOVE_DECALS_* - _REMOVE_FORCED*
   *
   * @param {number} entity
   * @return {void}
   */
export const _0x5826EFD6D73C4DE5 = '0x5826efd6d73c4de5';
/**
   * _0x582F73ACFE969571
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x582F73ACFE969571 = '0x582f73acfe969571';
/**
   * _0x5E214112806591EA
   * Attaches scenario to bone with an offset
   * _GET_I* - _GET_M*
   *
   * @param {number} entity
   * @param {number} boneIndex
   * @return {Vector3}
   */
export const _0x5E214112806591EA = '0x5e214112806591ea';
/**
   * _SET_FILL_IN_STATE_FOR_ENTITY
   * sets the fill in state for some objects like for the stew, coffee mug ,poker chips, jugs ? P1 is either 0 or 2 p2 seems to be a label/name p3 is the fill in state, max seems to be for some 3.0 (most is 1.0) - 0.0
   * heres some of the labels/names found 
   * tumbler_fill, Canvas, Stew_Fill, from Chip01_Ctrl to Chip10_Ctrl, from empty_jug01_Ctrl to empty_jug20_Ctrl, from full_jug01_Ctrl to full_jug20_Ctrl, CTRL_cupFill, Food_DOF_Fill, from WhiteChip_Ctrl_0 to WhiteChip_Ctrl_10, from BlueChip_Ctrl_0 to BlueChip_Ctrl_10, from BlackChip_Ctrl_0 to BlackChip_Ctrl_10, from RedChip_Ctrl_0 to RedChip_Ctrl_10,
   *
   * @param {number} entity
   * @param {number} p1
   * @param {string | number} p2
   * @param {number} fill
   * @return {void}
   */
export const _SET_FILL_IN_STATE_FOR_ENTITY = '0x669655ffb29ef1a9';
/**
   * _0x6C31B06E91518269
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x6C31B06E91518269 = '0x6c31b06e91518269';
/**
   * _0x6D58167F62238284
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _0x6D58167F62238284 = '0x6d58167f62238284';
/**
   * _0x7A49D40DE437BC8D
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x7A49D40DE437BC8D = '0x7a49d40de437bc8d';
/**
   * _0x7F20092547B4DDEA
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x7F20092547B4DDEA = '0x7f20092547b4ddea';
/**
   * _0x80FDEB3A9E9AA578
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {void}
   */
export const _0x80FDEB3A9E9AA578 = '0x80fdeb3a9e9aa578';
/**
   * _0x898586729DB5221D
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x898586729DB5221D = '0x898586729db5221d';
/**
   * _0x8E10DF0FFA63FB65
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {any}
   */
export const _0x8E10DF0FFA63FB65 = '0x8e10df0ffa63fb65';
/**
   * _0x8E46E18AA828334F
   * Used in Script Function GENERIC_ITEM_HAS_ANIM_COMPLETED
   * _GET_ENTITY_*
   *
   * @param {number} entity
   * @param {string | number} animDict
   * @param {string | number} animClip
   * @return {number}
   */
export const _0x8E46E18AA828334F = '0x8e46e18aa828334f';
/**
   * _0x978AA2323ED32209
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x978AA2323ED32209 = '0x978aa2323ed32209';
/**
   * _0x9C6906EF8CB20C5F
   *
   * @param {number} entity
   * @return {void}
   */
export const _0x9C6906EF8CB20C5F = '0x9c6906ef8cb20c5f';
/**
   * _0xA48E4801DEBDF7E4
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {void}
   */
export const _0xA48E4801DEBDF7E4 = '0xa48e4801debdf7e4';
/**
   * _0xA9E6D8F2DDFC4DB9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA9E6D8F2DDFC4DB9 = '0xa9e6d8f2ddfc4db9';
/**
   * _0xAAACB74442C1BED3
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xAAACB74442C1BED3 = '0xaaacb74442c1bed3';
/**
   * _0xAF72EC7E1B54539B
   *
   * @param {number} entity
   * @return {number}
   */
export const _0xAF72EC7E1B54539B = '0xaf72ec7e1b54539b';
/**
   * _0xAF7F3099B9FEB535
   * SET_ENTITY_LO*
   *
   * @param {number} entity
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const _0xAF7F3099B9FEB535 = '0xaf7f3099b9feb535';
/**
   * _0xB16C780C51E51E2B
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xB16C780C51E51E2B = '0xb16c780c51e51e2b';
/**
   * _0xB38A29CCD5447783
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xB38A29CCD5447783 = '0xb38a29ccd5447783';
/**
   * _0xBA2A089E60ED1163
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {any}
   */
export const _0xBA2A089E60ED1163 = '0xba2a089e60ed1163';
/**
   * _0xBD94CECFB2D65119
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0xBD94CECFB2D65119 = '0xbd94cecfb2d65119';
/**
   * _0xC0EDEF16D90661EE
   * SET_ENTITY_A*
   *
   * @param {number} entity
   * @param {number} p1
   * @return {void}
   */
export const _0xC0EDEF16D90661EE = '0xc0edef16d90661ee';
/**
   * _0xC2E71D7E0A7B4C89
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC2E71D7E0A7B4C89 = '0xc2e71d7e0a7b4c89';
/**
   * _0xC3ABCFBC7D74AFA5
   * Returns BOOL in ida
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0xC3ABCFBC7D74AFA5 = '0xc3abcfbc7d74afa5';
/**
   * _0xC6A1A3D63F122DE7
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xC6A1A3D63F122DE7 = '0xc6a1a3d63f122de7';
/**
   * _0xC76E94A78127412B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xC76E94A78127412B = '0xc76e94a78127412b';
/**
   * _0xCDB682BB47C02F0A
   *
   * @param {number} entity
   * @param {number} p1
   * @return {void}
   */
export const _0xCDB682BB47C02F0A = '0xcdb682bb47c02f0a';
/**
   * _0xD21C7418C590BB40
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xD21C7418C590BB40 = '0xd21c7418c590bb40';
/**
   * _0xD45BB89B53FC0CFD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _0xD45BB89B53FC0CFD = '0xd45bb89b53fc0cfd';
/**
   * _0xD4636C2EDB0DEA8A
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xD4636C2EDB0DEA8A = '0xd4636c2edb0dea8a';
/**
   * _0xD46BF94C4C66FAB0
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0xD46BF94C4C66FAB0 = '0xd46bf94c4c66fab0';
/**
   * _0xDD03FC2089AD093C
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xDD03FC2089AD093C = '0xdd03fc2089ad093c';
/**
   * _0xDF8E49EA89A01DB1
   * Hardcoded to return zero/false.
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xDF8E49EA89A01DB1 = '0xdf8e49ea89a01db1';
/**
   * _0xDFC2B226D56D85F6
   *
   * @param {any} p0
   * @param {any} p1
   * @return {number}
   */
export const _0xDFC2B226D56D85F6 = '0xdfc2b226d56d85f6';
/**
   * _0xE19035EB65AB2932
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE19035EB65AB2932 = '0xe19035eb65ab2932';
/**
   * _0xE31FC20319874CB3
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xE31FC20319874CB3 = '0xe31fc20319874cb3';
/**
   * _0xE75EEA8DB59A9F39
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0xE75EEA8DB59A9F39 = '0xe75eea8db59a9f39';
/**
   * _0xE9E7A0BAC7F57746
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE9E7A0BAC7F57746 = '0xe9e7a0bac7f57746';
/**
   * _0xEAB3D91D30A344F1
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xEAB3D91D30A344F1 = '0xeab3d91d30a344f1';
/**
   * _0xEF259AA1E097E0AD
   *
   * @param {number} entity
   * @param {any} p1
   * @return {void}
   */
export const _0xEF259AA1E097E0AD = '0xef259aa1e097e0ad';
/**
   * _GET_ENTITY_LOOTING_PED
   * Returns the entity that is looting a ped but only while the looting is active
   *
   * @param {number} entity
   * @return {number}
   */
export const _GET_ENTITY_LOOTING_PED = '0xef2d9ed7ce684f08';
/**
   * _0xF41E2979D5BC5370
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xF41E2979D5BC5370 = '0xf41e2979d5bc5370';
/**
   * _0xF59FDE7B4D31A630
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xF59FDE7B4D31A630 = '0xf59fde7b4d31a630';
/**
   * SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_SCRIPT_PARTICIPANTS
   *
   * @param {number} entityIndex
   * @param {boolean} bOnlyDamagedWhenRunningScript
   * @return {void}
   */
export const SET_ENTITY_CAN_ONLY_BE_DAMAGED_BY_SCRIPT_PARTICIPANTS = '0xff83af534156b399';
/**
   * _0xFF9965C47FA404DA
   * SET_ENTITY_LO*
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const _0xFF9965C47FA404DA = '0xff9965c47fa404da';
/**
   * _ADD_ENTITY_TRACKING_TRAILS
   *
   * @param {number} entity
   * @return {void}
   */
export const _ADD_ENTITY_TRACKING_TRAILS = '0x1ad922ab5038def3';
/**
   * _CHANGE_ENTITY_HEALTH
   * Alters entity's health by 'amount'. Can be negative (to drain health).
   * In the scripts entity2 and weaponHash are unused (zero).
   *
   * @param {number} entity
   * @param {number} amount
   * @param {number} entity2
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _CHANGE_ENTITY_HEALTH = '0x835f131e7dc8f97a';
/**
   * _CREATE_FOOTPATH_TRAIL
   *
   * @param {any} p0
   * @param {string | number} waypointRecord
   * @param {boolean} bUseSnowOffset
   * @param {number} p3
   * @param {number} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {boolean} bInit
   * @return {any}
   */
export const _CREATE_FOOTPATH_TRAIL = '0x29ba9f78321e5a6c';
/**
   * _DELETE_CARRIABLE
   *
   * @param {number} entity
   * @return {void}
   */
export const _DELETE_CARRIABLE = '0x0d0db2b6af19a987';
/**
   * _DELETE_ENTITY_2
   * Must be called from a background script, otherwise it will do nothing.
   *
   * @param {number} entity
   * @return {void}
   */
export const _DELETE_ENTITY_2 = '0x5e94ea09e7207c16';
/**
   * _DOES_THREAD_OWN_THIS_ENTITY
   * Returns true if calling script owns specified entity
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _DOES_THREAD_OWN_THIS_ENTITY = '0x88ad6cc10d8d35b2';
/**
   * _GET_CARRIABLE_FROM_ENTITY
   * Returns a hash of an entity's name. (Alternative Name: _GET_ENTITY_PROMPT_NAME_HASH)
   *
   * @param {number} entity
   * @return {number}
   */
export const _GET_CARRIABLE_FROM_ENTITY = '0x31fef6a20f00b963';
/**
   * _GET_ENTITIES_IN_VOLUME
   *
   * @param {number} volume
   * @param {number} itemSet
   * @param {number} entityType
   * @return {number}
   */
export const _GET_ENTITIES_IN_VOLUME = '0x886171a12f400b89';
/**
   * _GET_ENTITIES_NEAR_POINT
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} itemSet
   * @param {number} p5
   * @return {number}
   */
export const _GET_ENTITIES_NEAR_POINT = '0x59b57c4b06531e1e';
/**
   * _GET_ENTITY_ANIM_CURRENT_TIME
   * Returns a normalized value between 0.0f and 1.0f. You can get the actual anim time by multiplying this by GET_ANIM_DURATION
   *
   * @param {number} entity
   * @param {string | number} animDict
   * @param {string | number} animName
   * @return {number}
   */
export const _GET_ENTITY_ANIM_CURRENT_TIME = '0x627520389e288a73';
/**
   * _GET_ENTITY_BY_DOORHASH
   * Params: p1 = 0 in R* Scripts (GET_DOOR_ENTITY_FROM_ID)
   * https://github.com/femga/rdr3_discoveries/blob/master/doorHashes/doorhashes.lua
   *
   * @param {number} doorHash
   * @param {number} p1
   * @return {number}
   */
export const _GET_ENTITY_BY_DOORHASH = '0xf7424890e4a094c0';
/**
   * GET_ENTITY_CAN_BE_DAMAGED
   * Old name: _GET_ENTITY_CAN_BE_DAMAGED
   *
   * @param {number} entity
   * @return {boolean}
   */
export const GET_ENTITY_CAN_BE_DAMAGED = '0x75df9e73f2f005fd';
/**
   * _GET_ENTITY_CARRYING_FLAG
   * flagId: see _SET_ENTITY_CARRYING_FLAG
   *
   * @param {number} entity
   * @param {number} flagId
   * @return {boolean}
   */
export const _GET_ENTITY_CARRYING_FLAG = '0x808077647856de62';
/**
   * _GET_ENTITY_CARRY_CONFIG
   * Returns zero if the entity is not a carriable
   *
   * @param {number} entity
   * @return {number}
   */
export const _GET_ENTITY_CARRY_CONFIG = '0x0fd25587bb306c86';
/**
   * _GET_ENTITY_FORWARD_VECTOR_YX
   * Gets the entity's forward vector in YX(Z) eulers. Similar to GET_ENTITY_FORWARD_VECTOR
   *
   * @param {number} entity
   * @return {Vector3}
   */
export const _GET_ENTITY_FORWARD_VECTOR_YX = '0x935a30aa88fb1014';
/**
   * _GET_ENTITY_HEALTH_FLOAT
   * Returns (CUR_HEALTH / MAX_HEALTH)
   *
   * @param {number} entity
   * @return {number}
   */
export const _GET_ENTITY_HEALTH_FLOAT = '0x96c638784db4c815';
/**
   * GET_ENTITY_PROOFS
   * Note: this native was removed in 1232 but added back in 1311
   * Old name: _GET_ENTITY_PROOFS
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ENTITY_PROOFS = '0x6cf0dad7fa1088ea';
/**
   * _GET_ENTITY_SCRIPT
   *
   * @param {number} entity
   * @param {DataView} argStruct
   * @return {number}
   */
export const _GET_ENTITY_SCRIPT = '0x2a08a32b6d49906f';
/**
   * _GET_ENTITY_THREAT_TIER
   *
   * @param {number} entity
   * @return {number}
   */
export const _GET_ENTITY_THREAT_TIER = '0xe12f56cb25d9ce23';
/**
   * _GET_ENTITY_WORLD_POSITION_OF_DIMENSIONS
   *
   * @param {number} entity
   * @return {[Vector3, Vector3]}
   */
export const _GET_ENTITY_WORLD_POSITION_OF_DIMENSIONS = '0xf3fda9a617a15145';
/**
   * _GET_IS_BIRD
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _GET_IS_BIRD = '0xc346a546612c49a9';
/**
   * _GET_IS_CARRIABLE_PELT
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _GET_IS_CARRIABLE_PELT = '0x255b6db4e3ad3c3e';
/**
   * _GET_IS_PREDATOR
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _GET_IS_PREDATOR = '0x5594afe9de0c01b7';
/**
   * _GET_OPTIMAL_CARRY_CONFIG
   * Valid indices: 0 - 3
   * Index 1 always returns a `hogtied` config, doesn't matter the entity.
   * It's for humans only and the ped must be resurrected first if it's dead.
   *
   * @param {number} entity
   * @param {number} index
   * @return {number}
   */
export const _GET_OPTIMAL_CARRY_CONFIG = '0x34f008a7e48c496b';
/**
   * _GET_PED_ANIMAL_TYPE
   * Returns the ped's animal type hash: https://alloc8or.re/rdr3/doc/enums/eAnimalType.txt
   * Combine this with GET_STRING_FROM_HASH_KEY to display localized entity names
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_ANIMAL_TYPE = '0x964000d355219fc0';
/**
   * _GET_PINNED_MAP_ENTITY
   *
   * @param {any} p0
   * @return {number}
   */
export const _GET_PINNED_MAP_ENTITY = '0x4735e2a4bb83d9da';
/**
   * _GET_SCRIPT_OVERRIDE_ENTITY_LOOT_TABLE_PERMANENT
   * Returns false if entity is not a ped or object.
   *
   * @param {number} entity
   * @return {[boolean, number]}
   */
export const _GET_SCRIPT_OVERRIDE_ENTITY_LOOT_TABLE_PERMANENT = '0x1e804ea9b12030a4';
/**
   * _IS_CARRIABLE_MODEL
   *
   * @param {number} model
   * @return {boolean}
   */
export const _IS_CARRIABLE_MODEL = '0x5affa9ddc87846f8';
/**
   * _IS_ENTITY_FROZEN
   * Getter for FREEZE_ENTITY_POSITION
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_ENTITY_FROZEN = '0x083d497d57b7400f';
/**
   * _IS_ENTITY_FULLY_LOOTED
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_ENTITY_FULLY_LOOTED = '0x8de41e9902e85756';
/**
   * _IS_ENTITY_ON_TRAIN_TRACK
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_ENTITY_ON_TRAIN_TRACK = '0x857acb0ab4bd0d55';
/**
   * _IS_ENTITY_OWNED_BY_PERSISTENCE_SYSTEM
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_ENTITY_OWNED_BY_PERSISTENCE_SYSTEM = '0xa7e51b53309eac97';
/**
   * _IS_ENTITY_PLAYING_ANY_ANIM
   * Params: p1 (probably animType) = 1, 0
   *
   * @param {number} entity
   * @param {number} p1
   * @return {boolean}
   */
export const _IS_ENTITY_PLAYING_ANY_ANIM = '0x0b7cb1300cbfe19c';
/**
   * _IS_ENTITY_UNDERWATER
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {boolean}
   */
export const _IS_ENTITY_UNDERWATER = '0xd4e5c1e93c466127';
/**
   * _IS_TRACKED_ENTITY_VISIBLE
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_TRACKED_ENTITY_VISIBLE = '0xc8ccdb712fbcba92';
/**
   * _PAUSE_ENTITY_TRACKING
   *
   * @param {number} entity
   * @param {boolean} pause
   * @return {void}
   */
export const _PAUSE_ENTITY_TRACKING = '0x36eb4d34d4a092c5';
/**
   * _REQUEST_ENTITY_LOOT_LIST
   *
   * @param {number} mount
   * @param {DataView} argStruct
   * @param {number} visiblelootslotrequestType
   * @param {number} flag
   * @param {number} p4
   * @param {boolean} p5
   * @return {boolean}
   */
export const _REQUEST_ENTITY_LOOT_LIST = '0xa88e215ceb0435c0';
/**
   * _SEARCH_BUILDING_POOL_FOR_ENTITY_WITH_THIS_MODEL
   * Alternative Name: _GET_ENTITY_FROM_MAP_OBJECT; You can get existing objects and manipulate them using this native.
   *
   * @param {number} modelHash
   * @return {number}
   */
export const _SEARCH_BUILDING_POOL_FOR_ENTITY_WITH_THIS_MODEL = '0x66b2b83b94b22458';
/**
   * _SET_ENTITY_ANIM_CURRENT_TIME
   *
   * @param {number} entity
   * @param {string | number} animDict
   * @param {string | number} animName
   * @param {number} time
   * @return {void}
   */
export const _SET_ENTITY_ANIM_CURRENT_TIME = '0x11cdabdc7783b2bc';
/**
   * _SET_ENTITY_ANIM_SPEED
   *
   * @param {number} entity
   * @param {string | number} animDict
   * @param {string | number} animName
   * @param {number} speedMultiplier
   * @return {void}
   */
export const _SET_ENTITY_ANIM_SPEED = '0xeaa885ba3cea4e4a';
/**
   * _SET_ENTITY_CARCASS_TYPE
   * Changes type and quality of skins
   * type hashes: https://pastebin.com/C1WvQjCy
   *
   * @param {number} entity
   * @param {number} type
   * @return {void}
   */
export const _SET_ENTITY_CARCASS_TYPE = '0x399657ed871b3a6c';
/**
   * _SET_ENTITY_CARRYING_FLAG
   * flagId: https://github.com/femga/rdr3_discoveries/tree/master/AI/CARRYING_FLAGS
   * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CCarryingFlags__Flags
   * 
   * enum eCarryingFlag
   * {
   *   CARRYING_FLAG_CAN_BE_CUT_FREE = 1,
   *   CARRYING_FLAG_CAN_BE_CARRIED_ON_FOOT = 2,
   *   CARRYING_FLAG_CAN_BE_DROPPED = 4,
   *   CARRYING_FLAG_CAN_BE_CARRIED_WHEN_DEAD = 7,
   *   CARRYING_FLAG_CAN_CARRY_ANYTHING = 9,
   *   CARRYING_FLAG_DISABLE_PROMPT_LOS_CHECKS = 19,
   *   CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION = 23,
   *   CARRYING_FLAG_PICKUPS_IGNORE_HEIGHT_RESTRICTIONS = 26,
   *   CARRYING_FLAG_CLEAN_UP_WHEN_NOT_CARRIED = 27,
   *   CARRYING_FLAG_BLOCK_KNOCK_OFF_PED_VARIATIONS_FROM_CARRIABLE_INTERACTIONS = 29,
   *   CARRYING_FLAG_HIT_WHEN_CARRIABLE = 31,
   *   CARRYING_FLAG_DISABLE_CARRIABLE_INTERACTIONS_ON_THIS_MOUNT = 34,
   *   CARRYING_FLAG_FORCE_HIDE_PROMPT_GROUP = 37,
   * };
   *
   * @param {number} entity
   * @param {number} flagId
   * @param {boolean} value
   * @return {void}
   */
export const _SET_ENTITY_CARRYING_FLAG = '0x18ff3110cf47115d';
/**
   * _SET_ENTITY_COORDS_AND_HEADING
   *
   * @param {number} entity
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} heading
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @return {void}
   */
export const _SET_ENTITY_COORDS_AND_HEADING = '0x203beffdbe12e96a';
/**
   * _SET_ENTITY_COORDS_AND_HEADING_NO_OFFSET
   *
   * @param {number} entity
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} heading
   * @param {boolean} p5
   * @param {boolean} p6
   * @return {void}
   */
export const _SET_ENTITY_COORDS_AND_HEADING_NO_OFFSET = '0x0918e3565c20f03c';
/**
   * _SET_ENTITY_CUSTOM_PICKUP_RADIUS
   *
   * @param {number} entity
   * @param {number} radius
   * @return {void}
   */
export const _SET_ENTITY_CUSTOM_PICKUP_RADIUS = '0x482d17e45665da44';
/**
   * _SET_ENTITY_FADE_IN
   *
   * @param {number} entity
   * @return {void}
   */
export const _SET_ENTITY_FADE_IN = '0xa91e6cf94404e8c9';
/**
   * _SET_ENTITY_FULLY_LOOTED
   *
   * @param {number} entity
   * @param {boolean} looted
   * @return {void}
   */
export const _SET_ENTITY_FULLY_LOOTED = '0x6bcf5f3d8ffe988d';
/**
   * _SET_ENTITY_LIGHTS_ENABLED
   *
   * @param {number} entity
   * @param {boolean} enabled
   * @return {void}
   */
export const _SET_ENTITY_LIGHTS_ENABLED = '0xebdc12861d079aba';
/**
   * _SET_ENTITY_THREAT_TIER
   * tier: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityThreatTier
   *
   * @param {number} entity
   * @param {number} tier
   * @param {boolean} p2
   * @return {void}
   */
export const _SET_ENTITY_THREAT_TIER = '0x4b436bac8cbe9b07';
/**
   * _UNPIN_MAP_ENTITY
   *
   * @param {number} entity
   * @return {void}
   */
export const _UNPIN_MAP_ENTITY = '0xd2b9c78537ed5759';
/**
   * ADD_SHOCKING_EVENT_AT_POSITION
   * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
   * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS
   *
   * @param {number} eventType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @param {number} p10
   * @return {number}
   */
export const ADD_SHOCKING_EVENT_AT_POSITION = '0xd9f8455409b525e9';
/**
   * ADD_SHOCKING_EVENT_FOR_ENTITY
   * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
   *
   * @param {number} eventType
   * @param {number} entity
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {boolean} p8
   * @param {boolean} p9
   * @param {number} p10
   * @param {number} p11
   * @return {number}
   */
export const ADD_SHOCKING_EVENT_FOR_ENTITY = '0x7fd8f3be76f89422';
/**
   * IS_SHOCKING_EVENT_IN_SPHERE
   * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
   *
   * @param {number} eventType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {boolean}
   */
export const IS_SHOCKING_EVENT_IN_SPHERE = '0x9db47e16060d6354';
/**
   * REMOVE_ALL_SHOCKING_EVENTS
   *
   * @param {boolean} p0
   * @return {void}
   */
export const REMOVE_ALL_SHOCKING_EVENTS = '0xd47a168c2ab90dc4';
/**
   * REMOVE_ALL_SHOCKING_EVENTS_OF_TYPE
   * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
   *
   * @param {number} eventType
   * @param {boolean} scriptCreatedOnly
   * @return {void}
   */
export const REMOVE_ALL_SHOCKING_EVENTS_OF_TYPE = '0x118873dd538490b4';
/**
   * REMOVE_SHOCKING_EVENT
   *
   * @param {number} event
   * @return {boolean}
   */
export const REMOVE_SHOCKING_EVENT = '0xe8bb3cc253a34559';
/**
   * REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS
   *
  
   * @return {void}
   */
export const REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS = '0xdb249021652420c5';
/**
   * SET_DECISION_MAKER
   *
   * @param {number} ped
   * @param {number} name
   * @return {void}
   */
export const SET_DECISION_MAKER = '0x8ae2f981cddb8fa4';
/**
   * SET_DECISION_MAKER_TO_DEFAULT
   *
   * @param {number} ped
   * @return {void}
   */
export const SET_DECISION_MAKER_TO_DEFAULT = '0x6b9c5c38838fb6e6';
/**
   * SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME
   *
  
   * @return {void}
   */
export const SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME = '0x84994fad4e4e4e69';
/**
   * _0x18E93EBFC1FCFA48
   * Only used in R* SP Script beat_rat_infestation and homeinvasion
   *
   * @param {number} volume
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {any}
   */
export const _0x18E93EBFC1FCFA48 = '0x18e93ebfc1fcfa48';
/**
   * _0x1A5C5D350068A673
   * AGGRO_CHECK_PROPERTY_DAMAGE: Property damage found with event
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x1A5C5D350068A673 = '0x1a5c5d350068a673';
/**
   * _0x1D1B448D719415AB
   * _GET*
   *
   * @param {number} ped
   * @return {any}
   */
export const _0x1D1B448D719415AB = '0x1d1b448d719415ab';
/**
   * _0x26054EB81AC0893B
   *
   * @param {number} object
   * @return {boolean}
   */
export const _0x26054EB81AC0893B = '0x26054eb81ac0893b';
/**
   * _0x2DD42FAD06E6F19E
   *
   * @param {number} object
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {any}
   */
export const _0x2DD42FAD06E6F19E = '0x2dd42fad06e6f19e';
/**
   * _0x36D0F2BA2C0D9BDE
   * _ADD* (_ADD_SHOCKING_EVENT_* ?)
   *
   * @param {number} entity
   * @param {number} p1
   * @return {any}
   */
export const _0x36D0F2BA2C0D9BDE = '0x36d0f2ba2c0d9bde';
/**
   * _0x4465C3D1475BD3FD
   *
   * @param {number} model
   * @return {void}
   */
export const _0x4465C3D1475BD3FD = '0x4465c3d1475bd3fd';
/**
   * _0x4B2B1A891D437CA7
   * Only used in R* SP Script coachrobberies
   * _SET_S*
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x4B2B1A891D437CA7 = '0x4b2b1a891d437ca7';
/**
   * _0x56B3410626A473E7
   * Only used in R* SP Script beat_rat_infestation
   * Params: p0 = value returned by 0x18E93EBFC1FCFA48
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x56B3410626A473E7 = '0x56b3410626a473e7';
/**
   * _0x7C511E91738A0828
   * Only used in R* SP Scripts
   * Hash only used in R* Script mob3.ysc: ROBBERY
   * _ADD_PED*
   *
   * @param {number} ped1
   * @param {number} ped2
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const _0x7C511E91738A0828 = '0x7c511e91738a0828';
/**
   * _0x83D43F0FD5276E4D
   * _GET*
   *
   * @param {number} entity
   * @param {number} p1
   * @return {any}
   */
export const _0x83D43F0FD5276E4D = '0x83d43f0fd5276e4d';
/**
   * _0x9520175B35E2268D
   * _SET_P*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x9520175B35E2268D = '0x9520175b35e2268d';
/**
   * _0xA86B0EE9B39D15D6
   *
   * @param {number} object
   * @return {void}
   */
export const _0xA86B0EE9B39D15D6 = '0xa86b0ee9b39d15d6';
/**
   * _0xAD17A18215DD23D6
   * Might return time since some (?) event.
   *
   * @param {number} entity
   * @param {number} p1
   * @param {number} p2
   * @return {number}
   */
export const _0xAD17A18215DD23D6 = '0xad17a18215dd23d6';
/**
   * _0xB6F4825153920582
   * _S* (_SUPPRESS_EVENTS_NEXT_FRAME?)
   *
  
   * @return {void}
   */
export const _0xB6F4825153920582 = '0xb6f4825153920582';
/**
   * _0xE28D7FC9FD32ABEB
   * HAS_ACTOR_RECEIVED_TRACKED_EVENT_THAT_SHOULD_ALERT - iTimeSinceEvent >= iTimeLimitMS
   *
   * @param {number} entity
   * @param {number} eventType
   * @param {number} p2
   * @return {void}
   */
export const _0xE28D7FC9FD32ABEB = '0xe28d7fc9fd32abeb';
/**
   * _0xE2C2FBB7825FFC66
   *
  
   * @return {void}
   */
export const _0xE2C2FBB7825FFC66 = '0xe2c2fbb7825ffc66';
/**
   * _ADD_MODEL_TO_EVENT_MONITOR
   * Models used in the scripts: P_REGISTER05X, P_REGISTER06X, P_REGISTER03X, PLAYER_ZERO, PLAYER_THREE, A_C_HORSE_MORGAN_FLAXENCHESTNUT
   *
   * @param {number} model
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _ADD_MODEL_TO_EVENT_MONITOR = '0x608ad36a644a97fe';
/**
   * _CREATE_SHOCKING_EVENT
   *
   * @param {DataView} args
   * @return {number}
   */
export const _CREATE_SHOCKING_EVENT = '0xca1315c33b9a2847';
/**
   * _EVENT_FLUSH_ALL_EVENT_TRACKERS
   *
   * @param {number} ped
   * @return {void}
   */
export const _EVENT_FLUSH_ALL_EVENT_TRACKERS = '0xad8f2424c6e1e3a8';
/**
   * _EVENT_GET_RECENT_EVENT
   * Returns eventType
   *
   * @param {number} entity
   * @param {number} p1
   * @param {number} p2
   * @return {number}
   */
export const _EVENT_GET_RECENT_EVENT = '0x796eecff0c6d39be';
/**
   * _EVENT_GET_SOURCE_ENTITY_FROM_EVENT
   *
   * @param {number} entity
   * @param {number} eventType
   * @param {number} p2
   * @param {number} p3
   * @return {number}
   */
export const _EVENT_GET_SOURCE_ENTITY_FROM_EVENT = '0x822a001bcea5bd81';
/**
   * _EVENT_GET_TARGET_ENTITY_FROM_EVENT
   *
   * @param {number} entity
   * @param {number} eventType
   * @param {number} p2
   * @param {number} p3
   * @return {number}
   */
export const _EVENT_GET_TARGET_ENTITY_FROM_EVENT = '0x38497f139981c5c9';
/**
   * _EVENT_GET_TIME_SINCE_EVENT
   *
   * @param {number} entity
   * @param {number} eventType
   * @param {number} p2
   * @param {number} p3
   * @return {number}
   */
export const _EVENT_GET_TIME_SINCE_EVENT = '0xc6a7dc546e94fed5';
/**
   * _IS_EVENT_TRACKER_ACTIVE
   *
   * @param {string | number} eventName
   * @param {number} shockingEvent
   * @return {boolean}
   */
export const _IS_EVENT_TRACKER_ACTIVE = '0x797b3d4d92e56094';
/**
   * _REMOVE_ALL_SHOCKING_EVENTS_IN_AREA
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {boolean} p4
   * @return {void}
   */
export const _REMOVE_ALL_SHOCKING_EVENTS_IN_AREA = '0xb4c71ba9cab097bd';
/**
   * _REMOVE_ALL_SHOCKING_EVENTS_OF_TYPE_IN_AREA
   * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
   *
   * @param {number} eventType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {boolean} p5
   * @return {void}
   */
export const _REMOVE_ALL_SHOCKING_EVENTS_OF_TYPE_IN_AREA = '0x6a648d42bf271dc7';
/**
   * _SET_EVENT_TRACKER_FOR_PED
   *
   * @param {number} ped
   * @param {string | number} eventName
   * @param {number} p2
   * @return {void}
   */
export const _SET_EVENT_TRACKER_FOR_PED = '0xbb1e41dd3d3c6250';
/**
   * ADD_EXPLOSION
   * https://github.com/femga/rdr3_discoveries/tree/master/graphics/explosions
   * 
   * explosionType:
   * enum eExplosionTag
   * {
   *   EXP_TAG_DONTCARE = -1,
   *   EXP_TAG_GRENADE,
   *   EXP_TAG_STICKYBOMB,
   *   EXP_TAG_MOLOTOV,
   *   EXP_TAG_MOLOTOV_VOLATILE,
   *   EXP_TAG_HI_OCTANE,
   *   EXP_TAG_CAR,
   *   EXP_TAG_PLANE,
   *   EXP_TAG_PETROL_PUMP,
   *   EXP_TAG_DIR_STEAM,
   *   EXP_TAG_DIR_FLAME,
   *   EXP_TAG_DIR_WATER_HYDRANT,
   *   EXP_TAG_BOAT,
   *   EXP_TAG_BULLET,
   *   EXP_TAG_SMOKEGRENADE,
   *   EXP_TAG_BZGAS,
   *   EXP_TAG_GAS_CANISTER,
   *   EXP_TAG_EXTINGUISHER,
   *   EXP_TAG_TRAIN,
   *   EXP_TAG_DIR_FLAME_EXPLODE,
   *   EXP_TAG_VEHICLE_BULLET,
   *   EXP_TAG_BIRD_CRAP,
   *   EXP_TAG_FIREWORK,
   *   EXP_TAG_TORPEDO,
   *   EXP_TAG_TORPEDO_UNDERWATER,
   *   EXP_TAG_LANTERN,
   *   EXP_TAG_DYNAMITE,
   *   EXP_TAG_DYNAMITESTACK,
   *   EXP_TAG_DYNAMITE_VOLATILE,
   *   EXP_TAG_RIVER_BLAST,
   *   EXP_TAG_PLACED_DYNAMITE,
   *   EXP_TAG_FIRE_ARROW,
   *   EXP_TAG_DYNAMITE_ARROW,
   *   EXP_TAG_PHOSPHOROUS_BULLET,
   *   EXP_TAG_LIGHTNING_STRIKE,
   *   EXP_TAG_TRACKING_ARROW,
   *   EXP_TAG_POISON_BOTTLE
   * };
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} explosionType
   * @param {number} damageScale
   * @param {boolean} isAudible
   * @param {boolean} isInvisible
   * @param {number} cameraShake
   * @return {void}
   */
export const ADD_EXPLOSION = '0x7d6f58f69da92530';
/**
   * ADD_EXPLOSION_WITH_USER_VFX
   * explosionType: see ADD_EXPLOSION
   * Change explosionFx (Visual Effect) for specified explosionType
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} explosionType
   * @param {number} explosionFx
   * @param {number} damageScale
   * @param {boolean} isAudible
   * @param {boolean} isInvisible
   * @param {number} cameraShake
   * @return {void}
   */
export const ADD_EXPLOSION_WITH_USER_VFX = '0x53ba259f3a67a99e';
/**
   * ADD_OWNED_EXPLOSION
   * explosionType: see ADD_EXPLOSION
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} explosionType
   * @param {number} damageScale
   * @param {boolean} isAudible
   * @param {boolean} isInvisible
   * @param {number} cameraShake
   * @return {void}
   */
export const ADD_OWNED_EXPLOSION = '0xd84a917a64d4d016';
/**
   * GET_CLOSEST_FIRE_POS
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {[boolean, Vector3]}
   */
export const GET_CLOSEST_FIRE_POS = '0xb646fb657f448261';
/**
   * GET_NUMBER_OF_FIRES_IN_RANGE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {number}
   */
export const GET_NUMBER_OF_FIRES_IN_RANGE = '0xf9617bc6fae61e08';
/**
   * GET_OWNER_OF_EXPLOSION_IN_ANGLED_AREA
   * explosionType: see ADD_EXPLOSION
   *
   * @param {number} explosionType
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} radius
   * @return {number}
   */
export const GET_OWNER_OF_EXPLOSION_IN_ANGLED_AREA = '0x8002ddab58594d78';
/**
   * IS_ENTITY_ON_FIRE
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_ON_FIRE = '0x1bd7c371ce257c3e';
/**
   * IS_EXPLOSION_ACTIVE_IN_AREA
   * explosionType: see ADD_EXPLOSION
   *
   * @param {number} explosionType
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @return {boolean}
   */
export const IS_EXPLOSION_ACTIVE_IN_AREA = '0xd96e82aebffaaff0';
/**
   * IS_EXPLOSION_IN_ANGLED_AREA
   * explosionType: see ADD_EXPLOSION
   *
   * @param {number} explosionType
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} angle
   * @return {boolean}
   */
export const IS_EXPLOSION_IN_ANGLED_AREA = '0x5ae661ecd18524c9';
/**
   * IS_EXPLOSION_IN_AREA
   * explosionType: see ADD_EXPLOSION
   *
   * @param {number} explosionType
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @return {boolean}
   */
export const IS_EXPLOSION_IN_AREA = '0x8391ba4313a25ad3';
/**
   * IS_EXPLOSION_IN_SPHERE
   * explosionType: see ADD_EXPLOSION
   *
   * @param {number} explosionType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {boolean}
   */
export const IS_EXPLOSION_IN_SPHERE = '0xd62dd846d82cbb90';
/**
   * REMOVE_SCRIPT_FIRE
   *
   * @param {FireId} fireHandle
   * @return {void}
   */
export const REMOVE_SCRIPT_FIRE = '0x790125c36e194069';
/**
   * START_ENTITY_FIRE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const START_ENTITY_FIRE = '0xc4dc7418a44d6822';
/**
   * START_SCRIPT_FIRE
   * Starts a fire:
   * 
   * xyz: Location of fire
   * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
   * isGasFire: Whether or not the fire is powered by gasoline.
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @param {number} p4
   * @param {boolean} p5
   * @param {string | number} soundsetName
   * @param {number} p7
   * @param {number} p8
   * @return {FireId}
   */
export const START_SCRIPT_FIRE = '0x6b83617e04503888';
/**
   * STOP_ENTITY_FIRE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const STOP_ENTITY_FIRE = '0x8390751dc40c1e98';
/**
   * STOP_FIRE_IN_RANGE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {void}
   */
export const STOP_FIRE_IN_RANGE = '0xdb38f247bd421708';
/**
   * _0x24DB6B9F2B719043
   * Only used in R* SP Related Camp Scripts
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x24DB6B9F2B719043 = '0x24db6b9f2b719043';
/**
   * _ADD_EXPLOSION_WITH_USER_VFX_AND_DAMAGE_CAUSER
   * Add explosion with vfx and assign an entity as damage causer.
   * explosionType: https://github.com/femga/rdr3_discoveries/blob/master/graphics/explosions/README.md
   * explosionFx: https://github.com/femga/rdr3_discoveries/blob/master/graphics/explosions/explosion_vfxTags.lua
   *
   * @param {number} entity
   * @param {boolean} p1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} explosionType
   * @param {number} explosionFx
   * @param {number} damageScale
   * @param {boolean} isAudible
   * @param {boolean} isInvisible
   * @param {number} cameraShake
   * @return {void}
   */
export const _ADD_EXPLOSION_WITH_USER_VFX_AND_DAMAGE_CAUSER = '0x34ae85c7ca4857aa';
/**
   * _0x41B87A6495EE13DD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @return {any}
   */
export const _0x41B87A6495EE13DD = '0x41b87a6495ee13dd';
/**
   * _GET_CLOSEST_FIRE_POS_IN_VOLUME
   *
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @return {[boolean, Vector3]}
   */
export const _GET_CLOSEST_FIRE_POS_IN_VOLUME = '0x559fc1d310813031';
/**
   * _0x68F6A75FDF5A70D6
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @return {void}
   */
export const _0x68F6A75FDF5A70D6 = '0x68f6a75fdf5a70d6';
/**
   * _0x754937C28271BC65
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x754937C28271BC65 = '0x754937c28271bc65';
/**
   * _IS_ENTITY_DAMAGED_BY_FIRE
   * this natives only returns true if entity is damaged by fire , once damaged caused to entity by fire (like burned appearance) has cleared (they clear over time) then returns false
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_ENTITY_DAMAGED_BY_FIRE = '0xa4454592dcf7c992';
/**
   * _ADD_EXPLOSION_WITH_DAMAGE_CAUSER
   * Add explosion with and assign an entity as damage causer.
   * explosionType: https://github.com/femga/rdr3_discoveries/blob/master/graphics/explosions/README.md
   *
   * @param {number} entity
   * @param {number} p1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} explosionType
   * @param {number} damageScale
   * @param {boolean} isAudible
   * @param {boolean} isInvisible
   * @param {number} cameraShake
   * @return {void}
   */
export const _ADD_EXPLOSION_WITH_DAMAGE_CAUSER = '0xb7df150605eedc9b';
/**
   * _IS_ENTITY_CONSUMED_BY_FIRE
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_ENTITY_CONSUMED_BY_FIRE = '0xcdc25355c0d65963';
/**
   * _IS_EXPLOSION_IN_VOLUME
   * explosionType: see ADD_EXPLOSION
   *
   * @param {number} explosionType
   * @param {number} volume
   * @return {boolean}
   */
export const _IS_EXPLOSION_IN_VOLUME = '0xe24822a4cfc9107a';
/**
   * _IS_PED_SHOCKING_EVENT_ACTIVE
   * Tested with fire & dynamite. Only returns true using value p1 = 1 and when the ped is affected by fire.
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _IS_PED_SHOCKING_EVENT_ACTIVE = '0xab7993ba61a4674f';
/**
   * _STOP_FIRE_IN_BOX
   *
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @return {void}
   */
export const _STOP_FIRE_IN_BOX = '0xb7c7bdc375aea9a4';
/**
   * GET_ANIMAL_TUNING_BOOL_PARAM
   * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningBools
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_BOOL_PARAMS
   *
   * @param {number} animal
   * @param {number} index
   * @return {boolean}
   */
export const GET_ANIMAL_TUNING_BOOL_PARAM = '0x1c1993824a396603';
/**
   * GET_ANIMAL_TUNING_FLOAT_PARAM
   * index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningFloats
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_FLOAT_PARAMS
   *
   * @param {number} animal
   * @param {number} index
   * @return {number}
   */
export const GET_ANIMAL_TUNING_FLOAT_PARAM = '0x4bc3ecfda0297e27';
/**
   * GET_SPECIES_TUNING_FLOAT_PARAM
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @return {number}
   */
export const GET_SPECIES_TUNING_FLOAT_PARAM = '0xe108489621422f91';
/**
   * RESET_ANIMAL_TUNING_BOOL_PARAM
   *
   * @param {number} animal
   * @param {number} index
   * @return {void}
   */
export const RESET_ANIMAL_TUNING_BOOL_PARAM = '0x96aa1304d30e6bc3';
/**
   * RESET_ANIMAL_TUNING_FLOAT_PARAM
   *
   * @param {number} animal
   * @param {number} index
   * @return {void}
   */
export const RESET_ANIMAL_TUNING_FLOAT_PARAM = '0xe776a195488fc520';
/**
   * SET_ANIMAL_TUNING_BOOL_PARAM
   *
   * @param {number} animal
   * @param {number} index
   * @param {boolean} value
   * @return {void}
   */
export const SET_ANIMAL_TUNING_BOOL_PARAM = '0x9ff1e042fa597187';
/**
   * SET_ANIMAL_TUNING_FLOAT_PARAM
   *
   * @param {number} animal
   * @param {number} index
   * @param {number} value
   * @return {void}
   */
export const SET_ANIMAL_TUNING_FLOAT_PARAM = '0xcbda22c87977244f';
/**
   * SET_SPECIES_TUNING_BOOL_PARAM
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {boolean} p3
   * @return {void}
   */
export const SET_SPECIES_TUNING_BOOL_PARAM = '0x6d1d94c2459b42ee';
/**
   * SET_SPECIES_TUNING_FLOAT_PARAM
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const SET_SPECIES_TUNING_FLOAT_PARAM = '0x963240b6c252ba49';
/**
   * _0x0816C31480764AB0
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x0816C31480764AB0 = '0x0816c31480764ab0';
/**
   * _0x09EE00B8F858E0BE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {any}
   */
export const _0x09EE00B8F858E0BE = '0x09ee00b8f858e0be';
/**
   * _0x1520626FFAFFFA8F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x1520626FFAFFFA8F = '0x1520626ffafffa8f';
/**
   * _0x17E3E5C46ECCD308
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x17E3E5C46ECCD308 = '0x17e3e5c46eccd308';
/**
   * _0x19870C40C7EE15BE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x19870C40C7EE15BE = '0x19870c40c7ee15be';
/**
   * _0x1DA6CB02071055D5
   *
   * @param {any} p0
   * @return {Vector3}
   */
export const _0x1DA6CB02071055D5 = '0x1da6cb02071055d5';
/**
   * _0x2DF3D457D86F8E57
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x2DF3D457D86F8E57 = '0x2df3d457d86f8e57';
/**
   * _0x34B9C4D86DF2C2F3
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x34B9C4D86DF2C2F3 = '0x34b9c4d86df2c2f3';
/**
   * _0x36486AF7DA93A464
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x36486AF7DA93A464 = '0x36486af7da93a464';
/**
   * _REMOVE_HERD_PED
   * Remove the ped from a herd.
   *
   * @param {number} herd
   * @param {number} ped
   * @return {void}
   */
export const _REMOVE_HERD_PED = '0x408d1149c5e39c1e';
/**
   * _0x53187E563F938E76
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x53187E563F938E76 = '0x53187e563f938e76';
/**
   * _CLEAR_HERD
   * Clear the herd.
   *
   * @param {number} herd
   * @return {void}
   */
export const _CLEAR_HERD = '0x67a43ea3f6fe0076';
/**
   * _0x6C57BEA886A20C6B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x6C57BEA886A20C6B = '0x6c57bea886a20c6b';
/**
   * _0x706B434FEFAD6A24
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x706B434FEFAD6A24 = '0x706b434fefad6a24';
/**
   * _0x8049B17BEC937662
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {any}
   */
export const _0x8049B17BEC937662 = '0x8049b17bec937662';
/**
   * _IS_PED_IN_HERD
   * Return whether the ped is in the herd.
   *
   * @param {number} herd
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_IN_HERD = '0x9e13acc38ba8f9c3';
/**
   * _0xA881F5C77A560906
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xA881F5C77A560906 = '0xa881f5c77a560906';
/**
   * _0xC3D581A34BC0A1F0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xC3D581A34BC0A1F0 = '0xc3d581a34bc0a1f0';
/**
   * _0xC72CE37081DAE625
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xC72CE37081DAE625 = '0xc72ce37081dae625';
/**
   * _0xC95611869E14F8AF
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xC95611869E14F8AF = '0xc95611869e14f8af';
/**
   * _0xCC6B5AAFC87BFC7B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xCC6B5AAFC87BFC7B = '0xcc6b5aafc87bfc7b';
/**
   * _0xD95F04A4E73BE85E
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xD95F04A4E73BE85E = '0xd95f04a4e73be85e';
/**
   * _DELETE_HERD
   * Delete and invalidate the herd.
   *
   * @param {number} herd
   * @return {void}
   */
export const _DELETE_HERD = '0xe0961aed72642b80';
/**
   * _0xE36D2CB540597EF7
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _0xE36D2CB540597EF7 = '0xe36d2cb540597ef7';
/**
   * _0xE93415B3307208E5
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {any}
   */
export const _0xE93415B3307208E5 = '0xe93415b3307208e5';
/**
   * _0xF2CCA7B68CFAB2B9
   * species: SPECIES_BIRD_CROW
   *
   * @param {number} species
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} x3
   * @param {number} y3
   * @param {number} z3
   * @param {number} p10
   * @param {number} p11
   * @param {number} p12
   * @param {number} p13
   * @return {void}
   */
export const _0xF2CCA7B68CFAB2B9 = '0xf2cca7b68cfab2b9';
/**
   * _0xFA821997794F48E7
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xFA821997794F48E7 = '0xfa821997794f48e7';
/**
   * _0xFB16F08F47B83B4C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xFB16F08F47B83B4C = '0xfb16f08f47b83b4c';
/**
   * _0xFDB008B3BCF5992F
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xFDB008B3BCF5992F = '0xfdb008b3bcf5992f';
/**
   * _0xFF1E339CE40EAAAF
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xFF1E339CE40EAAAF = '0xff1e339ce40eaaaf';
/**
   * _ADD_PED_TO_FLOCK
   *
   * @param {any} p0
   * @param {number} ped
   * @return {void}
   */
export const _ADD_PED_TO_FLOCK = '0x933e5d31a7d13069';
/**
   * _CREATE_HERD
   *
  
   * @return {number}
   */
export const _CREATE_HERD = '0xcb4ef7edae2e16f1';
/**
   * _GET_ANIMAL_IS_WILD
   * Ped (horse) will run away from players and mounting will trigger them to buck until disabled.
   * Used for: REL_DOMESTICATED_ANIMAL
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _GET_ANIMAL_IS_WILD = '0x3b005ff0538ed2a9';
/**
   * _GET_ANIMAL_RARITY
   * enum eAnimalRarityLevel
   * {
   *   ARL_COMMON,
   *   ARL_RARE,
   *   ARL_LEGENDARY,
   *   ARL_NUMRARITYLEVELS
   * };
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_ANIMAL_RARITY = '0xf8b48a361dc388ae';
/**
   * _IS_HERD_VALID
   *
   * @param {number} herdHandle
   * @return {boolean}
   */
export const _IS_HERD_VALID = '0x8d913e493bafe0a3';
/**
   * _SET_ANIMAL_IS_WILD
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_ANIMAL_IS_WILD = '0xaeb97d84cdf3c00b';
/**
   * _SET_ANIMAL_RARITY
   * rarityLevel: see _GET_ANIMAL_RARITY
   *
   * @param {number} ped
   * @param {number} rarityLevel
   * @return {void}
   */
export const _SET_ANIMAL_RARITY = '0x8b6f0f59b1b99801';
/**
   * NETWORK_GET_GANG_ID
   *
   * @param {number} player
   * @return {any}
   */
export const NETWORK_GET_GANG_ID = '0x901e0dc25080c8b9';
/**
   * NETWORK_GET_GANG_LEADER
   *
   * @param {any} gangId
   * @return {number}
   */
export const NETWORK_GET_GANG_LEADER = '0x4be6c13a45cca8ec';
/**
   * NETWORK_GET_NUM_GANG_MEMBERS
   *
   * @param {any} gangId
   * @return {number}
   */
export const NETWORK_GET_NUM_GANG_MEMBERS = '0x149a2751ab66ac02';
/**
   * NETWORK_IS_GANG_ACTIVE
   *
   * @param {any} gangId
   * @return {boolean}
   */
export const NETWORK_IS_GANG_ACTIVE = '0x0f99f6436528a089';
/**
   * NETWORK_IS_GANG_ID_VALID
   *
   * @param {any} gangId
   * @return {boolean}
   */
export const NETWORK_IS_GANG_ID_VALID = '0xd6f6acf4392187fb';
/**
   * NETWORK_IS_GANG_IN_SESSION
   *
   * @param {any} gangId
   * @return {boolean}
   */
export const NETWORK_IS_GANG_IN_SESSION = '0x93a91a351a07360e';
/**
   * NETWORK_IS_GANG_LEADER
   *
   * @param {number} player
   * @return {boolean}
   */
export const NETWORK_IS_GANG_LEADER = '0x424b17a7dc5c90bc';
/**
   * NETWORK_IS_IN_SAME_GANG
   *
   * @param {number} player1
   * @param {number} player2
   * @return {boolean}
   */
export const NETWORK_IS_IN_SAME_GANG = '0x3f59fe6f37869576';
/**
   * _0x0E5C9FB9ED5DFF1C
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x0E5C9FB9ED5DFF1C = '0x0e5c9fb9ed5dff1c';
/**
   * _0x1F11702DDBD915C6
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x1F11702DDBD915C6 = '0x1f11702ddbd915c6';
/**
   * _0x2F7EB8B6F6AFE79C
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x2F7EB8B6F6AFE79C = '0x2f7eb8b6f6afe79c';
/**
   * _0x3ADC71A66356D706
   *
  
   * @return {any}
   */
export const _0x3ADC71A66356D706 = '0x3adc71a66356d706';
/**
   * _0x48D82C83987E18E4
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x48D82C83987E18E4 = '0x48d82c83987e18e4';
/**
   * _0x51C5EF47086AA0D7
   *
  
   * @return {any}
   */
export const _0x51C5EF47086AA0D7 = '0x51c5ef47086aa0d7';
/**
   * _0x53A94294FDDCF98C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x53A94294FDDCF98C = '0x53a94294fddcf98c';
/**
   * _0x6102830F764B3DE1
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x6102830F764B3DE1 = '0x6102830f764b3de1';
/**
   * _0x644E02F24F9D4E98
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x644E02F24F9D4E98 = '0x644e02f24f9d4e98';
/**
   * _0x7933754F260B428A
   *
   * @param {number} player
   * @return {any}
   */
export const _0x7933754F260B428A = '0x7933754f260b428a';
/**
   * _0x7BAA30C9BBE8AEE7
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x7BAA30C9BBE8AEE7 = '0x7baa30c9bbe8aee7';
/**
   * _0xA9CEAE8D6637FBAD
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xA9CEAE8D6637FBAD = '0xa9ceae8d6637fbad';
/**
   * _0xAD22AB64FA428DF3
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xAD22AB64FA428DF3 = '0xad22ab64fa428df3';
/**
   * _0xAFD3599A3CC5637D
   *
  
   * @return {any}
   */
export const _0xAFD3599A3CC5637D = '0xafd3599a3cc5637d';
/**
   * _0xB22B1D9F74095382
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xB22B1D9F74095382 = '0xb22b1d9f74095382';
/**
   * _0xB38C256498748413
   *
  
   * @return {void}
   */
export const _0xB38C256498748413 = '0xb38c256498748413';
/**
   * _0xC81A9E2C8EFD28D5
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC81A9E2C8EFD28D5 = '0xc81a9e2c8efd28d5';
/**
   * _0xDA801F7F6A5278D3
   * _NETWORK_GET_* or _NETWORK_IS_*
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0xDA801F7F6A5278D3 = '0xda801f7f6a5278d3';
/**
   * _0xE4C64CD37CB176AA
   *
   * @param {number} p0
   * @return {any}
   */
export const _0xE4C64CD37CB176AA = '0xe4c64cd37cb176aa';
/**
   * _0xEE4F20004D0288B7
   *
  
   * @return {void}
   */
export const _0xEE4F20004D0288B7 = '0xee4f20004d0288b7';
/**
   * _0xFA7C5B7E087A4CEB
   *
  
   * @return {any}
   */
export const _0xFA7C5B7E087A4CEB = '0xfa7c5b7e087a4ceb';
/**
   * _NETWORK_GET_GANG_LEADER_HANDLE
   *
   * @param {any} gangId
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const _NETWORK_GET_GANG_LEADER_HANDLE = '0xce88a261dcbba0d9';
/**
   * _NETWORK_GET_GANG_MEMBERS
   *
   * @param {any} gangId
   * @param {DataView} memberHandles
   * @return {number}
   */
export const _NETWORK_GET_GANG_MEMBERS = '0xd1bf325c8252a982';
/**
   * _NETWORK_GET_GANG_PRIVACY
   *
  
   * @return {number}
   */
export const _NETWORK_GET_GANG_PRIVACY = '0x9970ae8c3d706139';
/**
   * _NETWORK_GET_GANG_SIZE
   *
   * @param {any} gangId
   * @return {number}
   */
export const _NETWORK_GET_GANG_SIZE = '0x853b0fa4d8732c57';
/**
   * _NETWORK_IS_GANG_MEMBER
   *
   * @param {any} gangId
   * @param {number} player
   * @return {boolean}
   */
export const _NETWORK_IS_GANG_MEMBER = '0x9be7dcb22d32ccbe';
/**
   * _NETWORK_IS_GANG_OPEN
   *
   * @param {any} gangId
   * @return {boolean}
   */
export const _NETWORK_IS_GANG_OPEN = '0xfcf96ccbd81b24c8';
/**
   * _NETWORK_IS_IN_MY_GANG
   *
   * @param {number} player
   * @return {boolean}
   */
export const _NETWORK_IS_IN_MY_GANG = '0x81fb74c83c2ed69f';
/**
   * _NETWORK_KICK_GANG_MEMBER
   * banTimeSeconds is 120 in R* Scripts
   *
   * @param {number} player
   * @param {number} banTimeSeconds
   * @return {void}
   */
export const _NETWORK_KICK_GANG_MEMBER = '0xcd9e2d9bc52fd80f';
/**
   * _NETWORK_LEAVE_GANG
   *
   * @param {boolean} disband
   * @return {void}
   */
export const _NETWORK_LEAVE_GANG = '0x0a04a07bc3074edb';
/**
   * _NETWORK_REQUEST_GANG_JOIN
   * Returns true if join succeeded, false if failed.
   *
   * @param {any} gangId
   * @return {boolean}
   */
export const _NETWORK_REQUEST_GANG_JOIN = '0xc0474c8bcf6787ad';
/**
   * _NETWORK_SET_GANG_PRIVACY
   *
   * @param {number} privacyType
   * @return {boolean}
   */
export const _NETWORK_SET_GANG_PRIVACY = '0xc5bf29f4035277c2';
/**
   * _NETWORK_SET_GANG_SIZE
   *
   * @param {number} size
   * @return {boolean}
   */
export const _NETWORK_SET_GANG_SIZE = '0x833d8268d51b4522';
/**
   * _NETWORK_START_GANG
   * openStatus = true -> sets privacyType = 2 (PUBLIC_ADVERTISED)
   * openStatus = false -> sets privacyType = 1 (INVITE_ONLY)
   * 
   * campSize: NET_CAMP_SIZE_SMALLEST = 4, NET_CAMP_SIZE_LARGEST = 7
   *
   * @param {boolean} openStatus
   * @param {number} campSize
   * @return {void}
   */
export const _NETWORK_START_GANG = '0xd1a226f2e05e58fc';
/**
   * _GOOGLE_ANALYTICS_END_EVENT
   *
  
   * @return {boolean}
   */
export const _GOOGLE_ANALYTICS_END_EVENT = '0x87bbcc4360a9bde3';
/**
   * _GOOGLE_ANALYTICS_POP_PAGE
   *
   * @param {string | number} pageName
   * @return {void}
   */
export const _GOOGLE_ANALYTICS_POP_PAGE = '0xc6de040378364798';
/**
   * _GOOGLE_ANALYTICS_PUSH_PAGE
   *
   * @param {string | number} pageName
   * @return {void}
   */
export const _GOOGLE_ANALYTICS_PUSH_PAGE = '0xd43a616ae3ac4ef6';
/**
   * _GOOGLE_ANALYTICS_START_EVENT
   *
   * @param {string | number} eventCategory
   * @param {string | number} eventAction
   * @param {string | number} eventLabel
   * @param {number} eventValue
   * @return {boolean}
   */
export const _GOOGLE_ANALYTICS_START_EVENT = '0x1c54f031d7c0f7ac';
/**
   * ADD_DECAL
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @param {any} p13
   * @param {any} p14
   * @param {any} p15
   * @param {any} p16
   * @param {any} p17
   * @param {any} p18
   * @param {any} p19
   * @param {any} p20
   * @param {any} p21
   * @return {number}
   */
export const ADD_DECAL = '0x57cb267624ef85c0';
/**
   * ADD_PETROL_TRAIL_DECAL_INFO
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @return {void}
   */
export const ADD_PETROL_TRAIL_DECAL_INFO = '0x73354fb6d03d2e8a';
/**
   * ADD_VEG_MODIFIER_SPHERE
   * Returns veg modifier handle
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} modType
   * @param {number} flags
   * @param {number} p6
   * @return {number}
   */
export const ADD_VEG_MODIFIER_SPHERE = '0xfa50f79257745e74';
/**
   * ALLOW_PICKUP_LIGHT_SYNC
   *
   * @param {number} pickupObject
   * @param {boolean} allow
   * @return {void}
   */
export const ALLOW_PICKUP_LIGHT_SYNC = '0x7c348310a6e2fb91';
/**
   * ANIMPOSTFX_HAS_EVENT_TRIGGERED_BY_STACKHASH
   *
   * @param {number} effectNameHash
   * @param {number} p1
   * @param {boolean} p2
   * @return {[boolean, boolean]}
   */
export const ANIMPOSTFX_HAS_EVENT_TRIGGERED_BY_STACKHASH = '0x9ab192a9ef980eed';
/**
   * ANIMPOSTFX_IS_PRELOADING_BY_STACKHASH
   *
   * @param {number} effectNameHash
   * @return {boolean}
   */
export const ANIMPOSTFX_IS_PRELOADING_BY_STACKHASH = '0x59ea80079b86d8c7';
/**
   * ANIMPOSTFX_IS_RUNNING
   *
   * @param {string | number} effectName
   * @return {boolean}
   */
export const ANIMPOSTFX_IS_RUNNING = '0x4a123e85d7c4ca0b';
/**
   * ANIMPOSTFX_PLAY
   * https://github.com/femga/rdr3_discoveries/blob/master/graphics/animpostfx
   *
   * @param {string | number} effectName
   * @return {void}
   */
export const ANIMPOSTFX_PLAY = '0x4102732df6b4005f';
/**
   * ANIMPOSTFX_STOP
   *
   * @param {string | number} effectName
   * @return {void}
   */
export const ANIMPOSTFX_STOP = '0xb4fd7446bab2f394';
/**
   * ANIMPOSTFX_STOP_ALL
   *
  
   * @return {void}
   */
export const ANIMPOSTFX_STOP_ALL = '0x66560a0d4c64fd21';
/**
   * ATTACH_TV_AUDIO_TO_ENTITY
   *
   * @param {number} entity
   * @return {void}
   */
export const ATTACH_TV_AUDIO_TO_ENTITY = '0x40866a418eb8efde';
/**
   * BEGIN_CREATE_LOW_QUALITY_COPY_OF_PHOTO
   * Called together with FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
   *
   * @param {number} p0
   * @return {boolean}
   */
export const BEGIN_CREATE_LOW_QUALITY_COPY_OF_PHOTO = '0x494a9874f17a7d50';
/**
   * BEGIN_TAKE_HIGH_QUALITY_PHOTO
   *
  
   * @return {boolean}
   */
export const BEGIN_TAKE_HIGH_QUALITY_PHOTO = '0xa15bffc0a01b34e1';
/**
   * BLOCK_PICKUP_PLACEMENT_LIGHT
   *
   * @param {number} pickup
   * @param {boolean} toggle
   * @return {void}
   */
export const BLOCK_PICKUP_PLACEMENT_LIGHT = '0x0552aa3ffc5b87aa';
/**
   * CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE
   *
  
   * @return {void}
   */
export const CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE = '0xf7c29d7c12c36f03';
/**
   * CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER
   * When this is set to ON, shadows only draw as you get nearer.
   * 
   * When OFF, they draw from a further distance.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER = '0x8fbfd2aeb196b369';
/**
   * CASCADE_SHADOWS_SET_CASCADE_BOUNDS
   *
   * @param {any} p0
   * @param {boolean} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {boolean} p6
   * @param {number} p7
   * @return {void}
   */
export const CASCADE_SHADOWS_SET_CASCADE_BOUNDS = '0xd9edb2e4512d563e';
/**
   * CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE
   * Possible values:
   * "CSM_ST_POINT"
   * "CSM_ST_LINEAR"
   * "CSM_ST_BOX3x3"
   * "CSM_ST_BOX4x4"
   * "CSM_ST_DITHER2_LINEAR"
   * "CSM_ST_CUBIC"
   * "CSM_ST_POISSON16"
   * "CSM_ST_SOFT8"
   * "CSM_ST_SOFT16"
   * "CSM_ST_SOFT32"
   * "CSM_ST_DITHER16_RPDB"
   * "CSM_ST_POISSON16_RPDB_GNORM"
   * "CSM_ST_HIGHRES_BOX4x4"
   * "CSM_ST_ESM"
   *
   * @param {string | number} type
   * @return {void}
   */
export const CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE = '0xce4774e0f9ad48d1';
/**
   * CLEAR_TIMECYCLE_MODIFIER
   *
  
   * @return {void}
   */
export const CLEAR_TIMECYCLE_MODIFIER = '0x0e3f4af2d63491fb';
/**
   * CREATE_CHECKPOINT_WITH_NAMEHASH
   *
   * @param {number} typeHash
   * @param {number} posX1
   * @param {number} posY1
   * @param {number} posZ1
   * @param {number} posX2
   * @param {number} posY2
   * @param {number} posZ2
   * @param {number} radius
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @param {number} alpha
   * @param {number} reserved
   * @return {number}
   */
export const CREATE_CHECKPOINT_WITH_NAMEHASH = '0x175668836b44cbb0';
/**
   * CREATE_TRACKED_POINT
   * Creates a tracked point, useful for checking the visibility of a 3D point on screen.
   *
  
   * @return {number}
   */
export const CREATE_TRACKED_POINT = '0xfb405cb357c69cb9';
/**
   * DELETE_CHECKPOINT
   *
   * @param {number} checkpoint
   * @return {void}
   */
export const DELETE_CHECKPOINT = '0x0ded5b0c8ebaae12';
/**
   * DESTROY_TRACKED_POINT
   *
   * @param {number} point
   * @return {void}
   */
export const DESTROY_TRACKED_POINT = '0x37a59922109f8f1c';
/**
   * DISABLE_ENTITYMASK
   *
  
   * @return {void}
   */
export const DISABLE_ENTITYMASK = '0x5c9978a2a3dc3d0d';
/**
   * DISABLE_HDTEX_THIS_FRAME
   *
  
   * @return {void}
   */
export const DISABLE_HDTEX_THIS_FRAME = '0x98a7cd5ea379a854';
/**
   * DOES_PARTICLE_FX_LOOPED_EXIST
   *
   * @param {number} ptfxHandle
   * @return {boolean}
   */
export const DOES_PARTICLE_FX_LOOPED_EXIST = '0x9dd5aff561e88f2a';
/**
   * DRAW_LIGHT_WITH_RANGE
   *
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} colorR
   * @param {number} colorG
   * @param {number} colorB
   * @param {number} range
   * @param {number} intensity
   * @return {void}
   */
export const DRAW_LIGHT_WITH_RANGE = '0xd2d9e04c0df927f4';
/**
   * DRAW_LOW_QUALITY_PHOTO_TO_PHONE
   * nullsub, doesn't do anything (GTA5 leftover, there is no phone in RDR3)
   *
   * @param {boolean} p0
   * @param {number} photoRotation
   * @return {void}
   */
export const DRAW_LOW_QUALITY_PHOTO_TO_PHONE = '0xf1142e5d64b47802';
/**
   * DRAW_RECT
   * Draws a rectangle on the screen.
   * 
   * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
   * 
   * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
   * 
   * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
   * 
   * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
   * 
   * -R: Red part of the color. (0-255)
   * 
   * -G: Green part of the color. (0-255)
   * 
   * -B: Blue part of the color. (0-255)
   * 
   * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
   *
   * @param {number} x
   * @param {number} y
   * @param {number} width
   * @param {number} height
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @param {number} alpha
   * @param {boolean} p8
   * @param {boolean} p9
   * @return {void}
   */
export const DRAW_RECT = '0x405224591df02025';
/**
   * DRAW_SPRITE
   * Draws a 2D sprite on the screen.
   * 
   * Parameters:
   * textureDict - Name of texture dictionary to load texture from
   * 
   * textureName - Name of texture to load from texture dictionary
   * 
   * screenX/Y - Screen offset (0.5 = center)
   * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
   * 
   * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
   * 
   * red,green,blue - Sprite color (default = 255/255/255)
   * 
   * alpha - opacity level
   * 
   * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures
   *
   * @param {string | number} textureDict
   * @param {string | number} textureName
   * @param {number} screenX
   * @param {number} screenY
   * @param {number} width
   * @param {number} height
   * @param {number} heading
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @param {number} alpha
   * @param {boolean} p11
   * @return {void}
   */
export const DRAW_SPRITE = '0xc9884ecade94cb34';
/**
   * DRAW_TV_CHANNEL
   *
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} xScale
   * @param {number} yScale
   * @param {number} rotation
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @param {number} alpha
   * @return {void}
   */
export const DRAW_TV_CHANNEL = '0xc0a145540254a840';
/**
   * ENABLE_ENTITYMASK
   *
  
   * @return {void}
   */
export const ENABLE_ENTITYMASK = '0xfaad23de7a54fc14';
/**
   * ENABLE_MOON_CYCLE_OVERRIDE
   * Old name: _ENABLE_EXTRA_TIMECYCLE_MODIFIER_STRENGTH
   *
   * @param {number} strength
   * @return {void}
   */
export const ENABLE_MOON_CYCLE_OVERRIDE = '0x6fe93bcc7bf12b63';
/**
   * ENABLE_MOVIE_SUBTITLES
   * nullsub, doesn't do anything
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const ENABLE_MOVIE_SUBTITLES = '0x6fc9b065229c0787';
/**
   * END_PETROL_TRAIL_DECALS
   *
  
   * @return {void}
   */
export const END_PETROL_TRAIL_DECALS = '0x0e126aae933f3b56';
/**
   * FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO
   *
  
   * @return {void}
   */
export const FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO = '0xd45547d8396f002a';
/**
   * FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
   *
  
   * @return {void}
   */
export const FREE_MEMORY_FOR_LOW_QUALITY_PHOTO = '0x614682e715adbaac';
/**
   * FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO
   *
  
   * @return {void}
   */
export const FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO = '0x7dff8f94937d2659';
/**
   * GET_SCREEN_COORD_FROM_WORLD_COORD
   *
   * @param {number} worldX
   * @param {number} worldY
   * @param {number} worldZ
   * @return {[boolean, number, number]}
   */
export const GET_SCREEN_COORD_FROM_WORLD_COORD = '0xcb50d7afcc8b0ec6';
/**
   * GET_SCREEN_RESOLUTION
   * Hardcoded to always set x to 1280 and y to 720.
   *
  
   * @return {[number, number]}
   */
export const GET_SCREEN_RESOLUTION = '0x66773c92835d0909';
/**
   * GET_STATUS_OF_CREATE_LOW_QUALITY_COPY_OF_PHOTO
   * Old name: _GET_STATUS_OF_DRAW_LOW_QUALITY_PHOTO
   *
   * @param {any} p0
   * @return {number}
   */
export const GET_STATUS_OF_CREATE_LOW_QUALITY_COPY_OF_PHOTO = '0x13430d3d5a45f14b';
/**
   * GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
   * contentId: returned by NETWORK::_UGC_QUERY_GET_CREATOR_PHOTO(uVar0, 0, sParam3)
   *
   * @param {string | number} contentId
   * @return {number}
   */
export const GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO = '0xc71b50ae58d07369';
/**
   * GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO
   * 0 = succeeded
   * 1 = getting status
   * 2 = failed
   *
  
   * @return {number}
   */
export const GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO = '0xd6663ec374092383';
/**
   * GET_STATUS_OF_SORTED_LIST_OPERATION
   * 0 = succeeded
   * 1 = getting status
   * 2 = failed
   *
  
   * @return {number}
   */
export const GET_STATUS_OF_SORTED_LIST_OPERATION = '0xb28894cd7408bd0c';
/**
   * GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO
   *
  
   * @return {number}
   */
export const GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO = '0x4a3da74c3ccb1725';
/**
   * GET_TIMECYCLE_MODIFIER_INDEX
   *
  
   * @return {number}
   */
export const GET_TIMECYCLE_MODIFIER_INDEX = '0xa705394293e2b3d3';
/**
   * GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX
   *
  
   * @return {number}
   */
export const GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX = '0x2da67ba3c8a6755d';
/**
   * GET_TOGGLE_PAUSED_RENDERPHASES_STATUS
   *
  
   * @return {boolean}
   */
export const GET_TOGGLE_PAUSED_RENDERPHASES_STATUS = '0x86ed21bdb2791ce8';
/**
   * GET_TV_CHANNEL
   *
  
   * @return {number}
   */
export const GET_TV_CHANNEL = '0xf90fbfd68f3c59ae';
/**
   * IS_DECAL_ALIVE
   *
   * @param {number} decal
   * @return {boolean}
   */
export const IS_DECAL_ALIVE = '0x3e4b4e5cf5d3eeb5';
/**
   * IS_PHOTO_FRAME
   *
  
   * @return {boolean}
   */
export const IS_PHOTO_FRAME = '0x86076ae35cbbe55f';
/**
   * IS_TRACKED_POINT_VISIBLE
   *
   * @param {number} point
   * @return {boolean}
   */
export const IS_TRACKED_POINT_VISIBLE = '0xcbb056ba159fb48d';
/**
   * IS_TVSHOW_CURRENTLY_PLAYING
   * Old name: _IS_TV_PLAYLIST_ITEM_PLAYING
   *
   * @param {number} videoCliphash
   * @return {boolean}
   */
export const IS_TVSHOW_CURRENTLY_PLAYING = '0x4d562223e0eb65f3';
/**
   * LOAD_MISSION_CREATOR_PHOTO
   *
   * @param {DataView} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {boolean}
   */
export const LOAD_MISSION_CREATOR_PHOTO = '0x84f0ba7462ff8d58';
/**
   * PEDSHOT_IS_AVAILABLE
   *
  
   * @return {boolean}
   */
export const PEDSHOT_IS_AVAILABLE = '0xaf6e67d073d2dce2';
/**
   * QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS
   *
  
   * @return {any}
   */
export const QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS = '0xa42edf1e88734a7e';
/**
   * REMOVE_DECAL
   *
   * @param {number} decal
   * @return {void}
   */
export const REMOVE_DECAL = '0x49a720552eb0bb88';
/**
   * REMOVE_DECALS_FROM_OBJECT
   *
   * @param {number} obj
   * @return {void}
   */
export const REMOVE_DECALS_FROM_OBJECT = '0xfb8972bae0013140';
/**
   * REMOVE_DECALS_IN_RANGE
   * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} range
   * @return {void}
   */
export const REMOVE_DECALS_IN_RANGE = '0x86de59fa02902b40';
/**
   * REMOVE_GRASS_CULL_SPHERE
   *
   * @param {number} handle
   * @return {void}
   */
export const REMOVE_GRASS_CULL_SPHERE = '0xae7bf7ca9e4ba48d';
/**
   * REMOVE_PARTICLE_FX
   *
   * @param {number} ptfxHandle
   * @param {boolean} p1
   * @return {void}
   */
export const REMOVE_PARTICLE_FX = '0x459598f579c98929';
/**
   * REMOVE_PARTICLE_FX_FROM_ENTITY
   *
   * @param {number} entity
   * @return {void}
   */
export const REMOVE_PARTICLE_FX_FROM_ENTITY = '0x92884b4a49d81325';
/**
   * REMOVE_PARTICLE_FX_IN_RANGE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {void}
   */
export const REMOVE_PARTICLE_FX_IN_RANGE = '0x87b5905eca623b68';
/**
   * REMOVE_VEG_MODIFIER_SPHERE
   * only works by invoking and passing as pointer value Citizen.InvokeNative(0x9CF1836C03FB67A2, Citizen.PointerValueIntInitialized(vegModifierId),1) p1 is 1 or 0
   *
   * @param {number} vegModifierHandle
   * @param {number} p1
   * @return {void}
   */
export const REMOVE_VEG_MODIFIER_SPHERE = '0x9cf1836c03fb67a2';
/**
   * RESET_ADAPTATION
   * Sets an unknown value related to timecycles.
   *
   * @param {number} unk
   * @return {void}
   */
export const RESET_ADAPTATION = '0x297b72e2af094742';
/**
   * RESET_PARTICLE_FX_OVERRIDE
   * Resets the effect of SET_PARTICLE_FX_OVERRIDE
   *
   * @param {string | number} name
   * @return {void}
   */
export const RESET_PARTICLE_FX_OVERRIDE = '0x274b3dabf7e72def';
/**
   * RESET_PAUSED_RENDERPHASES
   *
  
   * @return {void}
   */
export const RESET_PAUSED_RENDERPHASES = '0xccd9aad85e1b559e';
/**
   * SAVE_HIGH_QUALITY_PHOTO
   *
   * @param {number} unused
   * @return {boolean}
   */
export const SAVE_HIGH_QUALITY_PHOTO = '0x57639fd876b68a91';
/**
   * SET_ARTIFICIAL_LIGHTS_STATE
   * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
   * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
   * 
   * state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
   *
   * @param {boolean} state
   * @return {void}
   */
export const SET_ARTIFICIAL_LIGHTS_STATE = '0xb2797619a7c7747b';
/**
   * SET_CHECKPOINT_RGBA
   * Sets the checkpoint color.
   *
   * @param {number} checkpoint
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @param {number} alpha
   * @return {void}
   */
export const SET_CHECKPOINT_RGBA = '0xcaafc225e33b1d15';
/**
   * SET_CHECKPOINT_RGBA2
   * Sets the checkpoint icon color.
   *
   * @param {number} checkpoint
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @param {number} alpha
   * @return {void}
   */
export const SET_CHECKPOINT_RGBA2 = '0x99aff17222d4deb4';
/**
   * SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME
   *
  
   * @return {void}
   */
export const SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME = '0x53ed07bf368eda59';
/**
   * SET_GRASS_CULL_SPHERE
   * Returns handle to be used with REMOVE_GRASS_CULL_SPHERE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @param {number} p4
   * @return {number}
   */
export const SET_GRASS_CULL_SPHERE = '0x27219300c36a8d40';
/**
   * SET_HIDOF_OVERRIDE
   * Old name: _SET_HIDOF_ENV_BLUR_PARAMS
   *
   * @param {boolean} p0
   * @param {boolean} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @return {void}
   */
export const SET_HIDOF_OVERRIDE = '0xcc23aa1a7cbfe840';
/**
   * SET_PARTICLE_FX_AMBIENT_COLOUR
   * Related to Campfires.
   * p1: AMB_BONFIRE_MP, AMB_CAMPFIRE_LRG_MP
   *
   * @param {number} entity
   * @param {string | number} p1
   * @param {number} r
   * @param {number} g
   * @param {number} b
   * @return {void}
   */
export const SET_PARTICLE_FX_AMBIENT_COLOUR = '0x3c61b52b00848c26';
/**
   * SET_PARTICLE_FX_BULLET_IMPACT_LODRANGE_SCALE
   *
   * @param {number} p0
   * @return {void}
   */
export const SET_PARTICLE_FX_BULLET_IMPACT_LODRANGE_SCALE = '0x8dccc98dc0dbf9e4';
/**
   * SET_PARTICLE_FX_BULLET_IMPACT_SCALE
   *
   * @param {number} scale
   * @return {void}
   */
export const SET_PARTICLE_FX_BULLET_IMPACT_SCALE = '0xa53c8d7d0f8c74d0';
/**
   * SET_PARTICLE_FX_FOOT_LODRANGE_SCALE
   *
   * @param {number} p0
   * @return {void}
   */
export const SET_PARTICLE_FX_FOOT_LODRANGE_SCALE = '0x2a1625858887d4e6';
/**
   * SET_PARTICLE_FX_LOOPED_ALPHA
   *
   * @param {number} ptfxHandle
   * @param {number} alpha
   * @return {void}
   */
export const SET_PARTICLE_FX_LOOPED_ALPHA = '0x88786e76234f7054';
/**
   * SET_PARTICLE_FX_LOOPED_COLOUR
   *
   * @param {number} ptfxHandle
   * @param {number} r
   * @param {number} g
   * @param {number} b
   * @param {boolean} p4
   * @return {void}
   */
export const SET_PARTICLE_FX_LOOPED_COLOUR = '0x239879fc61c610cc';
/**
   * SET_PARTICLE_FX_LOOPED_EVOLUTION
   *
   * @param {number} ptfxHandle
   * @param {string | number} propertyName
   * @param {number} amount
   * @param {boolean} noNetwork
   * @return {void}
   */
export const SET_PARTICLE_FX_LOOPED_EVOLUTION = '0x3674f389b0facd80';
/**
   * SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST
   *
   * @param {number} ptfxHandle
   * @param {number} range
   * @return {void}
   */
export const SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST = '0x9b04d471da0ad7aa';
/**
   * SET_PARTICLE_FX_LOOPED_OFFSETS
   *
   * @param {number} ptfxHandle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @return {void}
   */
export const SET_PARTICLE_FX_LOOPED_OFFSETS = '0xd3a4a95fc94fe83b';
/**
   * SET_PARTICLE_FX_LOOPED_SCALE
   *
   * @param {number} ptfxHandle
   * @param {number} scale
   * @return {void}
   */
export const SET_PARTICLE_FX_LOOPED_SCALE = '0x1a9e1c0d98d093b7';
/**
   * SET_PARTICLE_FX_NON_LOOPED_ALPHA
   *
   * @param {number} alpha
   * @return {void}
   */
export const SET_PARTICLE_FX_NON_LOOPED_ALPHA = '0xe8a35938a7026cea';
/**
   * SET_PARTICLE_FX_NON_LOOPED_COLOUR
   *
   * @param {number} r
   * @param {number} g
   * @param {number} b
   * @return {void}
   */
export const SET_PARTICLE_FX_NON_LOOPED_COLOUR = '0x60b85bed6577a35b';
/**
   * SET_PARTICLE_FX_OVERRIDE
   *
   * @param {string | number} oldAsset
   * @param {string | number} newAsset
   * @return {void}
   */
export const SET_PARTICLE_FX_OVERRIDE = '0xbe711a169e9c7e95';
/**
   * SET_PICKUP_LIGHT
   * https://imgur.com/a/I2swSDJ
   * 
   * Old name: _SET_PICKUP_OBJECT_GLOW_ENABLED
   *
   * @param {number} object
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PICKUP_LIGHT = '0x7dfb49bcdb73089a';
/**
   * SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU
   * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for draw commands that are used with a world render target.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU = '0x906b86e6d7896b9e';
/**
   * SET_SCRIPT_GFX_DRAW_ORDER
   * Sets the draw order for script draw commands.
   *
   * @param {number} drawOrder
   * @return {void}
   */
export const SET_SCRIPT_GFX_DRAW_ORDER = '0xcfcc78391c8b3814';
/**
   * SET_TIMECYCLE_MODIFIER
   * https://github.com/femga/rdr3_discoveries/blob/master/graphics/timecycles
   *
   * @param {string | number} modifierName
   * @return {void}
   */
export const SET_TIMECYCLE_MODIFIER = '0xfa08722a5ea82da7';
/**
   * SET_TIMECYCLE_MODIFIER_STRENGTH
   *
   * @param {number} strength
   * @return {void}
   */
export const SET_TIMECYCLE_MODIFIER_STRENGTH = '0xfdb74c9cc54c3f37';
/**
   * SET_TRACKED_POINT_INFO
   *
   * @param {number} point
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {void}
   */
export const SET_TRACKED_POINT_INFO = '0xf6fda3d4404d4f2c';
/**
   * SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER
   *
   * @param {number} strength
   * @return {void}
   */
export const SET_TRANSITION_OUT_OF_TIMECYCLE_MODIFIER = '0xbb6c707f20d955d4';
/**
   * SET_TRANSITION_TIMECYCLE_MODIFIER
   *
   * @param {string | number} modifierName
   * @param {number} transitionBlend
   * @return {void}
   */
export const SET_TRANSITION_TIMECYCLE_MODIFIER = '0xff927a09f481d80c';
/**
   * SET_TV_AUDIO_FRONTEND
   * Probably changes tvs from being a 3d audio to being "global" audio
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_TV_AUDIO_FRONTEND = '0x64437c98fcc5f291';
/**
   * SET_TV_CHANNEL
   *
   * @param {number} channel
   * @return {void}
   */
export const SET_TV_CHANNEL = '0x593faf7fc9401a56';
/**
   * SET_TV_CHANNEL_PLAYLIST
   *
   * @param {number} tvChannel
   * @param {string | number} playlistName
   * @param {boolean} restart
   * @return {void}
   */
export const SET_TV_CHANNEL_PLAYLIST = '0xdec6b25f5dc8925b';
/**
   * SET_TV_VOLUME
   *
   * @param {number} volume
   * @return {void}
   */
export const SET_TV_VOLUME = '0x73a97068787d7231';
/**
   * START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY
   *
   * @param {string | number} effectName
   * @param {number} entity
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} scale
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @return {number}
   */
export const START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY = '0x8f90ab32e1944bde';
/**
   * START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE
   *
   * @param {string | number} effectName
   * @param {number} entity
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} boneIndex
   * @param {number} scale
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @return {number}
   */
export const START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE = '0x9c56621462ffe7a6';
/**
   * START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD
   *
   * @param {string | number} effectName
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} scale
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @return {boolean}
   */
export const START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD = '0xfb97618457994a62';
/**
   * START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY
   *
   * @param {string | number} effectName
   * @param {number} entity
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scale
   * @param {boolean} axisX
   * @param {boolean} axisY
   * @param {boolean} axisZ
   * @return {boolean}
   */
export const START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY = '0xe6cfe43937061143';
/**
   * START_PARTICLE_FX_LOOPED_AT_COORD
   * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_looped.lua
   *
   * @param {string | number} effectName
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} scale
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @param {boolean} p11
   * @return {number}
   */
export const START_PARTICLE_FX_LOOPED_AT_COORD = '0xba32867e86125d3a';
/**
   * START_PARTICLE_FX_LOOPED_ON_ENTITY
   *
   * @param {string | number} effectName
   * @param {number} entity
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} scale
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @return {number}
   */
export const START_PARTICLE_FX_LOOPED_ON_ENTITY = '0xbd41e1440ce39800';
/**
   * START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE
   *
   * @param {string | number} effectName
   * @param {number} entity
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} boneIndex
   * @param {number} scale
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @return {number}
   */
export const START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE = '0xd3ba6ec7f2fbd5e9';
/**
   * START_PARTICLE_FX_LOOPED_ON_PED_BONE
   *
   * @param {string | number} effectName
   * @param {number} ped
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} boneIndex
   * @param {number} scale
   * @param {boolean} xAxis
   * @param {boolean} yAxis
   * @param {boolean} zAxis
   * @return {number}
   */
export const START_PARTICLE_FX_LOOPED_ON_PED_BONE = '0xe689c1b1432bb8af';
/**
   * START_PARTICLE_FX_NON_LOOPED_AT_COORD
   * https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_non_looped.lua
   *
   * @param {string | number} effectName
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} scale
   * @param {number} eventType
   * @param {boolean} bPeekOnly
   * @param {boolean} bIsRegistered
   * @return {boolean}
   */
export const START_PARTICLE_FX_NON_LOOPED_AT_COORD = '0x2e80bf72ef7c87ac';
/**
   * START_PARTICLE_FX_NON_LOOPED_ON_ENTITY
   *
   * @param {string | number} effectName
   * @param {number} entity
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scale
   * @param {boolean} axisX
   * @param {boolean} axisY
   * @param {boolean} axisZ
   * @return {boolean}
   */
export const START_PARTICLE_FX_NON_LOOPED_ON_ENTITY = '0xff4c64c513388c12';
/**
   * START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
   *
   * @param {string | number} effectName
   * @param {number} ped
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} boneIndex
   * @param {number} scale
   * @param {boolean} axisX
   * @param {boolean} axisY
   * @param {boolean} axisZ
   * @return {boolean}
   */
export const START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE = '0x3faa72bd940c3ac0';
/**
   * START_PETROL_TRAIL_DECALS
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const START_PETROL_TRAIL_DECALS = '0x46f246d6504f0031';
/**
   * STOP_PARTICLE_FX_LOOPED
   *
   * @param {number} ptfxHandle
   * @param {boolean} p1
   * @return {void}
   */
export const STOP_PARTICLE_FX_LOOPED = '0x22970f3a088b133b';
/**
   * TOGGLE_PAUSED_RENDERPHASES
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const TOGGLE_PAUSED_RENDERPHASES = '0xef9e1c45732f55fa';
/**
   * UPDATE_LIGHTS_ON_ENTITY
   *
   * @param {number} entity
   * @return {void}
   */
export const UPDATE_LIGHTS_ON_ENTITY = '0xbdbacb52a03cc760';
/**
   * USE_PARTICLE_FX_ASSET
   * fxName: see data_0/data/effects/ptfx/fxlists/
   *
   * @param {string | number} fxName
   * @return {void}
   */
export const USE_PARTICLE_FX_ASSET = '0xa10db07fc234dd12';
/**
   * _0x085C5B61A0114F32
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x085C5B61A0114F32 = '0x085c5b61a0114f32';
/**
   * _0x0D5B19C34068FEE7
   * Gets set to 1 when GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO = PHOTO_OPERATION_SUCCEEDED
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0D5B19C34068FEE7 = '0x0d5b19c34068fee7';
/**
   * _0x1460B644397453EB
   * _RESET_*
   *
  
   * @return {void}
   */
export const _0x1460B644397453EB = '0x1460b644397453eb';
/**
   * _0x171C18E994C1A395
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x171C18E994C1A395 = '0x171c18e994c1a395';
/**
   * _0x1A9F09AB458D49C6
   * Used in shop scripts for CATALOG_BOOK
   * false = Normal -> [CATALOG_BOOK_SHUTDOWN]
   * true = Trees flickering? -> [CATALOG_BOOK_OPEN]
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x1A9F09AB458D49C6 = '0x1a9f09ab458d49c6';
/**
   * _0x1C6306E5BC25C29C
   *
  
   * @return {void}
   */
export const _0x1C6306E5BC25C29C = '0x1c6306e5bc25c29c';
/**
   * _0x1FF8731BE1DFC0C0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x1FF8731BE1DFC0C0 = '0x1ff8731be1dfc0c0';
/**
   * _0x21F00E08CBB5F37B
   * Params: component - used in odriscolls1 and sean1 R* SP Script: COMPONENT_BINOCULARS_SCOPE01
   * Triggers the binocular scaleform
   *
   * @param {string | number} component
   * @return {void}
   */
export const _0x21F00E08CBB5F37B = '0x21f00e08cbb5f37b';
/**
   * _0x26DD2FB0A88CC412
   * effectName2, p2 and p3 are unused
   * 
   * ANIMPOSTFX_*
   *
   * @param {string | number} effectName
   * @param {string | number} effectName2
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x26DD2FB0A88CC412 = '0x26dd2fb0a88cc412';
/**
   * _0x285438C26C732F9D
   *
  
   * @return {any}
   */
export const _0x285438C26C732F9D = '0x285438c26c732f9d';
/**
   * _0x32DE2BFFDA43E62A
   *
  
   * @return {void}
   */
export const _0x32DE2BFFDA43E62A = '0x32de2bffda43e62a';
/**
   * _0x38D9D50F2085E9B3
   * ANIMPOSTFX_*
   *
   * @param {number} effectNameHash
   * @return {void}
   */
export const _0x38D9D50F2085E9B3 = '0x38d9d50f2085e9b3';
/**
   * _0x3DA7A10583A4BEC0
   * ANIMPOSTFX_*
   *
  
   * @return {boolean}
   */
export const _0x3DA7A10583A4BEC0 = '0x3da7a10583a4bec0';
/**
   * _0x402E1A61D2587FCD
   * Only used in R* SP Script spd_agnesdown1
   *
   * @param {any} p0
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @param {number} p5
   * @param {number} heading
   * @return {boolean}
   */
export const _0x402E1A61D2587FCD = '0x402e1a61d2587fcd';
/**
   * _0x4046493D2EEACA0E
   * _DISABLE_*
   *
  
   * @return {void}
   */
export const _0x4046493D2EEACA0E = '0x4046493d2eeaca0e';
/**
   * _0x41F88A85A579A61D
   * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x41F88A85A579A61D = '0x41f88a85a579a61d';
/**
   * _0x453D16D41FC51D3E
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x453D16D41FC51D3E = '0x453d16d41fc51d3e';
/**
   * _0x48FE0DB54045B975
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _0x48FE0DB54045B975 = '0x48fe0db54045b975';
/**
   * _0x4BD66B4E3427689B
   * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
   *
   * @param {string | number} p0
   * @return {void}
   */
export const _0x4BD66B4E3427689B = '0x4bd66b4e3427689b';
/**
   * _0x4FB67D172C4476F3
   * p1: AMB_ANN_COAL_CHUTE_DIVE, AMB_ANN_COAL_CHUTE
   * p2: EMIT
   * p3: either 0.0f or 1.0f
   *
   * @param {number} entity
   * @param {string | number} p1
   * @param {string | number} p2
   * @param {number} p3
   * @return {void}
   */
export const _0x4FB67D172C4476F3 = '0x4fb67d172c4476f3';
/**
   * _0x503941F65DBA24EC
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x503941F65DBA24EC = '0x503941f65dba24ec';
/**
   * _0x519928DF02EB5101
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x519928DF02EB5101 = '0x519928df02eb5101';
/**
   * _0x5AC6E0FA028369DE
   * Closes the the binocular scaleform
   *
  
   * @return {void}
   */
export const _0x5AC6E0FA028369DE = '0x5ac6e0fa028369de';
/**
   * _0x5C674EB487891F6B
   *
  
   * @return {any}
   */
export const _0x5C674EB487891F6B = '0x5c674eb487891f6b';
/**
   * _0x5C9C3A466B3296A8
   * Only used in R* SP Script spd_agnesdown1
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x5C9C3A466B3296A8 = '0x5c9c3a466b3296a8';
/**
   * _SET_PHOTO_MODE_EXPOSURE_LOCKED
   *
   * @param {boolean} lock
   * @return {void}
   */
export const _SET_PHOTO_MODE_EXPOSURE_LOCKED = '0x5cd6a2cce5087161';
/**
   * _CHANGE_PHOTO_MODE_CONTRAST
   *
   * @param {number} value
   * @return {void}
   */
export const _CHANGE_PHOTO_MODE_CONTRAST = '0x62b9f9a1272aed80';
/**
   * _0x67B0778C62E74423
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x67B0778C62E74423 = '0x67b0778c62e74423';
/**
   * _0x6C03118E9E5C1A14
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6C03118E9E5C1A14 = '0x6c03118e9e5c1a14';
/**
   * _0x71845905BCCDE781
   * ANIMPOSTFX_*
   *
   * @param {number} effectNameHash
   * @return {void}
   */
export const _0x71845905BCCDE781 = '0x71845905bccde781';
/**
   * _0x735762E8D7573E42
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x735762E8D7573E42 = '0x735762e8d7573e42';
/**
   * _0x812C1563185C6FB2
   * Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
   * _ENABLE_*
   *
  
   * @return {void}
   */
export const _0x812C1563185C6FB2 = '0x812c1563185c6fb2';
/**
   * _0x815653A42C5ABE76
   *
  
   * @return {void}
   */
export const _0x815653A42C5ABE76 = '0x815653a42c5abe76';
/**
   * _0x8996FA6AD9FE4E90
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x8996FA6AD9FE4E90 = '0x8996fa6ad9fe4e90';
/**
   * _0x910E260AEAD855DE
   *
  
   * @return {void}
   */
export const _0x910E260AEAD855DE = '0x910e260aead855de';
/**
   * _UPDATE_PHOTO_MODE_EXPOSURE
   * Resets the exposure to the value when exposure lock was enabled
   *
  
   * @return {void}
   */
export const _UPDATE_PHOTO_MODE_EXPOSURE = '0x9229ed770975bd9e';
/**
   * _0x94B261F1F35293E1
   * nullsub, doesn't do anything
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x94B261F1F35293E1 = '0x94b261f1f35293e1';
/**
   * _0x981C7D863980FA51
   *
  
   * @return {void}
   */
export const _0x981C7D863980FA51 = '0x981c7d863980fa51';
/**
   * _0x9D1B0B5066205692
   *
  
   * @return {void}
   */
export const _0x9D1B0B5066205692 = '0x9d1b0b5066205692';
/**
   * _0x9F158A49B0D84C3C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9F158A49B0D84C3C = '0x9f158a49b0d84c3c';
/**
   * _0x9F6D859C80708B26
   *
   * @param {boolean} p0
   * @param {boolean} p1
   * @return {void}
   */
export const _0x9F6D859C80708B26 = '0x9f6d859c80708b26';
/**
   * _0xA04EF43030593ABC
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA04EF43030593ABC = '0xa04ef43030593abc';
/**
   * _0xA0F4D12D6042F6D5
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA0F4D12D6042F6D5 = '0xa0f4d12d6042f6d5';
/**
   * _0xA15CCAB8AD038291
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0xA15CCAB8AD038291 = '0xa15ccab8ad038291';
/**
   * _0xA1A86055792FB249
   *
   * @param {number} personaPhotoLocalCacheType
   * @return {void}
   */
export const _0xA1A86055792FB249 = '0xa1a86055792fb249';
/**
   * _0xA201A3D0AC087C37
   * ANIMPOSTFX_*
   *
   * @param {string | number} effectName
   * @return {void}
   */
export const _0xA201A3D0AC087C37 = '0xa201a3d0ac087c37';
/**
   * _0xA21AF60C9F99CCC5
   *
  
   * @return {void}
   */
export const _0xA21AF60C9F99CCC5 = '0xa21af60c9f99ccc5';
/**
   * _0xB032C085D9A03907
   * _SET_D* or _SET_E*
   *
  
   * @return {void}
   */
export const _0xB032C085D9A03907 = '0xb032c085d9a03907';
/**
   * _0xB958D97A0DFAA0C2
   * ANIMPOSTFX_*
   *
   * @param {string | number} effectName
   * @return {boolean}
   */
export const _0xB958D97A0DFAA0C2 = '0xb958d97a0dfaa0c2';
/**
   * _0xC06F2F45A73EABCD
   * Used in NET_CAMP_SPIRIT_ANIMAL_CLEAR_ANIMAL_VISIBILITY
   *
   * @param {number} entity
   * @return {void}
   */
export const _0xC06F2F45A73EABCD = '0xc06f2f45a73eabcd';
/**
   * _0xC28F62AC9774FC1B
   *
  
   * @return {any}
   */
export const _0xC28F62AC9774FC1B = '0xc28f62ac9774fc1b';
/**
   * _0xC37792A3F9C90771
   * Doesn't actually return anything.
   * 
   * ANIMPOSTFX_*
   *
  
   * @return {any}
   */
export const _0xC37792A3F9C90771 = '0xc37792a3f9c90771';
/**
   * _0xC489FE31AC726512
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xC489FE31AC726512 = '0xc489fe31ac726512';
/**
   * _0xC76FC4C2FC5F4405
   * ANIMPOSTFX_*
   *
   * @param {number} effectNameHash
   * @return {void}
   */
export const _0xC76FC4C2FC5F4405 = '0xc76fc4c2fc5f4405';
/**
   * _CHANGE_PHOTO_MODE_EXPOSURE
   *
   * @param {number} value
   * @return {void}
   */
export const _CHANGE_PHOTO_MODE_EXPOSURE = '0xc8d0611d9a0cf5d3';
/**
   * _0xCC3B787E73E64160
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0xCC3B787E73E64160 = '0xcc3b787e73e64160';
/**
   * _0xD1472AFF30C103D6
   * Only used in R* Script nb_stalking_hunter
   *
   * @param {number} p0
   * @return {void}
   */
export const _0xD1472AFF30C103D6 = '0xd1472aff30c103d6';
/**
   * _0xD543487A1F12828F
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xD543487A1F12828F = '0xd543487a1f12828f';
/**
   * _0xD9BC98B55BCFAA9B
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xD9BC98B55BCFAA9B = '0xd9bc98b55bcfaa9b';
/**
   * _0xDFE332A5DA6FE7C9
   * Returns iNumPixels, iPixelsVisible
   *
   * @param {number} iTrackedPoint
   * @return {number}
   */
export const _0xDFE332A5DA6FE7C9 = '0xdfe332a5da6fe7c9';
/**
   * _0xE63D68F455CA0B47
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {any}
   */
export const _0xE63D68F455CA0B47 = '0xe63d68f455ca0b47';
/**
   * _0xE75CDDEBF618C8FF
   * ANIMPOSTFX_*
   *
   * @param {number} effectNameHash
   * @return {boolean}
   */
export const _0xE75CDDEBF618C8FF = '0xe75cddebf618c8ff';
/**
   * _0xEB48CE48EEC41FD4
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xEB48CE48EEC41FD4 = '0xeb48ce48eec41fd4';
/**
   * _0xEC3D8C228FE553D7
   *
   * @param {boolean} p0
   * @return {boolean}
   */
export const _0xEC3D8C228FE553D7 = '0xec3d8c228fe553d7';
/**
   * _0xEC3F7F24EEEB3BA3
   *
  
   * @return {void}
   */
export const _0xEC3F7F24EEEB3BA3 = '0xec3f7f24eeeb3ba3';
/**
   * _0xF2F543D48F319A3A
   *
  
   * @return {void}
   */
export const _0xF2F543D48F319A3A = '0xf2f543d48f319a3a';
/**
   * _0xF5793BB386E1FF9C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xF5793BB386E1FF9C = '0xf5793bb386e1ff9c';
/**
   * _0xFB680A9B33D0EDBE
   * _DISABLE_*
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0xFB680A9B33D0EDBE = '0xfb680a9b33d0edbe';
/**
   * _0xFBF161FCFEC8589E
   * ANIMPOSTFX_*
   *
   * @param {string | number} effectName
   * @param {number} p1
   * @param {boolean} p2
   * @return {[boolean, boolean]}
   */
export const _0xFBF161FCFEC8589E = '0xfbf161fcfec8589e';
/**
   * _0xFC9B53C072F418E0
   *
  
   * @return {any}
   */
export const _0xFC9B53C072F418E0 = '0xfc9b53c072f418e0';
/**
   * _0xFD05B1DDE83749FA
   * R* Script spd_agnesdow1: p0 = SPD_AGNES_DOWD_01
   *
   * @param {string | number} p0
   * @return {boolean}
   */
export const _0xFD05B1DDE83749FA = '0xfd05b1dde83749fa';
/**
   * _0xFF584F097C17FA8F
   * Returns whether the 'killFX' setting is enabled.
   * 
   * ANIMPOSTFX_*
   *
  
   * @return {boolean}
   */
export const _0xFF584F097C17FA8F = '0xff584f097c17fa8f';
/**
   * _0xFF8018C778349234
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xFF8018C778349234 = '0xff8018c778349234';
/**
   * _ADD_BLOOD_POOL
   * https://i.imgur.com/ULQU9US.jpg
   * More rounded and small puddle
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} unused
   * @return {void}
   */
export const _ADD_BLOOD_POOL = '0xfa2ecc78a6014d4f';
/**
   * _ADD_BLOOD_POOLS_FOR_PED
   * Creates blood pools for the given ped in some interval for a few seconds.
   *
   * @param {number} ped
   * @return {void}
   */
export const _ADD_BLOOD_POOLS_FOR_PED = '0xdfce8ce9f3ebe93f';
/**
   * _ADD_BLOOD_POOLS_FOR_PED_WITH_PARAMS
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} size
   * @param {number} p3
   * @return {void}
   */
export const _ADD_BLOOD_POOLS_FOR_PED_WITH_PARAMS = '0xc349ee1e6efa494b';
/**
   * _ADD_BLOOD_POOL_2
   * https://i.imgur.com/rPITUCV.jpg
   * More customizable and more like quadrants
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @param {number} size
   * @param {number} p5
   * @param {boolean} permanent
   * @param {number} p7
   * @param {boolean} p8
   * @return {void}
   */
export const _ADD_BLOOD_POOL_2 = '0xf708298675abdc6a';
/**
   * _ADD_BLOOD_TRAIL_POINT
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _ADD_BLOOD_TRAIL_POINT = '0xdd9dc1ab63d513ce';
/**
   * _ADD_BLOOD_TRAIL_SPLAT
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _ADD_BLOOD_TRAIL_SPLAT = '0xf5e45cb1cf965d2d';
/**
   * _ADD_ENTITY_TO_ENTITY_MASK
   *
   * @param {number} entity
   * @param {number} mask
   * @return {void}
   */
export const _ADD_ENTITY_TO_ENTITY_MASK = '0xc6f81fcd15350323';
/**
   * _ADD_ENTITY_TO_ENTITY_MASK_WITH_INTENSITY
   *
   * @param {number} entity
   * @param {number} mask
   * @param {number} intensity
   * @return {void}
   */
export const _ADD_ENTITY_TO_ENTITY_MASK_WITH_INTENSITY = '0x958debd9353c0935';
/**
   * _ADD_VEG_MODIFIER_ZONE
   * Adds Vegetation Blocking Zone, Added Snow Flattening veg mod Zone
   * Returns veg modifier handle
   *
   * @param {number} volume
   * @param {number} p1
   * @param {number} flags
   * @param {number} p3
   * @return {number}
   */
export const _ADD_VEG_MODIFIER_ZONE = '0xbd3324281e8b9933';
/**
   * _ANIMPOSTFX_CLEAR_EFFECT
   *
   * @param {string | number} effectName
   * @return {void}
   */
export const _ANIMPOSTFX_CLEAR_EFFECT = '0xc5cb91d65852ed7e';
/**
   * _ANIMPOSTFX_GET_STACKHASH
   * Known effects: MP_Trans_SceneToPhoto
   * MP_Trans_WinLose
   * SpectateFilter
   * MP_CharacterCreatorPhoto
   * MP_Trans_PhotoToScene
   * InterrogationHit
   *
   * @param {string | number} effectName
   * @return {number}
   */
export const _ANIMPOSTFX_GET_STACKHASH = '0x842ccc9491ffcd9b';
/**
   * _ANIMPOSTFX_HAS_LOADED
   *
   * @param {string | number} effectName
   * @return {boolean}
   */
export const _ANIMPOSTFX_HAS_LOADED = '0xbf2dd155b2adcd0a';
/**
   * _ANIMPOSTFX_IS_STACKHASH_PLAYING
   *
   * @param {number} effectNameHash
   * @return {boolean}
   */
export const _ANIMPOSTFX_IS_STACKHASH_PLAYING = '0xeef83a759ae06a27';
/**
   * _ANIMPOSTFX_IS_TAG_PLAYING
   *
   * @param {string | number} effectName
   * @return {boolean}
   */
export const _ANIMPOSTFX_IS_TAG_PLAYING = '0x2d4f9c852ce8a253';
/**
   * _ANIMPOSTFX_PLAY_TAG
   *
   * @param {number} effectNameHash
   * @return {void}
   */
export const _ANIMPOSTFX_PLAY_TAG = '0x9b8d5d4cb8af58b3';
/**
   * _ANIMPOSTFX_PLAY_TIMED
   *
   * @param {string | number} effectName
   * @param {number} duration
   * @return {void}
   */
export const _ANIMPOSTFX_PLAY_TIMED = '0x3a9a281ff71249e9';
/**
   * _ANIMPOSTFX_PRELOAD_POSTFX
   *
   * @param {string | number} effectName
   * @return {void}
   */
export const _ANIMPOSTFX_PRELOAD_POSTFX = '0x5199405eabfbd7f0';
/**
   * _ANIMPOSTFX_PRELOAD_POSTFX_BY_STACKHASH
   *
   * @param {number} effectNameHash
   * @return {void}
   */
export const _ANIMPOSTFX_PRELOAD_POSTFX_BY_STACKHASH = '0xf3e039322bfbd4d8';
/**
   * _ANIMPOSTFX_SET_POSTFX_COLOR
   *
   * @param {string | number} effectName
   * @param {number} p1
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @param {number} alpha
   * @return {void}
   */
export const _ANIMPOSTFX_SET_POSTFX_COLOR = '0x63011d0c7c6519e0';
/**
   * _ANIMPOSTFX_SET_POTENCY
   * Health Core Effect Filter Potency: p1 = 1
   * Stamina Core Effect Filter Potency: p1 = 2
   * Multiple Core Effect Filter Potency: p1 = 3
   *
   * @param {string | number} effectName
   * @param {number} p1
   * @param {number} potency
   * @return {void}
   */
export const _ANIMPOSTFX_SET_POTENCY = '0xf972f0ab16dc5260';
/**
   * _ANIMPOSTFX_SET_STRENGTH
   * must be called after ANIMPOSTFX_PLAY, strength 0.0f - 1.0f
   *
   * @param {string | number} effectName
   * @param {number} strength
   * @return {void}
   */
export const _ANIMPOSTFX_SET_STRENGTH = '0xcab4dd2d5b2b7246';
/**
   * _ANIMPOSTFX_SET_TO_UNLOAD
   *
   * @param {string | number} effectName
   * @return {void}
   */
export const _ANIMPOSTFX_SET_TO_UNLOAD = '0x37d7bdba89f13959';
/**
   * _ANIMPOSTFX_STOP_STACKHASH_POSTFX
   *
   * @param {number} effectNameHash
   * @return {void}
   */
export const _ANIMPOSTFX_STOP_STACKHASH_POSTFX = '0xeda5cbecf56e1386';
/**
   * _ANIMPOSTFX_STOP_TAG
   *
   * @param {string | number} effectName
   * @return {void}
   */
export const _ANIMPOSTFX_STOP_TAG = '0xad74c22a541ab987';
/**
   * _BLOCK_PICKUP_OBJECT_LIGHT
   *
   * @param {number} pickupObject
   * @param {boolean} toggle
   * @return {void}
   */
export const _BLOCK_PICKUP_OBJECT_LIGHT = '0x50c14328119e1dd1';
/**
   * _BLOOD_TRAIL_FOR_WAYPOINT
   * p1: 0.3f in R* Scripts
   *
   * @param {string | number} waypointRecording
   * @param {number} p1
   * @return {void}
   */
export const _BLOOD_TRAIL_FOR_WAYPOINT = '0xb9c92616929cc25d';
/**
   * _CREATE_SWATCH_TEXTURE_DICT
   *
   * @param {number} slots
   * @return {boolean}
   */
export const _CREATE_SWATCH_TEXTURE_DICT = '0x3d084d5568fb4028';
/**
   * _DESTROY_SWATCH_TEXTURE_DICT
   *
  
   * @return {void}
   */
export const _DESTROY_SWATCH_TEXTURE_DICT = '0xdad7fb8402651654';
/**
   * _DISABLE_FAR_ARTIFICIAL_LIGHTS
   * Only used in guama1 R* Script
   * Disables lod/distant lights when BOOL is set to true
   *
   * @param {boolean} disable
   * @return {void}
   */
export const _DISABLE_FAR_ARTIFICIAL_LIGHTS = '0xcd284e2f6ac27ee9';
/**
   * _DISABLE_STATIC_VEG_MODIFIER
   *
   * @param {number} p0
   * @return {void}
   */
export const _DISABLE_STATIC_VEG_MODIFIER = '0xdd0bc0edcb2162f6';
/**
   * _DOES_CHECKPOINT_HAVE_FX
   *
   * @param {number} checkpoint
   * @return {boolean}
   */
export const _DOES_CHECKPOINT_HAVE_FX = '0x4c11ccacb7c02b6e';
/**
   * DRAW_MARKER
   * https://github.com/femga/rdr3_discoveries/blob/master/graphics/markers/marker_types.lua
   * Old name: _DRAW_MARKER
   *
   * @param {number} type
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} dirX
   * @param {number} dirY
   * @param {number} dirZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @param {number} alpha
   * @param {boolean} bobUpAndDown
   * @param {boolean} faceCamera
   * @param {number} p19
   * @param {boolean} rotate
   * @param {string | number} textureDict
   * @param {string | number} textureName
   * @param {boolean} drawOnEnts
   * @return {void}
   */
export const DRAW_MARKER = '0x2a32faa57b937173';
/**
   * _ENABLE_STATIC_VEG_MODIFIER
   *
   * @param {number} p0
   * @return {void}
   */
export const _ENABLE_STATIC_VEG_MODIFIER = '0xdfea23ec90113657';
/**
   * _GENERATE_SWATCH_TEXTURE
   * Example:
   * local hash = GetHashKey("CLOTHING_ITEM_M_EYES_001_TINT_001")
   * _GENERATE_SWATCH_TEXTURE(0, hash, 0, true)
   * metapedType: see 0xEC9A1261BF0CE510
   *
   * @param {number} slotId
   * @param {number} componentHash
   * @param {number} metapedType
   * @param {boolean} p3
   * @return {void}
   */
export const _GENERATE_SWATCH_TEXTURE = '0x160921255327c591';
/**
   * _GENERATE_SWATCH_TEXTURE_DIRECTLY
   * Example: https://pastebin.com/tTgpER9A
   *
   * @param {number} slot
   * @param {any} p1
   * @return {void}
   */
export const _GENERATE_SWATCH_TEXTURE_DIRECTLY = '0x646ed1a1d28487df';
/**
   * _GET_CURRENT_NUMBER_OF_LOCAL_PHOTOS
   *
  
   * @return {number}
   */
export const _GET_CURRENT_NUMBER_OF_LOCAL_PHOTOS = '0x78c56b8a7b1d000c';
/**
   * _GET_ENTITY_MASK_LAYERS
   *
   * @param {number} entity
   * @return {[boolean, number, number, number, number]}
   */
export const _GET_ENTITY_MASK_LAYERS = '0xe8a8378bf651079c';
/**
   * _GET_MAX_NUMBER_OF_LOCAL_PHOTOS
   * Always returns 200.
   *
  
   * @return {number}
   */
export const _GET_MAX_NUMBER_OF_LOCAL_PHOTOS = '0x8e587fcd30e05592';
/**
   * _GET_MODIFIED_VISIBILITY_DISTANCE
   * _GET_C* - _GET_E*
   *
  
   * @return {number}
   */
export const _GET_MODIFIED_VISIBILITY_DISTANCE = '0x25ca89b2a39dcc69';
/**
   * _GET_PHOTO_MODE_CONTRAST
   *
  
   * @return {number}
   */
export const _GET_PHOTO_MODE_CONTRAST = '0x98f4154989b81ec6';
/**
   * _GET_PHOTO_MODE_EXPOSURE
   *
  
   * @return {number}
   */
export const _GET_PHOTO_MODE_EXPOSURE = '0x06c0d8bb6b04a709';
/**
   * _GET_PROXY_INTERIOR_INDEX
   * Returns proxyInteriorIndex
   *
   * @param {number} interiorId
   * @return {number}
   */
export const _GET_PROXY_INTERIOR_INDEX = '0x5d1c5d8e62e8ee1c';
/**
   * _IS_PROXY_INTERIOR_INDEX_ARTIFICIAL_LIGHTS_ENABLED
   *
   * @param {number} proxyInteriorIndex
   * @return {boolean}
   */
export const _IS_PROXY_INTERIOR_INDEX_ARTIFICIAL_LIGHTS_ENABLED = '0x113857d66a9cabe6';
/**
   * _IS_STATIC_VEG_MODIFIER_ENABLED
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _IS_STATIC_VEG_MODIFIER_ENABLED = '0xde9bad3292aa6d5e';
/**
   * _IS_TEXTURE_IN_DICT
   *
   * @param {number} txdHash
   * @param {number} dict
   * @return {boolean}
   */
export const _IS_TEXTURE_IN_DICT = '0xa2a51869bded733b';
/**
   * _IS_TRACKED_POINT_VALID
   *
   * @param {number} point
   * @return {boolean}
   */
export const _IS_TRACKED_POINT_VALID = '0xf2fddcc8c6bae1b3';
/**
   * _PEDSHOT_FINISH_CLEANUP_DATA
   *
  
   * @return {void}
   */
export const _PEDSHOT_FINISH_CLEANUP_DATA = '0xc2b8164c3be871a4';
/**
   * _PEDSHOT_GENERATE_PERSONA_PHOTO
   *
   * @param {string | number} texture
   * @param {number} ped
   * @param {number} playerSlot
   * @return {boolean}
   */
export const _PEDSHOT_GENERATE_PERSONA_PHOTO = '0xd9c24f53631f2372';
/**
   * _PEDSHOT_INIT_CLEANUP_DATA
   *
  
   * @return {void}
   */
export const _PEDSHOT_INIT_CLEANUP_DATA = '0x55285f885f662169';
/**
   * _PEDSHOT_PREVIOUS_PERSONA_PHOTO_DATA_CLEANUP
   *
  
   * @return {void}
   */
export const _PEDSHOT_PREVIOUS_PERSONA_PHOTO_DATA_CLEANUP = '0x3e2fddbe435a8787';
/**
   * _PEDSHOT_SET_PERSONA_PHOTO_TYPE
   *
   * @param {number} personaPhotoLocalCacheType
   * @return {void}
   */
export const _PEDSHOT_SET_PERSONA_PHOTO_TYPE = '0x196d3acbeba4a44b';
/**
   * _REMOVE_ENTITY_FROM_ENTITY_MASK
   *
   * @param {number} entity
   * @return {void}
   */
export const _REMOVE_ENTITY_FROM_ENTITY_MASK = '0x56a786e87ff53478';
/**
   * _RESET_ENTITY_AURA
   * Used for script function RPG_GLOBAL_STATS__PRIVATE__DEACTIVATE_STAT_FLAG - Inspiration Aura unequip
   *
  
   * @return {void}
   */
export const _RESET_ENTITY_AURA = '0xaf4d239b8903fcbe';
/**
   * _SET_CLOUD_HEIGHT
   *
   * @param {number} height
   * @return {void}
   */
export const _SET_CLOUD_HEIGHT = '0xc332c91388f5580b';
/**
   * _SET_CLOUD_LAYER
   *
   * @param {number} x
   * @param {number} y
   * @param {number} p2
   * @return {void}
   */
export const _SET_CLOUD_LAYER = '0xb8c984c0d47f4f07';
/**
   * _SET_CLOUD_NOISE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _SET_CLOUD_NOISE = '0xfe7966df01452f32';
/**
   * _SET_CLOUD_POSITION
   * Only used in finale2, smuggler2, winter4
   * _SET_CLOUD_A* - _SET_CLOUD_H*
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _SET_CLOUD_POSITION = '0x10c1767b93257480';
/**
   * _SET_DISTRICT_PHOTO_TAKEN_STAT
   *
   * @param {string | number} p0
   * @return {void}
   */
export const _SET_DISTRICT_PHOTO_TAKEN_STAT = '0x9937facbbf267244';
/**
   * _SET_ENTITY_AURA
   * Used for script function RPG_GLOBAL_STATS__PRIVATE__ACTIVATE_STAT_FLAG - Quite and Inspiration Aura equip
   * Params: 0f, 2f, 2f
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _SET_ENTITY_AURA = '0x249cd6b7285536f2';
/**
   * _SET_ENTITY_MASK_LAYERS
   *
   * @param {number} entity
   * @return {[number, number, number, number]}
   */
export const _SET_ENTITY_MASK_LAYERS = '0xe92012611461a42a';
/**
   * _SET_ENTITY_RENDER_GUARMA_SHIP
   * Only used in guama1 R* SP Script while spawning the ship
   * _SET_ENTITY_QUATERNION_* - SET_ENTITY_RENDER_*
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_ENTITY_RENDER_GUARMA_SHIP = '0xc38b4952b728397a';
/**
   * _SET_LIGHTS_COLOR_FOR_ENTITY
   * https://gfycat.com/meagerfaireyra
   *
   * @param {number} entity
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @return {void}
   */
export const _SET_LIGHTS_COLOR_FOR_ENTITY = '0x6ec2a67962296f49';
/**
   * _SET_LIGHTS_INTENSITY_FOR_ENTITY
   *
   * @param {number} entity
   * @param {number} intensity
   * @return {void}
   */
export const _SET_LIGHTS_INTENSITY_FOR_ENTITY = '0x07c0f87aac57f2e4';
/**
   * _SET_LIGHTS_TYPE_FOR_ENTITY
   * type must be less than or equal to 20
   *
   * @param {number} entity
   * @param {number} type
   * @return {void}
   */
export const _SET_LIGHTS_TYPE_FOR_ENTITY = '0xab72c67163dc4db4';
/**
   * _SET_PARTICLE_FX_LOOPED_UPDATE_DISTANT_SMOKE
   * _SET_PARTICLE_FX_LOOPED_FA* - _SET_PARTICLE_FX_LOOPED_OF*
   *
   * @param {number} ptfxHandle
   * @param {number} scalar
   * @return {void}
   */
export const _SET_PARTICLE_FX_LOOPED_UPDATE_DISTANT_SMOKE = '0x9ddc222d85d5af2a';
/**
   * _SET_PARTICLE_FX_NON_LOOPED_EMITTER_SCALE
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _SET_PARTICLE_FX_NON_LOOPED_EMITTER_SCALE = '0x56c392c2bd78b024';
/**
   * _SET_PEARLESCENT_FX_ENABLED
   * Enables/disables a kind of 'shiny' effect on metals.
   *
   * @param {number} object
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PEARLESCENT_FX_ENABLED = '0x72e30372e7cc4415';
/**
   * _SET_PHOTO_IN_PHOTOMODE_STAT
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _SET_PHOTO_IN_PHOTOMODE_STAT = '0xfa91736933ab3d93';
/**
   * _SET_PHOTO_OVERLAY_EFFECT_STAT
   *
   * @param {number} p0
   * @return {void}
   */
export const _SET_PHOTO_OVERLAY_EFFECT_STAT = '0x8b3296278328b5eb';
/**
   * _SET_PHOTO_SELF_STAT
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _SET_PHOTO_SELF_STAT = '0x2705d18c11b61046';
/**
   * _SET_PHOTO_STUDIO_STAT
   *
   * @param {number} p0
   * @return {void}
   */
export const _SET_PHOTO_STUDIO_STAT = '0x8e6aff353c09652e';
/**
   * _SET_PLAYER_APPEAR_IN_PHOTO
   *
   * @param {number} player
   * @return {void}
   */
export const _SET_PLAYER_APPEAR_IN_PHOTO = '0x75d568607909333e';
/**
   * _SET_POSSE_ID_FOR_PHOTO
   *
   * @param {any} posseId
   * @return {void}
   */
export const _SET_POSSE_ID_FOR_PHOTO = '0x564837d4a9ede296';
/**
   * _SET_PROXY_INTERIOR_INDEX_ARTIFICIAL_LIGHTS_STATE
   * state: false disables artificial interior light sources for specific proxyInteriorIndex
   *
   * @param {number} proxyInteriorIndex
   * @param {boolean} state
   * @return {void}
   */
export const _SET_PROXY_INTERIOR_INDEX_ARTIFICIAL_LIGHTS_STATE = '0xbfcb17895bb99e4e';
/**
   * _SET_REGION_PHOTO_TAKEN_STAT
   *
   * @param {string | number} p0
   * @return {void}
   */
export const _SET_REGION_PHOTO_TAKEN_STAT = '0xd1031b83ac093bc7';
/**
   * _SET_SNIPER_GLINTS_ENABLED
   *
   * @param {boolean} enabled
   * @return {void}
   */
export const _SET_SNIPER_GLINTS_ENABLED = '0x6e8eb45a4f4460eb';
/**
   * _SET_SNOW_COVERAGE_TYPE
   * enum class eSnowCoverageType
   * {
   *   Primary,
   *   Secondary,
   *   Xmas,
   *   XmasSecondary // since b1232
   * };
   *
   * @param {number} type
   * @return {void}
   */
export const _SET_SNOW_COVERAGE_TYPE = '0xf02a9c330bbfc5c7';
/**
   * _SET_STATE_PHOTO_TAKEN_STAT
   *
   * @param {string | number} p0
   * @return {void}
   */
export const _SET_STATE_PHOTO_TAKEN_STAT = '0x8952e857696b8a79';
/**
   * _START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE_2
   *
   * @param {string | number} effectName
   * @param {number} ped
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} boneIndex
   * @param {number} scale
   * @param {boolean} axisX
   * @param {boolean} axisY
   * @param {boolean} axisZ
   * @return {boolean}
   */
export const _START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE_2 = '0xc695870b8a149b96';
/**
   * ALLOW_PAUSE_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME
   * Old name: _ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME
   *
  
   * @return {void}
   */
export const ALLOW_PAUSE_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME = '0x30996422df1ee561';
/**
   * BUSYSPINNER_IS_ON
   *
  
   * @return {boolean}
   */
export const BUSYSPINNER_IS_ON = '0x823bf7b1df613a21';
/**
   * BUSYSPINNER_OFF
   * Removes the loading prompt at the bottom right of the screen.
   *
  
   * @return {void}
   */
export const BUSYSPINNER_OFF = '0x58f441b90ea84d06';
/**
   * CLEAR_ALL_HELP_MESSAGES
   *
  
   * @return {void}
   */
export const CLEAR_ALL_HELP_MESSAGES = '0x916ed8321f087059';
/**
   * CREATE_FAKE_MP_GAMER_TAG
   *
   * @param {number} ped
   * @param {string | number} username
   * @param {boolean} pointedClanTag
   * @param {boolean} isRockstarClan
   * @param {string | number} clanTag
   * @param {number} clanFlag
   * @return {number}
   */
export const CREATE_FAKE_MP_GAMER_TAG = '0x53cb4b502e1c57ea';
/**
   * DISABLE_FRONTEND_THIS_FRAME
   *
  
   * @return {void}
   */
export const DISABLE_FRONTEND_THIS_FRAME = '0x56ce42a528156a67';
/**
   * DISPLAY_HUD
   * If Hud should be displayed
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const DISPLAY_HUD = '0xd63fe3af9fb3d53f';
/**
   * DOES_TEXT_LABEL_EXIST
   * Checks if the passed gxt name exists in the game files.
   *
   * @param {string | number} label
   * @return {boolean}
   */
export const DOES_TEXT_LABEL_EXIST = '0x73c258c68d6f55b6';
/**
   * GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME
   * Note: you must use VAR_STRING. Byte code very similar to TEXT_COMMAND_DISPLAY_TEXT in V
   * Old name: _GET_TEXT_SUBSTRING
   *
   * @param {string | number} text
   * @param {number} position
   * @param {number} length
   * @return {string | number}
   */
export const GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME = '0x9d7e12ec6a1ee4e5';
/**
   * GET_FILENAME_FOR_AUDIO_CONVERSATION
   * Gets a string literal from a label name.
   * 
   * Old name: _GET_LABEL_TEXT
   *
   * @param {string | number} labelName
   * @return {string | number}
   */
export const GET_FILENAME_FOR_AUDIO_CONVERSATION = '0xcfedccad3c5ba90d';
/**
   * GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION
   *
   * @param {number} worldX
   * @param {number} worldY
   * @param {number} worldZ
   * @return {[number, number, number]}
   */
export const GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION = '0xb39c81628ef10b42';
/**
   * GET_LENGTH_OF_LITERAL_STRING
   * Returns the length of the string passed (much like strlen).
   *
   * @param {string | number} string
   * @return {number}
   */
export const GET_LENGTH_OF_LITERAL_STRING = '0x481fbf588b0b76db';
/**
   * GET_LENGTH_OF_LITERAL_STRING_IN_BYTES
   *
   * @param {string | number} string
   * @return {number}
   */
export const GET_LENGTH_OF_LITERAL_STRING_IN_BYTES = '0xdc5ad6b7ab8184f5';
/**
   * GET_NAMED_RENDERTARGET_RENDER_ID
   *
   * @param {string | number} name
   * @return {number}
   */
export const GET_NAMED_RENDERTARGET_RENDER_ID = '0xb6762a85ee29aa60';
/**
   * GET_STRING_FROM_HASH_KEY
   * Returns the label text given the hash.
   * 
   * Old name: _GET_LABEL_TEXT_BY_HASH
   *
   * @param {number} labelHash
   * @return {string | number}
   */
export const GET_STRING_FROM_HASH_KEY = '0xbd5dd5eae2b6ce14';
/**
   * HIDE_HUD_AND_RADAR_THIS_FRAME
   *
  
   * @return {void}
   */
export const HIDE_HUD_AND_RADAR_THIS_FRAME = '0x36cdd81627a6fcd2';
/**
   * HIDE_LOADING_ON_FADE_THIS_FRAME
   *
  
   * @return {void}
   */
export const HIDE_LOADING_ON_FADE_THIS_FRAME = '0xea600aabaf4b9084';
/**
   * IS_HUD_HIDDEN
   *
  
   * @return {boolean}
   */
export const IS_HUD_HIDDEN = '0x71b72b478f8189dc';
/**
   * IS_MP_GAMER_TAG_ACTIVE
   *
   * @param {number} gamerTagId
   * @return {boolean}
   */
export const IS_MP_GAMER_TAG_ACTIVE = '0x6e1c31e14c7a5f97';
/**
   * IS_NAMED_RENDERTARGET_LINKED
   *
   * @param {number} modelHash
   * @return {boolean}
   */
export const IS_NAMED_RENDERTARGET_LINKED = '0x707032835ff09ae7';
/**
   * IS_NAMED_RENDERTARGET_REGISTERED
   *
   * @param {string | number} name
   * @return {boolean}
   */
export const IS_NAMED_RENDERTARGET_REGISTERED = '0x3ee32f7964c40fe6';
/**
   * IS_PAUSE_MENU_ACTIVE
   * Returns true when either Pause Menu, a Frontend Menu, Online Policies menu or Social Club menu is active.
   *
  
   * @return {boolean}
   */
export const IS_PAUSE_MENU_ACTIVE = '0x535384d6067ba42e';
/**
   * IS_RADAR_HIDDEN
   *
  
   * @return {boolean}
   */
export const IS_RADAR_HIDDEN = '0x1b82fd5ffa4d666e';
/**
   * IS_RADAR_HIDDEN_BY_SCRIPT
   *
  
   * @return {boolean}
   */
export const IS_RADAR_HIDDEN_BY_SCRIPT = '0x66f35dd9d2b58579';
/**
   * IS_RADAR_PREFERENCE_SWITCHED_ON
   *
  
   * @return {boolean}
   */
export const IS_RADAR_PREFERENCE_SWITCHED_ON = '0x81e47f0ee1f2b21e';
/**
   * IS_SUBTITLE_PREFERENCE_SWITCHED_ON
   *
  
   * @return {boolean}
   */
export const IS_SUBTITLE_PREFERENCE_SWITCHED_ON = '0x7c4ac9573587f2df';
/**
   * LINK_NAMED_RENDERTARGET
   *
   * @param {number} modelHash
   * @return {void}
   */
export const LINK_NAMED_RENDERTARGET = '0x2f506b8556242ddb';
/**
   * REGISTER_NAMED_RENDERTARGET
   *
   * @param {string | number} name
   * @param {boolean} p1
   * @return {boolean}
   */
export const REGISTER_NAMED_RENDERTARGET = '0x98af2bb6f62bd588';
/**
   * RELEASE_NAMED_RENDERTARGET
   *
   * @param {string | number} name
   * @return {boolean}
   */
export const RELEASE_NAMED_RENDERTARGET = '0x0e692ee61761361f';
/**
   * REMOVE_MP_GAMER_TAG
   * only works by invoking and passing as pointer value Citizen.InvokeNative(0x839BFD7D7E49FE09, Citizen.PointerValueIntInitialized(gamerTagId))
   *
   * @param {number} gamerTagId
   * @return {void}
   */
export const REMOVE_MP_GAMER_TAG = '0x839bfd7d7e49fe09';
/**
   * SET_FRONTEND_ACTIVE
   *
   * @param {boolean} active
   * @return {void}
   */
export const SET_FRONTEND_ACTIVE = '0xce47c21c0687ebc2';
/**
   * SET_MISSION_NAME
   *
   * @param {boolean} p0
   * @param {string | number} name
   * @return {void}
   */
export const SET_MISSION_NAME = '0x402669a4bdaa72da';
/**
   * SET_MISSION_NAME_FOR_UGC_MISSION
   *
   * @param {boolean} p0
   * @param {string | number} name
   * @return {void}
   */
export const SET_MISSION_NAME_FOR_UGC_MISSION = '0xd98630ce73c61e98';
/**
   * SET_MP_GAMER_TAG_BIG_TEXT
   *
   * @param {number} gamerTagId
   * @param {string | number} string
   * @return {void}
   */
export const SET_MP_GAMER_TAG_BIG_TEXT = '0xa0d7ce5f83259663';
/**
   * SET_MP_GAMER_TAG_NAME
   *
   * @param {number} gamerTagId
   * @param {string | number} string
   * @return {void}
   */
export const SET_MP_GAMER_TAG_NAME = '0xea6f4b8d4b4b5b3e';
/**
   * SET_TEXT_RENDER_ID
   *
   * @param {number} renderId
   * @return {void}
   */
export const SET_TEXT_RENDER_ID = '0xe550cde128d56757';
/**
   * TEXT_BLOCK_IS_LOADED
   *
   * @param {string | number} textBlock
   * @return {boolean}
   */
export const TEXT_BLOCK_IS_LOADED = '0xd0976cc34002db57';
/**
   * TEXT_BLOCK_REQUEST
   *
   * @param {string | number} textBlock
   * @return {void}
   */
export const TEXT_BLOCK_REQUEST = '0xf66090013de648d5';
/**
   * UI_GET_SCENE_UIOBJECT
   *
   * @param {any} p0
   * @return {any}
   */
export const UI_GET_SCENE_UIOBJECT = '0xbe1067cd1c9570f6';
/**
   * UI_MOVIEVIEW_SET_RENDER_TARGET
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const UI_MOVIEVIEW_SET_RENDER_TARGET = '0x51de09a2196bd951';
/**
   * UI_PROMPT_IS_CONTROL_ACTION_ACTIVE
   *
   * @param {number} controlAction
   * @return {boolean}
   */
export const UI_PROMPT_IS_CONTROL_ACTION_ACTIVE = '0x1be19185b8afe299';
/**
   * UI_REQUEST_SCENE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const UI_REQUEST_SCENE = '0xb6857100f8fd433c';
/**
   * _GET_NEAR_HORSE
   * This native accepts 1 as parameter in the decompiles
   * returns the nearest horse handle if within 2 3 meters of the player, if not close enough returns false
   * 
   * NOTE: if type is 0 returns PlayerPedId always?
   *
   * @param {number} p0
   * @return {number}
   */
export const _GET_NEAR_HORSE = '0x0501d52d24ea8934';
/**
   * _0x052D4AC0922AF91A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x052D4AC0922AF91A = '0x052d4ac0922af91a';
/**
   * _0x066725A9D52B3641
   *
  
   * @return {any}
   */
export const _0x066725A9D52B3641 = '0x066725a9d52b3641';
/**
   * _0x100157D6D7FE32CA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x100157D6D7FE32CA = '0x100157d6d7fe32ca';
/**
   * _0x160825DADF1B04B3
   *
  
   * @return {void}
   */
export const _0x160825DADF1B04B3 = '0x160825dadf1b04b3';
/**
   * _0x28AE29D909C8FDCE
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x28AE29D909C8FDCE = '0x28ae29d909c8fdce';
/**
   * _0x2F7BB105144ACF30
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const _0x2F7BB105144ACF30 = '0x2f7bb105144acf30';
/**
   * _0x3FE4FB41EF7D2196
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x3FE4FB41EF7D2196 = '0x3fe4fb41ef7d2196';
/**
   * _0x53CE46C01A089DA1
   *
   * @param {number} prompt
   * @param {boolean} p1
   * @return {void}
   */
export const _0x53CE46C01A089DA1 = '0x53ce46c01a089da1';
/**
   * _0x5651516D947ABC53
   *
  
   * @return {void}
   */
export const _0x5651516D947ABC53 = '0x5651516d947abc53';
/**
   * _0x7EC0D68233E391AC
   *
   * @param {number} p0
   * @return {number}
   */
export const _0x7EC0D68233E391AC = '0x7ec0d68233e391ac';
/**
   * _0x806862E5D266CF38
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x806862E5D266CF38 = '0x806862e5d266cf38';
/**
   * _0x8A59D44189AF2BC5
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8A59D44189AF2BC5 = '0x8a59d44189af2bc5';
/**
   * _0x8B55B324A9123F6B
   *
   * @param {number} groupId
   * @param {number} volume
   * @param {string | number} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {any}
   */
export const _0x8B55B324A9123F6B = '0x8b55b324a9123f6b';
/**
   * _0x958278B97C4AFFD8
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x958278B97C4AFFD8 = '0x958278b97c4affd8';
/**
   * _HUD_WEAPON_WHEEL_GET_SELECTED_ITEM_HASH
   * Returns the hash of the currently highlighted item in the weapon wheel.
   * Only works while the wheel is open will return false
   * 
   * Use in conjunction with IS_CONTROL_JUST_RELEASED(0, 'INPUT_OPEN_WHEEL_MENU') to detect item selection/usage.
   *
  
   * @return {any}
   */
export const _HUD_WEAPON_WHEEL_GET_SELECTED_ITEM_HASH = '0x9c409bbc492cb5b1';
/**
   * _0x9D37EB5003E0F2CF
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9D37EB5003E0F2CF = '0x9d37eb5003e0f2cf';
/**
   * _0xB0E8599243B3F568
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xB0E8599243B3F568 = '0xb0e8599243b3f568';
/**
   * _0xBFFF81E12A745A5F
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const _0xBFFF81E12A745A5F = '0xbfff81e12a745a5f';
/**
   * _SET_CURRENT_UGC_MISSION_DESCRIPTION
   * string1 is the only string used in the scripts, the others are null (0)
   *
   * @param {boolean} active
   * @param {string | number} string1
   * @param {string | number} string2
   * @param {string | number} string3
   * @param {string | number} string4
   * @return {void}
   */
export const _SET_CURRENT_UGC_MISSION_DESCRIPTION = '0xce0d2f5586627cce';
/**
   * _0xD6BD313CFA41E57A
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xD6BD313CFA41E57A = '0xd6bd313cfa41e57a';
/**
   * _0xF1E6979C0B779985
   *
   * @param {number} uiscene
   * @return {void}
   */
export const _0xF1E6979C0B779985 = '0xf1e6979c0b779985';
/**
   * _BUSYSPINNER_SET_TEXT
   *
   * @param {string | number} text
   * @return {void}
   */
export const _BUSYSPINNER_SET_TEXT = '0x7f78cd75cc4539e4';
/**
   * _CREATE_MP_GAMER_TAG
   *
   * @param {number} player
   * @param {string | number} username
   * @param {boolean} pointedClanTag
   * @param {boolean} isRockstarClan
   * @param {string | number} clanTag
   * @param {number} clanFlag
   * @return {number}
   */
export const _CREATE_MP_GAMER_TAG = '0xd877af112ad2b41b';
/**
   * _CREATE_MP_GAMER_TAG_ON_ENTITY
   *
   * @param {number} entity
   * @param {string | number} text
   * @return {number}
   */
export const _CREATE_MP_GAMER_TAG_ON_ENTITY = '0xe961bf23eab76b12';
/**
   * _DISABLE_HUD_CONTEXT
   * Old name: _DISPLAY_HUD_COMPONENT
   *
   * @param {number} component
   * @return {void}
   */
export const _DISABLE_HUD_CONTEXT = '0x8bc7c1f929d07bf3';
/**
   * _DISABLE_REDUCED_MENU_TIME_SCALE
   * Disables reduced time scale while menus such as weapon wheel and satchel are open.
   *
  
   * @return {void}
   */
export const _DISABLE_REDUCED_MENU_TIME_SCALE = '0xc5c7a2f6567fccbc';
/**
   * _DISPLAY_TEXT
   * nullsub, this native does nothing since build 1436, use _BG_DISPLAY_TEXT (0x16794E044C9EFB58) instead.
   *
   * @param {string | number} text
   * @param {number} xPos
   * @param {number} yPos
   * @return {void}
   */
export const _DISPLAY_TEXT = '0xd79334a4bb99bad1';
/**
   * _DOES_TEXT_BLOCK_EXIST
   *
   * @param {string | number} textDatabase
   * @return {boolean}
   */
export const _DOES_TEXT_BLOCK_EXIST = '0x2c729f2b94cea911';
/**
   * _ENABLE_HUD_CONTEXT
   * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/hud_presets
   * Old name: _HIDE_HUD_COMPONENT
   *
   * @param {number} component
   * @return {void}
   */
export const _ENABLE_HUD_CONTEXT = '0x4cc5f2fc1332577f';
/**
   * _ENABLE_HUD_CONTEXT_THIS_FRAME
   *
   * @param {number} component
   * @return {void}
   */
export const _ENABLE_HUD_CONTEXT_THIS_FRAME = '0xc9caeaeec1256e54';
/**
   * _ENABLE_REDUCED_MENU_TIME_SCALE
   * Enables reduced time scale while menus such as weapon wheel and satchel are open.
   *
  
   * @return {void}
   */
export const _ENABLE_REDUCED_MENU_TIME_SCALE = '0x26f6bbea2ce3e3dc';
/**
   * _GET_COLOR_FROM_NAME
   * colorNameHash: https://alloc8or.re/rdr3/doc/enums/eColor.txt
   *
   * @param {number} colorNameHash
   * @return {[number, number, number, number]}
   */
export const _GET_COLOR_FROM_NAME = '0xb981dd2dfaf9b1c9';
/**
   * _GET_LABEL_TEXT_2
   *
   * @param {string | number} label
   * @return {string | number}
   */
export const _GET_LABEL_TEXT_2 = '0x3429670f9b9ef2d3';
/**
   * _GET_TEXT_SUBSTRING_2
   * Similar to 0x9D7E12EC6A1EE4E5(GET_TEXT_SUBSTRING) but starts at the beginning of the string
   *
   * @param {string | number} text
   * @param {number} length
   * @return {string | number}
   */
export const _GET_TEXT_SUBSTRING_2 = '0xd8402b858f4ddd88';
/**
   * _HIDE_HUD_THIS_FRAME
   *
  
   * @return {void}
   */
export const _HIDE_HUD_THIS_FRAME = '0xbf4f34a85ca2970d';
/**
   * _IS_MP_GAMER_TAG_ACTIVE_ON_ENTITY
   *
   * @param {number} gamerTagId
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_MP_GAMER_TAG_ACTIVE_ON_ENTITY = '0x502e1591a504f843';
/**
   * _JOURNAL_CAN_WRITE_ENTRY
   *
   * @param {any} p0
   * @return {any}
   */
export const _JOURNAL_CAN_WRITE_ENTRY = '0xcf782691d91f270e';
/**
   * _JOURNAL_CLEAR_ALL_PROGRESS
   *
  
   * @return {void}
   */
export const _JOURNAL_CLEAR_ALL_PROGRESS = '0xf402978de6f88d6e';
/**
   * _JOURNAL_GET_ENTRY_AT_INDEX
   *
   * @param {any} p0
   * @return {any}
   */
export const _JOURNAL_GET_ENTRY_AT_INDEX = '0x3d16abd7a1fd8c96';
/**
   * _JOURNAL_GET_ENTRY_COUNT
   *
  
   * @return {any}
   */
export const _JOURNAL_GET_ENTRY_COUNT = '0xe65b5de53351be22';
/**
   * _JOURNAL_GET_ENTRY_INFO
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _JOURNAL_GET_ENTRY_INFO = '0x5514c3e60673530f';
/**
   * _JOURNAL_GET_GRIME_AT_INDEX
   *
   * @param {any} p0
   * @return {any}
   */
export const _JOURNAL_GET_GRIME_AT_INDEX = '0xcb5945e1b855852f';
/**
   * _JOURNAL_GET_TEXTURE_WITH_LAYOUT
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _JOURNAL_GET_TEXTURE_WITH_LAYOUT = '0x62cc549b3b8ea2aa';
/**
   * _JOURNAL_MARK_READ
   *
   * @param {any} p0
   * @return {void}
   */
export const _JOURNAL_MARK_READ = '0xe4509babe59bd24e';
/**
   * _JOURNAL_WRITE_ENTRY
   *
   * @param {any} p0
   * @return {void}
   */
export const _JOURNAL_WRITE_ENTRY = '0x6dfdd665e416b093';
/**
   * _MP_GAMER_TAG_DISABLE_REVIVE_TOP_ICON
   *
   * @param {number} gamerTagId
   * @return {void}
   */
export const _MP_GAMER_TAG_DISABLE_REVIVE_TOP_ICON = '0x1f9a64c2804b3471';
/**
   * _MP_GAMER_TAG_ENABLE_REVIVE_TOP_ICON
   *
   * @param {number} gamerTagId
   * @return {void}
   */
export const _MP_GAMER_TAG_ENABLE_REVIVE_TOP_ICON = '0xfff6579cf0139fce';
/**
   * _SET_MP_GAMER_TAG_COLOUR
   *
   * @param {number} gamerTagId
   * @param {number} colour
   * @return {void}
   */
export const _SET_MP_GAMER_TAG_COLOUR = '0x84bd27ddf9575816';
/**
   * _SET_MP_GAMER_TAG_NAME_POSSE
   *
   * @param {number} gamerTagId
   * @param {string | number} text
   * @return {void}
   */
export const _SET_MP_GAMER_TAG_NAME_POSSE = '0x1ea716e0628a6f44';
/**
   * _SET_MP_GAMER_TAG_SECONDARY_ICON
   * Found icons: SPEAKER, THROPY
   *
   * @param {number} gamerTagId
   * @param {number} icon
   * @return {void}
   */
export const _SET_MP_GAMER_TAG_SECONDARY_ICON = '0x95384c6ce1526eff';
/**
   * _SET_MP_GAMER_TAG_TOP_ICON
   * Found icons: https://pastebin.com/xx6rEgiG
   *
   * @param {number} gamerTagId
   * @param {number} icon
   * @return {void}
   */
export const _SET_MP_GAMER_TAG_TOP_ICON = '0x5f57522bc1eb9d9d';
/**
   * _SET_MP_GAMER_TAG_TYPE
   * Found types: GENERIC_PLAYER, DEADDROP, HOTPROPERTY, MINIGAMES
   *
   * @param {number} gamerTagId
   * @param {number} type
   * @return {void}
   */
export const _SET_MP_GAMER_TAG_TYPE = '0x25b9c78a25105c35';
/**
   * _SET_MP_GAMER_TAG_UNK_ALLOW_LOCALIZED
   * nullsub, doesn't do anything
   *
   * @param {number} gamerTagId
   * @param {boolean} allow
   * @return {void}
   */
export const _SET_MP_GAMER_TAG_UNK_ALLOW_LOCALIZED = '0xef7ab1a0e8c86170';
/**
   * _SET_MP_GAMER_TAG_VISIBILITY
   * visibility:
   * enum eUIGamertagVisibility
   * {
   *   UIGAMERTAGVISIBILITY_NONE,
   *   UIGAMERTAGVISIBILITY_ICON,
   *   UIGAMERTAGVISIBILITY_SIMPLE,
   *   UIGAMERTAGVISIBILITY_COMPLEX
   * };
   *
   * @param {number} gamerTagId
   * @param {number} visibility
   * @return {void}
   */
export const _SET_MP_GAMER_TAG_VISIBILITY = '0x93171dddab274eb8';
/**
   * _SET_TEXT_COLOR
   * This native does nothing since build 1436, use _BG_SET_TEXT_COLOR (0x16FA5CE47F184F1E) instead.
   *
   * @param {number} r
   * @param {number} g
   * @param {number} b
   * @param {number} a
   * @return {void}
   */
export const _SET_TEXT_COLOR = '0x50a41ad966910f03';
/**
   * _SHOW_HORSE_CORES
   *
   * @param {boolean} state
   * @return {void}
   */
export const _SHOW_HORSE_CORES = '0xd4ee21b7cc7fd350';
/**
   * _SHOW_PLAYER_CORES
   *
   * @param {boolean} state
   * @return {void}
   */
export const _SHOW_PLAYER_CORES = '0x50c803a4cd5932c5';
/**
   * _TEXT_BLOCK_DELETE
   *
   * @param {string | number} textBlock
   * @return {void}
   */
export const _TEXT_BLOCK_DELETE = '0xaa03f130a637d923';
/**
   * _TEXT_BLOCK_IS_STREAMED
   *
   * @param {string | number} textBlock
   * @return {boolean}
   */
export const _TEXT_BLOCK_IS_STREAMED = '0x3cf96e16265b7dc8';
/**
   * _UI_PROMPT_ADD_GROUP_LINK
   *
   * @param {any} p0
   * @param {number} prompt
   * @param {any} p2
   * @return {void}
   */
export const _UI_PROMPT_ADD_GROUP_LINK = '0x684c96cc7c66e8ef';
/**
   * _UI_PROMPT_ADD_GROUP_RETURN_LINK
   *
   * @param {any} p0
   * @param {number} prompt
   * @return {void}
   */
export const _UI_PROMPT_ADD_GROUP_RETURN_LINK = '0x837972ed28159536';
/**
   * _UI_PROMPT_CLEAR_HORIZONTAL_ORIENTATION
   * id is the return value from 0xD9459157EB22C895.
   *
   * @param {number} id
   * @return {void}
   */
export const _UI_PROMPT_CLEAR_HORIZONTAL_ORIENTATION = '0x6095358c4142932a';
/**
   * _UI_PROMPT_CLEAR_PROMPT_PRIORITY_PREFERENCE
   *
  
   * @return {void}
   */
export const _UI_PROMPT_CLEAR_PROMPT_PRIORITY_PREFERENCE = '0x51259ae5c72d4a1b';
/**
   * _UI_PROMPT_CONTEXT_SET_POINT
   *
   * @param {number} prompt
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _UI_PROMPT_CONTEXT_SET_POINT = '0xae84c5ee2c384fb3';
/**
   * _UI_PROMPT_CONTEXT_SET_RADIUS
   *
   * @param {number} prompt
   * @param {number} radius
   * @return {void}
   */
export const _UI_PROMPT_CONTEXT_SET_RADIUS = '0x0c718001b77ca468';
/**
   * _UI_PROMPT_CONTEXT_SET_VOLUME
   * Attaches a Volume
   *
   * @param {number} prompt
   * @param {number} volume
   * @return {void}
   */
export const _UI_PROMPT_CONTEXT_SET_VOLUME = '0x4d107406667423be';
/**
   * _UI_PROMPT_CREATE
   *
   * @param {number} inputHash
   * @param {string | number} labelName
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {number} p5
   * @return {number}
   */
export const _UI_PROMPT_CREATE = '0x29fa7910726c3889';
/**
   * _UI_PROMPT_DELETE
   *
   * @param {number} prompt
   * @return {void}
   */
export const _UI_PROMPT_DELETE = '0x00ede88d4d13cf59';
/**
   * _UI_PROMPT_DISABLE_PROMPTS_THIS_FRAME
   *
  
   * @return {void}
   */
export const _UI_PROMPT_DISABLE_PROMPTS_THIS_FRAME = '0xf1622ce88a1946fb';
/**
   * _UI_PROMPT_DISABLE_PROMPT_TYPE_THIS_FRAME
   *
   * @param {number} p0
   * @return {void}
   */
export const _UI_PROMPT_DISABLE_PROMPT_TYPE_THIS_FRAME = '0xfc094ef26dd153fa';
/**
   * _UI_PROMPT_DOES_AMBIENT_GROUP_EXIST
   *
   * @param {number} hash
   * @return {boolean}
   */
export const _UI_PROMPT_DOES_AMBIENT_GROUP_EXIST = '0xeb550b927b34a1bb';
/**
   * _UI_PROMPT_ENABLE_PROMPT_TYPE_THIS_FRAME
   * https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/prompts/prompt_types
   *
   * @param {number} p0
   * @return {void}
   */
export const _UI_PROMPT_ENABLE_PROMPT_TYPE_THIS_FRAME = '0x06565032897ba861';
/**
   * _UI_PROMPT_FILTER_CLEAR
   *
  
   * @return {void}
   */
export const _UI_PROMPT_FILTER_CLEAR = '0x6a2f820452017ea2';
/**
   * _UI_PROMPT_GET_GROUP_ACTIVE_PAGE
   *
   * @param {number} hash
   * @return {number}
   */
export const _UI_PROMPT_GET_GROUP_ACTIVE_PAGE = '0xc1fcc36c3f7286c8';
/**
   * _UI_PROMPT_GET_GROUP_ID_FOR_SCENARIO_POINT
   *
   * @param {any} p0
   * @param {number} p1
   * @return {number}
   */
export const _UI_PROMPT_GET_GROUP_ID_FOR_SCENARIO_POINT = '0xcb73d7521e7103f0';
/**
   * _UI_PROMPT_GET_GROUP_ID_FOR_TARGET_ENTITY
   *
   * @param {number} entity
   * @return {number}
   */
export const _UI_PROMPT_GET_GROUP_ID_FOR_TARGET_ENTITY = '0xb796970bd125fce8';
/**
   * _UI_PROMPT_GET_MASH_MODE_PROGRESS
   *
   * @param {number} prompt
   * @return {number}
   */
export const _UI_PROMPT_GET_MASH_MODE_PROGRESS = '0x8a9585293863b8a5';
/**
   * _UI_PROMPT_GET_PROGRESS
   *
   * @param {number} prompt
   * @return {number}
   */
export const _UI_PROMPT_GET_PROGRESS = '0x81801291806dbc50';
/**
   * _UI_PROMPT_GET_URGENT_PULSING_ENABLED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_GET_URGENT_PULSING_ENABLED = '0x1fba0dabecddb52b';
/**
   * _UI_PROMPT_HAS_HOLD_AUTO_FILL_MODE
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_HOLD_AUTO_FILL_MODE = '0x8010bebd0d5ed5bc';
/**
   * _UI_PROMPT_HAS_HOLD_MODE
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_HOLD_MODE = '0xb60c9f9ed47abb76';
/**
   * _UI_PROMPT_HAS_HOLD_MODE_COMPLETED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_HOLD_MODE_COMPLETED = '0xe0f65f0640ef0617';
/**
   * _UI_PROMPT_HAS_MANUAL_MASH_MODE
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_MANUAL_MASH_MODE = '0xa6c6a4adb3bac409';
/**
   * _UI_PROMPT_HAS_MASH_MODE
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_MASH_MODE = '0xcd072523791ddc1b';
/**
   * _UI_PROMPT_HAS_MASH_MODE_COMPLETED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_MASH_MODE_COMPLETED = '0x845ce958416dc473';
/**
   * _UI_PROMPT_HAS_MASH_MODE_FAILED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_MASH_MODE_FAILED = '0x25b18e530cf39d6f';
/**
   * _UI_PROMPT_HAS_PRESSED_TIMED_MODE_COMPLETED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_PRESSED_TIMED_MODE_COMPLETED = '0x3ce854d250a88daf';
/**
   * _UI_PROMPT_HAS_PRESSED_TIMED_MODE_FAILED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_PRESSED_TIMED_MODE_FAILED = '0x1a17b9ecff617562';
/**
   * _UI_PROMPT_HAS_STANDARD_MODE_COMPLETED
   * Params: p1 is 0
   *
   * @param {number} prompt
   * @param {number} p1
   * @return {boolean}
   */
export const _UI_PROMPT_HAS_STANDARD_MODE_COMPLETED = '0xc92ac953f0a982ae';
/**
   * _UI_PROMPT_IS_ACTIVE
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_IS_ACTIVE = '0x546e342e01de71cf';
/**
   * _UI_PROMPT_IS_ENABLED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_IS_ENABLED = '0x0d00eddfb58b7f28';
/**
   * _UI_PROMPT_IS_HOLD_MODE_RUNNING
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_IS_HOLD_MODE_RUNNING = '0xc7d70eaef92eff48';
/**
   * _UI_PROMPT_IS_JUST_PRESSED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_IS_JUST_PRESSED = '0x2787cc611d3facc5';
/**
   * _UI_PROMPT_IS_JUST_RELEASED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_IS_JUST_RELEASED = '0x635cc82fa297a827';
/**
   * _UI_PROMPT_IS_PRESSED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_IS_PRESSED = '0x21e60e230086697f';
/**
   * _UI_PROMPT_IS_RELEASED
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_IS_RELEASED = '0xafc887ba7a7756d6';
/**
   * _UI_PROMPT_IS_VALID
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_IS_VALID = '0x347469fbdd1589a9';
/**
   * _UI_PROMPT_REGISTER_BEGIN
   *
  
   * @return {number}
   */
export const _UI_PROMPT_REGISTER_BEGIN = '0x04f97de45a519419';
/**
   * _UI_PROMPT_REGISTER_END
   *
   * @param {number} prompt
   * @return {void}
   */
export const _UI_PROMPT_REGISTER_END = '0xf7aa2696a22ad8b9';
/**
   * _UI_PROMPT_REMOVE_GROUP
   *
   * @param {number} prompt
   * @param {any} p1
   * @return {void}
   */
export const _UI_PROMPT_REMOVE_GROUP = '0x4e52c800a28f7be8';
/**
   * _UI_PROMPT_RESTART_MODES
   *
   * @param {number} prompt
   * @return {void}
   */
export const _UI_PROMPT_RESTART_MODES = '0xdc6c55dfa2c24ee5';
/**
   * _UI_PROMPT_SET_ACTIVE_GROUP_THIS_FRAME
   * Note: you must use VAR_STRING for p1 if string is not part of text database
   * tabAmount: specifies number of tabs in prompt group
   * tabDefaultIndex: specifies starting index
   * p3 if is set > 3 you can no longer press Q to change tab if there are more than one tab set in tabAmount
   *
   * @param {number} hash
   * @param {string | number} name
   * @param {number} tabAmount
   * @param {number} tabDefaultIndex
   * @param {number} p4
   * @param {number} prompt
   * @return {any}
   */
export const _UI_PROMPT_SET_ACTIVE_GROUP_THIS_FRAME = '0xc65a45d4453c2627';
/**
   * _UI_PROMPT_SET_ALLOWED_ACTION
   *
   * @param {number} prompt
   * @param {number} action
   * @return {void}
   */
export const _UI_PROMPT_SET_ALLOWED_ACTION = '0x565c1ce183cb0eaf';
/**
   * _UI_PROMPT_SET_AMBIENT_GROUP_THIS_FRAME
   *
   * @param {number} entity
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {string | number} name
   * @param {number} p6
   * @return {any}
   */
export const _UI_PROMPT_SET_AMBIENT_GROUP_THIS_FRAME = '0x315c81d760609108';
/**
   * _UI_PROMPT_SET_ATTRIBUTE
   * attribute: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIPromptAttribute
   *
   * @param {number} prompt
   * @param {number} attribute
   * @param {boolean} enabled
   * @return {void}
   */
export const _UI_PROMPT_SET_ATTRIBUTE = '0x560e76d5e2e1803f';
/**
   * _UI_PROMPT_SET_BEAT_MODE
   *
   * @param {number} prompt
   * @param {boolean} toggle
   * @return {void}
   */
export const _UI_PROMPT_SET_BEAT_MODE = '0xf957a1654c6322fe';
/**
   * _UI_PROMPT_SET_BEAT_MODE_GRAYED_OUT
   *
   * @param {number} prompt
   * @param {any} p1
   * @return {void}
   */
export const _UI_PROMPT_SET_BEAT_MODE_GRAYED_OUT = '0xb487a4936fbf40ac';
/**
   * _UI_PROMPT_SET_CONTROL_ACTION
   *
   * @param {number} prompt
   * @param {number} action
   * @return {any}
   */
export const _UI_PROMPT_SET_CONTROL_ACTION = '0xb5352b7494a08258';
/**
   * _UI_PROMPT_SET_ENABLED
   *
   * @param {number} prompt
   * @param {boolean} toggle
   * @return {void}
   */
export const _UI_PROMPT_SET_ENABLED = '0x8a0fb4d03a630d21';
/**
   * _UI_PROMPT_SET_GROUP
   * tabIndex: specifies tab of prompt
   *
   * @param {number} prompt
   * @param {number} groupId
   * @param {number} tabIndex
   * @return {void}
   */
export const _UI_PROMPT_SET_GROUP = '0x2f11d3a254169ea4';
/**
   * _UI_PROMPT_SET_HOLD_AUTO_FILL_MODE
   *
   * @param {number} prompt
   * @param {number} autoFillTimeMs
   * @param {number} holdTimeMs
   * @return {void}
   */
export const _UI_PROMPT_SET_HOLD_AUTO_FILL_MODE = '0x3ce932e737c145d6';
/**
   * _UI_PROMPT_SET_HOLD_AUTO_FILL_WITH_DECAY_MODE
   *
   * @param {number} prompt
   * @param {number} autoFillTimeMs
   * @param {number} holdTimeMs
   * @return {void}
   */
export const _UI_PROMPT_SET_HOLD_AUTO_FILL_WITH_DECAY_MODE = '0xa3f2149aa24f3d8e';
/**
   * _UI_PROMPT_SET_HOLD_INDEFINITELY_MODE
   *
   * @param {number} prompt
   * @return {void}
   */
export const _UI_PROMPT_SET_HOLD_INDEFINITELY_MODE = '0xea5ccf4eeb2f82d1';
/**
   * _UI_PROMPT_SET_HOLD_MODE
   * Params: p2 is 304000 in R* SP Script coachrobberies
   *
   * @param {number} prompt
   * @param {number} holdTimeMs
   * @return {void}
   */
export const _UI_PROMPT_SET_HOLD_MODE = '0x94073d5ca3f16b7b';
/**
   * _UI_PROMPT_SET_MANUAL_RESOLVED
   *
   * @param {number} prompt
   * @param {any} p1
   * @return {void}
   */
export const _UI_PROMPT_SET_MANUAL_RESOLVED = '0xa520c7b05fa4eb2a';
/**
   * _UI_PROMPT_SET_MASH_AUTO_FILL_MODE
   *
   * @param {number} prompt
   * @param {number} autoFillTimeMs
   * @param {number} mashes
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_AUTO_FILL_MODE = '0x6c39587d7cc66801';
/**
   * _UI_PROMPT_SET_MASH_INDEFINITELY_MODE
   *
   * @param {number} prompt
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_INDEFINITELY_MODE = '0x7b66e89312727274';
/**
   * _UI_PROMPT_SET_MASH_MANUAL_CAN_FAIL_MODE
   *
   * @param {number} prompt
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {any} p4
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_MANUAL_CAN_FAIL_MODE = '0x179dcf71f705da20';
/**
   * _UI_PROMPT_SET_MASH_MANUAL_MODE
   *
   * @param {number} prompt
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {any} p4
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_MANUAL_MODE = '0x32df729d8bd3c1c6';
/**
   * _UI_PROMPT_SET_MASH_MANUAL_MODE_DECAY_SPEED
   * standard (prompt not held) rate: 0.035f
   * fast (prompt held) rate: 0.015f
   * punitive (been hit) rate: 0.14f
   *
   * @param {number} prompt
   * @param {number} speed
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_MANUAL_MODE_DECAY_SPEED = '0x7d393c247fb9b431';
/**
   * _UI_PROMPT_SET_MASH_MANUAL_MODE_INCREASE_PER_PRESS
   * standard (prompt not held) rate: (1f / 128f)
   * fast (prompt held) rate: (1f / 64f)
   * punitive (been hit) rate: (1f / 128f)
   *
   * @param {number} prompt
   * @param {number} rate
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_MANUAL_MODE_INCREASE_PER_PRESS = '0xa0d1d79c6036a855';
/**
   * _UI_PROMPT_SET_MASH_MANUAL_MODE_PRESSED_GROWTH_SPEED
   *
   * @param {number} prompt
   * @param {number} speed
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_MANUAL_MODE_PRESSED_GROWTH_SPEED = '0x56dbb26f98582c29';
/**
   * _UI_PROMPT_SET_MASH_MODE
   *
   * @param {number} prompt
   * @param {number} mashes
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_MODE = '0xdf6423bf071c7f71';
/**
   * _UI_PROMPT_SET_MASH_WITH_RESISTANCE_CAN_FAIL_MODE
   * For startProgress, 0.0f - 1.0f is a percentage value, so 0.5f = 50% progress. Range: 0.0f - 1.0f
   * For decreaseSpeed, 0.0f will result in the prompt not showing the mash progress at all. 0.01f - ?.0f. At speeds around 7.0f to 8.0f the prompt basically fails immediately if you don't start mashing right away.
   *
   * @param {number} prompt
   * @param {number} mashes
   * @param {number} decreaseSpeed
   * @param {number} startProgress
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_WITH_RESISTANCE_CAN_FAIL_MODE = '0xdc0cb602deadba53';
/**
   * _UI_PROMPT_SET_MASH_WITH_RESISTANCE_MODE
   *
   * @param {number} prompt
   * @param {number} mashes
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const _UI_PROMPT_SET_MASH_WITH_RESISTANCE_MODE = '0xcd1bdff15efa79f5';
/**
   * _UI_PROMPT_SET_ORDERING_AS_INPUT_TYPE
   *
   * @param {number} prompt
   * @param {any} p1
   * @return {void}
   */
export const _UI_PROMPT_SET_ORDERING_AS_INPUT_TYPE = '0x2f385ecc5200938d';
/**
   * _UI_PROMPT_SET_PRESSED_TIMED_MODE
   *
   * @param {number} prompt
   * @param {number} depletionTimeMs
   * @return {void}
   */
export const _UI_PROMPT_SET_PRESSED_TIMED_MODE = '0x1473d3af51d54276';
/**
   * _UI_PROMPT_SET_PRIORITY
   * priority: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptPriority
   *
   * @param {number} prompt
   * @param {number} priority
   * @return {void}
   */
export const _UI_PROMPT_SET_PRIORITY = '0xca24f528d0d16289';
/**
   * _UI_PROMPT_SET_PROMPT_PRIORITY_PREFERENCE
   *
   * @param {number} ped
   * @return {void}
   */
export const _UI_PROMPT_SET_PROMPT_PRIORITY_PREFERENCE = '0x530a428705be5def';
/**
   * _UI_PROMPT_SET_REGISTER_HORIZONTAL_ORIENTATION
   * This returns an id that can be used with 0x6095358C4142932A.
   *
  
   * @return {number}
   */
export const _UI_PROMPT_SET_REGISTER_HORIZONTAL_ORIENTATION = '0xd9459157eb22c895';
/**
   * _UI_PROMPT_SET_ROTATE_MODE
   * Used for controllers
   *
   * @param {number} prompt
   * @param {number} p1
   * @param {boolean} counterclockwise
   * @return {void}
   */
export const _UI_PROMPT_SET_ROTATE_MODE = '0x7abe7095fb3d2581';
/**
   * _UI_PROMPT_SET_SPINNER_POSITION
   *
   * @param {number} prompt
   * @param {any} p1
   * @return {void}
   */
export const _UI_PROMPT_SET_SPINNER_POSITION = '0x832cb510de546282';
/**
   * _UI_PROMPT_SET_SPINNER_SPEED
   *
   * @param {number} prompt
   * @param {any} p1
   * @return {void}
   */
export const _UI_PROMPT_SET_SPINNER_SPEED = '0xac6586a7fdcd4b68';
/**
   * _UI_PROMPT_SET_STANDARDIZED_HOLD_MODE
   * Hashes: SHORT_TIMED_EVENT_MP, SHORT_TIMED_EVENT, MEDIUM_TIMED_EVENT, LONG_TIMED_EVENT, RUSTLING_CALM_TIMING, PLAYER_FOCUS_TIMING, PLAYER_REACTION_TIMING
   *
   * @param {number} prompt
   * @param {number} timedEventHash
   * @return {void}
   */
export const _UI_PROMPT_SET_STANDARDIZED_HOLD_MODE = '0x74c7d7b72ed0d3cf';
/**
   * _UI_PROMPT_SET_STANDARD_MODE
   *
   * @param {number} prompt
   * @param {boolean} releaseMode
   * @return {void}
   */
export const _UI_PROMPT_SET_STANDARD_MODE = '0xcc6656799977741b';
/**
   * _UI_PROMPT_SET_TAG
   *
   * @param {number} prompt
   * @param {any} p1
   * @return {void}
   */
export const _UI_PROMPT_SET_TAG = '0xdec85c174751292b';
/**
   * _UI_PROMPT_SET_TARGET_MODE
   *
   * @param {number} prompt
   * @param {number} p1
   * @param {number} p2
   * @param {any} p3
   * @return {void}
   */
export const _UI_PROMPT_SET_TARGET_MODE = '0x5f6503d9cd2754eb';
/**
   * _UI_PROMPT_SET_TARGET_MODE_PROGRESS
   *
   * @param {number} prompt
   * @param {number} progress
   * @return {void}
   */
export const _UI_PROMPT_SET_TARGET_MODE_PROGRESS = '0x00123054bec8a30f';
/**
   * _UI_PROMPT_SET_TARGET_MODE_TARGET
   *
   * @param {number} prompt
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _UI_PROMPT_SET_TARGET_MODE_TARGET = '0x5e019c45dd3b6a14';
/**
   * _UI_PROMPT_SET_TEXT
   *
   * @param {number} prompt
   * @param {string | number} text
   * @return {void}
   */
export const _UI_PROMPT_SET_TEXT = '0x5dd02a8318420dd7';
/**
   * _UI_PROMPT_SET_TRANSPORT_MODE
   * TM_ANY = 0,
   * TM_ON_FOOT,
   * TM_IN_VEHICLE
   *
   * @param {number} prompt
   * @param {number} mode
   * @return {void}
   */
export const _UI_PROMPT_SET_TRANSPORT_MODE = '0x876e4a35c73a6655';
/**
   * _UI_PROMPT_SET_TYPE
   * Params: type = mostly 0, 6 (net_mission_intro_story_gvo), 7 (fm_mission_controller), 14 (net_ugc_end_flow_transition_online), 15 (net_main_[tlg_]offline)
   *
   * @param {number} prompt
   * @param {number} type
   * @return {void}
   */
export const _UI_PROMPT_SET_TYPE = '0xf4a5c4509bf923b1';
/**
   * _UI_PROMPT_SET_URGENT_PULSING_ENABLED
   *
   * @param {number} prompt
   * @param {boolean} toggle
   * @return {void}
   */
export const _UI_PROMPT_SET_URGENT_PULSING_ENABLED = '0xc5f428ee08fa7f2c';
/**
   * _UI_PROMPT_SET_VISIBLE
   *
   * @param {number} prompt
   * @param {boolean} toggle
   * @return {void}
   */
export const _UI_PROMPT_SET_VISIBLE = '0x71215accfde075ee';
/**
   * _UI_PROMPT_WAS_BEAT_MODE_PRESSED_IN_TIME_WINDOW
   *
   * @param {number} prompt
   * @return {boolean}
   */
export const _UI_PROMPT_WAS_BEAT_MODE_PRESSED_IN_TIME_WINDOW = '0x1fe4788ab1430c55';
/**
   * _0x0B9F7A01EC50448D
   *
   * @param {number} ped
   * @param {DataView} args
   * @return {void}
   */
export const _0x0B9F7A01EC50448D = '0x0b9f7a01ec50448d';
/**
   * _0x6098139150DCC745
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _0x6098139150DCC745 = '0x6098139150dcc745';
/**
   * _0x873C792E07A32C8B
   *
   * @param {number} ped1
   * @param {number} ped2
   * @return {void}
   */
export const _0x873C792E07A32C8B = '0x873c792e07a32c8b';
/**
   * _INVERSE_KINEMATICS_REQUEST_LOOK_AT
   *
   * @param {number} ped
   * @param {DataView} args
   * @return {void}
   */
export const _INVERSE_KINEMATICS_REQUEST_LOOK_AT = '0x66f9eb44342bb4c5';
/**
   * _INVERSE_KINEMATICS_SET_DISABLED_FOR_PED
   * Seems to disable IK on ped
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _INVERSE_KINEMATICS_SET_DISABLED_FOR_PED = '0x0eabf182fbb63d72';
/**
   * SET_MOUSE_CURSOR_STYLE
   * Changes the mouse cursor's sprite.
   * 
   * spriteId's: https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/cursor_sprites#readme
   * 
   * Old name: _SET_MOUSE_CURSOR_SPRITE
   *
   * @param {number} spriteId
   * @return {void}
   */
export const SET_MOUSE_CURSOR_STYLE = '0x7f5858aab5a58cce';
/**
   * SET_MOUSE_CURSOR_THIS_FRAME
   * Shows the cursor on screen for one frame.
   * 
   * Old name: _SET_MOUSE_CURSOR_ACTIVE_THIS_FRAME
   *
  
   * @return {void}
   */
export const SET_MOUSE_CURSOR_THIS_FRAME = '0xf12e4ccaf249dc10';
/**
   * _POINTER_IS_BEING_MOVED
   * Returns true if player is moving mouse while cursor is active
   * _PI* - _PO*
   *
  
   * @return {boolean}
   */
export const _POINTER_IS_BEING_MOVED = '0x2b8b605f2a9e64bf';
/**
   * _POINTER_IS_LEFT_BUTTON_HELD
   * Returns true if player is holding LMB while cursor is active
   * _PI* - _PO*
   *
  
   * @return {boolean}
   */
export const _POINTER_IS_LEFT_BUTTON_HELD = '0x61cae9d1fd055e44';
/**
   * _POINTER_IS_LEFT_BUTTON_JUST_RELEASED
   * Returns true if player releases LMB if cursor is active
   * _PI* - _PO*
   *
  
   * @return {boolean}
   */
export const _POINTER_IS_LEFT_BUTTON_JUST_RELEASED = '0xf7f51a57349739f2';
/**
   * _SET_ALLOW_FIRST_PERSON_MOUSE_CAMERA_MOVEMENT
   * Allows camera to be moved if middle mouse button is held while in first person
   * Must be called every frame
   * _SET*
   *
  
   * @return {void}
   */
export const _SET_ALLOW_FIRST_PERSON_MOUSE_CAMERA_MOVEMENT = '0x0546b117bb17548b';
/**
   * ACTIVATE_INTERIOR_ENTITY_SET
   * https://github.com/femga/rdr3_discoveries/tree/master/interiors/interior_sets
   *
   * @param {number} interior
   * @param {string | number} entitySetName
   * @param {number} p2
   * @return {void}
   */
export const ACTIVATE_INTERIOR_ENTITY_SET = '0x174d0aab11ced739';
/**
   * CLEAR_ROOM_FOR_ENTITY
   *
   * @param {number} entity
   * @return {void}
   */
export const CLEAR_ROOM_FOR_ENTITY = '0xa1762d5bbfca13a8';
/**
   * CLEAR_ROOM_FOR_GAME_VIEWPORT
   *
  
   * @return {void}
   */
export const CLEAR_ROOM_FOR_GAME_VIEWPORT = '0x951a049765e0d450';
/**
   * DEACTIVATE_INTERIOR_ENTITY_SET
   *
   * @param {number} interior
   * @param {string | number} entitySetName
   * @param {boolean} p2
   * @return {void}
   */
export const DEACTIVATE_INTERIOR_ENTITY_SET = '0x33b81a2c07a51fff';
/**
   * DISABLE_INTERIOR
   *
   * @param {number} interior
   * @param {boolean} toggle
   * @return {void}
   */
export const DISABLE_INTERIOR = '0x3c2b92a1a07d4fce';
/**
   * FORCE_ROOM_FOR_ENTITY
   *
   * @param {number} entity
   * @param {number} interior
   * @param {number} roomHashKey
   * @return {void}
   */
export const FORCE_ROOM_FOR_ENTITY = '0xbc29a9894c976945';
/**
   * FORCE_ROOM_FOR_GAME_VIEWPORT
   *
   * @param {number} interiorId
   * @param {number} roomHashKey
   * @return {void}
   */
export const FORCE_ROOM_FOR_GAME_VIEWPORT = '0x115b4aa8fb28ab43';
/**
   * GET_INTERIOR_AT_COORDS
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const GET_INTERIOR_AT_COORDS = '0xcdd36c9e5c469070';
/**
   * GET_INTERIOR_AT_COORDS_WITH_TYPE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {string | number} interiorType
   * @return {number}
   */
export const GET_INTERIOR_AT_COORDS_WITH_TYPE = '0xaad6170aa33b13c0';
/**
   * GET_INTERIOR_AT_COORDS_WITH_TYPEHASH
   * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} typeHash
   * @return {number}
   */
export const GET_INTERIOR_AT_COORDS_WITH_TYPEHASH = '0x3543aea1816d1d2b';
/**
   * GET_INTERIOR_FROM_COLLISION
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const GET_INTERIOR_FROM_COLLISION = '0x5054d1a5218fa696';
/**
   * GET_INTERIOR_FROM_ENTITY
   * Returns the handle of the interior that the entity is in. Returns 0 if outside.
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_INTERIOR_FROM_ENTITY = '0xb417689857646f61';
/**
   * GET_INTERIOR_FROM_PRIMARY_VIEW
   *
  
   * @return {number}
   */
export const GET_INTERIOR_FROM_PRIMARY_VIEW = '0xbc8a281ff125c655';
/**
   * GET_INTERIOR_LOCATION_AND_NAMEHASH
   *
   * @param {number} interior
   * @return {[Vector3, number]}
   */
export const GET_INTERIOR_LOCATION_AND_NAMEHASH = '0x8451e87d3c2b0286';
/**
   * GET_KEY_FOR_ENTITY_IN_ROOM
   * Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_KEY_FOR_ENTITY_IN_ROOM = '0x27d7b6f79e1f4603';
/**
   * GET_ROOM_KEY_FROM_ENTITY
   * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_ROOM_KEY_FROM_ENTITY = '0x076e46e0eb52afc6';
/**
   * IS_COLLISION_MARKED_OUTSIDE
   * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const IS_COLLISION_MARKED_OUTSIDE = '0xf291396b517e25b2';
/**
   * IS_INTERIOR_ENTITY_SET_ACTIVE
   *
   * @param {number} interior
   * @param {string | number} entitySetName
   * @return {boolean}
   */
export const IS_INTERIOR_ENTITY_SET_ACTIVE = '0x32810ca2125f5842';
/**
   * IS_INTERIOR_READY
   *
   * @param {number} interior
   * @return {boolean}
   */
export const IS_INTERIOR_READY = '0x941560d2d45dbfc8';
/**
   * IS_INTERIOR_SCENE
   *
  
   * @return {boolean}
   */
export const IS_INTERIOR_SCENE = '0x4200f14d6f840a9a';
/**
   * IS_VALID_INTERIOR
   *
   * @param {number} interior
   * @return {boolean}
   */
export const IS_VALID_INTERIOR = '0x017c1b3159f79f6c';
/**
   * PIN_INTERIOR_IN_MEMORY
   *
   * @param {number} interior
   * @return {void}
   */
export const PIN_INTERIOR_IN_MEMORY = '0xbd3d33eabf680168';
/**
   * RETAIN_ENTITY_IN_INTERIOR
   *
   * @param {number} entity
   * @param {number} interior
   * @return {void}
   */
export const RETAIN_ENTITY_IN_INTERIOR = '0x5bd616735f16bf5c';
/**
   * SET_INTERIOR_IN_USE
   * Actually returns void in IDA but the script header defines a BOOL return type
   *
   * @param {number} interior
   * @return {boolean}
   */
export const SET_INTERIOR_IN_USE = '0xb5ef6fef2dc9ebed';
/**
   * UNPIN_INTERIOR
   * Does something similar to INTERIOR::DISABLE_INTERIOR.
   * 
   * You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside. 
   *
   * @param {number} interior
   * @return {void}
   */
export const UNPIN_INTERIOR = '0x07fd1a0b814f6055';
/**
   * _0x2533F2AB0EB9C6F9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x2533F2AB0EB9C6F9 = '0x2533f2ab0eb9c6f9';
/**
   * _0xFE2B3D5500B1B2E4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xFE2B3D5500B1B2E4 = '0xfe2b3d5500b1b2e4';
/**
   * _GET_INTERIOR_MINIMAP_HASH
   *
   * @param {number} interior
   * @return {number}
   */
export const _GET_INTERIOR_MINIMAP_HASH = '0x3039be60b3749716';
/**
   * _GET_INTERIOR_POSITION
   *
   * @param {number} interior
   * @return {Vector3}
   */
export const _GET_INTERIOR_POSITION = '0x2c9746d0ca15be1c';
/**
   * _IS_INTERIOR_ENTITY_SET_VALID
   *
   * @param {number} interior
   * @param {string | number} entitySetName
   * @return {boolean}
   */
export const _IS_INTERIOR_ENTITY_SET_VALID = '0xd56ff170710fc826';
/**
   * INVENTORY_COPY_MP_INVENTORY_TO_MISSION_INVENTORY
   *
   * @param {boolean} p0
   * @param {boolean} p1
   * @param {boolean} bCopySatchelItems
   * @param {boolean} bCopyEmotes
   * @param {boolean} bCopyHorse
   * @param {boolean} p5
   * @return {void}
   */
export const INVENTORY_COPY_MP_INVENTORY_TO_MISSION_INVENTORY = '0x644ccb76a76cfbd6';
/**
   * INVENTORY_DISABLE_MISSION_INVENTORY_PICKUPS
   *
  
   * @return {void}
   */
export const INVENTORY_DISABLE_MISSION_INVENTORY_PICKUPS = '0xe1f389f03dc83673';
/**
   * INVENTORY_GET_CHILDREN_IN_SLOT_COUNT
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {number} slotId
   * @return {number}
   */
export const INVENTORY_GET_CHILDREN_IN_SLOT_COUNT = '0x033ee4b89f3ac545';
/**
   * INVENTORY_GET_GUID_FROM_ITEMID
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {number} p2
   * @param {number} slotId
   * @param {DataView} outGuid
   * @return {boolean}
   */
export const INVENTORY_GET_GUID_FROM_ITEMID = '0x886dfd3e185c8a89';
/**
   * INVENTORY_GET_INVENTORY_ITEM
   *
   * @param {number} inventoryId
   * @param {DataView} inData
   * @param {DataView} outData
   * @param {boolean} p3
   * @return {boolean}
   */
export const INVENTORY_GET_INVENTORY_ITEM = '0x9700e8efc4ab9089';
/**
   * _0x0349404A22736740
   * Params: p0 is only 0 or 1
   * Only used in R* SP Scripts
   *
   * @param {boolean} p0
   * @param {number} inventoryId
   * @param {DataView} guid
   * @return {void}
   */
export const _0x0349404A22736740 = '0x0349404a22736740';
/**
   * _0x112BCA290D2EB53C
   * Only used in R* SP Scripts
   *
   * @param {number} inventoryId
   * @param {number} p1
   * @return {[boolean, number, number, number, number, number, number]}
   */
export const _0x112BCA290D2EB53C = '0x112bca290d2eb53c';
/**
   * _INVENTORY_USE_SATCHEL_ITEM
   * eInventoryItem: CLOTHING_FANCY_SUIT, CLOTHING_GUNSLINGER_OUTFIT, etc.
   * Only used in R* SP Scripts
   *
   * @param {number} inventoryId
   * @param {number} eInventoryItem
   * @param {boolean} p2
   * @return {void}
   */
export const _INVENTORY_USE_SATCHEL_ITEM = '0x46743bbfedbc859e';
/**
   * _0x46DB71883EE9D5AF
   * Returns databindingEntryId to be used with 0x951847CEF3D829FF (p0)
   *
   * @param {any} data
   * @param {string | number} stats
   * @param {DataView} guid
   * @param {number} ped
   * @return {number}
   */
export const _0x46DB71883EE9D5AF = '0x46db71883ee9d5af';
/**
   * _INVENTORY_REMOVE_INVENTORY_ITEMS
   * removeReason: REMOVE_REASON_DEFAULT (eRemoveItemReason)
   * Example: INVENTORY::_0x5D6182F3BCE1333B(1, joaat("REMOVE_REASON_DEFAULT")); -> clears weapon wheel
   * Only used in R* SP Scripts
   *
   * @param {number} inventoryId
   * @param {number} removeReason
   * @return {boolean}
   */
export const _INVENTORY_REMOVE_INVENTORY_ITEMS = '0x5d6182f3bce1333b';
/**
   * _0x6862E4D93F64CF01
   * Only used in R* SP Scripts
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {number} p2
   * @param {DataView} p3
   * @return {boolean}
   */
export const _0x6862E4D93F64CF01 = '0x6862e4d93f64cf01';
/**
   * _0x6968CE7AC32F6788
   * Only used in R* SP Scripts
   *
   * @param {number} inventoryId
   * @return {void}
   */
export const _0x6968CE7AC32F6788 = '0x6968ce7ac32f6788';
/**
   * _INVENTORY_APPLY_WEAPON_STATS_TO_ENTRY
   * Apply the weapon stats to the CatalogItemInspection stats entry id. get entryId with _INVENTORY_GET_CATALOG_ITEM_INSPECTION_STATS_ENTRY
   *
   * @param {number} entryId
   * @param {number} weapon
   * @param {number} ped
   * @return {void}
   */
export const _INVENTORY_APPLY_WEAPON_STATS_TO_ENTRY = '0x75cfac49301e134e';
/**
   * _0x75CFAC49301E134F
   * p1, p2: 0
   *
   * @param {number} databindingEntryId
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0x75CFAC49301E134F = '0x75cfac49301e134f';
/**
   * _0x951847CEF3D829FF
   * p0: value returned by 0x46DB71883EE9D5AF
   *
   * @param {any} p0
   * @param {DataView} outGuid
   * @param {number} ped
   * @return {void}
   */
export const _0x951847CEF3D829FF = '0x951847cef3d829ff';
/**
   * _0x9AC53CB6907B4428
   * p1 (out) and p2 (in) are both script arrays?
   * item: can be a component item, see SHOP_CATALOG_BUILD_LIST_OF_WEAPON_COMPONENTS
   *
   * @param {number} item
   * @param {DataView} p1
   * @param {DataView} p2
   * @return {boolean}
   */
export const _0x9AC53CB6907B4428 = '0x9ac53cb6907b4428';
/**
   * _0x9B4E793B1CB6550A
   * Used in function SET_SHOP_BEING_ROBBED and many other shop related scripts and functions.
   * INVENTORY_A*
   *
  
   * @return {void}
   */
export const _0x9B4E793B1CB6550A = '0x9b4e793b1cb6550a';
/**
   * _INVENTORY_GET_CATALOG_ITEM_INSPECTION_EFFECTS_ENTRY
   * Returns effects entry id of CatalogItemInspection container.
   *
   * @param {number} entryId
   * @param {string | number} name
   * @param {boolean} unk1
   * @param {boolean} unk2
   * @return {number}
   */
export const _INVENTORY_GET_CATALOG_ITEM_INSPECTION_EFFECTS_ENTRY = '0x9d21b185abc2dbc4';
/**
   * _INVENTORY_GET_CATALOG_ITEM_INSPECTION_STATS_ENTRY
   * Returns stats entry id of CatalogItemInspection container
   *
   * @param {number} entryId
   * @param {string | number} name
   * @param {number} unk1
   * @param {number} playerid
   * @return {number}
   */
export const _INVENTORY_GET_CATALOG_ITEM_INSPECTION_STATS_ENTRY = '0x9d21b185abc2dbc5';
/**
   * _0x9E58207B194488AC
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x9E58207B194488AC = '0x9e58207b194488ac';
/**
   * _0xB1DD74A1F5536622
   *
   * @param {number} inventoryId
   * @param {DataView} itemGuid
   * @return {boolean}
   */
export const _0xB1DD74A1F5536622 = '0xb1dd74a1f5536622';
/**
   * _0xD08685BA892DBFAB
   * Params: p3 returns an int between 0 and 20 (?)
   * Only used in R* SP Scripts
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @return {[boolean, number, number]}
   */
export const _0xD08685BA892DBFAB = '0xd08685ba892dbfab';
/**
   * _0xE1F45A67A9F0DCBC
   * Only used in R* SP Scripts
   *
   * @param {number} inventoryId
   * @return {void}
   */
export const _0xE1F45A67A9F0DCBC = '0xe1f45a67a9f0dcbc';
/**
   * _INVENTORY_USE_BACKUP_INVENTORY
   * Only used in R* SP Scripts
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _INVENTORY_USE_BACKUP_INVENTORY = '0xe36d4a38d28d9cfb';
/**
   * _GET_DEFAULT_ITEM_SLOT_INFO
   * p1: WARDROBE, KIT_CAMP, CHARACTER, KIT_MOONSHINER_PROPERTY
   * Returns slot hash
   *
   * @param {number} item
   * @param {number} p1
   * @return {number}
   */
export const _GET_DEFAULT_ITEM_SLOT_INFO = '0x6452b1d357d81742';
/**
   * _GET_ITEM_ROLE_MAX_LEVEL_COUNT
   *
   * @param {number} inventoryId
   * @param {number} eRoleMaxLevel
   * @return {number}
   */
export const _GET_ITEM_ROLE_MAX_LEVEL_COUNT = '0xaddd1e7c0ecf7d95';
/**
   * _GET_ITEM_SLOT_MAX_COUNT
   *
   * @param {number} provision
   * @param {number} slotId
   * @return {number}
   */
export const _GET_ITEM_SLOT_MAX_COUNT = '0xe80e50bee276a54a';
/**
   * _INVENTORY_ADD_ITEM_WITH_GUID
   * inventoryItemSlotHash: https://pastebin.com/P6fyr3vr
   *
   * @param {number} inventoryId
   * @param {DataView} guid1
   * @param {DataView} guid2
   * @param {number} item
   * @param {number} inventoryItemSlot
   * @param {number} p5
   * @param {number} addReason
   * @return {boolean}
   */
export const _INVENTORY_ADD_ITEM_WITH_GUID = '0xcb5d11f9508a928d';
/**
   * _INVENTORY_ARE_LOCAL_CHANGES_ALLOWED
   * inventoryId: see _INVENTORY_GET_PED_INVENTORY_ID
   *
   * @param {number} inventoryId
   * @return {boolean}
   */
export const _INVENTORY_ARE_LOCAL_CHANGES_ALLOWED = '0x0fbbffc891a97c81';
/**
   * _INVENTORY_COMPARE_GUIDS
   *
   * @param {DataView} guid1
   * @param {DataView} guid2
   * @return {boolean}
   */
export const _INVENTORY_COMPARE_GUIDS = '0x4c543d5dfcd2dafd';
/**
   * _INVENTORY_COPY_ITEM_TO_INVENTORY
   *
   * @param {number} inventoryId
   * @param {number} inventoryIdCloned
   * @param {DataView} p2
   * @param {any} p3
   * @return {void}
   */
export const _INVENTORY_COPY_ITEM_TO_INVENTORY = '0xc04f47d488ef9eba';
/**
   * _INVENTORY_COPY_ITEM_TO_MISSION_INVENTORY
   *
   * @param {DataView} guid
   * @param {boolean} p1
   * @return {void}
   */
export const _INVENTORY_COPY_ITEM_TO_MISSION_INVENTORY = '0x3112adb9d5f3426b';
/**
   * _INVENTORY_CREATE_ITEM_COLLECTION
   * filterName (collections): "ALL", "ALL SATCHEL", "ALL HORSES", "ALL COACHES", "ALL MOUNTS", "ALL CLOTHING", "ALL WEAPONS", "ALL SATCHEL EXCLUDING CLOTHING", "ALL EXCLUDING CLOTHING"
   * slotId: -1591664384
   * p3: outCollectionSize (?)
   * Returns collectionId
   *
   * @param {number} inventoryId
   * @param {string | number} filterName
   * @param {number} slotId
   * @return {[number, number]}
   */
export const _INVENTORY_CREATE_ITEM_COLLECTION = '0x80d78bdc9d88ef07';
/**
   * _INVENTORY_CREATE_ITEM_COLLECTION_2
   * Returns collectionId
   *
  
   * @return {[number, number]}
   */
export const _INVENTORY_CREATE_ITEM_COLLECTION_2 = '0x97a3646645727f42';
/**
   * _INVENTORY_CREATE_ITEM_COLLECTION_WITH_FILTER
   *
   * @param {number} inventoryId
   * @param {DataView} filter
   * @return {[number, number]}
   */
export const _INVENTORY_CREATE_ITEM_COLLECTION_WITH_FILTER = '0x640f890c3e5a3ffd';
/**
   * _INVENTORY_CREATE_SORTED_COLLECTION
   * p1: 32
   * Returns collectionId
   *
   * @param {number} inventoryId
   * @param {number} p1
   * @return {[number, number]}
   */
export const _INVENTORY_CREATE_SORTED_COLLECTION = '0xbb7f968675b34b0c';
/**
   * _INVENTORY_DISABLE_ITEM
   * Example: (1, WEAPON_REVOLVER_CATTLEMAN, 0) - disables cattleman revolver on weapon wheel
   *
   * @param {number} inventoryId
   * @param {number} item
   * @param {number} gtxReason
   * @return {void}
   */
export const _INVENTORY_DISABLE_ITEM = '0x766315a564594401';
/**
   * _INVENTORY_DISABLE_WEAPONS
   * Params: p1 = 0
   *
   * @param {number} inventoryId
   * @param {any} p1
   * @return {void}
   */
export const _INVENTORY_DISABLE_WEAPONS = '0xe3a46370f70f3607';
/**
   * _INVENTORY_DOES_ITEM_OWN_EQUIPMENT
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {number} item
   * @return {boolean}
   */
export const _INVENTORY_DOES_ITEM_OWN_EQUIPMENT = '0x88b58b83a43a8cab';
/**
   * _INVENTORY_ENABLE_ITEM
   *
   * @param {number} inventoryId
   * @param {number} item
   * @return {void}
   */
export const _INVENTORY_ENABLE_ITEM = '0x6a564540fac12211';
/**
   * _INVENTORY_ENABLE_WEAPONS
   *
   * @param {number} inventoryId
   * @return {void}
   */
export const _INVENTORY_ENABLE_WEAPONS = '0xd5d72f1624f3ba7c';
/**
   * _INVENTORY_EQUIP_ITEM_WITH_GUID
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {boolean} bEquipped
   * @return {boolean}
   */
export const _INVENTORY_EQUIP_ITEM_WITH_GUID = '0x734311e2852760d0';
/**
   * _INVENTORY_FITS_SLOT_ID
   *
   * @param {number} item
   * @param {number} slotId
   * @return {boolean}
   */
export const _INVENTORY_FITS_SLOT_ID = '0x780c5b9ae2819807';
/**
   * _INVENTORY_GET_CHILDREN_COUNT
   *
   * @param {number} inventoryId
   * @param {DataView} parentGuid
   * @return {number}
   */
export const _INVENTORY_GET_CHILDREN_COUNT = '0xe843d21a8e2498aa';
/**
   * _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {DataView} p2
   * @param {number} p3
   * @param {number} p4
   * @return {boolean}
   */
export const _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA = '0x025a1b1fb03fbf61';
/**
   * _INVENTORY_GET_INVENTORY_ID_FROM_PED
   * Returns a unique inventory ID for this ped.
   * For the local player ped, it is an eInventories value.
   * For other peds, it is the inventory address casted to unsigned int.
   * 
   * enum eInventories
   * {
   *   INVENTORY_INVALID,
   *   INVENTORY_SP_PLAYER,
   *   INVENTORY_MP_PLAYER,
   *   INVENTORY_MP_MISSION,
   *   INVENTORY_SECOND_SCREEN,
   *   INVENTORY_SP_BACKUP,
   *   INVENTORY_SP_SNAPSHOT,
   *   INVENTORY_0xDE2AE452,
   *   INVENTORY_0x399D9B3A,
   *   INVENTORY_0x4BD43FA7,
   *   INVENTORY_0x9529D251,
   *   INVENTORY_0xA75776AC,
   *   INVENTORY_MAX_ID = 11,
   *   INVENTORY_IDS_COUNT
   * };
   *
   * @param {number} ped
   * @return {number}
   */
export const _INVENTORY_GET_INVENTORY_ID_FROM_PED = '0x13d234a2a3f66e63';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_CHILD
   *
   * @param {number} inventoryId
   * @param {DataView} parentGuid
   * @param {any} childIndex
   * @param {DataView} outInventoryItem
   * @return {boolean}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_CHILD = '0xcd9a485f2b383b44';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_COUNT_WITH_GUID
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {boolean} p2
   * @return {number}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_COUNT_WITH_GUID = '0xc97e0d2302382211';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_COUNT_WITH_ITEMID
   *
   * @param {number} inventoryId
   * @param {number} eInventoryItem
   * @param {boolean} p2
   * @return {number}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_COUNT_WITH_ITEMID = '0xe787f05dfc977bde';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_DESCRIPTION_HASH
   *
   * @param {number} item
   * @return {number}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_DESCRIPTION_HASH = '0xa4550fe9c512e3dd';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_EQUIPPED_IN_SLOT
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {number} slotId
   * @param {number} p3
   * @param {DataView} p4
   * @return {number}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_EQUIPPED_IN_SLOT = '0xbe012571b25f5aca';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_EQUIPPED_IN_SLOT_BY_REF
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {number} slotId
   * @param {DataView} outGuid
   * @return {boolean}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_EQUIPPED_IN_SLOT_BY_REF = '0x22e590f108289a9d';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_FIT_SLOT
   *
   * @param {number} p0
   * @param {DataView} p1
   * @param {number} p2
   * @return {boolean}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_FIT_SLOT = '0xb991fe166faf84fd';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_HIDDEN
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @return {boolean}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_HIDDEN = '0xf9933164965533b7';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_INSPECTION_INFO
   *
   * @param {number} item
   * @param {DataView} info
   * @return {boolean}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_INSPECTION_INFO = '0x0c093c1787f18519';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_IN_USE
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @return {boolean}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_IN_USE = '0x70e3a884ed000a01';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_IS_ANIMAL_PELT
   *
   * @param {number} item
   * @return {boolean}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_IS_ANIMAL_PELT = '0x4aef1fb5b9011d75';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_SOUND
   * soundType: see 0x2BAE4880DCDD560B
   * Returns item Hash to be used with _IS_SCRIPTED_AUDIO_CUSTOM and _PLAY_SOUND_FROM_ITEM (p0)
   *
   * @param {number} item
   * @param {number} soundType
   * @return {number}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_SOUND = '0x2e1cdc1ff3b8473e';
/**
   * _INVENTORY_GET_INVENTORY_ITEM_WEAPON_COPY_ID
   * Returns CopyID
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @return {number}
   */
export const _INVENTORY_GET_INVENTORY_ITEM_WEAPON_COPY_ID = '0xab5f12746a099a0e';
/**
   * _INVENTORY_GET_IS_INVENTORY_ITEM_SOUND_VALID
   * soundType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CItemInfoSoundsInterface__sSoundsInfo__eSoundType
   *
   * @param {number} item
   * @param {number} soundType
   * @return {boolean}
   */
export const _INVENTORY_GET_IS_INVENTORY_ITEM_SOUND_VALID = '0x2bae4880dcdd560b';
/**
   * _INVENTORY_GET_ITEM_EXPIRY_TIME
   *
   * @param {DataView} itemGuid
   * @return {number}
   */
export const _INVENTORY_GET_ITEM_EXPIRY_TIME = '0x4a606c17276e1bcc';
/**
   * _INVENTORY_GET_ITEM_FROM_COLLECTION_INDEX
   * collectionId is < outCollectionSize
   *
   * @param {number} collectionId
   * @param {number} itemIndex
   * @param {DataView} itemData
   * @return {boolean}
   */
export const _INVENTORY_GET_ITEM_FROM_COLLECTION_INDEX = '0x82fa24c3d3fcd9b7';
/**
   * _INVENTORY_IS_GUID_VALID
   *
   * @param {DataView} guid
   * @return {boolean}
   */
export const _INVENTORY_IS_GUID_VALID = '0xb881ca836cc4b6d4';
/**
   * _INVENTORY_IS_INVENTORY_ITEM_EQUIPPED
   * Alternative Name: _INVENTORY_IS_ITEM_DISABLED
   *
   * @param {number} inventoryId
   * @param {number} item
   * @param {boolean} p2
   * @return {boolean}
   */
export const _INVENTORY_IS_INVENTORY_ITEM_EQUIPPED = '0x3d10d7179d7034af';
/**
   * _INVENTORY_IS_INVENTORY_ITEM_FLAG_ENABLED
   * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ItemDatabaseItemFlags
   * 2097152 (is item read?), 8388608 (is item sent/received/mailable?), 16777216 (is item consumable?)
   *
   * @param {number} item
   * @param {number} flag
   * @return {boolean}
   */
export const _INVENTORY_IS_INVENTORY_ITEM_FLAG_ENABLED = '0x245d07651b1d183b';
/**
   * _INVENTORY_IS_ITEM_EXPIRED
   *
   * @param {DataView} itemGuid
   * @return {boolean}
   */
export const _INVENTORY_IS_ITEM_EXPIRED = '0x0137c77a2ec64536';
/**
   * _INVENTORY_IS_PLAYER_INVENTORY_MIRRORING_TRANSACTIONS
   *
  
   * @return {boolean}
   */
export const _INVENTORY_IS_PLAYER_INVENTORY_MIRRORING_TRANSACTIONS = '0xfc7563f482781a3d';
/**
   * _INVENTORY_MOVE_INVENTORY_ITEM
   * guid1: old parent GUID
   * guid2: new parent GUID
   * guid3: new item GUID (out param)
   *
   * @param {number} inventoryId
   * @param {DataView} guid1
   * @param {DataView} guid2
   * @param {number} slotId
   * @param {number} quantity
   * @param {DataView} outGuid
   * @return {boolean}
   */
export const _INVENTORY_MOVE_INVENTORY_ITEM = '0xdccaa7c3bfd88862';
/**
   * _INVENTORY_RELEASE_ITEM_COLLECTION
   * Max num of collections is 5, so release your unused ones.
   *
   * @param {number} collectionId
   * @return {boolean}
   */
export const _INVENTORY_RELEASE_ITEM_COLLECTION = '0x42a2f33a1942e865';
/**
   * _INVENTORY_REMOVE_INVENTORY_ITEM_WITH_GUID
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {number} quantity
   * @param {number} removeReason
   * @return {boolean}
   */
export const _INVENTORY_REMOVE_INVENTORY_ITEM_WITH_GUID = '0x3e4e811480b3ae79';
/**
   * _INVENTORY_REMOVE_INVENTORY_ITEM_WITH_ITEMID
   *
   * @param {number} inventoryId
   * @param {number} item
   * @param {number} quantity
   * @param {number} removeReason
   * @return {boolean}
   */
export const _INVENTORY_REMOVE_INVENTORY_ITEM_WITH_ITEMID = '0xb4158c8c9a3b5dce';
/**
   * _INVENTORY_SET_INVENTORY_ITEM_HIDDEN
   * Used with CClothingItem
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {boolean} hidden
   * @return {void}
   */
export const _INVENTORY_SET_INVENTORY_ITEM_HIDDEN = '0x9a113c660aea3832';
/**
   * _INVENTORY_SET_INVENTORY_ITEM_HIDDEN_2
   * Used with CSatchelItem, R* Script usage: fisihing_core
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {boolean} hidden
   * @return {void}
   */
export const _INVENTORY_SET_INVENTORY_ITEM_HIDDEN_2 = '0xd740f11fbc8aef43';
/**
   * _INVENTORY_SET_INVENTORY_ITEM_INSPECTION_ENABLED
   *
   * @param {number} inventoryId
   * @param {DataView} p1
   * @param {boolean} enabled
   * @return {boolean}
   */
export const _INVENTORY_SET_INVENTORY_ITEM_INSPECTION_ENABLED = '0x227522fd59ddb7e8';
/**
   * _INVENTORY_SET_INVENTORY_ITEM_IN_USE
   * Only works on CClothingItem
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {boolean} inUse
   * @return {void}
   */
export const _INVENTORY_SET_INVENTORY_ITEM_IN_USE = '0x65a5f70f4a292ebe';
/**
   * _INVENTORY_SET_INVENTORY_ITEM_WEATHER_EFFECTIVENESS
   * OWE_INVALID = -1,
   * OWE_GOOD_IN_HOT
   * OWE_GOOD_IN_NONE
   * OWE_GOOD_IN_COLD
   * OWE_GOOD_IN_ALL
   *
   * @param {number} inventoryId
   * @param {DataView} guid
   * @param {number} weatherEffectiveness
   * @return {void}
   */
export const _INVENTORY_SET_INVENTORY_ITEM_WEATHER_EFFECTIVENESS = '0x6d2f987736a42d4c';
/**
   * _INVENTORY_SWAP_INVENTORY_ITEM
   *
   * @param {number} inventoryId
   * @param {DataView} guid1
   * @param {DataView} guid2
   * @return {boolean}
   */
export const _INVENTORY_SWAP_INVENTORY_ITEM = '0xf2753d691bcda314';
/**
   * _INVENTORY_UPDATE_INVENTORY_ITEM
   * Getter: _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA
   *
   * @param {number} inventoryId
   * @param {DataView} guid1
   * @param {DataView} guid2
   * @param {number} p3
   * @return {boolean}
   */
export const _INVENTORY_UPDATE_INVENTORY_ITEM = '0xd80a8854db5cfba5';
/**
   * _INVENTORY_USE_MISSION_INVENTORY
   *
   * @param {boolean} enable
   * @param {boolean} mirrorTransactions
   * @return {void}
   */
export const _INVENTORY_USE_MISSION_INVENTORY = '0xa6aa9f56bc6cff58';
/**
   * _INVENTORY_IS_USING_BACKUP_INVENTORY
   * old name _INVENTORY_USE_SP_BACKUP
   *
  
   * @return {boolean}
   */
export const _INVENTORY_IS_USING_BACKUP_INVENTORY = '0x7c7e4ab748ea3b07';
/**
   * _SET_CARRIABLE_CARRY_ACTION_PROMPT_OVERRIDE
   *
   * @param {DataView} data
   * @return {void}
   */
export const _SET_CARRIABLE_CARRY_ACTION_PROMPT_OVERRIDE = '0xf666ef30f4f0ac4e';
/**
   * _SET_ITEM_PROMPT_INFO_REQUEST
   *
   * @param {DataView} p0
   * @return {void}
   */
export const _SET_ITEM_PROMPT_INFO_REQUEST = '0xfd41d1d4350f6413';
/**
   * _SET_USE_MISSION_INVENTORY
   * This native has no functionality.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_USE_MISSION_INVENTORY = '0x597f571ddee3ffac';
/**
   * ITEMDATABASE_FILLOUT_ITEM_BY_NAME
   *
   * @param {number} key
   * @param {DataView} outData
   * @return {boolean}
   */
export const ITEMDATABASE_FILLOUT_ITEM_BY_NAME = '0x2a610bee7d341cc4';
/**
   * ITEMDATABASE_FILLOUT_ITEM_EFFECT_ID_INFO
   *
   * @param {number} key
   * @param {DataView} outData
   * @return {boolean}
   */
export const ITEMDATABASE_FILLOUT_ITEM_EFFECT_ID_INFO = '0xcf2d360d27fd1abf';
/**
   * ITEMDATABASE_FILLOUT_ITEM_INFO
   *
   * @param {number} key
   * @param {DataView} outData
   * @return {boolean}
   */
export const ITEMDATABASE_FILLOUT_ITEM_INFO = '0xfe90abbcbfdc13b2';
/**
   * ITEMDATABASE_IS_BUYABLE_AWARD_VALID
   *
   * @param {number} award
   * @return {boolean}
   */
export const ITEMDATABASE_IS_BUYABLE_AWARD_VALID = '0x4ce753203fa42214';
/**
   * _0x17721003A66C72BF
   *
   * @param {number} shopType
   * @param {number} key
   * @param {DataView} outData
   * @return {boolean}
   */
export const _0x17721003A66C72BF = '0x17721003a66c72bf';
/**
   * _ITEMDATABASE_GET_AWARD_ACQUIRE_COST
   *
   * @param {number} award
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_AWARD_ACQUIRE_COST = '0x1fc25aeb5f76b38d';
/**
   * _0x388088BFF3681189
   *
   * @param {number} bundle
   * @param {number} costtype
   * @return {number}
   */
export const _0x388088BFF3681189 = '0x388088bff3681189';
/**
   * _0x3A0B667ABFF87F6E
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {boolean}
   */
export const _0x3A0B667ABFF87F6E = '0x3a0b667abff87f6e';
/**
   * _0x48229CE0C7938237
   * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
   *
   * @param {number} award
   * @return {number}
   */
export const _0x48229CE0C7938237 = '0x48229ce0c7938237';
/**
   * _0x537A0555F62CA01A
   *
   * @param {number} key
   * @param {number} p1
   * @return {boolean}
   */
export const _0x537A0555F62CA01A = '0x537a0555f62ca01a';
/**
   * _0x799FCD53358ED5FA
   * Returns Item Count
   *
   * @param {any} bundle
   * @param {any} p1
   * @return {number}
   */
export const _0x799FCD53358ED5FA = '0x799fcd53358ed5fa';
/**
   * _0x7A35A72A692BE9DB
   *
   * @param {any} p0
   * @return {number}
   */
export const _0x7A35A72A692BE9DB = '0x7a35a72a692be9db';
/**
   * _0x8870895BA5ED9385
   *
   * @param {number} key
   * @param {number} tagType
   * @param {DataView} outData
   * @return {number}
   */
export const _0x8870895BA5ED9385 = '0x8870895ba5ed9385';
/**
   * _0x8D029948CA29409B
   * _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
   *
   * @param {number} award
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _0x8D029948CA29409B = '0x8d029948ca29409b';
/**
   * _0xAA29A5F13B2C20B2
   * Returns Pathset Hash
   *
   * @param {any} p0
   * @param {number} p1
   * @return {number}
   */
export const _0xAA29A5F13B2C20B2 = '0xaa29a5f13b2c20b2';
/**
   * _0xC4146375D8A0B374
   *
   * @param {any} bundle
   * @param {any} p1
   * @param {number} index
   * @param {any} p3
   * @return {boolean}
   */
export const _0xC4146375D8A0B374 = '0xc4146375d8a0b374';
/**
   * _0xD076DB9B96FAADF1
   *
   * @param {number} award
   * @param {DataView} outData
   * @return {boolean}
   */
export const _0xD076DB9B96FAADF1 = '0xd076db9b96faadf1';
/**
   * _0xDBEADA0DF5F9AB9F
   *
   * @param {number} layout
   * @param {number} index
   * @return {[boolean, number]}
   */
export const _0xDBEADA0DF5F9AB9F = '0xdbeada0df5f9ab9f';
/**
   * _ITEMDATABASE_CAN_EQUIP_ITEM_ON_CATEGORY
   *
   * @param {number} key
   * @param {number} category
   * @param {number} slotId
   * @return {boolean}
   */
export const _ITEMDATABASE_CAN_EQUIP_ITEM_ON_CATEGORY = '0x856ff92c57742ae5';
/**
   * _ITEMDATABASE_CREATE_ITEM_COLLECTION
   * Returns collectionId to be used with 0x8750F69A720C2E41 (p0) and 0xCBB7B6EDFA933ADE (p0)
   *
   * @param {DataView} data
   * @param {number} comparisonType
   * @return {[number, number]}
   */
export const _ITEMDATABASE_CREATE_ITEM_COLLECTION = '0x71efa7999ae79408';
/**
   * _ITEMDATABASE_DOES_BUNDLE_HAVE_TAG
   * Params: tag = TAG_ITEM_PROPERTY (tagType(?))
   *
   * @param {number} bundle
   * @param {number} tag
   * @param {number} tagType
   * @return {boolean}
   */
export const _ITEMDATABASE_DOES_BUNDLE_HAVE_TAG = '0x99c6ea66dfe73757';
/**
   * _ITEMDATABASE_DOES_ITEM_HAVE_TAG
   *
   * @param {number} item
   * @param {number} tag
   * @param {number} tagType
   * @return {boolean}
   */
export const _ITEMDATABASE_DOES_ITEM_HAVE_TAG = '0xff5fb5605ad56856';
/**
   * _ITEMDATABASE_FILLOUT_ACQUIRE_COST
   *
   * @param {number} key
   * @param {number} costtype
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_ACQUIRE_COST = '0x74f7928816e4e181';
/**
   * _ITEMDATABASE_FILLOUT_AWARD_ACQUIRE_COST
   *
   * @param {number} award
   * @param {number} costtype
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_AWARD_ACQUIRE_COST = '0xf27f01bbf5acd3f3';
/**
   * _ITEMDATABASE_FILLOUT_AWARD_ITEM_INFO
   *
   * @param {number} award
   * @param {number} index
   * @return {[boolean, number]}
   */
export const _ITEMDATABASE_FILLOUT_AWARD_ITEM_INFO = '0x121d2005dd64496b';
/**
   * _ITEMDATABASE_FILLOUT_BUNDLE
   *
   * @param {number} bundle
   * @param {number} costtype
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_BUNDLE = '0xb542632693d53408';
/**
   * _ITEMDATABASE_FILLOUT_BUNDLE_UI_DATA
   *
   * @param {number} bundle
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_BUNDLE_UI_DATA = '0x74c3b1093728d263';
/**
   * _ITEMDATABASE_FILLOUT_BUY_AWARD_ACQUIRE_COSTS
   *
   * @param {number} award
   * @param {DataView} outData
   * @param {number} p3
   * @return {[boolean, number]}
   */
export const _ITEMDATABASE_FILLOUT_BUY_AWARD_ACQUIRE_COSTS = '0xb52e20f6767a09a2';
/**
   * _ITEMDATABASE_FILLOUT_BUY_AWARD_UI_DATA
   *
   * @param {number} award
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_BUY_AWARD_UI_DATA = '0xf8d09ef8ce61d7bf';
/**
   * _ITEMDATABASE_FILLOUT_ITEM
   *
   * @param {number} key
   * @param {number} costtype
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_ITEM = '0xad73b614df26cf8a';
/**
   * _ITEMDATABASE_FILLOUT_ITEM_EFFECT_IDS
   *
   * @param {number} key
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_ITEM_EFFECT_IDS = '0x9379be60dc55bbe6';
/**
   * _ITEMDATABASE_FILLOUT_MODIFIER
   *
   * @param {number} key
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_MODIFIER = '0x60614a0ab580a2b5';
/**
   * _ITEMDATABASE_FILLOUT_PRICE_MODIFIER_BY_KEY
   *
   * @param {number} key
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_PRICE_MODIFIER_BY_KEY = '0x40c5d95818823c94';
/**
   * _ITEMDATABASE_FILLOUT_SATCHEL_DATA
   *
   * @param {number} key
   * @return {[boolean, number]}
   */
export const _ITEMDATABASE_FILLOUT_SATCHEL_DATA = '0x4776efd78f75c23f';
/**
   * _ITEMDATABASE_FILLOUT_SELL_PRICE
   * Params: sellType = SELL_SHOP_DEFAULT
   *
   * @param {number} key
   * @param {number} sellType
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_SELL_PRICE = '0x7a62a2eede1c3766';
/**
   * _ITEMDATABASE_FILLOUT_TAG_DATA
   *
   * @param {number} key
   * @param {DataView} outData
   * @param {number} p3
   * @return {[boolean, number]}
   */
export const _ITEMDATABASE_FILLOUT_TAG_DATA = '0x5a11d6eea17165b0';
/**
   * _ITEMDATABASE_FILLOUT_UI_DATA
   *
   * @param {number} key
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_FILLOUT_UI_DATA = '0xb86f7cc2dc67ac60';
/**
   * _ITEMDATABASE_GET_ACQUIRE_COST
   *
   * @param {number} key
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_ACQUIRE_COST = '0x6772a83c67a25775';
/**
   * _ITEMDATABASE_GET_ACQUIRE_COSTS_COUNT
   * Returns the number of <Item>s <acquirecosts> has from the key in catalog_sp.ymt
   *
   * @param {number} key
   * @return {number}
   */
export const _ITEMDATABASE_GET_ACQUIRE_COSTS_COUNT = '0x01fddad392d04144';
/**
   * _ITEMDATABASE_GET_ACQUIRE_COSTS_COUNT_FROM_COST_TYPE
   *
   * @param {number} key
   * @param {number} costtype
   * @return {number}
   */
export const _ITEMDATABASE_GET_ACQUIRE_COSTS_COUNT_FROM_COST_TYPE = '0xdee7b3c76ed664be';
/**
   * _ITEMDATABASE_GET_AWARD_ACQUIRE_COST_COUNT
   *
   * @param {number} key
   * @return {number}
   */
export const _ITEMDATABASE_GET_AWARD_ACQUIRE_COST_COUNT = '0x12df9c58201dd19a';
/**
   * _ITEMDATABASE_GET_AWARD_ACQUIRE_COST_COUNT_FROM_COST_TYPE
   *
   * @param {number} award
   * @param {number} costtype
   * @return {number}
   */
export const _ITEMDATABASE_GET_AWARD_ACQUIRE_COST_COUNT_FROM_COST_TYPE = '0xf540239f9937033b';
/**
   * _ITEMDATABASE_GET_AWARD_COST_MODIFIERS
   *
   * @param {number} award
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_AWARD_COST_MODIFIERS = '0xe81d0378a384e755';
/**
   * _ITEMDATABASE_GET_AWARD_ITEM_COUNT
   * Returns iAwardItemCount
   *
   * @param {number} award
   * @return {number}
   */
export const _ITEMDATABASE_GET_AWARD_ITEM_COUNT = '0x3faa928a79591761';
/**
   * _ITEMDATABASE_GET_BUNDLE_ACQUIRE_COST_MODIFIERS
   *
   * @param {number} bundle
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_BUNDLE_ACQUIRE_COST_MODIFIERS = '0xa97ee5e4589fcf5a';
/**
   * _ITEMDATABASE_GET_BUNDLE_ID
   *
   * @param {number} bundle
   * @return {number}
   */
export const _ITEMDATABASE_GET_BUNDLE_ID = '0x891a45960b6b768a';
/**
   * _ITEMDATABASE_GET_BUNDLE_ITEM_COUNT
   *
   * @param {number} bundleId
   * @param {DataView} data
   * @return {number}
   */
export const _ITEMDATABASE_GET_BUNDLE_ITEM_COUNT = '0x3332695b01015df9';
/**
   * _ITEMDATABASE_GET_BUNDLE_ITEM_INFO
   *
   * @param {number} bundleId
   * @param {DataView} data
   * @param {number} index
   * @return {[boolean, number]}
   */
export const _ITEMDATABASE_GET_BUNDLE_ITEM_INFO = '0x5d48a77e4b668b57';
/**
   * _ITEMDATABASE_GET_COLLECTION_SIZE
   * Returns (collection?) size/index (?)
   * _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
   *
   * @param {number} collectionId
   * @return {number}
   */
export const _ITEMDATABASE_GET_COLLECTION_SIZE = '0xd389a2549c4efb30';
/**
   * _ITEMDATABASE_GET_COMPONENT_ITEM
   * Params: p2 can be a component item hash
   *
   * @param {number} collectionId
   * @param {number} index
   * @return {[boolean, number]}
   */
export const _ITEMDATABASE_GET_COMPONENT_ITEM = '0x8750f69a720c2e41';
/**
   * _ITEMDATABASE_GET_FITS_SLOT_COUNT
   *
   * @param {number} category
   * @return {number}
   */
export const _ITEMDATABASE_GET_FITS_SLOT_COUNT = '0x2970d1d6bfcf9b46';
/**
   * _ITEMDATABASE_GET_FITS_SLOT_INFO
   *
   * @param {number} category
   * @param {number} index
   * @return {[boolean, number]}
   */
export const _ITEMDATABASE_GET_FITS_SLOT_INFO = '0x77210c146ced5261';
/**
   * _ITEMDATABASE_GET_HAS_SLOT_COUNT
   *
   * @param {number} category
   * @return {number}
   */
export const _ITEMDATABASE_GET_HAS_SLOT_COUNT = '0x44915068579d7710';
/**
   * _ITEMDATABASE_GET_HAS_SLOT_INFO
   *
   * @param {number} category
   * @param {number} index
   * @return {[boolean, number]}
   */
export const _ITEMDATABASE_GET_HAS_SLOT_INFO = '0x8a9bd0db7e8376cf';
/**
   * _ITEMDATABASE_GET_ITEM_PATHSET
   *
   * @param {number} key
   * @param {number} defaultPathset
   * @return {number}
   */
export const _ITEMDATABASE_GET_ITEM_PATHSET = '0xf4452ce83118c738';
/**
   * _ITEMDATABASE_GET_ITEM_PRICE_MODIFIERS
   *
   * @param {number} key
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_ITEM_PRICE_MODIFIERS = '0x4eb37aab79ab0c48';
/**
   * _ITEMDATABASE_GET_ITEM_TAG_TYPE
   *
   * @param {number} item
   * @param {number} tag
   * @return {number}
   */
export const _ITEMDATABASE_GET_ITEM_TAG_TYPE = '0x6111b8f9413f413a';
/**
   * _ITEMDATABASE_GET_MODIFIED_PRICE
   * Returns an alternative cost hash to COST_SHOP_DEFAULT
   *
   * @param {number} key
   * @param {number} index
   * @return {number}
   */
export const _ITEMDATABASE_GET_MODIFIED_PRICE = '0xcb92ec9c004732b4';
/**
   * _ITEMDATABASE_GET_NUMBER_OF_MODIFIED_PRICES
   *
   * @param {number} key
   * @return {number}
   */
export const _ITEMDATABASE_GET_NUMBER_OF_MODIFIED_PRICES = '0x5aaaf40e9b224f5e';
/**
   * _ITEMDATABASE_GET_NUMBER_OF_MODIFIERS
   *
   * @param {number} key
   * @return {number}
   */
export const _ITEMDATABASE_GET_NUMBER_OF_MODIFIERS = '0x1289d8315235856d';
/**
   * _ITEMDATABASE_GET_PRIORITY_ACCESS_AWARD
   * _ITEMDATABASE_GET_* - _ITEMDATABASE_IS_*
   *
   * @param {number} award
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_PRIORITY_ACCESS_AWARD = '0xef254f1a4c08b7e6';
/**
   * _ITEMDATABASE_GET_SHOP_INVENTORIES_ITEMS_COUNT
   *
   * @param {number} shopType
   * @return {number}
   */
export const _ITEMDATABASE_GET_SHOP_INVENTORIES_ITEMS_COUNT = '0xc568b1a0f17c7025';
/**
   * _ITEMDATABASE_GET_SHOP_INVENTORIES_ITEM_INFO
   *
   * @param {number} shopType
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_SHOP_INVENTORIES_ITEM_INFO = '0x4a79b41b4eb91f4e';
/**
   * _ITEMDATABASE_GET_SHOP_INVENTORIES_ITEM_INFO_BY_KEY
   * Same Native Function as 0x17721003A66C72BF
   *
   * @param {number} shopType
   * @param {number} key
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_SHOP_INVENTORIES_ITEM_INFO_BY_KEY = '0xcfb06801f5099b25';
/**
   * _ITEMDATABASE_GET_SHOP_INVENTORIES_REQUIREMENT_GROUP_INFO
   *
   * @param {number} shopType
   * @param {number} key
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_SHOP_INVENTORIES_REQUIREMENT_GROUP_INFO = '0x76c752d788a76813';
/**
   * _ITEMDATABASE_GET_SHOP_INVENTORIES_REQUIREMENT_INFO
   *
   * @param {number} shopType
   * @param {number} key
   * @param {number} groupIndex
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_SHOP_INVENTORIES_REQUIREMENT_INFO = '0xe0ea5c031ae5539f';
/**
   * _ITEMDATABASE_GET_SHOP_LAYOUT_INFO
   *
   * @param {number} layout
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_SHOP_LAYOUT_INFO = '0x66a6d76b6bb999b4';
/**
   * _ITEMDATABASE_GET_SHOP_LAYOUT_MENU_INFO_BY_ID
   *
   * @param {number} layout
   * @param {number} menu
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_SHOP_LAYOUT_MENU_INFO_BY_ID = '0xd66114469978b55b';
/**
   * _ITEMDATABASE_GET_SHOP_LAYOUT_MENU_INFO_BY_INDEX
   *
   * @param {number} layout
   * @param {number} menu
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_SHOP_LAYOUT_MENU_INFO_BY_INDEX = '0xf04247092f193b75';
/**
   * _ITEMDATABASE_GET_SHOP_LAYOUT_MENU_PAGE_KEY
   *
   * @param {number} layout
   * @param {number} menu
   * @param {number} index
   * @return {[boolean, number]}
   */
export const _ITEMDATABASE_GET_SHOP_LAYOUT_MENU_PAGE_KEY = '0x9a60570657a7b635';
/**
   * _ITEMDATABASE_GET_SHOP_LAYOUT_PAGE_INFO_BY_KEY
   *
   * @param {number} layout
   * @param {number} pageKey
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_SHOP_LAYOUT_PAGE_INFO_BY_KEY = '0xb347c100df0c9b7f';
/**
   * _ITEMDATABASE_GET_SHOP_LAYOUT_PAGE_ITEM_KEY
   *
   * @param {number} layout
   * @param {number} pageKey
   * @param {number} index
   * @return {[boolean, number, number, number]}
   */
export const _ITEMDATABASE_GET_SHOP_LAYOUT_PAGE_ITEM_KEY = '0xf32bef578b3dbae8';
/**
   * _ITEMDATABASE_GET_SHOP_LAYOUT_ROOT_MENU_INFO
   *
   * @param {number} layout
   * @param {number} index
   * @param {DataView} outData
   * @return {boolean}
   */
export const _ITEMDATABASE_GET_SHOP_LAYOUT_ROOT_MENU_INFO = '0x86fcb565cca0cfa7';
/**
   * _ITEMDATABASE_IS_BUNDLE_VALID
   * Params: mode is 0
   *
   * @param {number} bundle
   * @param {number} mode
   * @return {boolean}
   */
export const _ITEMDATABASE_IS_BUNDLE_VALID = '0x4308812a6e9ca62e';
/**
   * _ITEMDATABASE_IS_INTRINSIC_ITEM
   *
   * @param {number} key
   * @return {boolean}
   */
export const _ITEMDATABASE_IS_INTRINSIC_ITEM = '0x337f88e3a063995e';
/**
   * _ITEMDATABASE_IS_KEY_VALID
   * Params: mode is 0
   *
   * @param {number} key
   * @param {number} mode
   * @return {boolean}
   */
export const _ITEMDATABASE_IS_KEY_VALID = '0x6d5d51b188333fd1';
/**
   * _ITEMDATABASE_IS_OVERPOWERED_ITEM
   *
   * @param {number} key
   * @return {boolean}
   */
export const _ITEMDATABASE_IS_OVERPOWERED_ITEM = '0x337f88e3a063995f';
/**
   * _ITEMDATABASE_IS_SHOP_KEY_VALID
   *
   * @param {number} shopType
   * @return {boolean}
   */
export const _ITEMDATABASE_IS_SHOP_KEY_VALID = '0x00b9507d8e1d8716';
/**
   * _ITEMDATABASE_IS_SHOP_LAYOUT_KEY_VALID
   *
   * @param {number} layout
   * @return {boolean}
   */
export const _ITEMDATABASE_IS_SHOP_LAYOUT_KEY_VALID = '0x3afe5182c45a84f6';
/**
   * _ITEMDATABASE_LOCALIZATION_GET_NUM_LABEL_TYPES
   * Returns docData.iNumTotalLabelTypes
   *
   * @param {any} p0
   * @return {number}
   */
export const _ITEMDATABASE_LOCALIZATION_GET_NUM_LABEL_TYPES = '0xcec6a41e8910486a';
/**
   * _ITEMDATABASE_LOCALIZATION_GET_NUM_VALUES
   * Returns iNumValuesForType
   *
   * @param {any} p0
   * @param {any} p1
   * @return {number}
   */
export const _ITEMDATABASE_LOCALIZATION_GET_NUM_VALUES = '0x49885d82a13eeaea';
/**
   * _ITEMDATABASE_LOCALIZATION_GET_TYPE
   * Returns LabelType
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _ITEMDATABASE_LOCALIZATION_GET_TYPE = '0xcabf5d41d0073d4a';
/**
   * _ITEMDATABASE_LOCALIZATION_GET_VALUE
   *
   * @param {any} p0
   * @param {number} label
   * @param {any} p2
   * @return {number}
   */
export const _ITEMDATABASE_LOCALIZATION_GET_VALUE = '0x9ae5610fdced6ea7';
/**
   * _ITEMDATABASE_RELEASE_ITEM_COLLECTION
   *
   * @param {number} collectionId
   * @return {boolean}
   */
export const _ITEMDATABASE_RELEASE_ITEM_COLLECTION = '0xcbb7b6edfa933ade';
/**
   * ADD_TO_ITEMSET
   *
   * @param {number} entity
   * @param {number} itemset
   * @return {boolean}
   */
export const ADD_TO_ITEMSET = '0xabe74510883c7950';
/**
   * CLEAN_ITEMSET
   *
   * @param {number} itemset
   * @return {void}
   */
export const CLEAN_ITEMSET = '0x85f3a86ca9021fb0';
/**
   * CREATE_ITEMSET
   *
   * @param {boolean} p0
   * @return {number}
   */
export const CREATE_ITEMSET = '0xa1af16083320065a';
/**
   * DESTROY_ITEMSET
   *
   * @param {number} itemset
   * @return {void}
   */
export const DESTROY_ITEMSET = '0x712bc69f10549b92';
/**
   * GET_INDEXED_ITEM_IN_ITEMSET
   *
   * @param {number} index
   * @param {number} itemset
   * @return {number}
   */
export const GET_INDEXED_ITEM_IN_ITEMSET = '0x275a2e2c0fab7612';
/**
   * GET_INDEXED_SCENARIO_POINT_INDEX_IN_ITEMSET
   *
   * @param {number} index
   * @param {number} itemset
   * @return {any}
   */
export const GET_INDEXED_SCENARIO_POINT_INDEX_IN_ITEMSET = '0x9fc3cdb5ce815901';
/**
   * GET_ITEMSET_SIZE
   *
   * @param {number} itemset
   * @return {number}
   */
export const GET_ITEMSET_SIZE = '0x55f2e375ac6018a9';
/**
   * IS_IN_ITEMSET
   *
   * @param {number} entity
   * @param {number} itemset
   * @return {boolean}
   */
export const IS_IN_ITEMSET = '0xd1503c2ee2fe688c';
/**
   * IS_ITEMSET_VALID
   *
   * @param {number} itemset
   * @return {boolean}
   */
export const IS_ITEMSET_VALID = '0xd30765d153ef5c76';
/**
   * REMOVE_FROM_ITEMSET
   *
   * @param {number} entity
   * @param {number} itemset
   * @return {void}
   */
export const REMOVE_FROM_ITEMSET = '0xc5baa432b429dc24';
/**
   * _CLEAR_ITEMSET
   *
   * @param {number} itemset
   * @return {void}
   */
export const _CLEAR_ITEMSET = '0x20a4bf0e09bee146';
/**
   * ADD_BOUNTY
   *
   * @param {number} player
   * @param {number} itemValueAmount
   * @return {void}
   */
export const ADD_BOUNTY = '0x0e3bdeed21beb945';
/**
   * ARE_WITNESSES_ACTIVE
   *
   * @param {number} player
   * @return {boolean}
   */
export const ARE_WITNESSES_ACTIVE = '0x69e181772886f48b';
/**
   * CLEAR_BOUNTY
   *
   * @param {number} player
   * @return {void}
   */
export const CLEAR_BOUNTY = '0xc76f252371150d9a';
/**
   * CLEAR_PLAYER_PAST_CRIMES
   *
   * @param {number} player
   * @return {void}
   */
export const CLEAR_PLAYER_PAST_CRIMES = '0xbcc6dc59e32a2bdc';
/**
   * CLEAR_WANTED_SCORE
   *
   * @param {number} player
   * @return {void}
   */
export const CLEAR_WANTED_SCORE = '0x062b4a4a3396351d';
/**
   * GET_BOUNTY
   *
   * @param {number} player
   * @return {number}
   */
export const GET_BOUNTY = '0x54310aab97b92816';
/**
   * GET_PLAYER_REGISTERED_CRIME
   *
   * @param {number} player
   * @param {number} p1
   * @return {[boolean, number]}
   */
export const GET_PLAYER_REGISTERED_CRIME = '0x532c5fddb986ee5c';
/**
   * GET_WANTED_SCORE
   *
   * @param {number} player
   * @return {number}
   */
export const GET_WANTED_SCORE = '0xdd5fd601481f648b';
/**
   * IS_LAW_INCIDENT_ACTIVE
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_LAW_INCIDENT_ACTIVE = '0xad401c63158acbaa';
/**
   * NUM_CRIMES_SUPPRESSED
   * Returns amount of suppressed crimes to be used later in the function MPINTRO_CRIME_MONITOR_MAINTAIN
   *
   * @param {number} player
   * @param {number} crimeType
   * @return {number}
   */
export const NUM_CRIMES_SUPPRESSED = '0xc08e804c91f47c80';
/**
   * RESET_WANTED_FOR_NEW_INCIDENT
   *
   * @param {number} player
   * @return {void}
   */
export const RESET_WANTED_FOR_NEW_INCIDENT = '0x2728c77fbc4b9796';
/**
   * SET_BOUNTY
   *
   * @param {number} player
   * @param {number} amount
   * @return {void}
   */
export const SET_BOUNTY = '0x093a9d1f72df0d19';
/**
   * SET_DISABLE_DISTURBANCE_CRIMES
   *
   * @param {number} player
   * @param {boolean} p1
   * @return {void}
   */
export const SET_DISABLE_DISTURBANCE_CRIMES = '0xde5faa741a781f73';
/**
   * SET_LAW_SENSE_RANGE_MODIFIER
   * Default range is 1.0f
   *
   * @param {number} player
   * @param {number} range
   * @return {void}
   */
export const SET_LAW_SENSE_RANGE_MODIFIER = '0xfec85339aaca2a35';
/**
   * SET_PLAYER_ARRESTED_IN_REGION
   *
   * @param {number} player
   * @param {number} lawRegionHash
   * @return {void}
   */
export const SET_PLAYER_ARRESTED_IN_REGION = '0xe0fa74aa3cce650b';
/**
   * SET_PLAYER_TURNED_IN_BOUNTY_IN_REGION
   *
   * @param {number} player
   * @param {number} lawRegionHash
   * @return {void}
   */
export const SET_PLAYER_TURNED_IN_BOUNTY_IN_REGION = '0x73bad7b2f2db50de';
/**
   * SET_POSTPONE_DISTURBANCE_CRIMES_DURING_COMBAT
   *
   * @param {number} player
   * @param {boolean} p1
   * @return {void}
   */
export const SET_POSTPONE_DISTURBANCE_CRIMES_DURING_COMBAT = '0x362086b911657b1a';
/**
   * SET_WANTED_SCORE
   *
   * @param {number} player
   * @param {number} intensity
   * @return {void}
   */
export const SET_WANTED_SCORE = '0xa80ff73f772acf6a';
/**
   * SUPPRESS_CRIME_THIS_FRAME
   * crimeType: see _REPORT_CRIME
   *
   * @param {number} player
   * @param {number} crimeType
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const SUPPRESS_CRIME_THIS_FRAME = '0x785177e4d57d7389';
/**
   * _0x00DB0BC05E3FAA4E
   *
   * @param {number} ped
   * @param {number} bitset
   * @return {void}
   */
export const _0x00DB0BC05E3FAA4E = '0x00db0bc05e3faa4e';
/**
   * _0x018F30D762E62DF8
   *
   * @param {number} ped
   * @param {DataView} p1
   * @return {any}
   */
export const _0x018F30D762E62DF8 = '0x018f30d762e62df8';
/**
   * _0x07E8B8B20570271C
   * Used in SP only, called together with 0x55F37F5F3F2475E1 & CLEAR_WANTED_SCORE
   * _REPORT_*
   *
   * @param {number} player
   * @return {void}
   */
export const _0x07E8B8B20570271C = '0x07e8b8b20570271c';
/**
   * _0x0BDFEBCF40A5F7E3
   * Only used in net_fetch R* Script
   *
   * @param {number} crimeType
   * @return {number}
   */
export const _0x0BDFEBCF40A5F7E3 = '0x0bdfebcf40a5f7e3';
/**
   * _0x0C392DB374655176
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @param {number} itemSet
   * @return {void}
   */
export const _0x0C392DB374655176 = '0x0c392db374655176';
/**
   * _0x0DBACA9C38C9A686
   * Only used in sisikapenitentiary R* Script: name = SISIKA
   * _IS_G* or _IS_H*
   *
   * @param {string | number} name
   * @return {boolean}
   */
export const _0x0DBACA9C38C9A686 = '0x0dbaca9c38c9a686';
/**
   * _0x0EAF918F751F27BA
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x0EAF918F751F27BA = '0x0eaf918f751f27ba';
/**
   * _0x0F230DE0DDBE3649
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x0F230DE0DDBE3649 = '0x0f230de0ddbe3649';
/**
   * _0x148E7AC8141C9E64
   *
   * @param {number} player
   * @return {number}
   */
export const _0x148E7AC8141C9E64 = '0x148e7ac8141c9e64';
/**
   * _0x15ABD5004CAD2D99
   * Params: p0 either 0, 1 or -1 in R* Scripts
   * Set to 0 called together with _SUPPRESS_CRIME
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x15ABD5004CAD2D99 = '0x15abd5004cad2d99';
/**
   * _0x2001687F9562FD9D
   * Only used in resapwn_dump_body R* Script
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x2001687F9562FD9D = '0x2001687f9562fd9d';
/**
   * _0x21213B833EF4DAE7
   *
   * @param {number} player
   * @param {number} ped
   * @return {Vector3}
   */
export const _0x21213B833EF4DAE7 = '0x21213b833ef4dae7';
/**
   * _0x22741652985C84D0
   * Used in SP only
   * _REPORT_*
   *
   * @param {number} player
   * @param {number} lawRegionHash
   * @return {void}
   */
export const _0x22741652985C84D0 = '0x22741652985c84d0';
/**
   * _0x26934083D3F2579C
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x26934083D3F2579C = '0x26934083d3f2579c';
/**
   * _0x292AD61A33A7A485
   * Only used in R* Script fm_mission_controller
   * _CLEAR_WANTED_*
   *
  
   * @return {void}
   */
export const _0x292AD61A33A7A485 = '0x292ad61a33a7a485';
/**
   * _0x29CD4896ECB66C12
   *
  
   * @return {void}
   */
export const _0x29CD4896ECB66C12 = '0x29cd4896ecb66c12';
/**
   * _0x318F0F9A4426CFA2
   * Only used in R* SP Script av_amb_camp_robbery
   *
   * @param {number} ped
   * @param {DataView} p1
   * @return {any}
   */
export const _0x318F0F9A4426CFA2 = '0x318f0f9a4426cfa2';
/**
   * _0x331D349E0380B097
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x331D349E0380B097 = '0x331d349e0380b097';
/**
   * _0x3738B784DDD35CC6
   *
   * @param {number} player
   * @param {number} p1
   * @param {number} p2
   * @return {boolean}
   */
export const _0x3738B784DDD35CC6 = '0x3738b784ddd35cc6';
/**
   * _0x3852237A3D9DF145
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x3852237A3D9DF145 = '0x3852237a3d9df145';
/**
   * _0x390710D2DAFA6BFF
   * _CLEAR*
   *
   * @param {number} player
   * @param {boolean} p1
   * @return {void}
   */
export const _0x390710D2DAFA6BFF = '0x390710d2dafa6bff';
/**
   * _0x3D2674828A4E6B3C
   *
  
   * @return {boolean}
   */
export const _0x3D2674828A4E6B3C = '0x3d2674828a4e6b3c';
/**
   * _0x40851BCC33ACD9AB
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x40851BCC33ACD9AB = '0x40851bcc33acd9ab';
/**
   * _0x522F74636DF10201
   *
   * @param {number} player
   * @param {number} itemSet
   * @return {void}
   */
export const _0x522F74636DF10201 = '0x522f74636df10201';
/**
   * _0x5E6F375CA101C108
   * Only used in R* SP Scripts
   *
   * @param {number} player
   * @param {boolean} p1
   * @return {void}
   */
export const _0x5E6F375CA101C108 = '0x5e6f375ca101c108';
/**
   * _0x61B98367D93F012F
   *
   * @param {number} player
   * @return {void}
   */
export const _0x61B98367D93F012F = '0x61b98367d93f012f';
/**
   * _0x6ABC50979655BEE7
   *
   * @param {number} player
   * @param {any} p2
   * @return {number}
   */
export const _0x6ABC50979655BEE7 = '0x6abc50979655bee7';
/**
   * _0x7351DA734F989F4E
   * Only used in shoprobberies
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _0x7351DA734F989F4E = '0x7351da734f989f4e';
/**
   * _0x7803436E68C32B26
   *
  
   * @return {void}
   */
export const _0x7803436E68C32B26 = '0x7803436e68c32b26';
/**
   * _0x7EF2A2FE38D74456
   * _SET_DISPATCH_*
   *
   * @param {number} flag
   * @param {boolean} p1
   * @return {void}
   */
export const _0x7EF2A2FE38D74456 = '0x7ef2a2fe38d74456';
/**
   * _0x7FC667F6DDFBCDCC
   * Only used in R* Script long_update
   * Returns a value thats being subtracted from GET_GAME_TIMER
   *
   * @param {number} player
   * @return {number}
   */
export const _0x7FC667F6DDFBCDCC = '0x7fc667f6ddfbcdcc';
/**
   * _0x82F11E1296996574
   * Only used in rcm_gunslinger1_1 R* Script: p0 = 0
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x82F11E1296996574 = '0x82f11e1296996574';
/**
   * _0x856CE8FDE2416602
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x856CE8FDE2416602 = '0x856ce8fde2416602';
/**
   * _0x89E005B1662F6E48
   *
   * @param {number} player
   * @param {number} p1
   * @param {number} p2
   * @return {boolean}
   */
export const _0x89E005B1662F6E48 = '0x89e005b1662f6e48';
/**
   * _0x95878B13E272EF1F
   *
   * @param {number} entity
   * @param {number} ped
   * @param {boolean} p2
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} crimeType
   * @return {any}
   */
export const _0x95878B13E272EF1F = '0x95878b13e272ef1f';
/**
   * _0x9772395CC73E8D1F
   * Only used in loanshark_miner1 R* Script: name = ANNESBURG_MINES
   *
   * @param {number} ped
   * @param {string | number} name
   * @return {void}
   */
export const _0x9772395CC73E8D1F = '0x9772395cc73e8d1f';
/**
   * _0x987BE590FB9D41E5
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x987BE590FB9D41E5 = '0x987be590fb9d41e5';
/**
   * _0x9945A3E2528A02E8
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x9945A3E2528A02E8 = '0x9945a3e2528a02e8';
/**
   * _0x9B4C564BFA7CFF37
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x9B4C564BFA7CFF37 = '0x9b4c564bfa7cff37';
/**
   * _0x9C5BD8C562565CE6
   *
  
   * @return {number}
   */
export const _0x9C5BD8C562565CE6 = '0x9c5bd8c562565ce6';
/**
   * _0x9C8A2BF37E966464
   * Only used in act_bankrobbery01 R* Script
   *
   * @param {number} player
   * @param {number} itemSet
   * @return {void}
   */
export const _0x9C8A2BF37E966464 = '0x9c8a2bf37e966464';
/**
   * _0x9D5C9A5A3321B128
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x9D5C9A5A3321B128 = '0x9d5c9a5a3321b128';
/**
   * _0x9EF07CFBB19A9733
   * Only used in shoprobberies R* Scripts
   *
  
   * @return {boolean}
   */
export const _0x9EF07CFBB19A9733 = '0x9ef07cfbb19a9733';
/**
   * _0xB527099D1E1EED49
   *
   * @param {number} player
   * @param {number} p1
   * @return {[boolean, number]}
   */
export const _0xB527099D1E1EED49 = '0xb527099d1e1eed49';
/**
   * _0xBD944A3D36E992DE
   * Called together with REPORT_POLICE_SPOTTED_PLAYER
   *
  
   * @return {void}
   */
export const _0xBD944A3D36E992DE = '0xbd944a3d36e992de';
/**
   * _0xC0DF161950FB101E
   * Only used in rcm_serial_killer1 R* Script
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xC0DF161950FB101E = '0xc0df161950fb101e';
/**
   * _0xC310239ACCCF5579
   *
  
   * @return {void}
   */
export const _0xC310239ACCCF5579 = '0xc310239acccf5579';
/**
   * _0xC5EB2755FA25F1E9
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0xC5EB2755FA25F1E9 = '0xc5eb2755fa25f1e9';
/**
   * _0xC687A23E166DCF68
   *
   * @param {DataView} p0
   * @return {any}
   */
export const _0xC687A23E166DCF68 = '0xc687a23e166dcf68';
/**
   * _0xC7DC5A0A7DF608CB
   * _GET_DISPATCH_*
   *
   * @param {number} flag
   * @return {boolean}
   */
export const _0xC7DC5A0A7DF608CB = '0xc7dc5a0a7df608cb';
/**
   * _0xCBFB4951F2E3934C
   *
   * @param {number} player
   * @param {DataView} data
   * @return {void}
   */
export const _0xCBFB4951F2E3934C = '0xcbfb4951f2e3934c';
/**
   * _0xD6C0A8C7C0B2F82C
   *
   * @param {number} player
   * @param {boolean} p1
   * @return {void}
   */
export const _0xD6C0A8C7C0B2F82C = '0xd6c0a8c7c0b2f82c';
/**
   * _0xD7494DED50C6EF52
   * Only used in R* SP Scripts
   * Params: p2 either 1 or 2
   *
   * @param {number} player
   * @param {number} crimeType
   * @param {number} p2
   * @return {void}
   */
export const _0xD7494DED50C6EF52 = '0xd7494ded50c6ef52';
/**
   * _0xDA1A9ADC4E3D4B16
   * Only used in R* SP Scripts
   * Params: p1 = true, p2 = false
   *
   * @param {number} itemSet
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0xDA1A9ADC4E3D4B16 = '0xda1a9adc4e3d4b16';
/**
   * _0xDAEFDFDB2AEECE37
   * crimeType: see _REPORT_CRIME
   *
   * @param {number} crimeType
   * @param {any} p1
   * @return {number}
   */
export const _0xDAEFDFDB2AEECE37 = '0xdaefdfdb2aeece37';
/**
   * _0xDCF12B89624AAC96
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0xDCF12B89624AAC96 = '0xdcf12b89624aac96';
/**
   * _SET_CANT_LOSE_LAW_THIS_RESPONSE
   *
   * @param {boolean} enable
   * @return {void}
   */
export const _SET_CANT_LOSE_LAW_THIS_RESPONSE = '0xddce8e960d1de240';
/**
   * _0xDEA083C16BB91345
   *
  
   * @return {void}
   */
export const _0xDEA083C16BB91345 = '0xdea083c16bb91345';
/**
   * _0xE083BEDA81709891
   *
   * @param {number} player
   * @return {number}
   */
export const _0xE083BEDA81709891 = '0xe083beda81709891';
/**
   * _0xE4D6E45F491A66CB
   *
   * @param {number} player
   * @param {number} p1
   * @return {any}
   */
export const _0xE4D6E45F491A66CB = '0xe4d6e45f491a66cb';
/**
   * _0xE94B5E938619712E
   * Seems to disable lawmen guarding behaviors (like during a region lockdown). Must be called every frame.
   * Only used in R* SP Scripts, mostly used in train_fast_travel_core
   *
  
   * @return {void}
   */
export const _0xE94B5E938619712E = '0xe94b5e938619712e';
/**
   * _0xE9AC8466ABE484BB
   * Only used in R* SP Scripts
   * Params: p1 = 0
   *
   * @param {boolean} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE9AC8466ABE484BB = '0xe9ac8466abe484bb';
/**
   * _0xE9EB79CBF9C0F58A
   * Returns p1 value for 0xE4D6E45F491A66CB
   *
   * @param {number} player
   * @return {number}
   */
export const _0xE9EB79CBF9C0F58A = '0xe9eb79cbf9c0f58a';
/**
   * _0xEDFC6C1FD1C964F5
   * _SET_C* - _SET_D*
   *
   * @param {number} player
   * @param {number} crimeType
   * @param {number} bounty
   * @param {number} p3
   * @param {number} p4
   * @param {boolean} p5
   * @param {number} p6
   * @param {number} p7
   * @param {any} p8
   * @return {void}
   */
export const _0xEDFC6C1FD1C964F5 = '0xedfc6c1fd1c964f5';
/**
   * _0xF46108C50A22B029
   *
  
   * @return {boolean}
   */
export const _0xF46108C50A22B029 = '0xf46108c50a22b029';
/**
   * _0xF611DE44AEB36A1D
   *
   * @param {number} crimeType
   * @param {boolean} p1
   * @return {void}
   */
export const _0xF611DE44AEB36A1D = '0xf611de44aeb36a1d';
/**
   * _0xFFEBE5AA96BC2E4E
   *
   * @param {number} ped
   * @param {number} crimeType
   * @param {boolean} p2
   * @return {any}
   */
export const _0xFFEBE5AA96BC2E4E = '0xffebe5aa96bc2e4e';
/**
   * _ADD_WITNESS_RESPONSE
   *
   * @param {number} player
   * @param {number} crimeType
   * @param {number} pedGroup
   * @return {void}
   */
export const _ADD_WITNESS_RESPONSE = '0x10827b5a0aac56a7';
/**
   * _ARE_ANY_LAW_PEDS_INVESTIGATING
   * Only used in rcm_homerob00 R* Script
   *
  
   * @return {boolean}
   */
export const _ARE_ANY_LAW_PEDS_INVESTIGATING = '0xece3c34b270428d5';
/**
   * _ARE_INVESTIGATORS_ACTIVE
   *
   * @param {number} player
   * @param {boolean} areInvestigatorsActive
   * @param {any} p2
   * @return {boolean}
   */
export const _ARE_INVESTIGATORS_ACTIVE = '0xf0fbfb9ab15f7734';
/**
   * _ARE_LAW_PEDS_ENABLED_FOR_TRAIN
   * Only used in trainrobbery_ambient R* Script
   *
  
   * @return {boolean}
   */
export const _ARE_LAW_PEDS_ENABLED_FOR_TRAIN = '0xa22c46f16359471c';
/**
   * _ARE_WITNESSES_PENDING
   *
   * @param {number} player
   * @return {boolean}
   */
export const _ARE_WITNESSES_PENDING = '0x0bb6de7d23c60626';
/**
   * _CREATE_GUARD_ZONE
   *
   * @param {string | number} name
   * @return {void}
   */
export const _CREATE_GUARD_ZONE = '0x8f9de75680275c9f';
/**
   * _CREATE_GUARD_ZONE_FOR_ENTITY
   * Returns true when investigation creation was successful
   *
   * @param {string | number} guardZoneName
   * @param {number} entity
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const _CREATE_GUARD_ZONE_FOR_ENTITY = '0x0d4b77e862475ed3';
/**
   * _CREATE_LAW_DISPATCH_RESPONSE_FOR_COORDS
   * dispatchResponseHash: see common/data/dispatchresponses/..
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} dispatchResponseHash
   * @return {any}
   */
export const _CREATE_LAW_DISPATCH_RESPONSE_FOR_COORDS = '0x75cbf20ba47e4f89';
/**
   * _DISABLE_GUARD_ZONE
   *
   * @param {string | number} name
   * @return {void}
   */
export const _DISABLE_GUARD_ZONE = '0x26d558692b25dd95';
/**
   * _ENABLE_DISPATCH_LAW
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _ENABLE_DISPATCH_LAW = '0xc805eb785824f712';
/**
   * _ENABLE_DISPATCH_LAW_2
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _ENABLE_DISPATCH_LAW_2 = '0x710448d44a64c213';
/**
   * _FORCE_LAW_ON_LOCAL_PLAYER_IMMEDIATELY
   *
  
   * @return {void}
   */
export const _FORCE_LAW_ON_LOCAL_PLAYER_IMMEDIATELY = '0x956510f8c36b5c64';
/**
   * _GET_BOUNTY_HUNTER_GLOBAL_COOLDOWN
   * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
   *
   * @param {number} p0
   * @return {number}
   */
export const _GET_BOUNTY_HUNTER_GLOBAL_COOLDOWN = '0x76cf93d4b416b288';
/**
   * _GET_CRIME_BOUNTY_AMOUNT_BY_TYPE
   * Returns bounty (increment) value
   *
   * @param {number} crimeType
   * @return {number}
   */
export const _GET_CRIME_BOUNTY_AMOUNT_BY_TYPE = '0x35e5e21f9159849c';
/**
   * _GET_HUD_PLAYER_CRIME_TYPE
   * See _REPORT_CRIME
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_HUD_PLAYER_CRIME_TYPE = '0x259ce340a8738814';
/**
   * _GET_TIME_SINCE_LAST_SEEN_BY_LAW
   * Returns the amount of time (probably in game minutes) since last seen by the law / left the wanted radius
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_TIME_SINCE_LAST_SEEN_BY_LAW = '0x717da2281df90855';
/**
   * _IS_GUARD_PED_INVESTIGATING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_GUARD_PED_INVESTIGATING = '0xd743c4293f47afad';
/**
   * _LAW_WITNESS_RESPONSE_TASK
   *
   * @param {number} pedGroup1
   * @param {number} ped
   * @param {number} pedGroup2
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} crimeType
   * @return {boolean}
   */
export const _LAW_WITNESS_RESPONSE_TASK = '0xf0b67bad53c35bd9';
/**
   * _PAUSE_BOUNTY_HUNTER_COOLDOWN
   * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
   *
   * @param {number} p0
   * @param {boolean} p1
   * @param {any} p2
   * @return {void}
   */
export const _PAUSE_BOUNTY_HUNTER_COOLDOWN = '0xc61edebf16cd9668';
/**
   * _REMOVE_GUARD_ZONE
   *
   * @param {string | number} name
   * @return {void}
   */
export const _REMOVE_GUARD_ZONE = '0x67ebdd958835956c';
/**
   * _REPORT_CRIME
   * crimeType:
   * enum eCrimeType : Hash
   * {
   *   CRIME_ACCOMPLICE = 0xAF074F6D,
   *   CRIME_ARSON = 0x68134DC7,
   *   CRIME_ASSAULT = 0x0BADC882,
   *   CRIME_ASSAULT_ANIMAL = 0x18DA55EE,
   *   CRIME_ASSAULT_CORPSE = 0x4E5F23F2,
   *   CRIME_ASSAULT_HORSE = 0xC4736181,
   *   CRIME_ASSAULT_LAW = 0xD7466D7C,
   *   CRIME_ASSAULT_LIVESTOCK = 0xCCE1CCBD,
   *   CRIME_BANK_ROBBERY = 0x6A1ADE3D,
   *   CRIME_BURGLARY = 0xA54C77E0,
   *   CRIME_CHEATING = 0xA2FF1145,
   *   CRIME_DISTURBANCE = 0x5011F613,
   *   CRIME_EXPLOSION = 0x3EBA7A37,
   *   CRIME_EXPLOSION_POISON = 0x91D0A0E1,
   *   CRIME_GRAVE_ROBBERY = 0x971EA5AF,
   *   CRIME_HASSLE = 0x58488776,
   *   CRIME_HIT_AND_RUN = 0xFF0A3CC4,
   *   CRIME_HIT_AND_RUN_LAW = 0x064814AF,
   *   CRIME_INTIMIDATION = 0x8319FBAB,
   *   CRIME_JACK_HORSE = 0x82F7E4A2,
   *   CRIME_JACK_VEHICLE = 0x6B981F4C,
   *   CRIME_JAIL_BREAK = 0x12C1D589,
   *   CRIME_KIDNAPPING = 0x98F908DB,
   *   CRIME_KIDNAPPING_LAW = 0xFD72A7EA,
   *   CRIME_LASSO_ASSAULT = 0x56EE5D5A,
   *   CRIME_LAW_IS_THREATENED = 0x1CB91DF0,
   *   CRIME_LOITERING = 0x6629D2F4,
   *   CRIME_LOOTING = 0x55AD2BEB,
   *   CRIME_MURDER = 0xE28ECE7E,
   *   CRIME_MURDER_ANIMAL = 0x48F59A66,
   *   CRIME_MURDER_HORSE = 0xC7261D79,
   *   CRIME_MURDER_LAW = 0x7797FCE7,
   *   CRIME_MURDER_LIVESTOCK = 0x9569C546,
   *   CRIME_MURDER_PLAYER = 0xF5ABD6C9,
   *   CRIME_MURDER_PLAYER_HORSE = 0xD55C6A79,
   *   CRIME_PROPERTY_DESTRUCTION = 0x533B003D,
   *   CRIME_RESIST_ARREST = 0xDF577BA5,
   *   CRIME_ROBBERY = 0xA3BEDE4C,
   *   CRIME_SELF_DEFENCE = 0xBD6A0AA3,
   *   CRIME_STAGECOACH_ROBBERY = 0xFC738E61,
   *   CRIME_STOLEN_GOODS = 0x9A949C79,
   *   CRIME_THEFT = 0x72ADE410,
   *   CRIME_THEFT_HORSE = 0xBE3A5838,
   *   CRIME_THEFT_LIVESTOCK = 0x85BA08FD,
   *   CRIME_THEFT_VEHICLE = 0x43A9ECA1,
   *   CRIME_THREATEN = 0x941C985A,
   *   CRIME_THREATEN_LAW = 0x7F908566,
   *   CRIME_TRAIN_ROBBERY = 0x647D2A5A,
   *   CRIME_TRAMPLE = 0x45DB39D8,
   *   CRIME_TRAMPLE_LAW = 0xF00F266B,
   *   CRIME_TRAMPLE_PLAYER = 0x75970C15,
   *   CRIME_TRESPASSING = 0xAEDE8E35,
   *   CRIME_UNARMED_ASSAULT = 0x5098CC5A,
   *   CRIME_VANDALISM = 0x80FDC759,
   *   CRIME_VANDALISM_VEHICLE = 0xF9E7ECE4,
   *   CRIME_VEHICLE_DESTRUCTION = 0x54A85DDC,
   *   CRIME_WANTED_LEVEL_UP_DEBUG_HIGH = 0x99C52FF5,
   *   CRIME_WANTED_LEVEL_UP_DEBUG_LOW = 0xD891890F
   * };
   *
   * @param {number} player
   * @param {number} crimeType
   * @param {number} bounty
   * @param {number} entity
   * @param {boolean} isKnownSuspect
   * @return {void}
   */
export const _REPORT_CRIME = '0xf60386770878a98f';
/**
   * _REPORT_PLAYER_LAW_DISPATCH_RESPONSE_OVERRIDE
   *
   * @param {number} player
   * @param {number} dispatchResponseHash
   * @return {void}
   */
export const _REPORT_PLAYER_LAW_DISPATCH_RESPONSE_OVERRIDE = '0x9c4352134b2835fb';
/**
   * _SET_ALLOW_DISABLED_LAW_RESPONSES
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_ALLOW_DISABLED_LAW_RESPONSES = '0x4b52bf96e225d230';
/**
   * _SET_BOUNTY_HUNTER_GLOBAL_COOLDOWN
   * p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const _SET_BOUNTY_HUNTER_GLOBAL_COOLDOWN = '0xf19706b1f8ffa88f';
/**
   * _SET_BOUNTY_HUNTER_PURSUIT_CLEARED
   * Force clears local player's wanted level
   *
  
   * @return {void}
   */
export const _SET_BOUNTY_HUNTER_PURSUIT_CLEARED = '0x55f37f5f3f2475e1';
/**
   * _SET_CUSTOM_LAW_DISPATCH_RESPONSE
   * Note: This native is only used in multiplayer scripts
   * dispatchResponseHash: see update1/common/data/dispatchresponses/..
   *
   * @param {number} dispatchResponseHash
   * @return {void}
   */
export const _SET_CUSTOM_LAW_DISPATCH_RESPONSE = '0x009cf9a29972c298';
/**
   * _SET_DISPATCH_MULTIPLIER_OVERRIDE
   *
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_DISPATCH_MULTIPLIER_OVERRIDE = '0x002babe0b7d53136';
/**
   * _SET_GUARD_ZONE_POSITION
   *
   * @param {string | number} name
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _SET_GUARD_ZONE_POSITION = '0x7e7bf59f89fc6c6d';
/**
   * _SET_GUARD_ZONE_POSITION_2
   *
   * @param {string | number} name
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _SET_GUARD_ZONE_POSITION_2 = '0x2f9005e2ea4e5ee4';
/**
   * _SET_GUARD_ZONE_VOLUME_REGISTRATION_END
   *
   * @param {string | number} name
   * @param {number} volume
   * @return {void}
   */
export const _SET_GUARD_ZONE_VOLUME_REGISTRATION_END = '0xa8a74aa79fb67159';
/**
   * _SET_GUARD_ZONE_VOLUME_REGISTRATION_START
   *
   * @param {string | number} name
   * @param {number} volume
   * @return {void}
   */
export const _SET_GUARD_ZONE_VOLUME_REGISTRATION_START = '0x8c598a930f471938';
/**
   * _SET_GUARD_ZONE_VOLUME_RESTRICTED
   *
   * @param {string | number} name
   * @param {number} volume
   * @return {void}
   */
export const _SET_GUARD_ZONE_VOLUME_RESTRICTED = '0x35815f372d43e1e5';
/**
   * _SET_GUARD_ZONE_VOLUME_THREAT
   *
   * @param {string | number} name
   * @param {number} volume
   * @return {void}
   */
export const _SET_GUARD_ZONE_VOLUME_THREAT = '0xa1b0e6301e2e02a6';
/**
   * _SET_GUARD_ZONE_VOLUME_WARNING
   *
   * @param {string | number} name
   * @param {number} volume
   * @return {void}
   */
export const _SET_GUARD_ZONE_VOLUME_WARNING = '0xad3e07c37a7c1adc';
/**
   * _SET_LAW_DISABLED
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_LAW_DISABLED = '0x8de82bc774f3b862';
/**
   * _SET_LAW_RBS_VOLUME
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _SET_LAW_RBS_VOLUME = '0x9bbdcb8df789ebc1';
/**
   * _SET_LAW_REGION
   * enum eLawRegion : Hash
   * {
   *   LAW_DISPATCH_REGION_NONE = 0,
   *   LAW_REGION_AGUASDULCES = 0x2F573EBE,
   *   LAW_REGION_ANNESBURG = 0x68CAFD50,
   *   LAW_REGION_ARMADILLO = 0xF0B90756,
   *   LAW_REGION_BAYOU_NWA = 0x80966B1C,
   *   LAW_REGION_BEECHERS_HOPE = 0xE2544977,
   *   LAW_REGION_BIG_VALLEY = 0x3DF1559A,
   *   LAW_REGION_BLACKWATER = 0x60D4886D,
   *   LAW_REGION_BLACKWATER_MAINGAME = 0x66553576,
   *   LAW_REGION_BLUEGILL_MARSH = 0x1D6AED8E,
   *   LAW_REGION_BRAITHWAITE_MANOR = 0x3D71E7FF,
   *   LAW_REGION_BUTCHER_CREEK = 0x2B3E1822,
   *   LAW_REGION_CALIGA_HALL = 0xF3FE5080,
   *   LAW_REGION_CORNWALL = 0xCC4672FA,
   *   LAW_REGION_CUMBERLAND_FOREST = 0x81A78306,
   *   LAW_REGION_EMERALD_RANCH = 0x5C069DF3,
   *   LAW_REGION_FORT_WALLACE = 0x0AF25192,
   *   LAW_REGION_GREAT_PLAINS = 0xB20573FA,
   *   LAW_REGION_GREAT_PLAINS_MAINGAME = 0x9862FF7C,
   *   LAW_REGION_GRIZZLIES = 0xBB936031,
   *   LAW_REGION_GUAMA = 0x200DFF42,
   *   LAW_REGION_HEARTLANDS = 0xAD14DA65,
   *   LAW_REGION_LAGRAS = 0xC64808D3,
   *   LAW_REGION_MACFARLANES_RANCH = 0x396A7D5F,
   *   LAW_REGION_MANICATO = 0x039DB6BF,
   *   LAW_REGION_MANZANITA_POST = 0x895E580E,
   *   LAW_REGION_MANZANITA_POST_MAINGAME = 0x9BDD6A38,
   *   LAW_REGION_OCCUPIED_CARAVAN_CAMP = 0x7EBABB01,
   *   LAW_REGION_OLD_MAP_WILDERNESS = 0xCBB45950,
   *   LAW_REGION_OLD_MAP_WILDERNESS_MAINGAME = 0x9F839BE7,
   *   LAW_REGION_OUTLAW3 = 0x97A02FC1,
   *   LAW_REGION_PRONGHORN_RANCH = 0x398E4BFC,
   *   LAW_REGION_RHODES = 0x89222928,
   *   LAW_REGION_RHODES_LOCKDOWN = 0xB1181671,
   *   LAW_REGION_RIDGEWOOD_FARM = 0x635C3028,
   *   LAW_REGION_ROANOKE_RIDGE = 0x46386A9A,
   *   LAW_REGION_SAINT_DENIS = 0x5CF7C268,
   *   LAW_REGION_SAINT_DENIS_RURAL = 0x4FD5331A,
   *   LAW_REGION_SCARLETT_MEADOWS = 0x5FDD9717,
   *   LAW_REGION_SISIKA = 0x2B6BBA52,
   *   LAW_REGION_STRAWBERRY = 0xDD932620,
   *   LAW_REGION_TALL_TREES = 0xD939B758,
   *   LAW_REGION_TALL_TREES_MAINGAME = 0x084B17DF,
   *   LAW_REGION_THIEVES_LANDING = 0x3D0C2EB6,
   *   LAW_REGION_THIEVES_LANDING_MAINGAME = 0x61C450F3,
   *   LAW_REGION_TUMBLEWEED = 0x0EFAF8DC,
   *   LAW_REGION_VALENTINE = 0xA7A3F0C3,
   *   LAW_REGION_VALENTINE_LOCKDOWN = 0x123582FE,
   *   LAW_REGION_VAN_HORN = 0x619B528E,
   *   LAW_REGION_WAPITI = 0x7A976E02
   * };
   *
   * @param {number} player
   * @param {number} lawRegionHash
   * @param {number} stateHash
   * @return {void}
   */
export const _SET_LAW_REGION = '0x4752f68eb7f2d280';
/**
   * _SET_PED_LAW_BEHAVIOUR
   * behaviour: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLawBehavior__Flags
   *
   * @param {number} ped
   * @param {number} behaviour
   * @return {void}
   */
export const _SET_PED_LAW_BEHAVIOUR = '0x819add5ef1742f47';
/**
   * GET_CURRENT_LANGUAGE
   * 0 = american (en-US)
   * 1 = french (fr-FR)
   * 2 = german (de-DE)
   * 3 = italian (it-IT)
   * 4 = spanish (es-ES)
   * 5 = brazilian (pt-BR)
   * 6 = polish (pl-PL)
   * 7 = russian (ru-RU)
   * 8 = korean (ko-KR)
   * 9 = chinesetrad (zh-TW)
   * 10 = japanese (ja-JP)
   * 11 = mexican (es-MX)
   * 12 = chinesesimp (zh-CN)
   *
  
   * @return {number}
   */
export const GET_CURRENT_LANGUAGE = '0xdb917da5c6835fcc';
/**
   * LOCALIZATION_GET_SYSTEM_DATE_TYPE
   * 0 = DATE_FORMAT_DMY
   * 1 = DATE_FORMAT_MDY
   * 2 = DATE_FORMAT_YMD
   * 
   * Old name: _LOCALIZATION_GET_SYSTEM_DATE_FORMAT
   *
  
   * @return {number}
   */
export const LOCALIZATION_GET_SYSTEM_DATE_TYPE = '0x76e30b799ebeea0f';
/**
   * LOCALIZATION_GET_SYSTEM_LANGUAGE
   * Same return values as GET_CURRENT_LANGUAGE
   *
  
   * @return {number}
   */
export const LOCALIZATION_GET_SYSTEM_LANGUAGE = '0x3c1a05f86ae6acb5';
/**
   * _DOES_CURRENT_LANGUAGE_SUPPORT_CONDENSED_STYLE
   * Returns true if the current language is american, french, german, italian, spanish, brazilian or mexican.
   * _DOES_*
   *
  
   * @return {boolean}
   */
export const _DOES_CURRENT_LANGUAGE_SUPPORT_CONDENSED_STYLE = '0x45d50415e4d885ff';
/**
   * ADD_POINT_TO_GPS_MULTI_ROUTE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} p3
   * @return {void}
   */
export const ADD_POINT_TO_GPS_MULTI_ROUTE = '0x64c59dd6834fa942';
/**
   * ALLOW_SONAR_BLIPS
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const ALLOW_SONAR_BLIPS = '0x6e6e64788c07d2e0';
/**
   * BLIP_ADD_FOR_COORDS
   * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips
   * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips_mp
   *
   * @param {number} blipHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const BLIP_ADD_FOR_COORDS = '0x554d9d53f696d002';
/**
   * BLIP_ADD_FOR_ENTITY
   *
   * @param {number} blipHash
   * @param {number} entity
   * @return {number}
   */
export const BLIP_ADD_FOR_ENTITY = '0x23f74c2fda6e7c61';
/**
   * BLIP_ADD_FOR_PICKUP_PLACEMENT
   *
   * @param {number} blipHash
   * @param {number} pickup
   * @return {number}
   */
export const BLIP_ADD_FOR_PICKUP_PLACEMENT = '0xa486008892065fb9';
/**
   * BLIP_ADD_FOR_RADIUS
   *
   * @param {number} blipHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {number}
   */
export const BLIP_ADD_FOR_RADIUS = '0x45f13b7e0a15c880';
/**
   * BLIP_ADD_MODIFIER
   * https://alloc8or.re/rdr3/doc/enums/eBlipModifier.txt
   * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_modifiers
   * 
   * Old name: _BLIP_SET_MODIFIER
   *
   * @param {number} blip
   * @param {number} modifierHash
   * @return {boolean}
   */
export const BLIP_ADD_MODIFIER = '0x662d364abf16de2f';
/**
   * BLIP_REMOVE_MODIFIER
   * If modifierHash is 0, ALL modifiers will be removed.
   *
   * @param {number} blip
   * @param {number} modifierHash
   * @return {boolean}
   */
export const BLIP_REMOVE_MODIFIER = '0xb059d7bd3d78c16f';
/**
   * CLEAR_GPS_CUSTOM_ROUTE
   *
  
   * @return {void}
   */
export const CLEAR_GPS_CUSTOM_ROUTE = '0x1eaa5674b4d181c5';
/**
   * CLEAR_GPS_FLAGS
   * Clears the GPS flags.
   *
  
   * @return {void}
   */
export const CLEAR_GPS_FLAGS = '0x4d3771237c79ff41';
/**
   * CLEAR_GPS_MULTI_ROUTE
   * Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
   *
  
   * @return {void}
   */
export const CLEAR_GPS_MULTI_ROUTE = '0x9e0ab9aaee87ce28';
/**
   * CLEAR_GPS_PLAYER_WAYPOINT
   *
  
   * @return {void}
   */
export const CLEAR_GPS_PLAYER_WAYPOINT = '0x08fdc6f796e350d1';
/**
   * DISPLAY_RADAR
   * If Minimap / Radar should be displayed.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const DISPLAY_RADAR = '0x1b3da717b9aff828';
/**
   * DOES_BLIP_EXIST
   *
   * @param {number} blip
   * @return {boolean}
   */
export const DOES_BLIP_EXIST = '0xcd82fa174080b3b1';
/**
   * FORCE_SONAR_BLIPS_THIS_FRAME
   * Doesn't actually return anything.
   *
  
   * @return {any}
   */
export const FORCE_SONAR_BLIPS_THIS_FRAME = '0xee1c7ba69bb74b08';
/**
   * GET_BLIP_COORDS
   *
   * @param {number} blip
   * @return {Vector3}
   */
export const GET_BLIP_COORDS = '0x201c319797bda603';
/**
   * GET_BLIP_FROM_ENTITY
   * Returns the Blip handle of given Entity.
   *
   * @param {number} entity
   * @return {number}
   */
export const GET_BLIP_FROM_ENTITY = '0x6d2c41a8bd6d6fd0';
/**
   * GET_MAIN_PLAYER_BLIP_ID
   *
  
   * @return {number}
   */
export const GET_MAIN_PLAYER_BLIP_ID = '0x5cd2889b2b381d45';
/**
   * IS_BLIP_ON_MINIMAP
   *
   * @param {number} blip
   * @return {boolean}
   */
export const IS_BLIP_ON_MINIMAP = '0x46534526b9cd2d17';
/**
   * IS_WAYPOINT_ACTIVE
   *
  
   * @return {boolean}
   */
export const IS_WAYPOINT_ACTIVE = '0x202b1bbfc6ab5ee4';
/**
   * LOCK_MINIMAP_ANGLE
   * Locks the minimap to the specified angle in integer degrees.
   * 
   * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
   *
   * @param {number} angle
   * @return {void}
   */
export const LOCK_MINIMAP_ANGLE = '0x0bfd145ef819fb3a';
/**
   * REMOVE_BLIP
   *
  
   * @return {number}
   */
export const REMOVE_BLIP = '0xf2c3c9da47aaa54a';
/**
   * RESET_MINIMAP_FOW
   *
   * @param {number} hash
   * @return {void}
   */
export const RESET_MINIMAP_FOW = '0xeb3cb3386c775d72';
/**
   * SET_BLIP_COORDS
   *
   * @param {number} blip
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @return {void}
   */
export const SET_BLIP_COORDS = '0x4ff674f5e23d49ce';
/**
   * SET_BLIP_FLASHES
   *
   * @param {number} blip
   * @return {[boolean, number, number]}
   */
export const SET_BLIP_FLASHES = '0x0df2b55f717ddb10';
/**
   * SET_BLIP_FLASH_TIMER
   *
   * @param {number} blip
   * @param {number} blipType
   * @param {number} blipHash
   * @return {void}
   */
export const SET_BLIP_FLASH_TIMER = '0x02ff4cf43b7209d1';
/**
   * SET_BLIP_NAME_FROM_TEXT_FILE
   *
   * @param {number} blip
   * @param {string | number} textLabel
   * @return {void}
   */
export const SET_BLIP_NAME_FROM_TEXT_FILE = '0x0a062d6d7c0b2c2c';
/**
   * SET_BLIP_NAME_TO_PLAYER_NAME
   *
   * @param {number} blip
   * @param {number} player
   * @return {void}
   */
export const SET_BLIP_NAME_TO_PLAYER_NAME = '0x093dd5a31bc2b459';
/**
   * SET_BLIP_ROTATION
   *
   * @param {number} blip
   * @param {number} rotation
   * @return {void}
   */
export const SET_BLIP_ROTATION = '0x6049966a94fbe706';
/**
   * SET_BLIP_SCALE
   * only works for BLIP_ADD_FOR_RADIUS AND BLIP_ADD_FOR_AREA, this native works as a radius not really a scale
   *
   * @param {number} blip
   * @param {number} scale
   * @return {void}
   */
export const SET_BLIP_SCALE = '0xd38744167b2fa257';
/**
   * SET_BLIP_SPRITE
   *
   * @param {number} blip
   * @param {number} hash
   * @param {boolean} p2
   * @return {void}
   */
export const SET_BLIP_SPRITE = '0x74f74d3207ed525c';
/**
   * SET_GPS_CUSTOM_ROUTE_RENDER
   *
   * @param {boolean} p0
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const SET_GPS_CUSTOM_ROUTE_RENDER = '0xf6cef599fc470b33';
/**
   * SET_GPS_FLAGS
   * https://alloc8or.re/rdr3/doc/enums/rage__eGpsFlags.txt
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const SET_GPS_FLAGS = '0x5de61c90ddecfa2d';
/**
   * SET_GPS_MULTI_ROUTE_RENDER
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_GPS_MULTI_ROUTE_RENDER = '0x4426d65e029a4dc0';
/**
   * SET_MINIMAP_FOW_REVEAL_COORDINATE
   * Up to eight coordinates may be revealed per frame
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @return {void}
   */
export const SET_MINIMAP_FOW_REVEAL_COORDINATE = '0x73348402566ecb6e';
/**
   * SET_MINIMAP_FOW_REVEAL_VOLUME
   *
   * @param {number} volume
   * @param {number} p1
   * @return {void}
   */
export const SET_MINIMAP_FOW_REVEAL_VOLUME = '0x63cbbd6ca6f321f9';
/**
   * SET_MINIMAP_HIDE_FOW
   * Reveals the entire minimap (FOW = Fog of War)
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_MINIMAP_HIDE_FOW = '0x4b8f743a4a6d2ff8';
/**
   * SET_RADAR_AS_EXTERIOR_THIS_FRAME
   *
  
   * @return {void}
   */
export const SET_RADAR_AS_EXTERIOR_THIS_FRAME = '0xa8ebbae986fb5457';
/**
   * SET_RADAR_ZOOM
   *
   * @param {number} zoomLevel
   * @return {void}
   */
export const SET_RADAR_ZOOM = '0xcaf6489da2c8dd9e';
/**
   * SET_WAYPOINT_OFF
   *
  
   * @return {void}
   */
export const SET_WAYPOINT_OFF = '0xfa8c41e8020d3439';
/**
   * START_GPS_MULTI_ROUTE
   *
   * @param {number} colorNameHash
   * @param {boolean} onFoot
   * @param {boolean} inVehicle
   * @return {void}
   */
export const START_GPS_MULTI_ROUTE = '0x3d3d15af7bcaaf83';
/**
   * TRIGGER_SONAR_BLIP
   *
   * @param {number} typeHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const TRIGGER_SONAR_BLIP = '0x72dd432f3cdfc0ee';
/**
   * UNLOCK_MINIMAP_ANGLE
   *
  
   * @return {void}
   */
export const UNLOCK_MINIMAP_ANGLE = '0x5373de8e179bc2a0';
/**
   * _CLEAR_BLIP
   * Clear blip data. It must be used before RemoveBlip I'm pretty sure that blips are handled internally with databinding. This function should then allow you to clear blip container and therefore free up memory?.
   *
   * @param {number} blipid
   * @return {any}
   */
export const _CLEAR_BLIP = '0x01b928ca2e198b01';
/**
   * _SET_BLIP_ICON_ON_ENTITY_ACTIVE_PROMPT
   * It adds blip a icon to active prompts like from scenarios or pickups without the need to use lockon
   *
   * @param {number} entity
   * @param {number} blipIcon
   * @return {void}
   */
export const _SET_BLIP_ICON_ON_ENTITY_ACTIVE_PROMPT = '0x1726963e6049db53';
/**
   * _BLIP_DETACH_FROM_ENTITY
   * Not official native name
   * Removes the blip from an entity and makes it static on the map, try it on GetMainPlayerBlipId() for a demonstration
   *
   * @param {number} blip
   * @return {void}
   */
export const _BLIP_DETACH_FROM_ENTITY = '0x250c75eb1728cc0d';
/**
   * _IS_BLIP_ICON_ON_LOCKON_ENTITY_PROMPT
   * checks if the entity lockon prompt contains an icon
   *
   * @param {number} entity
   * @param {number} blipId
   * @return {boolean}
   */
export const _IS_BLIP_ICON_ON_LOCKON_ENTITY_PROMPT = '0x3cb8859f04763c78';
/**
   * _CLEAR_BLIP_ICON_FROM_LOCKON_ENTITY_PROMPT
   * will remove the blip icon from the entity lockon prompt, use 0 for p1
   *
   * @param {number} entity
   * @param {number} p1
   * @return {void}
   */
export const _CLEAR_BLIP_ICON_FROM_LOCKON_ENTITY_PROMPT = '0x44813684f72b563c';
/**
   * _SET_BLIP_ICON_TO_LOCKON_ENTITY_PROMPT
   * will add a blip icon to the entity lockon prompt that you specify
   *
   * @param {number} entity
   * @param {number} blipIcon
   * @return {void}
   */
export const _SET_BLIP_ICON_TO_LOCKON_ENTITY_PROMPT = '0x7563cbca99253d1a';
/**
   * _CLEAR_PAUSEMAP_COORDS
   * Clears the previously set coordinates for the pause map view, removing any specified focal point and radius that were set using `SetPausemapCoordsWithRadius - 0xE0884C184728C75B`
   *
  
   * @return {void}
   */
export const _CLEAR_PAUSEMAP_COORDS = '0x7c9f4cdf402ca82a';
/**
   * _SET_ENTITY_BLIP_ICON_TO_LOCKON_ENTITY_PROMPT
   * adds the entity blip icon to the entity lockon prompt if wrong param will remove the icon if had any
   *
   * @param {number} entity
   * @param {number} blipId
   * @return {void}
   */
export const _SET_ENTITY_BLIP_ICON_TO_LOCKON_ENTITY_PROMPT = '0x97f6f158cc5b5ca2';
/**
   * _REMOVE_BLIP_ICON_FROM_ENTITY_LOCKON_PROMPT
   * 
   * in the decompiles this doesnt seem to ever be executed the param needed needs to be above 0 but its always passed as 0
   *  removes the icon from lockon prompt
   *
   * @param {number} entity
   * @param {number} p1
   * @return {void}
   */
export const _REMOVE_BLIP_ICON_FROM_ENTITY_LOCKON_PROMPT = '0xbb68d4d3ca3de402';
/**
   * _0xD3F58E9316B7FC2A
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xD3F58E9316B7FC2A = '0xd3f58e9316b7fc2a';
/**
   * _GET_WAYPOINT_POSITION
   * Unlike `GET_WAYPOINT_COORDS - 0x29B30D07C3F7873B`, which returns a single value, this native returns the x and y coordinates of the waypoint separately as floats from pointer. To retrieve each coordinate, `Citizen.PointerValueFloat()` must be used with this function.
   *
  
   * @return {[any, number, number]}
   */
export const _GET_WAYPOINT_POSITION = '0xf08e42bfa46bdff8';
/**
   * _IS_GPS_ROUTE_ON_ROAD
   * Checks if the GPS route to the waypoint is navigable along a road. If a route exists but there is no valid road path, this function returns false.
   *
  
   * @return {boolean}
   */
export const _IS_GPS_ROUTE_ON_ROAD = '0xf47a1eb2a538a3a3';
/**
   * _ABANDON_BLIP
   * It's unclear what exactly this does, but I assume it marks the blip as "no longer needed"
   *
   * @param {number} blip
   * @return {void}
   */
export const _ABANDON_BLIP = '0xdeede7c41742e011';
/**
   * _ADD_PROP_TO_MINIMAP
   * list of minimap props: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/minimapObjects
   * variations parameter are the interior locations you see on the map like these bellow
   * variation 0 https://i.imgur.com/jkLhn3Z.png
   * variation 2  https://i.imgur.com/eKV0Tcm.png
   * variation 4 https://i.imgur.com/rjwOgEH.png
   * there are more and you can find them in the decompiles
   *
   * @param {number} minimapProp
   * @param {number} x
   * @param {number} y
   * @param {number} rotation
   * @param {number} variation
   * @return {void}
   */
export const _ADD_PROP_TO_MINIMAP = '0x1392105da88bbffb';
/**
   * _BLIP_ADD_FOR_AREA
   *
   * @param {number} blipHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @param {number} p7
   * @return {number}
   */
export const _BLIP_ADD_FOR_AREA = '0xec174adbcb611ecc';
/**
   * _BLIP_ADD_FOR_STYLE
   *
   * @param {number} styleHash
   * @return {number}
   */
export const _BLIP_ADD_FOR_STYLE = '0x3e593df9c2962ec6';
/**
   * _BLIP_ADD_FOR_VOLUME
   *
   * @param {number} blipHash
   * @param {number} volume
   * @return {number}
   */
export const _BLIP_ADD_FOR_VOLUME = '0xa6ef0c54a3443e70';
/**
   * _BLIP_ADD_STYLE
   *
   * @param {number} blip
   * @param {number} styleHash
   * @return {boolean}
   */
export const _BLIP_ADD_STYLE = '0xbd62d98799a3daf0';
/**
   * _BLIP_SET_STYLE
   * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_styles
   * Removes any existing modifiers and sets the style.
   *
   * @param {number} blip
   * @param {number} styleHash
   * @return {boolean}
   */
export const _BLIP_SET_STYLE = '0xedd964b7984ac291';
/**
   * _DOES_ENTITY_HAVE_BLIP
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _DOES_ENTITY_HAVE_BLIP = '0x9fa00e2fc134a9d0';
/**
   * _FIND_CLOSEST_GPS_POSITION
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {[boolean, Vector3]}
   */
export const _FIND_CLOSEST_GPS_POSITION = '0x3fda2b79aeee351c';
/**
   * _GET_WAYPOINT_COORDS
   *
  
   * @return {Vector3}
   */
export const _GET_WAYPOINT_COORDS = '0x29b30d07c3f7873b';
/**
   * _HIDE_ACTIVE_POINTS_OF_INTEREST
   *
  
   * @return {void}
   */
export const _HIDE_ACTIVE_POINTS_OF_INTEREST = '0xa1b4052c2a3dcc1e';
/**
   * _IS_BLIP_ATTACHED_TO_ANY_ENTITY
   *
   * @param {number} blip
   * @return {boolean}
   */
export const _IS_BLIP_ATTACHED_TO_ANY_ENTITY = '0xe9f676788f8d5e1e';
/**
   * _MAP_DISABLE_REGION_BLIP
   *
   * @param {number} regionHash
   * @return {void}
   */
export const _MAP_DISABLE_REGION_BLIP = '0x6786d7afac3162b3';
/**
   * _MAP_DISCOVERY_SET_ENABLED
   *
   * @param {number} discoveryHash
   * @return {void}
   */
export const _MAP_DISCOVERY_SET_ENABLED = '0xda98246c7a3c2189';
/**
   * _MAP_DISCOVER_REGION
   *
   * @param {number} discoveryHash
   * @return {void}
   */
export const _MAP_DISCOVER_REGION = '0xd8c7162ab2e2af45';
/**
   * _MAP_ENABLE_REGION_BLIP
   * regionHash: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/wanted_regions
   *
   * @param {number} regionHash
   * @param {number} styleHash
   * @return {void}
   */
export const _MAP_ENABLE_REGION_BLIP = '0x563fcb6620523917';
/**
   * _MAP_IS_DISCOVERY_ACTIVE
   *
   * @param {number} discoveryHash
   * @return {boolean}
   */
export const _MAP_IS_DISCOVERY_ACTIVE = '0x3f81ea4275d39d6f';
/**
   * _MAP_IS_REGION_HIGHLIGHTED_WITH_STYLE
   *
   * @param {number} regionHash
   * @param {number} styleHash
   * @return {boolean}
   */
export const _MAP_IS_REGION_HIGHLIGHTED_WITH_STYLE = '0xe38450dbcbc70e3d';
/**
   * _REMOVE_PROP_FROM_MINIMAP
   *
   * @param {number} minimapProp
   * @return {void}
   */
export const _REMOVE_PROP_FROM_MINIMAP = '0xe057fea9a22eb3ee';
/**
   * _REVEAL_MINIMAP_FOW
   *
   * @param {number} hash
   * @return {void}
   */
export const _REVEAL_MINIMAP_FOW = '0xf8096df9b87246e3';
/**
   * _SET_BLIP_NAME
   *
   * @param {number} blip
   * @param {string | number} name
   * @return {void}
   */
export const _SET_BLIP_NAME = '0x9cb1a1623062f402';
/**
   * _SET_FOW_UPDATE_PLAYER_OVERRIDE
   * Used for GUARMA MODE; Enabled: toggle = false, 0; Disabled: toggle = true, 0
   * Hash p1 seems to be unused, always 0
   *
   * @param {boolean} toggle
   * @param {number} p1
   * @return {void}
   */
export const _SET_FOW_UPDATE_PLAYER_OVERRIDE = '0x63e7279d04160477';
/**
   * _SET_MINIMAP_FOW_OVERRIDE_REVEAL_SCALE
   *
   * @param {number} scale
   * @param {number} p1
   * @return {void}
   */
export const _SET_MINIMAP_FOW_OVERRIDE_REVEAL_SCALE = '0xe5a7f70b7c0f3271';
/**
   * _SET_MINIMAP_FOW_SHOULD_UPDATE
   *
   * @param {boolean} toggle
   * @param {number} p1
   * @return {void}
   */
export const _SET_MINIMAP_FOW_SHOULD_UPDATE = '0x632aa10bf7ea53d3';
/**
   * _SET_MINIMAP_ZONE
   * hash can be the hash of "guarma" or "world".
   *
   * @param {number} zone
   * @return {void}
   */
export const _SET_MINIMAP_ZONE = '0xa657ec9dbc6cc900';
/**
   * _SET_PAUSEMAP_COORDS_WITH_RADIUS
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {void}
   */
export const _SET_PAUSEMAP_COORDS_WITH_RADIUS = '0xe0884c184728c75b';
/**
   * _SET_RADAR_CONFIG_TYPE
   * https://github.com/femga/rdr3_discoveries/blob/master/graphics/minimap/radar/radar_configs.lua
   * configHash: -1943724816, 347777538, -117986897, -789269373, -547506804, -1986542417, 2080113112
   * p1: usually 898171178 or 0 in R* scripts (doesn't seems to have any effect)
   *
   * @param {number} configHash
   * @param {number} p1
   * @return {void}
   */
export const _SET_RADAR_CONFIG_TYPE = '0x9c113883487fd53c';
/**
   * _SHOW_ACTIVE_POINTS_OF_INTEREST
   *
  
   * @return {void}
   */
export const _SHOW_ACTIVE_POINTS_OF_INTEREST = '0x3fbb838aea30c1d8';
/**
   * _START_GPS_CUSTOM_ROUTE_FROM_WAYPOINT_RECORDING_ROUTE
   *
   * @param {string | number} waypointRecording
   * @param {number} point
   * @param {number} numPoints
   * @param {number} colorNameHash
   * @param {boolean} p4
   * @param {boolean} p5
   * @return {void}
   */
export const _START_GPS_CUSTOM_ROUTE_FROM_WAYPOINT_RECORDING_ROUTE = '0x6b44f13d888f770d';
/**
   * _TRIGGER_SONAR_BLIP_ON_ENTITY
   *
   * @param {number} typeHash
   * @param {number} entity
   * @return {void}
   */
export const _TRIGGER_SONAR_BLIP_ON_ENTITY = '0x0c7a2289a5c4d7c9';
/**
   * _0x012027C28F421F46
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x012027C28F421F46 = '0x012027c28f421f46';
/**
   * _0x0876326238914A3F
   *
  
   * @return {void}
   */
export const _0x0876326238914A3F = '0x0876326238914a3f';
/**
   * _0x10342CC82E8356E9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x10342CC82E8356E9 = '0x10342cc82e8356e9';
/**
   * _0x15E90B6A993017AA
   *
  
   * @return {any}
   */
export const _0x15E90B6A993017AA = '0x15e90b6a993017aa';
/**
   * _0x18A0D48DF9211C07
   *
  
   * @return {void}
   */
export const _0x18A0D48DF9211C07 = '0x18a0d48df9211c07';
/**
   * _0x32A7C216344D623B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x32A7C216344D623B = '0x32a7c216344d623b';
/**
   * _0x39654E1F68B78287
   *
  
   * @return {any}
   */
export const _0x39654E1F68B78287 = '0x39654e1f68b78287';
/**
   * _0x398066F893149856
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x398066F893149856 = '0x398066f893149856';
/**
   * _0x3AE451860F03CA8A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x3AE451860F03CA8A = '0x3ae451860f03ca8a';
/**
   * _0x3B31732FADE5BAF3
   *
  
   * @return {any}
   */
export const _0x3B31732FADE5BAF3 = '0x3b31732fade5baf3';
/**
   * _0x3DF7EE3A76185108
   *
  
   * @return {void}
   */
export const _0x3DF7EE3A76185108 = '0x3df7ee3a76185108';
/**
   * _0x3EECAADAB0D9FE29
   *
  
   * @return {any}
   */
export const _0x3EECAADAB0D9FE29 = '0x3eecaadab0d9fe29';
/**
   * _0x3F4FD4BED07AB8C4
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x3F4FD4BED07AB8C4 = '0x3f4fd4bed07ab8c4';
/**
   * _0x3FFE60DD8A936551
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x3FFE60DD8A936551 = '0x3ffe60dd8a936551';
/**
   * _0x455ECCA0715C507F
   *
  
   * @return {void}
   */
export const _0x455ECCA0715C507F = '0x455ecca0715c507f';
/**
   * _0x578907F59BA01B6D
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x578907F59BA01B6D = '0x578907f59ba01b6d';
/**
   * _0x580F34C726387226
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x580F34C726387226 = '0x580f34c726387226';
/**
   * _0x58521E6DCDE97D74
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x58521E6DCDE97D74 = '0x58521e6dcde97d74';
/**
   * _0x644439B5387EE57E
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x644439B5387EE57E = '0x644439b5387ee57e';
/**
   * _0x6480723D3BE535B6
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6480723D3BE535B6 = '0x6480723d3be535b6';
/**
   * _0x910B088E51A511AC
   *
  
   * @return {any}
   */
export const _0x910B088E51A511AC = '0x910b088e51a511ac';
/**
   * _0x9DD95B405AB4983E
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x9DD95B405AB4983E = '0x9dd95b405ab4983e';
/**
   * _0xA2DB3C6270C122E3
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xA2DB3C6270C122E3 = '0xa2db3c6270c122e3';
/**
   * _0xBEA7D3CB47E1479C
   *
  
   * @return {any}
   */
export const _0xBEA7D3CB47E1479C = '0xbea7d3cb47e1479c';
/**
   * _0xD39D32EB3B52DD83
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xD39D32EB3B52DD83 = '0xd39d32eb3b52dd83';
/**
   * _0xDF728C5AE137FC14
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xDF728C5AE137FC14 = '0xdf728c5ae137fc14';
/**
   * _0xE1F365C4C8F259D8
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xE1F365C4C8F259D8 = '0xe1f365c4c8f259d8';
/**
   * _0xE53A308AC35877A8
   *
  
   * @return {any}
   */
export const _0xE53A308AC35877A8 = '0xe53a308ac35877a8';
/**
   * _0xEC819D612038EF4B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {any}
   */
export const _0xEC819D612038EF4B = '0xec819d612038ef4b';
/**
   * _0xF6DE98516FD3AC9B
   *
  
   * @return {void}
   */
export const _0xF6DE98516FD3AC9B = '0xf6de98516fd3ac9b';
/**
   * _DOMINOES_BUY_IN
   * Hardcoded to return zero/false.
   *
   * @param {any} p0
   * @return {any}
   */
export const _DOMINOES_BUY_IN = '0x399e6cd12fc8ca89';
/**
   * _DOMINOES_PLACE_DOMINO
   * Hardcoded to return zero/false.
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _DOMINOES_PLACE_DOMINO = '0xb79a29b33bf29ba5';
/**
   * _DOMINOES_REQUEST_VALID_PLACEMENTS
   * Hardcoded to return zero/false.
   *
   * @param {any} p0
   * @return {any}
   */
export const _DOMINOES_REQUEST_VALID_PLACEMENTS = '0xe26aee7e67d9e21d';
/**
   * _MINIGAME_GET_NEXT_EVENT
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _MINIGAME_GET_NEXT_EVENT = '0xdf728c5ae137fc13';
/**
   * _MINIGAME_GET_NEXT_EVENT_TYPE
   *
  
   * @return {any}
   */
export const _MINIGAME_GET_NEXT_EVENT_TYPE = '0x578907f59ba01b6c';
/**
   * _MINIGAME_IS_CONNECTED_TO_SERVER
   *
   * @param {any} p0
   * @return {any}
   */
export const _MINIGAME_IS_CONNECTED_TO_SERVER = '0x2a0c4736ac5af0ce';
/**
   * _MINIGAME_IS_REQUEST_PENDING
   *
   * @param {any} p0
   * @return {any}
   */
export const _MINIGAME_IS_REQUEST_PENDING = '0x9105a4a2556fa937';
/**
   * _MINIGAME_IS_SEAT_OCCUPIED
   *
   * @param {any} p0
   * @return {boolean}
   */
export const _MINIGAME_IS_SEAT_OCCUPIED = '0x8593a8cb0ed2c3b4';
/**
   * _MINIGAME_LEAVE_TABLE
   *
   * @param {any} p0
   * @return {any}
   */
export const _MINIGAME_LEAVE_TABLE = '0xf5446e47941e654c';
/**
   * _MINIGAME_POP_NEXT_EVENT
   *
  
   * @return {void}
   */
export const _MINIGAME_POP_NEXT_EVENT = '0x833e03baebadc4b0';
/**
   * _MINIGAME_REQUEST_SEAT_AT_TABLE
   *
   * @param {DataView} data
   * @return {boolean}
   */
export const _MINIGAME_REQUEST_SEAT_AT_TABLE = '0xf6ac6085d8d6c004';
/**
   * _POKER_BUY_IN
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _POKER_BUY_IN = '0xb4d610ea5a1fde74';
/**
   * _POKER_CALL
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _POKER_CALL = '0x8ded681b161ebd78';
/**
   * _POKER_CHECK
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _POKER_CHECK = '0x49a045628d9b1b86';
/**
   * _POKER_FOLD
   *
   * @param {any} p0
   * @return {any}
   */
export const _POKER_FOLD = '0x3dfab7d9bb45b5be';
/**
   * _POKER_GET_GAME_SETTINGS_FOR_ID
   *
   * @param {any} p0
   * @return {any}
   */
export const _POKER_GET_GAME_SETTINGS_FOR_ID = '0x2d20e12e1990d584';
/**
   * _POKER_RAISE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _POKER_RAISE = '0xeccf45a79a17bb96';
/**
   * _POKER_REVEAL
   *
   * @param {any} p0
   * @return {any}
   */
export const _POKER_REVEAL = '0x2f2131db0a8b02dc';
/**
   * ABSF
   *
   * @param {number} value
   * @return {number}
   */
export const ABSF = '0x134549b388167cbf';
/**
   * ABSI
   *
   * @param {number} value
   * @return {number}
   */
export const ABSI = '0x0c214d5b8a38c828';
/**
   * ACOS
   *
   * @param {number} p0
   * @return {number}
   */
export const ACOS = '0x586690f0176dc575';
/**
   * ACTION_MANAGER_ENABLE_ACTION
   * Appears to remove stealth kill action from memory (?)
   *
   * @param {number} hash
   * @param {boolean} enable
   * @return {void}
   */
export const ACTION_MANAGER_ENABLE_ACTION = '0x7acf124c12a2b045';
/**
   * ACTION_MANAGER_IS_ACTION_ENABLED
   *
   * @param {number} hash
   * @return {boolean}
   */
export const ACTION_MANAGER_IS_ACTION_ENABLED = '0xfd0759658268fd8e';
/**
   * ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE
   * nullsub, doesn't do anything
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @return {void}
   */
export const ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE = '0x91d657230bc208d2';
/**
   * ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE_ADD
   * nullsub, doesn't do anything
   *
   * @param {string | number} p0
   * @return {void}
   */
export const ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE_ADD = '0x1694a053dfb61a34';
/**
   * ACTIVITY_FEED_ADD_SUBSTRING_TO_CAPTION
   * nullsub, doesn't do anything
   *
   * @param {string | number} p0
   * @return {void}
   */
export const ACTIVITY_FEED_ADD_SUBSTRING_TO_CAPTION = '0x9935f76407c32539';
/**
   * ACTIVITY_FEED_CREATE
   * nullsub, doesn't do anything
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @return {void}
   */
export const ACTIVITY_FEED_CREATE = '0xcc7fc854b956a128';
/**
   * ACTIVITY_FEED_POST
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const ACTIVITY_FEED_POST = '0xb16fc7b364d86585';
/**
   * ADD_POP_MULTIPLIER_AREA
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} pedDensity
   * @param {number} trafficDensity
   * @param {boolean} p8
   * @param {boolean} p9
   * @return {number}
   */
export const ADD_POP_MULTIPLIER_AREA = '0x5ebda1a3b8cb5ef7';
/**
   * ADD_TACTICAL_NAV_MESH_POINT
   * Params: p3 is 0 in R* Script utopia2
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @return {void}
   */
export const ADD_TACTICAL_NAV_MESH_POINT = '0xe4ee55e63fa9af45';
/**
   * ARE_STRINGS_EQUAL
   *
   * @param {string | number} string1
   * @param {string | number} string2
   * @return {boolean}
   */
export const ARE_STRINGS_EQUAL = '0xd3852f22ab713a1f';
/**
   * ASIN
   *
   * @param {number} p0
   * @return {number}
   */
export const ASIN = '0x6e3c15d296c15583';
/**
   * ATAN
   *
   * @param {number} p0
   * @return {number}
   */
export const ATAN = '0x503054ded0b78027';
/**
   * ATAN2
   *
   * @param {number} p0
   * @param {number} p1
   * @return {number}
   */
export const ATAN2 = '0x965b220a066e3f07';
/**
   * BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION
   * dispatchService: see ENABLE_DISPATCH_SERVICE
   *
   * @param {number} dispatchService
   * @param {boolean} toggle
   * @return {void}
   */
export const BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION = '0x66947e61a44de2c6';
/**
   * CANCEL_ONSCREEN_KEYBOARD
   * Old name: _CANCEL_ONSCREEN_KEYBOARD
   *
  
   * @return {void}
   */
export const CANCEL_ONSCREEN_KEYBOARD = '0x58a39be597ce99cd';
/**
   * CLEAR_ANGLED_AREA_OF_VEHICLES
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const CLEAR_ANGLED_AREA_OF_VEHICLES = '0xa4d83115c1e02f8a';
/**
   * CLEAR_AREA
   * Possible flag names:
   * ALL_BASE = 0,
   * PROJECTILES = 1,
   * BROADCAST = 524288,
   * AMBIENT_POPULATION = 1048576
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} flag
   * @return {void}
   */
export const CLEAR_AREA = '0x3b882a96ea77d5b1';
/**
   * CLEAR_BIT
   *
   * @param {number} offset
   * @return {number}
   */
export const CLEAR_BIT = '0x7d1d4a3602b6ad4e';
/**
   * CLEAR_OVERRIDE_WEATHER
   *
  
   * @return {void}
   */
export const CLEAR_OVERRIDE_WEATHER = '0x80a398f16ffe3cc3';
/**
   * CLEAR_TACTICAL_NAV_MESH_POINTS
   *
  
   * @return {void}
   */
export const CLEAR_TACTICAL_NAV_MESH_POINTS = '0xd93b6516c6878267';
/**
   * CLEAR_WEATHER_TYPE_PERSIST
   *
  
   * @return {void}
   */
export const CLEAR_WEATHER_TYPE_PERSIST = '0xd85dfe5c131e4ae9';
/**
   * COMPARE_STRINGS
   *
   * @param {string | number} str1
   * @param {string | number} str2
   * @param {boolean} matchCase
   * @param {number} maxLength
   * @return {number}
   */
export const COMPARE_STRINGS = '0xbfbb74a15efc149b';
/**
   * COPY_SCRIPT_STRUCT
   * Old name: _COPY_MEMORY
   *
   * @param {DataView} dst
   * @param {DataView} src
   * @param {number} size
   * @return {void}
   */
export const COPY_SCRIPT_STRUCT = '0xf7ac7dc0dee7c9be';
/**
   * CREATE_INCIDENT
   * dispatchService: see ENABLE_DISPATCH_SERVICE
   *
   * @param {number} dispatchService
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} numUnits
   * @param {number} radius
   * @param {any} p7
   * @param {any} p8
   * @return {[boolean, number]}
   */
export const CREATE_INCIDENT = '0x3f892caf67444ae7';
/**
   * DELETE_INCIDENT
   * Delete an incident with a given id.
   *
   * @param {number} incidentId
   * @return {void}
   */
export const DELETE_INCIDENT = '0x5cfd0f0d6aae0aee';
/**
   * DISABLE_LOOTING_COMPOSITE_LOOTABLE_THIS_FRAME
   * disables prompt eat 
   *
   * @param {number} compositeId
   * @param {boolean} disable
   * @return {void}
   */
export const DISABLE_LOOTING_COMPOSITE_LOOTABLE_THIS_FRAME = '0x40d72189f46d2e15';
/**
   * DISPLAY_ONSCREEN_KEYBOARD
   * enum eOnscreenKeyboardTextType
   * {
   *   KTEXTTYPE_INVALID = -1,
   *   KTEXTTYPE_DEFAULT,
   *   KTEXTTYPE_EMAIL,
   *   KTEXTTYPE_PASSWORD,
   *   KTEXTTYPE_NUMERIC,
   *   KTEXTTYPE_ALPHABET,
   *   KTEXTTYPE_GAMERTAG,
   *   KTEXTTYPE_FILENAME,
   *   KTEXTTYPE_COUNT
   * };
   *
   * @param {number} textType
   * @param {string | number} windowTitle
   * @param {string | number} p2
   * @param {string | number} defaultText
   * @param {string | number} defaultConcat1
   * @param {string | number} defaultConcat2
   * @param {string | number} defaultConcat3
   * @param {number} maxInputLength
   * @return {void}
   */
export const DISPLAY_ONSCREEN_KEYBOARD = '0x044131118d8db3cd';
/**
   * DOES_POP_MULTIPLIER_AREA_EXIST
   *
   * @param {number} id
   * @return {boolean}
   */
export const DOES_POP_MULTIPLIER_AREA_EXIST = '0x03ba619c81a646b3';
/**
   * ENABLE_DISPATCH_SERVICE
   * enum DispatchType
   * {
   *   DT_Invalid,
   *   DT_PoliceAutomobile,
   *   DT_PoliceHelicopter,
   *   DT_FireDepartment,
   *   DT_SwatAutomobile,
   *   DT_AmbulanceDepartment,
   *   DT_PoliceRiders,
   *   DT_PoliceVehicleRequest,
   *   DT_PoliceRoadBlock,
   *   DT_PoliceAutomobileWaitPulledOver,
   *   DT_PoliceAutomobileWaitCruising,
   *   DT_Gangs,
   *   DT_SwatHelicopter,
   *   DT_PoliceBoat,
   *   DT_ArmyVehicle,
   *   DT_OnFoot,
   *   DT_PoliceDogs
   * };
   *
   * @param {number} dispatchService
   * @param {boolean} toggle
   * @return {void}
   */
export const ENABLE_DISPATCH_SERVICE = '0x50e52637ef70ef77';
/**
   * FIRE_SINGLE_BULLET
   *
   * @param {DataView} args
   * @return {void}
   */
export const FIRE_SINGLE_BULLET = '0xcbc9a21f6a2a679c';
/**
   * FORCE_LIGHTNING_FLASH
   * creates single lightning+thunder at random position
   *
  
   * @return {void}
   */
export const FORCE_LIGHTNING_FLASH = '0x369db5b2510fa080';
/**
   * GAME_FRAMEWORK_MANAGER_INIT
   *
   * @param {number} transitionMode
   * @return {boolean}
   */
export const GAME_FRAMEWORK_MANAGER_INIT = '0x4cabe596d632e4b0';
/**
   * GET_ANGLE_BETWEEN_2D_VECTORS
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} x2
   * @param {number} y2
   * @return {number}
   */
export const GET_ANGLE_BETWEEN_2D_VECTORS = '0xd0dfe1c486097bbb';
/**
   * GET_BENCHMARK_ITERATIONS
   * Returns value of the '-benchmarkIterations' command line option.
   * 
   * Old name: _GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE
   *
  
   * @return {number}
   */
export const GET_BENCHMARK_ITERATIONS = '0x22fc52cf470cc98d';
/**
   * GET_BENCHMARK_PASS
   * Returns value of the '-benchmarkPass' command line option.
   * 
   * Old name: _GET_BENCHMARK_PASS_FROM_COMMAND_LINE
   *
  
   * @return {number}
   */
export const GET_BENCHMARK_PASS = '0x9297dacf3a2cdff7';
/**
   * GET_BITS_IN_RANGE
   *
   * @param {number} value
   * @param {number} rangeStart
   * @param {number} rangeEnd
   * @return {number}
   */
export const GET_BITS_IN_RANGE = '0x68e1352af48f905d';
/**
   * GET_CLOSEST_POINT_ON_LINE
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {boolean} p9
   * @return {Vector3}
   */
export const GET_CLOSEST_POINT_ON_LINE = '0x83acc65d9acec5ef';
/**
   * GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} distance
   * @param {boolean} p4
   * @param {boolean} mustBeOwnedByThisPed
   * @return {[boolean, Vector3]}
   */
export const GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE = '0xd73c960a681052df';
/**
   * GET_CURR_WEATHER_STATE
   * Params: percentWeather2: 0f - 0.75f in R* Scripts
   * 
   * Old name: _GET_WEATHER_TYPE_TRANSITION
   *
  
   * @return {[number, number, number]}
   */
export const GET_CURR_WEATHER_STATE = '0x0ac679b2342f14f2';
/**
   * GET_DISTANCE_BETWEEN_COORDS
   * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
   * 
   * Consider using this faster native instead: BUILTIN::VDIST - DVIST always takes in consideration the 3D coordinates.
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {boolean} useZ
   * @return {number}
   */
export const GET_DISTANCE_BETWEEN_COORDS = '0x0be7f4e3cdbafb28';
/**
   * GET_FRAME_COUNT
   *
  
   * @return {number}
   */
export const GET_FRAME_COUNT = '0x77dfa958fcf100c1';
/**
   * GET_FRAME_TIME
   *
  
   * @return {number}
   */
export const GET_FRAME_TIME = '0x5e72022914ce3c38';
/**
   * GET_GAME_TIMER
   *
  
   * @return {number}
   */
export const GET_GAME_TIMER = '0x4f67e8eca7d3f667';
/**
   * GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {[boolean, number, Vector3]}
   */
export const GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD = '0x2a29ca9a6319e6ab';
/**
   * GET_GROUND_Z_FOR_3D_COORD
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} p4
   * @return {[boolean, number]}
   */
export const GET_GROUND_Z_FOR_3D_COORD = '0x24fa4267bb8d2431';
/**
   * GET_HASH_KEY
   * Computes a hash for the given string. It is hashed using Jenkins' One-at-a-Time hash algorithm (https://en.wikipedia.org/wiki/Jenkins_hash_function)
   * Note: this implementation is case-insensitive.
   *
   * @param {string | number} string
   * @return {number}
   */
export const GET_HASH_KEY = '0xfd340785adf8cfb7';
/**
   * GET_HEADING_FROM_VECTOR_2D
   * dx = x1 - x2
   * dy = y1 - y2
   *
   * @param {number} dx
   * @param {number} dy
   * @return {number}
   */
export const GET_HEADING_FROM_VECTOR_2D = '0x38d5202ff9271c62';
/**
   * GET_LINE_PLANE_INTERSECTION
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @param {number} p10
   * @param {number} p11
   * @return {[boolean, number]}
   */
export const GET_LINE_PLANE_INTERSECTION = '0xab6a04cec428258b';
/**
   * GET_MISSION_FLAG
   *
  
   * @return {boolean}
   */
export const GET_MISSION_FLAG = '0xb15cd1cf58771de1';
/**
   * GET_MODEL_DIMENSIONS
   *
   * @param {number} modelHash
   * @return {[Vector3, Vector3]}
   */
export const GET_MODEL_DIMENSIONS = '0xdcb8ddd5d054a7e7';
/**
   * GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE
   *
   * @param {number} stackSize
   * @return {number}
   */
export const GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE = '0x40dc2907a9697ef7';
/**
   * GET_NUMBER_OF_MICROSECONDS_SINCE_LAST_CALL
   *
  
   * @return {number}
   */
export const GET_NUMBER_OF_MICROSECONDS_SINCE_LAST_CALL = '0xb0ce5e5ed8bb3581';
/**
   * GET_ONSCREEN_KEYBOARD_RESULT
   * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
   *
  
   * @return {string | number}
   */
export const GET_ONSCREEN_KEYBOARD_RESULT = '0xafb4cf58a4a292b1';
/**
   * GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} distance
   * @param {boolean} p5
   * @param {boolean} mustBeOwnedByThisPed
   * @return {[boolean, Vector3, number]}
   */
export const GET_PROJECTILE_OF_PROJECTILE_TYPE_WITHIN_DISTANCE = '0x9578986a6105a6ad';
/**
   * GET_RAIN_LEVEL
   *
  
   * @return {number}
   */
export const GET_RAIN_LEVEL = '0x931b5f4cc130224b';
/**
   * GET_RANDOM_EVENT_FLAG
   *
  
   * @return {boolean}
   */
export const GET_RANDOM_EVENT_FLAG = '0x924d54e5698ae3e0';
/**
   * GET_RANDOM_FLOAT_IN_RANGE
   *
   * @param {number} startRange
   * @param {number} endRange
   * @return {number}
   */
export const GET_RANDOM_FLOAT_IN_RANGE = '0xe29f927a961f8aaa';
/**
   * GET_RANDOM_INT_IN_RANGE
   *
   * @param {number} startRange
   * @param {number} endRange
   * @return {number}
   */
export const GET_RANDOM_INT_IN_RANGE = '0xd53343aa4fb7dd28';
/**
   * GET_REAL_WORLD_TIME
   * Returns GET_GAME_TIMER() / 1000
   * Only used in rcm_pearson1.ysc
   *
  
   * @return {number}
   */
export const GET_REAL_WORLD_TIME = '0x2e036f0480b8bf02';
/**
   * GET_SCRIPT_TIME_WITHIN_FRAME_IN_MICROSECONDS
   *
  
   * @return {number}
   */
export const GET_SCRIPT_TIME_WITHIN_FRAME_IN_MICROSECONDS = '0x63219768c586667c';
/**
   * GET_SNOW_LEVEL
   *
  
   * @return {number}
   */
export const GET_SNOW_LEVEL = '0x1e5d727041be1709';
/**
   * GET_SYSTEM_TIME
   *
  
   * @return {number}
   */
export const GET_SYSTEM_TIME = '0xbe7f225417e35a7c';
/**
   * GET_SYSTEM_TIME_STEP
   * Old name: _GET_BENCHMARK_TIME
   *
  
   * @return {number}
   */
export const GET_SYSTEM_TIME_STEP = '0x3f3172feae3afe1c';
/**
   * GET_WIND_DIRECTION
   *
  
   * @return {Vector3}
   */
export const GET_WIND_DIRECTION = '0xf703e82f3fe14a5f';
/**
   * GET_WIND_SPEED
   *
  
   * @return {number}
   */
export const GET_WIND_SPEED = '0xffb7e74e041150a4';
/**
   * HAS_BULLET_IMPACTED_IN_AREA
   * p3 - possibly radius?
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @param {boolean} p4
   * @param {boolean} p5
   * @return {boolean}
   */
export const HAS_BULLET_IMPACTED_IN_AREA = '0xc153e5bccf411814';
/**
   * HAS_BULLET_IMPACTED_IN_BOX
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {boolean} p6
   * @param {boolean} p7
   * @return {boolean}
   */
export const HAS_BULLET_IMPACTED_IN_BOX = '0x3b6a4c05fb2b33ac';
/**
   * IGNORE_NEXT_RESTART
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const IGNORE_NEXT_RESTART = '0x6c9ff40ff1b69f8f';
/**
   * INFORM_CODE_OF_CONTENT_ID_OF_CURRENT_UGC_MISSION
   *
   * @param {string | number} p0
   * @return {void}
   */
export const INFORM_CODE_OF_CONTENT_ID_OF_CURRENT_UGC_MISSION = '0x708df841b8f27aa2';
/**
   * IS_BIT_SET
   *
   * @param {number} address
   * @param {number} offset
   * @return {boolean}
   */
export const IS_BIT_SET = '0x4ed6cfdfe8d4131a';
/**
   * IS_BULLET_IN_ANGLED_AREA
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {boolean} p7
   * @return {boolean}
   */
export const IS_BULLET_IN_ANGLED_AREA = '0x9d09d8493747cf02';
/**
   * IS_BULLET_IN_AREA
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {boolean} p4
   * @return {boolean}
   */
export const IS_BULLET_IN_AREA = '0xc652fd308772d79e';
/**
   * IS_BULLET_IN_BOX
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {boolean} p6
   * @return {boolean}
   */
export const IS_BULLET_IN_BOX = '0xc128137c52152741';
/**
   * IS_DURANGO_VERSION
   * Hardcoded to return false.
   * Checks for XBOXONE Game Build.
   *
  
   * @return {boolean}
   */
export const IS_DURANGO_VERSION = '0xd1ccc2a2639d325f';
/**
   * IS_GAME_SESSION_STATE_MACHINE_IDLE
   *
  
   * @return {boolean}
   */
export const IS_GAME_SESSION_STATE_MACHINE_IDLE = '0xf9e7dbb39080640b';
/**
   * IS_INCIDENT_VALID
   *
   * @param {number} incidentId
   * @return {boolean}
   */
export const IS_INCIDENT_VALID = '0x39f2b1bad412246a';
/**
   * IS_MAG_DEMO_1_ACTIVE
   * magdemo = magazine demo, i. e. for magazines such as IGN, pre play phases to prepare articles etc. - example 2012 builds for V
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const IS_MAG_DEMO_1_ACTIVE = '0x5fc9357c26daefce';
/**
   * IS_MINIGAME_IN_PROGRESS
   *
  
   * @return {boolean}
   */
export const IS_MINIGAME_IN_PROGRESS = '0xf4d8bcd052e7ea1b';
/**
   * IS_ORBIS_VERSION
   * Hardcoded to return false.
   * Checks for PS4 Game Build.
   *
  
   * @return {boolean}
   */
export const IS_ORBIS_VERSION = '0x88cfae250d3e0c71';
/**
   * IS_PC_VERSION
   * Hardcoded to return true.
   *
  
   * @return {boolean}
   */
export const IS_PC_VERSION = '0xb0fb6cfaa5a1c833';
/**
   * IS_POSITION_OCCUPIED
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} range
   * @param {boolean} p4
   * @param {boolean} p5
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {any} p9
   * @param {boolean} p10
   * @return {boolean}
   */
export const IS_POSITION_OCCUPIED = '0x825ca3ed43831015';
/**
   * IS_PROJECTILE_IN_AREA
   * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
   * 
   * ownedByPlayer = only projectiles fired by the player will be detected.
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {boolean} ownedByPlayer
   * @return {boolean}
   */
export const IS_PROJECTILE_IN_AREA = '0x05b0061efdfc8941';
/**
   * IS_PROJECTILE_TYPE_IN_ANGLED_AREA
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {any} p7
   * @param {boolean} p8
   * @return {boolean}
   */
export const IS_PROJECTILE_TYPE_IN_ANGLED_AREA = '0x928431f4133cd3d4';
/**
   * IS_PROJECTILE_TYPE_IN_AREA
   * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a rectangle.
   *
   * @param {number} xMin
   * @param {number} yMin
   * @param {number} zMin
   * @param {number} xMax
   * @param {number} yMax
   * @param {number} zMax
   * @param {number} weaponType
   * @param {boolean} isPlayer
   * @return {boolean}
   */
export const IS_PROJECTILE_TYPE_IN_AREA = '0x04965fb9e14235c7';
/**
   * IS_PROJECTILE_TYPE_WITHIN_DISTANCE
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {any} p3
   * @param {number} p4
   * @param {boolean} p5
   * @return {boolean}
   */
export const IS_PROJECTILE_TYPE_WITHIN_DISTANCE = '0xf51c9baad9ed64c4';
/**
   * IS_STADIA_VERSION
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const IS_STADIA_VERSION = '0x268ab8420a9e4ed7';
/**
   * IS_STRING_NULL
   *
   * @param {string | number} string
   * @return {boolean}
   */
export const IS_STRING_NULL = '0x602102324604d96b';
/**
   * IS_STRING_NULL_OR_EMPTY
   *
   * @param {string | number} string
   * @return {boolean}
   */
export const IS_STRING_NULL_OR_EMPTY = '0x2cf12f9acf18f048';
/**
   * IS_STRING_NULL_OR_EMPTY_OR_SPACES
   * Returns true if the entire string consists only of space characters.
   *
   * @param {string | number} string
   * @return {boolean}
   */
export const IS_STRING_NULL_OR_EMPTY_OR_SPACES = '0x375f5870a7b8bec1';
/**
   * NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME
   *
  
   * @return {void}
   */
export const NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME = '0x3d0eac6385dd6100';
/**
   * NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS
   *
   * @param {number} fontBitField
   * @return {void}
   */
export const NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS = '0x5cb71eaa1429a358';
/**
   * OVERRIDE_SAVE_HOUSE
   *
   * @param {boolean} override
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {boolean} isAutosave
   * @return {[boolean, Vector3, number]}
   */
export const OVERRIDE_SAVE_HOUSE = '0xb2c69e11a37b5af0';
/**
   * PAUSE_DEATH_ARREST_RESTART
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const PAUSE_DEATH_ARREST_RESTART = '0x66ab6b6c7e72f393';
/**
   * POPULATE_NOW
   * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
   *
  
   * @return {void}
   */
export const POPULATE_NOW = '0xea6dc3a8add2005f';
/**
   * REGISTER_INTERACTION_LOCKON_PROMPT
   * p3 is usually the same value of radius
   * p8 determines whether the ILO prompt is a lock on prompt with RMB
   *
   * @param {number} entity
   * @param {string | number} text
   * @param {number} radius
   * @param {number} p3
   * @param {number} flag
   * @param {number} p5
   * @param {number} p6
   * @param {number} prompt
   * @param {boolean} p8
   * @param {number} p9
   * @return {boolean}
   */
export const REGISTER_INTERACTION_LOCKON_PROMPT = '0x870708a6e147a9ad';
/**
   * REMOVE_DISPATCH_SPAWN_BLOCKING_AREA
   *
   * @param {any} p0
   * @return {void}
   */
export const REMOVE_DISPATCH_SPAWN_BLOCKING_AREA = '0x49f751f6868ddc5b';
/**
   * REMOVE_POP_MULTIPLIER_AREA
   *
   * @param {number} id
   * @param {boolean} p1
   * @return {void}
   */
export const REMOVE_POP_MULTIPLIER_AREA = '0x88cb484364efb37a';
/**
   * RESET_DISPATCH_IDEAL_SPAWN_DISTANCE
   *
  
   * @return {void}
   */
export const RESET_DISPATCH_IDEAL_SPAWN_DISTANCE = '0xc7817264bc4b6377';
/**
   * RESET_END_USER_BENCHMARK
   * Begins with RESET_*. Next character in the name is either D or E.
   * 
   * Old name: _RESET_BENCHMARK_RECORDING
   *
  
   * @return {void}
   */
export const RESET_END_USER_BENCHMARK = '0xecbabd0307fb216f';
/**
   * RESET_SCRIPT_TIME_WITHIN_FRAME
   *
  
   * @return {void}
   */
export const RESET_SCRIPT_TIME_WITHIN_FRAME = '0x1411a7cbc3a6eb7b';
/**
   * RESET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN
   *
  
   * @return {void}
   */
export const RESET_WANTED_RESPONSE_NUM_PEDS_TO_SPAWN = '0xef42f56f69877125';
/**
   * SAVE_END_USER_BENCHMARK
   * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\Red Dead Redemption 2\Benchmarks and submits some metrics.
   * 
   * Old name: _SAVE_BENCHMARK_RECORDING
   *
  
   * @return {void}
   */
export const SAVE_END_USER_BENCHMARK = '0xf4743e2ecc02b3da';
/**
   * SCRIPT_RACE_GET_PLAYER_SPLIT_TIME
   *
   * @param {any} p0
   * @param {DataView} p1
   * @param {DataView} p2
   * @return {boolean}
   */
export const SCRIPT_RACE_GET_PLAYER_SPLIT_TIME = '0x769e848c66e3c2bb';
/**
   * SCRIPT_RACE_INIT
   *
   * @param {number} numCheckpoints
   * @param {number} numLaps
   * @param {number} numPlayers
   * @param {any} p3
   * @return {void}
   */
export const SCRIPT_RACE_INIT = '0x8ae059f47158417e';
/**
   * SCRIPT_RACE_PLAYER_HIT_CHECKPOINT
   *
   * @param {number} part
   * @param {number} checkpoint
   * @param {number} lap
   * @param {number} time
   * @return {void}
   */
export const SCRIPT_RACE_PLAYER_HIT_CHECKPOINT = '0xba62b4d80fa66bd6';
/**
   * SCRIPT_RACE_SHUTDOWN
   *
  
   * @return {void}
   */
export const SCRIPT_RACE_SHUTDOWN = '0x334ce0da4faf330c';
/**
   * SET_BIT
   *
   * @param {number} offset
   * @return {number}
   */
export const SET_BIT = '0xf73fbe4845c43b5b';
/**
   * SET_BITS_IN_RANGE
   *
   * @param {number} rangeStart
   * @param {number} rangeEnd
   * @param {number} p3
   * @return {number}
   */
export const SET_BITS_IN_RANGE = '0x324dc1cef57f31e6';
/**
   * SET_CHEAT_ACTIVE
   * Cheats are GTA IV cheats:
   * 
   * 0 = unknown
   * 1 = unknown (same as 0)
   * 2 = Max Health and Armor
   * 3 = Raise Wanted Level
   * 4 = Lower Wanted Level
   * 5 = unknown (does nothing)
   * 6 = Change Weather
   * 7 = Spawn Annihilator
   * 8 = Spawn NRG 900
   * 9 = Spawn FBI
   * 10 = Spawn Jetmax
   * 11 = Spawn Comet
   * 12 = Spawn Turismo
   * 13 = Spawn Cognoscenti
   * 14 = Spawn Super GT
   * 15 = Spawn Sanchez
   * 
   * Initially used in Max Payne 3, that's why we know the name.
   *
   * @param {number} cheatId
   * @return {void}
   */
export const SET_CHEAT_ACTIVE = '0xd4958e8cf0de0dd0';
/**
   * SET_CREDITS_ACTIVE
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_CREDITS_ACTIVE = '0xd37becf862da726f';
/**
   * SET_CURR_WEATHER_STATE
   * Params: BOOL p3 is always true
   * 
   * Old name: _SET_WEATHER_TYPE_TRANSITION
   *
   * @param {number} weatherType1
   * @param {number} weatherType2
   * @param {number} percentWeather2
   * @param {boolean} enabled
   * @return {void}
   */
export const SET_CURR_WEATHER_STATE = '0xfa3e3ca8a1de6d5d';
/**
   * SET_DISPATCH_IDEAL_SPAWN_DISTANCE
   *
   * @param {number} fIdealSpawnDistance
   * @return {void}
   */
export const SET_DISPATCH_IDEAL_SPAWN_DISTANCE = '0xeab6823b82fbd283';
/**
   * SET_FADE_IN_AFTER_DEATH_ARREST
   * Sets whether the game should fade in after the player dies or is arrested.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_FADE_IN_AFTER_DEATH_ARREST = '0xdf3b5846de5904af';
/**
   * SET_FADE_IN_AFTER_LOAD
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_FADE_IN_AFTER_LOAD = '0xac806c4cab973517';
/**
   * SET_GAME_PAUSED
   * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_GAME_PAUSED = '0xfaec088d28b1de4a';
/**
   * SET_MISSION_FLAG
   * If true, the player can't save the game.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_MISSION_FLAG = '0x36694b456be80d0a';
/**
   * SET_PED_DECOMPOSED
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_DECOMPOSED = '0x674b90be1115846d';
/**
   * SET_RAIN
   * Old name: _SET_RAIN_LEVEL
   *
   * @param {number} intensity
   * @return {void}
   */
export const SET_RAIN = '0x193dfc0526830fd6';
/**
   * SET_RANDOM_EVENT_FLAG
   * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
   * Does nothing if the mission flag is set.
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_RANDOM_EVENT_FLAG = '0xb1adccc4150c6473';
/**
   * SET_RANDOM_SEED
   *
   * @param {number} seed
   * @return {void}
   */
export const SET_RANDOM_SEED = '0x5cd7a49104afcb6b';
/**
   * SET_RANDOM_WEATHER_TYPE
   *
   * @param {boolean} p0
   * @param {boolean} p1
   * @return {void}
   */
export const SET_RANDOM_WEATHER_TYPE = '0x6e5a7fbeecab3c72';
/**
   * SET_SUPER_JUMP_THIS_FRAME
   *
   * @param {number} player
   * @return {void}
   */
export const SET_SUPER_JUMP_THIS_FRAME = '0xb3e9be963f10c445';
/**
   * SET_THIS_SCRIPT_CAN_BE_PAUSED
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_THIS_SCRIPT_CAN_BE_PAUSED = '0x3215376e79f6ea18';
/**
   * SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT = '0x8abd939c2e5d00ed';
/**
   * SET_TIME_SCALE
   * Maximum value is 1.0f
   * At a value of 0.0f the game will still run at a minimum time scale.
   *
   * @param {number} timeScale
   * @return {void}
   */
export const SET_TIME_SCALE = '0x9682af6050854856';
/**
   * SET_WEATHER_TYPE
   * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_types.lua
   *
   * @param {number} weatherType
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} transition
   * @param {number} transitionTime
   * @param {boolean} p5
   * @return {void}
   */
export const SET_WEATHER_TYPE = '0x59174f1afe095b5a';
/**
   * SET_WIND_DIRECTION
   *
   * @param {number} direction
   * @return {void}
   */
export const SET_WIND_DIRECTION = '0xb56c4f5f57a45600';
/**
   * SET_WIND_SPEED
   *
   * @param {number} speed
   * @return {void}
   */
export const SET_WIND_SPEED = '0xd00c2d82dc04a99f';
/**
   * SHOOT_SINGLE_BULLET_BETWEEN_COORDS
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} damage
   * @param {boolean} p7
   * @param {number} weaponHash
   * @param {number} ownerPed
   * @param {boolean} isAudible
   * @param {boolean} isInvisible
   * @param {number} speed
   * @param {boolean} p13
   * @return {void}
   */
export const SHOOT_SINGLE_BULLET_BETWEEN_COORDS = '0x867654cbc7606f2c';
/**
   * SHOULD_USE_METRIC_MEASUREMENTS
   * Returns whether the game's measurement system is set to metric.
   *
  
   * @return {boolean}
   */
export const SHOULD_USE_METRIC_MEASUREMENTS = '0x4fb556acefa93098';
/**
   * START_END_USER_BENCHMARK
   * Begins with START_*. Next character in the name is either D or E.
   * 
   * Old name: _START_BENCHMARK_RECORDING
   *
  
   * @return {void}
   */
export const START_END_USER_BENCHMARK = '0x29d1f6df864a094e';
/**
   * STOP_CURRENT_LOADING_PROGRESS_TIMER
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const STOP_CURRENT_LOADING_PROGRESS_TIMER = '0xa565fac215cbc77d';
/**
   * STOP_END_USER_BENCHMARK
   * Begins with STOP_*. Next character in the name is either D or E.
   * 
   * Old name: _STOP_BENCHMARK_RECORDING
   *
  
   * @return {void}
   */
export const STOP_END_USER_BENCHMARK = '0xb89aec71aff2b599';
/**
   * STRING_TO_INT
   * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
   *
   * @param {string | number} string
   * @return {[boolean, number]}
   */
export const STRING_TO_INT = '0xf2dd2298b3af23e2';
/**
   * TAN
   *
   * @param {number} p0
   * @return {number}
   */
export const TAN = '0x8c13db96497b7abf';
/**
   * UI_STARTED_END_USER_BENCHMARK
   * Hardcoded to return false.
   * 
   * Old name: _UI_IS_SINGLEPLAYER_PAUSE_MENU_ACTIVE
   *
  
   * @return {boolean}
   */
export const UI_STARTED_END_USER_BENCHMARK = '0x4ffa0386a6216113';
/**
   * UNREGISTER_INTERACTION_LOCKON_PROMPT
   *
   * @param {number} entity
   * @return {boolean}
   */
export const UNREGISTER_INTERACTION_LOCKON_PROMPT = '0xe98d55c5983f2509';
/**
   * UPDATE_ONSCREEN_KEYBOARD
   * Returns the current status of the onscreen keyboard, and updates the output.
   * 
   * Status Codes:
   * 
   * 0 - User still editing
   * 1 - User has finished editing
   * 2 - User has canceled editing
   * 3 - Keyboard isn't active
   *
  
   * @return {number}
   */
export const UPDATE_ONSCREEN_KEYBOARD = '0x37df360f235a3893';
/**
   * VAR_STRING
   * Note: The first bit in 'flags' must not be set.
   * It is also required to pass at least one extra argument (this must be a text label string or hash).
   * When passing a hash, flags should be 0.
   *
   * @param {number} flags
   * @param {string | number} stringType
   * @param {string} value
   * @return {string | number}
   */
export const VAR_STRING = '0xfa925ac00eb830b9';
/**
   * WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE
   * Only used in smuggler2 script
   *
   * @param {number} maxAmplitude
   * @return {void}
   */
export const WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE = '0xf06c5b66de20b2b8';
/**
   * WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE
   * Only used in smuggler2 script
   *
   * @param {number} amplitude
   * @return {void}
   */
export const WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE = '0x55123d5a7d9d3c42';
/**
   * _0x0358B8A41916C613
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0x0358B8A41916C613 = '0x0358b8a41916c613';
/**
   * _0x0730E518486DEEC3
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0730E518486DEEC3 = '0x0730e518486deec3';
/**
   * _DISABLE_COMPOSITE_PICK_PROMPT_THIS_FRAME
   * disables composite Pick prompt
   *
   * @param {number} compositeId
   * @param {boolean} disable
   * @return {void}
   */
export const _DISABLE_COMPOSITE_PICK_PROMPT_THIS_FRAME = '0x082c043c7afc3747';
/**
   * _0x0A487CC74A517FB5
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0A487CC74A517FB5 = '0x0a487cc74a517fb5';
/**
   * _0x0D0AE5081F88CFE1
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0x0D0AE5081F88CFE1 = '0x0d0ae5081f88cfe1';
/**
   * _0x1096603B519C905F
   * _SET_MISSION_NAME_*(FOR_ACTIVITY?/MINIGAME?)
   *
   * @param {string | number} name
   * @return {void}
   */
export const _0x1096603B519C905F = '0x1096603b519c905f';
/**
   * _0x154340E87D8CC178
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x154340E87D8CC178 = '0x154340e87d8cc178';
/**
   * _0x183672FE838A661B
   *
   * @param {DataView} data
   * @return {void}
   */
export const _0x183672FE838A661B = '0x183672fe838a661b';
/**
   * _0x243CEDE8F916B994
   *
  
   * @return {void}
   */
export const _0x243CEDE8F916B994 = '0x243cede8f916b994';
/**
   * _0x2916B30DC6C41179
   *
   * @param {number} weatherType
   * @return {void}
   */
export const _0x2916B30DC6C41179 = '0x2916b30dc6c41179';
/**
   * _0x33982467B1E349EF
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {any}
   */
export const _0x33982467B1E349EF = '0x33982467b1e349ef';
/**
   * _0x35165C658077CD0B
   *
  
   * @return {any}
   */
export const _0x35165C658077CD0B = '0x35165c658077cd0b';
/**
   * _0x38C0C9CAE1544500
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x38C0C9CAE1544500 = '0x38c0c9cae1544500';
/**
   * _0x38C2BF94D15F464D
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x38C2BF94D15F464D = '0x38c2bf94d15f464d';
/**
   * _0x3A87FDA8F1B6CDFB
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x3A87FDA8F1B6CDFB = '0x3a87fda8f1b6cdfb';
/**
   * _0x3C3C7B1B5EC08764
   *
  
   * @return {void}
   */
export const _0x3C3C7B1B5EC08764 = '0x3c3c7b1b5ec08764';
/**
   * _0x4647842FE8F31C1E
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x4647842FE8F31C1E = '0x4647842fe8f31c1e';
/**
   * _0x49C44FE78A135A1D
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x49C44FE78A135A1D = '0x49c44fe78a135a1d';
/**
   * _0x49F3241C28EBBFBC
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x49F3241C28EBBFBC = '0x49f3241c28ebbfbc';
/**
   * _0x4B0501A468B749F8
   *
  
   * @return {void}
   */
export const _0x4B0501A468B749F8 = '0x4b0501a468b749f8';
/**
   * _0x4B101DBCC9482F2D
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x4B101DBCC9482F2D = '0x4b101dbcc9482f2d';
/**
   * _0x4D5C9CC7E7E23E09
   *
  
   * @return {void}
   */
export const _0x4D5C9CC7E7E23E09 = '0x4d5c9cc7e7e23e09';
/**
   * _0x553D67295DDD2309
   * UPDATE_PICKUP_COLLECTIBLE: set Eagle Eye fountain
   * _J*, _K*, _L*
   *
   * @param {number} entity
   * @return {void}
   */
export const _0x553D67295DDD2309 = '0x553d67295ddd2309';
/**
   * _0x5801BE2DF2AF07EC
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x5801BE2DF2AF07EC = '0x5801be2df2af07ec';
/**
   * _0x5B4A8121A47D844D
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x5B4A8121A47D844D = '0x5b4a8121a47d844d';
/**
   * _0x627B68D9CE6EE8DE
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x627B68D9CE6EE8DE = '0x627b68d9ce6ee8de';
/**
   * _0x68319452C5064ABA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x68319452C5064ABA = '0x68319452c5064aba';
/**
   * _0x6BCF7B5CD338281A
   * _SET_DISPATCH_*, unused
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x6BCF7B5CD338281A = '0x6bcf7b5cd338281a';
/**
   * _0x6BED40493A1AFDB8
   *
   * @param {DataView} p0
   * @param {number} p1
   * @return {void}
   */
export const _0x6BED40493A1AFDB8 = '0x6bed40493a1afdb8';
/**
   * _0x6C7B68D3CE60E8DE
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x6C7B68D3CE60E8DE = '0x6c7b68d3ce60e8de';
/**
   * _0x6F02B5E50511721E
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x6F02B5E50511721E = '0x6f02b5e50511721e';
/**
   * _0x745808BB01CEC6B9
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x745808BB01CEC6B9 = '0x745808bb01cec6b9';
/**
   * _0x74ACA66484CEBAF0
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x74ACA66484CEBAF0 = '0x74aca66484cebaf0';
/**
   * _0x7A76104CC2CC69E8
   *
   * @param {number} entity
   * @param {number} p1
   * @param {number} p2
   * @return {any}
   */
export const _0x7A76104CC2CC69E8 = '0x7a76104cc2cc69e8';
/**
   * _0x7CF96F1250EF3221
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x7CF96F1250EF3221 = '0x7cf96f1250ef3221';
/**
   * _0x7FA58CED69405F9A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x7FA58CED69405F9A = '0x7fa58ced69405f9a';
/**
   * _0x8314FC2013ECE2DA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x8314FC2013ECE2DA = '0x8314fc2013ece2da';
/**
   * _0x8BB99B85444544D9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x8BB99B85444544D9 = '0x8bb99b85444544d9';
/**
   * _0x8C0F6A3D7236DEEB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8C0F6A3D7236DEEB = '0x8c0f6a3d7236deeb';
/**
   * _0x8DB104CCEBCD58C5
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x8DB104CCEBCD58C5 = '0x8db104ccebcd58c5';
/**
   * _STRING_SPLIT_AND_COUNT_SEGMENTS
   * Not officially named 
   * , Counts the number of segments in a string that are separated by specified delimiter characters, ignoring consecutive delimiters.
   *
   * @param {string | number} inputString
   * @param {string | number} delimiters
   * @return {number}
   */
export const _STRING_SPLIT_AND_COUNT_SEGMENTS = '0x94e8ca3dee952789';
/**
   * _0x94FCADCF9F0C368E
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x94FCADCF9F0C368E = '0x94fcadcf9f0c368e';
/**
   * _0x96282005C5C6801F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x96282005C5C6801F = '0x96282005c5c6801f';
/**
   * _0x970339EFA4FDE518
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x970339EFA4FDE518 = '0x970339efa4fde518';
/**
   * _0x9A252AA23D7098F2
   *
  
   * @return {void}
   */
export const _0x9A252AA23D7098F2 = '0x9a252aa23d7098f2';
/**
   * _0x9BF2C0C568C61641
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9BF2C0C568C61641 = '0x9bf2c0c568c61641';
/**
   * _0xA08111B053D84B4D
   * _CLEAR*
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xA08111B053D84B4D = '0xa08111b053d84b4d';
/**
   * _0xA3A8926951471C82
   *
  
   * @return {void}
   */
export const _0xA3A8926951471C82 = '0xa3a8926951471c82';
/**
   * _0xA9342743B634A462
   * nullsub, doesn't do anything
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xA9342743B634A462 = '0xa9342743b634a462';
/**
   * _0xAB26DEEE120FD3FD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xAB26DEEE120FD3FD = '0xab26deee120fd3fd';
/**
   * _0xAD44856A1CD29635
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xAD44856A1CD29635 = '0xad44856a1cd29635';
/**
   * _0xAF3A84C7DE6A1DC5
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xAF3A84C7DE6A1DC5 = '0xaf3a84c7de6a1dc5';
/**
   * _0xAF530E56505D1BD6
   * Hardcoded to return one/true.
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xAF530E56505D1BD6 = '0xaf530e56505d1bd6';
/**
   * _0xB08C4FA25BC29DB9
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xB08C4FA25BC29DB9 = '0xb08c4fa25bc29db9';
/**
   * _0xB1F6665AA54DCD5C
   *
   * @param {number} p0
   * @return {any}
   */
export const _0xB1F6665AA54DCD5C = '0xb1f6665aa54dcd5c';
/**
   * _0xB711EB4BC8D06013
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const _0xB711EB4BC8D06013 = '0xb711eb4bc8d06013';
/**
   * _0xBB282CF5D2333FB8
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xBB282CF5D2333FB8 = '0xbb282cf5d2333fb8';
/**
   * _0xBBE5B63EFFB08E68
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {any}
   */
export const _0xBBE5B63EFFB08E68 = '0xbbe5b63effb08e68';
/**
   * _0xCC1BAF72D571DB8D
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xCC1BAF72D571DB8D = '0xcc1baf72d571db8d';
/**
   * _0xCC3EDC5614B03F61
   *
   * @param {number} p0
   * @return {void}
   */
export const _0xCC3EDC5614B03F61 = '0xcc3edc5614b03f61';
/**
   * _0xD3F943B88F55376A
   *
   * @param {number} weatherType
   * @return {void}
   */
export const _0xD3F943B88F55376A = '0xd3f943b88f55376a';
/**
   * _0xDA4D8EB04E8E2928
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xDA4D8EB04E8E2928 = '0xda4d8eb04e8e2928';
/**
   * _0xDBDA48EC456ED908
   *
  
   * @return {void}
   */
export const _0xDBDA48EC456ED908 = '0xdbda48ec456ed908';
/**
   * _0xDC057B86FC157031
   * Hardcoded to return one/true.
   *
  
   * @return {any}
   */
export const _0xDC057B86FC157031 = '0xdc057b86fc157031';
/**
   * _0xDC416CA762BC4F43
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {any}
   */
export const _0xDC416CA762BC4F43 = '0xdc416ca762bc4f43';
/**
   * _0xDE2C3B74D2B3705C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xDE2C3B74D2B3705C = '0xde2c3b74d2b3705c';
/**
   * _0xEB946B9E579729AD
   * Not implemented.
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const _0xEB946B9E579729AD = '0xeb946b9e579729ad';
/**
   * _0xF569E33FB72ED28E
   *
  
   * @return {void}
   */
export const _0xF569E33FB72ED28E = '0xf569e33fb72ed28e';
/**
   * _0xF63FA29D4A9ACA86
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xF63FA29D4A9ACA86 = '0xf63fa29d4a9aca86';
/**
   * _0xF650DCF5D6F312C1
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xF650DCF5D6F312C1 = '0xf650dcf5d6f312c1';
/**
   * _0xF81C53561D15F330
   *
  
   * @return {string | number}
   */
export const _0xF81C53561D15F330 = '0xf81c53561d15f330';
/**
   * _0xFC6ECB9170145ECE
   *
  
   * @return {void}
   */
export const _0xFC6ECB9170145ECE = '0xfc6ecb9170145ece';
/**
   * _0xFF252E2BAFB7330F
   * nullsub, doesn't do anything
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xFF252E2BAFB7330F = '0xff252e2bafb7330f';
/**
   * _ADD_DISPATCH_SPAWN_BLOCKING_AREA
   *
   * @param {number} volume
   * @return {any}
   */
export const _ADD_DISPATCH_SPAWN_BLOCKING_AREA = '0xa2d5a26208421426';
/**
   * _ADD_POP_MULTIPLIER_VOLUME
   * Only used in script function PROCESS_ZONE_CREATION
   * Returns Pop multiplier volume ID
   *
   * @param {number} volume
   * @param {number} pedDensity
   * @param {number} vehicleDensity
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {number}
   */
export const _ADD_POP_MULTIPLIER_VOLUME = '0x3233c4ec0514c7ec';
/**
   * _CLEAR_ALL_BIT_FLAGS
   *
   * @param {DataView} bitFlags
   * @return {void}
   */
export const _CLEAR_ALL_BIT_FLAGS = '0xd2d74f89df844a50';
/**
   * _CLEAR_BIT_FLAG
   *
   * @param {DataView} bitFlags
   * @param {number} flag
   * @return {void}
   */
export const _CLEAR_BIT_FLAG = '0xb909149f2bb5f6da';
/**
   * _CLEAR_VOLUME_AREA
   *
   * @param {number} volume
   * @param {number} flag
   * @return {void}
   */
export const _CLEAR_VOLUME_AREA = '0x2fcd528a397e5c88';
/**
   * _CLEAR_WEATHER_TYPE_PERSIST_OVERTIME
   *
   * @param {number} milliseconds
   * @return {void}
   */
export const _CLEAR_WEATHER_TYPE_PERSIST_OVERTIME = '0xce7690c0a0d1c36d';
/**
   * _CLEAR_WEATHER_VARIATION
   *
   * @param {string | number} weatherType
   * @param {boolean} p1
   * @return {void}
   */
export const _CLEAR_WEATHER_VARIATION = '0x0e71c80fa4ec8147';
/**
   * _COUNT_BIT_FLAGS
   *
   * @param {DataView} bitFlags
   * @return {number}
   */
export const _COUNT_BIT_FLAGS = '0xe704838f36f93b7b';
/**
   * _CREATE_AI_MEMORY
   * aiMemoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/_CREATE_AI_MEMORY
   *
   * @param {DataView} args
   * @param {number} aiMemoryType
   * @return {void}
   */
export const _CREATE_AI_MEMORY = '0x88bc5f4aef77fc4e';
/**
   * _CREATE_COLOR_STRING
   * Returns a formatted string (0x%x)
   *
   * @param {number} rgb
   * @return {string | number}
   */
export const _CREATE_COLOR_STRING = '0xbcc2cfadea1aea6c';
/**
   * _CREATE_INCIDENT_WITH_ENTITIES
   * dispatchService: see ENABLE_DISPATCH_SERVICE
   * 
   * The entities must be added to itemSet.
   *
   * @param {number} dispatchService
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} itemSet
   * @param {number} radius
   * @return {[boolean, number]}
   */
export const _CREATE_INCIDENT_WITH_ENTITIES = '0xab3d3f45436db1d8';
/**
   * _DOES_ITEM_HAVE_VALID_BASE
   *
   * @param {number} item
   * @return {boolean}
   */
export const _DOES_ITEM_HAVE_VALID_BASE = '0xbdc6e364c9c78178';
/**
   * _DOES_POP_MULTIPLIER_AREA_EXIST_FOR_VOLUME
   *
   * @param {number} volume
   * @return {boolean}
   */
export const _DOES_POP_MULTIPLIER_AREA_EXIST_FOR_VOLUME = '0x39d6dace323a20b6';
/**
   * _DOES_STRING_EXIST_IN_STRING
   *
   * @param {string | number} string1
   * @param {string | number} string2
   * @return {boolean}
   */
export const _DOES_STRING_EXIST_IN_STRING = '0x9382d5d43d2aa6ff';
/**
   * _FORCE_LIGHTNING_FLASH_AT_COORDS
   * p3 is always -1.0f in the scripts
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @return {void}
   */
export const _FORCE_LIGHTNING_FLASH_AT_COORDS = '0x67943537d179597c';
/**
   * _GAME_FRAMEWORK_MANAGER_GET_MODE
   *
  
   * @return {number}
   */
export const _GAME_FRAMEWORK_MANAGER_GET_MODE = '0xfaed234c7f53abeb';
/**
   * _GAME_FRAMEWORK_MANAGER_SHUTDOWN
   *
  
   * @return {void}
   */
export const _GAME_FRAMEWORK_MANAGER_SHUTDOWN = '0xaff2fd8add927585';
/**
   * _GET_AI_PED_DOES_HAVE_EVENT_MEMORY
   *
   * @param {DataView} args
   * @param {number} p1
   * @return {boolean}
   */
export const _GET_AI_PED_DOES_HAVE_EVENT_MEMORY = '0xfdf38e2b711bf78e';
/**
   * _GET_EASING_CURVE_VALUE
   * https://easings.net/
   * 
   * enum class eEasingCurveType
   * {
   *   TYPE_LINEAR,
   *   TYPE_QUADRATIC_IN,
   *   TYPE_QUADRATIC_OUT,
   *   TYPE_QUADRATIC_INOUT,
   *   TYPE_CUBIC_IN,
   *   TYPE_CUBIC_OUT,
   *   TYPE_CUBIC_INOUT,
   *   TYPE_QUARTIC_IN,
   *   TYPE_QUARTIC_OUT,
   *   TYPE_QUARTIC_INOUT,
   *   TYPE_QUINTIC_IN,
   *   TYPE_QUINTIC_OUT,
   *   TYPE_QUINTIC_INOUT,
   *   TYPE_EXPONENTIAL_IN,
   *   TYPE_EXPONENTIAL_OUT,
   *   TYPE_EXPONENTIAL_INOUT,
   *   TYPE_SINE_IN,
   *   TYPE_SINE_OUT,
   *   TYPE_SINE_INOUT,
   *   TYPE_CIRCULAR_IN,
   *   TYPE_CIRCULAR_OUT,
   *   TYPE_CIRCULAR_INOUT,
   *   TYPE_BOUNCE_IN,
   *   TYPE_BOUNCE_OUT,
   *   TYPE_BOUNCE_INOUT,
   *   TYPE_CUSTOM
   * };
   *
   * @param {number} t
   * @param {number} b
   * @param {number} d
   * @param {number} easingCurveType
   * @return {number}
   */
export const _GET_EASING_CURVE_VALUE = '0xef50e344a8f93784';
/**
   * _GET_ENTITY_FROM_ITEM
   *
   * @param {number} item
   * @return {number}
   */
export const _GET_ENTITY_FROM_ITEM = '0xee04c0afd4efaf0e';
/**
   * _GET_FORCED_WEATHER
   * Returns the weather type that has been set by a script
   *
  
   * @return {[number, number]}
   */
export const _GET_FORCED_WEATHER = '0xdd560abef5d3784c';
/**
   * _GET_GAME_TIMER_NON_SCALED_CLIPPED
   * Returns rage::fwTimer::sm_nonScaledClippedTime
   *
  
   * @return {number}
   */
export const _GET_GAME_TIMER_NON_SCALED_CLIPPED = '0x483b8c542103ad72';
/**
   * _GET_ITEM_TYPE
   * 0 = invalid
   * 1 = CEntity
   * 2 = rage::volBase
   * 3 = rage::volSphere
   * 4 = rage::volBox
   * 5 = rage::volAggregate
   * 6 = rage::volCylinder
   * 7 = CScriptedCoverPoint
   * 8 = rage::ptfxScriptInfo
   * 9 = CPed
   * 10 = CVehicle
   * 11 = CObject
   * 12 = CItemSet
   * 13 = CPersistentCharacter
   *
   * @param {number} handle
   * @return {number}
   */
export const _GET_ITEM_TYPE = '0xdc8d2ff478df9553';
/**
   * _GET_LOOTING_EVENT_HAS_FIRED
   * Event names in the scripts: MGBegin, MGEnd, ReadyForCut
   *
   * @param {number} ped
   * @param {string | number} eventName
   * @return {boolean}
   */
export const _GET_LOOTING_EVENT_HAS_FIRED = '0xf9b91c5129eabc08';
/**
   * _GET_MAX_NUM_INSTRUCTIONS
   *
  
   * @return {number}
   */
export const _GET_MAX_NUM_INSTRUCTIONS = '0xc43cd2668b204419';
/**
   * _GET_NEXT_WEATHER_TYPE_HASH_NAME
   *
  
   * @return {number}
   */
export const _GET_NEXT_WEATHER_TYPE_HASH_NAME = '0x51021d36f62aaa83';
/**
   * _GET_NUMBER_OF_INSTRUCTIONS
   *
  
   * @return {number}
   */
export const _GET_NUMBER_OF_INSTRUCTIONS = '0x72904d3d62af5839';
/**
   * _GET_OBJECT_FROM_INDEXED_ITEM
   *
   * @param {number} item
   * @return {number}
   */
export const _GET_OBJECT_FROM_INDEXED_ITEM = '0x18013392501ce5dc';
/**
   * _GET_PED_FROM_INDEXED_ITEM
   *
   * @param {number} item
   * @return {number}
   */
export const _GET_PED_FROM_INDEXED_ITEM = '0x3ffb15534067dcd4';
/**
   * _GET_PREV_WEATHER_TYPE_HASH_NAME
   *
  
   * @return {number}
   */
export const _GET_PREV_WEATHER_TYPE_HASH_NAME = '0x4beb42aebca732e9';
/**
   * _GET_RANDOM_WEATHER_TYPE
   *
  
   * @return {number}
   */
export const _GET_RANDOM_WEATHER_TYPE = '0x1359c181bc625503';
/**
   * _GET_RANDOM_WEATHER_TYPE_INDEX
   *
  
   * @return {number}
   */
export const _GET_RANDOM_WEATHER_TYPE_INDEX = '0x7f4ce164d9a11dfe';
/**
   * _GET_STATUS_OF_SAVEGAME_OPERATION
   * Only 0 and 1 are valid for p0, higher values causes the native to return 2.
   *
   * @param {number} p0
   * @return {number}
   */
export const _GET_STATUS_OF_SAVEGAME_OPERATION = '0x1b065a2bf7953815';
/**
   * _GET_STRING_FROM_BOOL
   *
   * @param {boolean} value
   * @return {string | number}
   */
export const _GET_STRING_FROM_BOOL = '0xf216f74101968db0';
/**
   * _GET_STRING_FROM_FLOAT
   *
   * @param {number} value
   * @param {number} digits
   * @return {string | number}
   */
export const _GET_STRING_FROM_FLOAT = '0x2b6846401d68e563';
/**
   * _GET_STRING_FROM_VECTOR
   * Returns a string in the following format: <<%.4f,%.4f,%.4f>>
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {string | number}
   */
export const _GET_STRING_FROM_VECTOR = '0x6c4dbf553885f9eb';
/**
   * _GET_TEMPERATURE_AT_COORDS
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const _GET_TEMPERATURE_AT_COORDS = '0xb98b78c3768af6e0';
/**
   * _GET_VEHICLE_FROM_INDEXED_ITEM
   *
   * @param {number} item
   * @return {number}
   */
export const _GET_VEHICLE_FROM_INDEXED_ITEM = '0xe578c8ae173719b3';
/**
   * _GET_VOLUME_FROM_INDEXED_ITEM
   *
   * @param {number} item
   * @return {number}
   */
export const _GET_VOLUME_FROM_INDEXED_ITEM = '0xf18af483df70bbde';
/**
   * _INT_TO_STRING
   * Note: the buffer should be exactly 32 bytes long
   *
   * @param {number} value
   * @param {string | number} format
   * @param {string | number} buffer
   * @return {void}
   */
export const _INT_TO_STRING = '0xcf11c0ceb40c401b';
/**
   * _IS_ANY_BIT_FLAG_SET
   *
   * @param {DataView} bitFlags
   * @return {boolean}
   */
export const _IS_ANY_BIT_FLAG_SET = '0x80e9c316ef84dd81';
/**
   * _IS_BASE_A_COVER_POINT
   *
   * @param {number} handle
   * @return {boolean}
   */
export const _IS_BASE_A_COVER_POINT = '0xfec1d4b5c82c176f';
/**
   * _IS_BASE_A_PERSISTENT_CHARACTER
   *
   * @param {number} handle
   * @return {boolean}
   */
export const _IS_BASE_A_PERSISTENT_CHARACTER = '0x716f17f8a0419f95';
/**
   * _IS_BIT_FLAG_SET
   *
   * @param {DataView} bitFlags
   * @param {number} flag
   * @return {boolean}
   */
export const _IS_BIT_FLAG_SET = '0x8f4f050054005c27';
/**
   * _IS_GLOBAL_BLOCK_VALID
   *
   * @param {number} index
   * @return {boolean}
   */
export const _IS_GLOBAL_BLOCK_VALID = '0xacb7e1418a8b6e32';
/**
   * _IS_MISSION_CREATOR_ACTIVE
   *
  
   * @return {boolean}
   */
export const _IS_MISSION_CREATOR_ACTIVE = '0xf236c84c6adfcb2f';
/**
   * _IS_PED_DECOMPOSED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_DECOMPOSED = '0x5170dda6d63acaaa';
/**
   * _IS_PLAYER_OWNING_STANDALONE_SP
   *
  
   * @return {boolean}
   */
export const _IS_PLAYER_OWNING_STANDALONE_SP = '0x36040772df5e59a0';
/**
   * _LOOT_TABLES_GET_INFO
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {number} lootTableKey
   * @param {DataView} p4
   * @param {any} p5
   * @return {void}
   */
export const _LOOT_TABLES_GET_INFO = '0x48e4d50f87a96aa5';
/**
   * _QUEUE_SAVEGAME_OPERATION
   * p0 must be < 2
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _QUEUE_SAVEGAME_OPERATION = '0x279b0696da4657eb';
/**
   * _READ_INT_AS_FLOAT
   * Reads the passed value as floating point value and returns it.
   * Example: _READ_INT_AS_FLOAT(0x3F800000) returns 1.0f because 0x3F800000 is the hexadecimal representation of 1.0f.
   *
   * @param {number} value
   * @return {number}
   */
export const _READ_INT_AS_FLOAT = '0xd2c9126410dfa1b2';
/**
   * _REMOVE_POP_MULTIPLIER_AREA_FOR_VOLUME
   *
   * @param {number} volume
   * @param {number} p1
   * @return {void}
   */
export const _REMOVE_POP_MULTIPLIER_AREA_FOR_VOLUME = '0xbd090f5b1db82189';
/**
   * _RESET_DISPATCH_MAX_SPAWN_DISTANCE
   *
  
   * @return {void}
   */
export const _RESET_DISPATCH_MAX_SPAWN_DISTANCE = '0x54ec7b6bc72bad69';
/**
   * _RESET_DISPATCH_MIN_SPAWN_DISTANCE
   *
  
   * @return {void}
   */
export const _RESET_DISPATCH_MIN_SPAWN_DISTANCE = '0x96498d922d8d0d0a';
/**
   * _SET_AI_MEMORY_REACTIONS_ENABLED
   * Used in CAIConditionAmbientAIMemoryReactionsEnabled
   *
   * @param {boolean} enabled
   * @return {void}
   */
export const _SET_AI_MEMORY_REACTIONS_ENABLED = '0x6ac4af46a6b8dfb2';
/**
   * _SET_BIT_FLAG
   * Similar to SET_BIT but specifically designed for large (>32 flags) bit flag sets.
   * The flags are stored in an int array where each int has the ability to hold 32 flags.
   * Flags 0-31 would be stored in the first int, flags 32-63 in the second int, etc.
   *
   * @param {DataView} bitFlags
   * @param {number} flag
   * @return {void}
   */
export const _SET_BIT_FLAG = '0xe84aac1b22a73e99';
/**
   * _SET_DISPATCH_MAX_SPAWN_DISTANCE
   *
   * @param {number} maxSpawnDistance
   * @return {void}
   */
export const _SET_DISPATCH_MAX_SPAWN_DISTANCE = '0x89314fb3463e28de';
/**
   * _SET_DISPATCH_MIN_SPAWN_DISTANCE
   *
   * @param {number} minSpawnDistance
   * @return {void}
   */
export const _SET_DISPATCH_MIN_SPAWN_DISTANCE = '0x27a1b170aa8af84c';
/**
   * _SET_GAME_LOGIC_PAUSED
   * Note: this native was added in build 1232.56
   *
  
   * @return {void}
   */
export const _SET_GAME_LOGIC_PAUSED = '0x550f05cffbd63c8c';
/**
   * _SET_GLOBAL_BLOCK_IS_LOADED
   *
   * @param {number} index
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_GLOBAL_BLOCK_IS_LOADED = '0xe97240065406cb80';
/**
   * _SET_INCIDENT_UNK
   *
   * @param {number} incidentId
   * @return {void}
   */
export const _SET_INCIDENT_UNK = '0x9617b6e5f6537b63';
/**
   * _SET_LOOT_PELT_SATCHEL_ITEM
   *
   * @param {number} ped
   * @param {any} item
   * @return {void}
   */
export const _SET_LOOT_PELT_SATCHEL_ITEM = '0x9b47971234169990';
/**
   * _SET_OVERRIDE_WEATHER
   *
   * @param {number} weatherType
   * @return {void}
   */
export const _SET_OVERRIDE_WEATHER = '0xbe83cae8ed77a94f';
/**
   * _SET_SNOW_LEVEL
   *
   * @param {number} level
   * @return {void}
   */
export const _SET_SNOW_LEVEL = '0xf6bee7e80ec5ca40';
/**
   * _SET_WEATHER_TYPE_2
   *
   * @param {number} weatherType
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {boolean} p4
   * @return {void}
   */
export const _SET_WEATHER_TYPE_2 = '0x2c6a07af9aedabd8';
/**
   * _SET_WEATHER_TYPE_FROZEN
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_WEATHER_TYPE_FROZEN = '0xd74acdf7db8114af';
/**
   * _SET_WEATHER_VARIATION
   * https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_variations.lua
   *
   * @param {string | number} weatherType
   * @param {string | number} variation
   * @return {void}
   */
export const _SET_WEATHER_VARIATION = '0x3373779baf7caf48';
/**
   * _SHOULD_USE_24_HOUR_CLOCK
   *
  
   * @return {boolean}
   */
export const _SHOULD_USE_24_HOUR_CLOCK = '0x0177cf20345f44dd';
/**
   * _SHOULD_USE_METRIC_MEASUREMENTS_2
   * Same as SHOULD_USE_METRIC_MEASUREMENTS
   *
  
   * @return {boolean}
   */
export const _SHOULD_USE_METRIC_MEASUREMENTS_2 = '0x58bcdc75ba52110a';
/**
   * _SHOULD_USE_METRIC_TEMPERATURE
   *
  
   * @return {boolean}
   */
export const _SHOULD_USE_METRIC_TEMPERATURE = '0xff4aaf3275baab4f';
/**
   * _SHOULD_USE_METRIC_WEIGHT
   *
  
   * @return {boolean}
   */
export const _SHOULD_USE_METRIC_WEIGHT = '0x8f24157fedb85ea2';
/**
   * MISSIONDATA_GET_CATAGORY
   *
   * @param {number} missionId
   * @return {number}
   */
export const MISSIONDATA_GET_CATAGORY = '0x57e798b65c45ee17';
/**
   * MISSIONDATA_GET_HIGH_SCORE
   *
   * @param {number} missionId
   * @return {number}
   */
export const MISSIONDATA_GET_HIGH_SCORE = '0x9aababf8313c3516';
/**
   * MISSIONDATA_GET_RATING
   *
   * @param {number} missionId
   * @return {number}
   */
export const MISSIONDATA_GET_RATING = '0x57e798b54c45ee1a';
/**
   * MISSIONDATA_GET_REPLAY_STATE
   *
   * @param {any} p0
   * @return {number}
   */
export const MISSIONDATA_GET_REPLAY_STATE = '0x8c32d86e9556ed86';
/**
   * MISSIONDATA_GET_TEXTURE_NAME
   *
   * @param {number} missionId
   * @return {number}
   */
export const MISSIONDATA_GET_TEXTURE_NAME = '0x57e798b56c45ee15';
/**
   * MISSIONDATA_GET_TEXTURE_TXD
   *
   * @param {number} missionId
   * @return {number}
   */
export const MISSIONDATA_GET_TEXTURE_TXD = '0x57e798b57c45ee16';
/**
   * MISSIONDATA_IS_REQUIRED_STORY_MISSION
   *
   * @param {number} missionId
   * @return {boolean}
   */
export const MISSIONDATA_IS_REQUIRED_STORY_MISSION = '0xe824ce7d13fcb35e';
/**
   * MISSIONDATA_IS_VALID
   *
   * @param {any} p0
   * @return {boolean}
   */
export const MISSIONDATA_IS_VALID = '0xe54dc27571d5edc5';
/**
   * MISSIONDATA_SET_HIGH_SCORE
   *
   * @param {number} missionId
   * @param {number} score
   * @return {void}
   */
export const MISSIONDATA_SET_HIGH_SCORE = '0x3a04f0169da87a9d';
/**
   * MISSIONDATA_SET_RATING_SCORES
   *
   * @param {number} missionId
   * @param {number} bronzeScore
   * @param {number} silverScore
   * @param {number} goldScore
   * @return {void}
   */
export const MISSIONDATA_SET_RATING_SCORES = '0x12f65317708749a5';
/**
   * MISSIONDATA_SET_REPLAY_LOCKED_FOR_CATEGORY
   *
   * @param {number} category
   * @param {boolean} locked
   * @return {void}
   */
export const MISSIONDATA_SET_REPLAY_LOCKED_FOR_CATEGORY = '0x957a830c9b4b99ea';
/**
   * MISSIONDATA_WAS_COMPLETED
   * see: missions.meta
   *
   * @param {number} missionId
   * @return {boolean}
   */
export const MISSIONDATA_WAS_COMPLETED = '0xe54dc27571d5edc4';
/**
   * _MISSIONDATA_IS_REPLAY_CATEGORY_LOCKED
   *
   * @param {number} category
   * @return {boolean}
   */
export const _MISSIONDATA_IS_REPLAY_CATEGORY_LOCKED = '0xe145864decc34219';
/**
   * _MISSIONDATA_SET_MISSION_RATING
   * MISSION_RATING_INCOMPLETE = 0,
   * MISSION_RATING_SKIPPED,
   * MISSION_RATING_COMPLETE,
   * MISSION_RATING_BRONZE,
   * MISSION_RATING_SILVER,
   * MISSION_RATING_GOLD,
   *
   * @param {number} missionId
   * @param {number} rating
   * @return {void}
   */
export const _MISSIONDATA_SET_MISSION_RATING = '0xe824ce7d13fcb300';
/**
   * _MISSIONDATA_SET_REPLAY_STATE_LOCKED
   * replayState: MISSIONDATA_GET_REPLAY_STATE
   *
   * @param {number} missionId
   * @param {number} replayState
   * @return {void}
   */
export const _MISSIONDATA_SET_REPLAY_STATE_LOCKED = '0xe4e2c581f127a11c';
/**
   * _MISSIONDATA_TIMECYCLE_BOX_DELETE
   *
  
   * @return {void}
   */
export const _MISSIONDATA_TIMECYCLE_BOX_DELETE = '0x7f89e15a8fb8de97';
/**
   * _MISSIONDATA_TIMECYCLE_BOX_EXISTS
   *
  
   * @return {boolean}
   */
export const _MISSIONDATA_TIMECYCLE_BOX_EXISTS = '0x7e8f86a4fa33033c';
/**
   * _MISSIONDATA_TIMECYCLE_BOX_SET_MODIFIER
   *
   * @param {string | number} timecycleName
   * @return {void}
   */
export const _MISSIONDATA_TIMECYCLE_BOX_SET_MODIFIER = '0x25855b1574bf8cd5';
/**
   * _0x07AD9E43FD478527
   *
   * @param {any} p0
   * @param {any} p1
   * @return {boolean}
   */
export const _0x07AD9E43FD478527 = '0x07ad9e43fd478527';
/**
   * _0xA46FD001D1BE896C
   *
  
   * @return {string | number}
   */
export const _0xA46FD001D1BE896C = '0xa46fd001d1be896c';
/**
   * _MONEY_DECREMENT_CASH_BALANCE
   *
   * @param {number} amount
   * @return {boolean}
   */
export const _MONEY_DECREMENT_CASH_BALANCE = '0x466bc8769cf26a7a';
/**
   * _MONEY_GET_CASH_BALANCE
   *
  
   * @return {number}
   */
export const _MONEY_GET_CASH_BALANCE = '0x0c02dabfa3b98176';
/**
   * _MONEY_INCREMENT_CASH_BALANCE
   *
   * @param {number} amount
   * @param {number} addReason
   * @return {boolean}
   */
export const _MONEY_INCREMENT_CASH_BALANCE = '0xbc3422dc91667621';
/**
   * _NETWORK_GET_CASH_BALANCE
   *
  
   * @return {number}
   */
export const _NETWORK_GET_CASH_BALANCE = '0x8a67120dbc299525';
/**
   * _NETWORK_GET_STRING_CASH_BALANCE
   *
  
   * @return {string | number}
   */
export const _NETWORK_GET_STRING_CASH_BALANCE = '0x282d36ff103d78df';
/**
   * _NETWORK_IS_MONEY_BALANCE_NOT_LESS_THAN
   *
   * @param {number} cashBalance
   * @param {number} goldBarBalance
   * @return {boolean}
   */
export const _NETWORK_IS_MONEY_BALANCE_NOT_LESS_THAN = '0xaec5f0119867e457';
/**
   * CASHINVENTORY_INIT_SESSION_STATUS
   *
  
   * @return {[boolean, number, number]}
   */
export const CASHINVENTORY_INIT_SESSION_STATUS = '0xc019112f8995dc1c';
/**
   * CASHINVENTORY_IS_CONNECTION_FAULTED
   *
  
   * @return {boolean}
   */
export const CASHINVENTORY_IS_CONNECTION_FAULTED = '0x6ce9fb6332b5e46e';
/**
   * _0x38640A8C2DEF011B
   *
   * @param {number} p0
   * @return {number}
   */
export const _0x38640A8C2DEF011B = '0x38640a8c2def011b';
/**
   * _0x3FA09DD57B93C0DE
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {any} p3
   * @param {number} p4
   * @return {boolean}
   */
export const _0x3FA09DD57B93C0DE = '0x3fa09dd57b93c0de';
/**
   * _0x92A32BA29622763F
   *
   * @param {number} id
   * @param {number} index
   * @param {DataView} p2
   * @return {boolean}
   */
export const _0x92A32BA29622763F = '0x92a32ba29622763f';
/**
   * _0xA0B7094629724974
   *
   * @param {number} p0
   * @param {any} p1
   * @return {boolean}
   */
export const _0xA0B7094629724974 = '0xa0b7094629724974';
/**
   * _0xA3B8D31C13CB4239
   *
   * @param {number} p0
   * @param {number} p1
   * @param {DataView} p2
   * @param {number} p3
   * @param {DataView} p4
   * @param {number} p5
   * @return {boolean}
   */
export const _0xA3B8D31C13CB4239 = '0xa3b8d31c13cb4239';
/**
   * _0xB6F4557060EF0FB4
   *
   * @param {number} p0
   * @param {number} p1
   * @return {number}
   */
export const _0xB6F4557060EF0FB4 = '0xb6f4557060ef0fb4';
/**
   * _0xCE54C9ABE6FBC6DB
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0xCE54C9ABE6FBC6DB = '0xce54c9abe6fbc6db';
/**
   * _0xD1555FBC96C88444
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {any} p3
   * @param {number} p4
   * @return {boolean}
   */
export const _0xD1555FBC96C88444 = '0xd1555fbc96c88444';
/**
   * _CASHINVENTORY_INIT_SESSION_IS_FAULTED
   *
  
   * @return {boolean}
   */
export const _CASHINVENTORY_INIT_SESSION_IS_FAULTED = '0xd1ce92d1d9be170a';
/**
   * _CASHINVENTORY_IS_SESSION_READY
   *
  
   * @return {boolean}
   */
export const _CASHINVENTORY_IS_SESSION_READY = '0xfcc24220fddac929';
/**
   * _CASHINVENTORY_TRANSACTION_ADD_AWARD
   *
   * @param {number} id
   * @param {number} hash
   * @param {DataView} p2
   * @param {DataView} p3
   * @return {boolean}
   */
export const _CASHINVENTORY_TRANSACTION_ADD_AWARD = '0x52bde32f21ba3b6d';
/**
   * _CASHINVENTORY_TRANSACTION_CHECKOUT
   *
   * @param {number} id
   * @return {boolean}
   */
export const _CASHINVENTORY_TRANSACTION_CHECKOUT = '0x592bc00bf6629be7';
/**
   * _CASHINVENTORY_TRANSACTION_CHECKOUT_STATUS
   *
   * @param {number} id
   * @return {[boolean, number]}
   */
export const _CASHINVENTORY_TRANSACTION_CHECKOUT_STATUS = '0x26c008791d066f37';
/**
   * _CASHINVENTORY_TRANSACTION_DELETE
   *
   * @param {number} id
   * @return {boolean}
   */
export const _CASHINVENTORY_TRANSACTION_DELETE = '0x59ef5d516e2d96b9';
/**
   * _CASHINVENTORY_TRANSACTION_FIRE_AND_FORGET_ITEM
   *
   * @param {number} actionHash
   * @param {DataView} item
   * @param {number} p3
   * @return {[boolean, number]}
   */
export const _CASHINVENTORY_TRANSACTION_FIRE_AND_FORGET_ITEM = '0xffea09ccec4af32f';
/**
   * _CASHINVENTORY_TRANSACTION_GET_ACTION
   *
   * @param {number} id
   * @return {number}
   */
export const _CASHINVENTORY_TRANSACTION_GET_ACTION = '0xbd2d520c51ccff52';
/**
   * _CASHINVENTORY_TRANSACTION_GET_BASKET_IS_VALID
   *
   * @param {number} id
   * @return {boolean}
   */
export const _CASHINVENTORY_TRANSACTION_GET_BASKET_IS_VALID = '0x52a226adf4a270d2';
/**
   * _CASHINVENTORY_TRANSACTION_GET_ITEM_INFO
   *
   * @param {number} id
   * @param {number} index
   * @param {DataView} itemInfo
   * @return {boolean}
   */
export const _CASHINVENTORY_TRANSACTION_GET_ITEM_INFO = '0x7616b5f0895c2d99';
/**
   * _CASHINVENTORY_TRANSACTION_GET_NUM_OF_ITEMS
   *
   * @param {number} id
   * @return {number}
   */
export const _CASHINVENTORY_TRANSACTION_GET_NUM_OF_ITEMS = '0xcf2d04d076847478';
/**
   * _CASHINVENTORY_TRANSACTION_RESPONSE_GET_ITEM_INFO
   *
   * @param {number} id
   * @param {number} index
   * @param {DataView} itemInfo
   * @return {boolean}
   */
export const _CASHINVENTORY_TRANSACTION_RESPONSE_GET_ITEM_INFO = '0x98412398bbe73f61';
/**
   * _CASHINVENTORY_TRANSACTION_START
   *
   * @param {number} type
   * @param {number} actionHash
   * @return {[boolean, number]}
   */
export const _CASHINVENTORY_TRANSACTION_START = '0xf039ec27f4490e96';
/**
   * _CASHINVENTORY_TRANSACTION_VALIDATE_ITEM
   *
   * @param {number} p0
   * @param {DataView} p1
   * @return {number}
   */
export const _CASHINVENTORY_TRANSACTION_VALIDATE_ITEM = '0x6c9f12700bce69f4';
/**
   * ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID
   *
   * @param {number} netId
   * @param {boolean} toggle
   * @return {void}
   */
export const ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID = '0xd45b1ffccd52ff19';
/**
   * CAN_REGISTER_MISSION_ENTITIES
   *
   * @param {number} pedAmt
   * @param {number} vehicleAmt
   * @param {number} objectAmt
   * @param {number} pickupAmt
   * @return {boolean}
   */
export const CAN_REGISTER_MISSION_ENTITIES = '0x69778e7564bade6d';
/**
   * CAN_REGISTER_MISSION_OBJECTS
   *
   * @param {number} amount
   * @return {boolean}
   */
export const CAN_REGISTER_MISSION_OBJECTS = '0x800dd4721a8b008b';
/**
   * CAN_REGISTER_MISSION_PEDS
   *
   * @param {number} amount
   * @return {boolean}
   */
export const CAN_REGISTER_MISSION_PEDS = '0xbcbf4fef9fa5d781';
/**
   * CAN_REGISTER_MISSION_PICKUPS
   *
   * @param {number} amount
   * @return {boolean}
   */
export const CAN_REGISTER_MISSION_PICKUPS = '0xf0460c7bf80011ea';
/**
   * CAN_REGISTER_MISSION_VEHICLES
   *
   * @param {number} amount
   * @return {boolean}
   */
export const CAN_REGISTER_MISSION_VEHICLES = '0x7277f1f2e085ee74';
/**
   * CLEAR_SERVICE_EVENT_ARGUMENTS
   * Old name: _CLEAR_LAUNCH_PARAMS
   *
  
   * @return {void}
   */
export const CLEAR_SERVICE_EVENT_ARGUMENTS = '0x966dd84fb6a46017';
/**
   * CLOUD_DID_REQUEST_SUCCEED
   *
   * @param {number} id
   * @return {boolean}
   */
export const CLOUD_DID_REQUEST_SUCCEED = '0x3a3d5568af297cd5';
/**
   * CLOUD_HAS_REQUEST_COMPLETED
   *
   * @param {number} id
   * @return {boolean}
   */
export const CLOUD_HAS_REQUEST_COMPLETED = '0x4c61b39930d045da';
/**
   * CONVERT_POSIX_TIME
   * Takes the specified time and writes it to the structure specified in the second argument.
   * 
   * struct date_time
   * {
   *     int year;
   *     int PADDING1;
   *     int month;
   *     int PADDING2;
   *     int day;
   *     int PADDING3;
   *     int hour;
   *     int PADDING4;
   *     int minute;
   *     int PADDING5;
   *     int second;
   *     int PADDING6;
   * };
   *
   * @param {number} posixTime
   * @param {DataView} timeStructure
   * @return {void}
   */
export const CONVERT_POSIX_TIME = '0xac97af97fa68e5d5';
/**
   * GET_CLOUD_TIME_AS_INT
   *
  
   * @return {number}
   */
export const GET_CLOUD_TIME_AS_INT = '0x9a73240b49945c76';
/**
   * GET_LAUNCH_PARAM_VALUE
   *
   * @param {string | number} paramName
   * @return {string | number}
   */
export const GET_LAUNCH_PARAM_VALUE = '0x65e65ca6a0fe59d4';
/**
   * GET_MAX_NUM_NETWORK_OBJECTS
   * Always returns 60
   *
  
   * @return {number}
   */
export const GET_MAX_NUM_NETWORK_OBJECTS = '0xc7be335216b5ec7c';
/**
   * GET_MAX_NUM_NETWORK_PEDS
   * Always returns 110
   *
  
   * @return {number}
   */
export const GET_MAX_NUM_NETWORK_PEDS = '0x0c1f7d49c39d2289';
/**
   * GET_MAX_NUM_NETWORK_PICKUPS
   * Always returns 80
   *
  
   * @return {number}
   */
export const GET_MAX_NUM_NETWORK_PICKUPS = '0xa72835064dd63e4c';
/**
   * GET_MAX_NUM_NETWORK_VEHICLES
   * Always returns 40
   *
  
   * @return {number}
   */
export const GET_MAX_NUM_NETWORK_VEHICLES = '0x0afce529f69b21ff';
/**
   * GET_NETWORK_TIME
   *
  
   * @return {number}
   */
export const GET_NETWORK_TIME = '0x7a5487fe9faa6b48';
/**
   * GET_NETWORK_TIME_ACCURATE
   *
  
   * @return {number}
   */
export const GET_NETWORK_TIME_ACCURATE = '0x89023fbbf9200e9f';
/**
   * GET_NUM_CREATED_MISSION_OBJECTS
   *
   * @param {boolean} p0
   * @return {number}
   */
export const GET_NUM_CREATED_MISSION_OBJECTS = '0x12b6281b6c6706c0';
/**
   * GET_NUM_CREATED_MISSION_PEDS
   *
   * @param {boolean} p0
   * @return {number}
   */
export const GET_NUM_CREATED_MISSION_PEDS = '0xcb215c4b56a7fae7';
/**
   * GET_NUM_CREATED_MISSION_VEHICLES
   *
   * @param {boolean} p0
   * @return {number}
   */
export const GET_NUM_CREATED_MISSION_VEHICLES = '0x0cd9ab83489430ea';
/**
   * GET_NUM_RESERVED_MISSION_OBJECTS
   * p0 appears to be for MP
   *
   * @param {boolean} p0
   * @return {number}
   */
export const GET_NUM_RESERVED_MISSION_OBJECTS = '0xaa81b5f10bc43ac2';
/**
   * GET_NUM_RESERVED_MISSION_PEDS
   * p0 appears to be for MP
   *
   * @param {boolean} p0
   * @return {number}
   */
export const GET_NUM_RESERVED_MISSION_PEDS = '0x1f13d5ae5cb17e17';
/**
   * GET_NUM_RESERVED_MISSION_VEHICLES
   * p0 appears to be for MP
   *
   * @param {boolean} p0
   * @return {number}
   */
export const GET_NUM_RESERVED_MISSION_VEHICLES = '0xcf3a965906452031';
/**
   * GET_RESERVED_MISSION_ENTITIES_IN_AREA
   * Used in Script Function NET_ACE_CLIENT_VERIFY_ENTITY_RESERVATIONS
   * Coords: Slot world position
   * 
   * Old name: _GET_RESERVATIONS_FOR_SLOT_WORLD_POSITION
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} p3
   * @return {[number, number, number, number]}
   */
export const GET_RESERVED_MISSION_ENTITIES_IN_AREA = '0x5e71e72a94985214';
/**
   * GET_STATUS_OF_TEXTURE_DOWNLOAD
   * 0 = succeeded
   * 1 = pending
   * 2 = failed
   *
   * @param {number} textureDownloadId
   * @return {number}
   */
export const GET_STATUS_OF_TEXTURE_DOWNLOAD = '0x8bd6c6dea20e82c6';
/**
   * GET_TIME_DIFFERENCE
   * Subtracts the second argument from the first.
   *
   * @param {number} timeA
   * @param {number} timeB
   * @return {number}
   */
export const GET_TIME_DIFFERENCE = '0xa2c6fc031d46fff0';
/**
   * GET_TIME_OFFSET
   * Adds the first argument to the second.
   *
   * @param {number} timeA
   * @param {number} timeB
   * @return {number}
   */
export const GET_TIME_OFFSET = '0x017008ccdad48503';
/**
   * GET_UNIQUE_INT_FOR_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const GET_UNIQUE_INT_FOR_PLAYER = '0x07f723401b9d921c';
/**
   * HAS_NETWORK_TIME_STARTED
   *
  
   * @return {boolean}
   */
export const HAS_NETWORK_TIME_STARTED = '0x46718aceedeafc84';
/**
   * IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID
   *
   * @param {number} netId
   * @return {boolean}
   */
export const IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID = '0x6e192e33ad436366';
/**
   * IS_ENTITY_A_GHOST
   * Old name: _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_A_GHOST = '0x21d04d7bc538c146';
/**
   * IS_NETWORK_ID_OWNED_BY_PARTICIPANT
   *
   * @param {number} netId
   * @return {boolean}
   */
export const IS_NETWORK_ID_OWNED_BY_PARTICIPANT = '0xa1607996431332df';
/**
   * IS_OBJECT_REASSIGNMENT_IN_PROGRESS
   * Note: this native was added in build 1311.16
   *
  
   * @return {boolean}
   */
export const IS_OBJECT_REASSIGNMENT_IN_PROGRESS = '0x8fe9eb11ec9cc23a';
/**
   * IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {boolean}
   */
export const IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE = '0xd82cf8e64c8729d8';
/**
   * IS_SPHERE_VISIBLE_TO_PLAYER
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {boolean}
   */
export const IS_SPHERE_VISIBLE_TO_PLAYER = '0xdc3a310219e5da62';
/**
   * IS_TIME_LESS_THAN
   * Subtracts the second argument from the first, then returns whether the result is negative.
   *
   * @param {number} timeA
   * @param {number} timeB
   * @return {boolean}
   */
export const IS_TIME_LESS_THAN = '0xcb2cf5148012c8d0';
/**
   * IS_TIME_MORE_THAN
   * Subtracts the first argument from the second, then returns whether the result is negative.
   *
   * @param {number} timeA
   * @param {number} timeB
   * @return {boolean}
   */
export const IS_TIME_MORE_THAN = '0xde350f8651e4346c';
/**
   * KEEP_NETWORK_ID_IN_FAST_INSTANCE
   *
   * @param {number} netId
   * @param {boolean} p1
   * @param {number} p2
   * @return {void}
   */
export const KEEP_NETWORK_ID_IN_FAST_INSTANCE = '0xe1bc73d6815ba361';
/**
   * NETWORK_ACCEPT_RS_INVITE
   *
   * @param {number} p0
   * @return {boolean}
   */
export const NETWORK_ACCEPT_RS_INVITE = '0xb2cea5105aac8dde';
/**
   * NETWORK_ACCESS_TUNABLE_BOOL
   *
   * @param {number} tunableContext
   * @param {number} tunableName
   * @return {boolean}
   */
export const NETWORK_ACCESS_TUNABLE_BOOL = '0xaa6a47a573abb75a';
/**
   * NETWORK_ACCESS_TUNABLE_INT
   *
   * @param {number} tunableContext
   * @param {number} tunableName
   * @return {[boolean, number]}
   */
export const NETWORK_ACCESS_TUNABLE_INT = '0x8be1146dfd5d4468';
/**
   * NETWORK_ACTION_PLATFORM_INVITE
   *
  
   * @return {boolean}
   */
export const NETWORK_ACTION_PLATFORM_INVITE = '0x3b82acc3f4b6240c';
/**
   * NETWORK_ACTIVITY_RESET_TO_IDLE
   *
  
   * @return {void}
   */
export const NETWORK_ACTIVITY_RESET_TO_IDLE = '0x3fe141fdb990e3d1';
/**
   * NETWORK_ACTIVITY_SET_CURRENT
   *
   * @param {number} netPlaylistActivity
   * @return {void}
   */
export const NETWORK_ACTIVITY_SET_CURRENT = '0x9adac065d9f6706f';
/**
   * NETWORK_ADD_FRIEND
   *
   * @param {DataView} gamerHandle
   * @param {string | number} message
   * @return {boolean}
   */
export const NETWORK_ADD_FRIEND = '0x8e02d73914064223';
/**
   * NETWORK_ALLOW_ALL_ENTITY_FADING_FOR_INSTANCES
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_ALLOW_ALL_ENTITY_FADING_FOR_INSTANCES = '0x4b05b97ba46f419d';
/**
   * NETWORK_ALLOW_ENTITY_FADING_FOR_INSTANCES
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_ALLOW_ENTITY_FADING_FOR_INSTANCES = '0xf3354d6ca46f419d';
/**
   * NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION
   * Old name: _NETWORK_ALLOW_LOCAL_ENTITY_ATTACHMENT
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION = '0x267c78c60e806b9a';
/**
   * NETWORK_ARE_HANDLES_THE_SAME
   *
   * @param {DataView} gamerHandle1
   * @param {DataView} gamerHandle2
   * @return {boolean}
   */
export const NETWORK_ARE_HANDLES_THE_SAME = '0x57dba049e110f217';
/**
   * NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION
   * Old name: _NETWORK_IS_PLAYER_EQUAL_TO_INDEX
   *
   * @param {number} player
   * @param {number} index
   * @return {boolean}
   */
export const NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION = '0x9de986fc9a87c474';
/**
   * NETWORK_AUTO_SESSION_CAN_SPLIT_SESSION
   *
  
   * @return {[boolean, number]}
   */
export const NETWORK_AUTO_SESSION_CAN_SPLIT_SESSION = '0xe404bff0aba23cdc';
/**
   * NETWORK_AUTO_SESSION_FINISH_INSTANCE
   *
  
   * @return {void}
   */
export const NETWORK_AUTO_SESSION_FINISH_INSTANCE = '0xbb51299166b844f3';
/**
   * NETWORK_AUTO_SESSION_IS_ALLOWED_TO_MERGE
   *
  
   * @return {boolean}
   */
export const NETWORK_AUTO_SESSION_IS_ALLOWED_TO_MERGE = '0xaaded99a6b268a27';
/**
   * NETWORK_AUTO_SESSION_IS_OBJECT_CREATION_PAUSED
   *
  
   * @return {boolean}
   */
export const NETWORK_AUTO_SESSION_IS_OBJECT_CREATION_PAUSED = '0x0e2c3aee6ce603b7';
/**
   * NETWORK_AUTO_SESSION_SPLIT_SESSION
   *
   * @param {number} playersToTake
   * @param {number} maxInstancePlayers
   * @param {number} sessionFlags
   * @param {number} bucketId
   * @return {boolean}
   */
export const NETWORK_AUTO_SESSION_SPLIT_SESSION = '0xc223d299c670413d';
/**
   * NETWORK_AWARD_HAS_REACHED_MAXCLAIM
   *
   * @param {any} p0
   * @return {boolean}
   */
export const NETWORK_AWARD_HAS_REACHED_MAXCLAIM = '0xfbe782b3165ac8ec';
/**
   * NETWORK_CAN_ACCESS_MULTIPLAYER
   *
  
   * @return {[boolean, number]}
   */
export const NETWORK_CAN_ACCESS_MULTIPLAYER = '0xaf50da1a3f8b1ba4';
/**
   * NETWORK_CAN_REFRESH_FRIEND_PAGE
   *
  
   * @return {boolean}
   */
export const NETWORK_CAN_REFRESH_FRIEND_PAGE = '0x1af5e28e64a76a9f';
/**
   * NETWORK_CAN_SESSION_END
   *
  
   * @return {boolean}
   */
export const NETWORK_CAN_SESSION_END = '0x4eebc3694e49c572';
/**
   * NETWORK_CAN_VIEW_GAMER_USER_CONTENT
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const NETWORK_CAN_VIEW_GAMER_USER_CONTENT = '0x246545c37c27a717';
/**
   * NETWORK_CHECK_ACCESS_AND_ALERT_IF_FAIL
   *
  
   * @return {boolean}
   */
export const NETWORK_CHECK_ACCESS_AND_ALERT_IF_FAIL = '0x2a8112a974de1ef6';
/**
   * NETWORK_CHECK_COMMUNICATION_PRIVILEGES
   *
   * @param {number} p0
   * @return {boolean}
   */
export const NETWORK_CHECK_COMMUNICATION_PRIVILEGES = '0x83f28ce49fbbffba';
/**
   * NETWORK_CHECK_USER_CONTENT_PRIVILEGES
   *
   * @param {number} p0
   * @return {boolean}
   */
export const NETWORK_CHECK_USER_CONTENT_PRIVILEGES = '0x595f028698072dd9';
/**
   * NETWORK_CLEAR_CLOCK_TIME_OVERRIDE
   *
  
   * @return {void}
   */
export const NETWORK_CLEAR_CLOCK_TIME_OVERRIDE = '0xd972df67326f966e';
/**
   * NETWORK_CLEAR_FOUND_GAMERS
   *
  
   * @return {void}
   */
export const NETWORK_CLEAR_FOUND_GAMERS = '0x6d14ccee1b40381a';
/**
   * NETWORK_CLEAR_GET_GAMER_STATUS
   *
  
   * @return {void}
   */
export const NETWORK_CLEAR_GET_GAMER_STATUS = '0x86e0660e4f5c956d';
/**
   * NETWORK_CLEAR_PLATFORM_INVITE
   *
  
   * @return {void}
   */
export const NETWORK_CLEAR_PLATFORM_INVITE = '0xa4484173759749b1';
/**
   * NETWORK_CONCEAL_PLAYER
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_CONCEAL_PLAYER = '0xbbdf066252829606';
/**
   * NETWORK_DID_FIND_GAMERS_SUCCEED
   *
  
   * @return {boolean}
   */
export const NETWORK_DID_FIND_GAMERS_SUCCEED = '0xf9b83b77929d8863';
/**
   * NETWORK_DID_GET_GAMER_STATUS_SUCCEED
   *
  
   * @return {boolean}
   */
export const NETWORK_DID_GET_GAMER_STATUS_SUCCEED = '0x5ae17c6b0134b7f1';
/**
   * NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND = '0xc505036a35afd01b';
/**
   * NETWORK_DISABLE_PROXIMITY_MIGRATION
   *
   * @param {number} netId
   * @return {void}
   */
export const NETWORK_DISABLE_PROXIMITY_MIGRATION = '0x407091cf6037118e';
/**
   * NETWORK_DISABLE_REALTIME_MULTIPLAYER
   *
  
   * @return {void}
   */
export const NETWORK_DISABLE_REALTIME_MULTIPLAYER = '0x236905c700fdb54d';
/**
   * NETWORK_DISPLAYNAMES_FROM_HANDLES_START
   * Hardcoded to return -1.
   *
   * @param {DataView} p0
   * @param {any} p1
   * @return {number}
   */
export const NETWORK_DISPLAYNAMES_FROM_HANDLES_START = '0xd66c9e72b3cc4982';
/**
   * NETWORK_DOES_NETWORK_ID_EXIST
   *
   * @param {number} netId
   * @return {boolean}
   */
export const NETWORK_DOES_NETWORK_ID_EXIST = '0x38ce16c96bd11344';
/**
   * NETWORK_DOES_TUNABLE_EXIST
   *
   * @param {number} tunableContext
   * @param {number} tunableName
   * @return {boolean}
   */
export const NETWORK_DOES_TUNABLE_EXIST = '0x85e5f8b9b898b20a';
/**
   * NETWORK_DUMP_NET_IF_CONFIG
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const NETWORK_DUMP_NET_IF_CONFIG = '0xaedf1bc1c133d6e3';
/**
   * NETWORK_END_TUTORIAL_SESSION
   *
  
   * @return {void}
   */
export const NETWORK_END_TUTORIAL_SESSION = '0xd0afaff5a51d72f7';
/**
   * NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY
   *
   * @param {number} player
   * @param {number} entity
   * @return {[boolean, number]}
   */
export const NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY = '0x4caca84440fa26f6';
/**
   * NETWORK_GET_AVERAGE_LATENCY
   * Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const NETWORK_GET_AVERAGE_LATENCY = '0xd414be129bb81b32';
/**
   * NETWORK_GET_AVERAGE_PACKET_LOSS
   * Old name: _NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const NETWORK_GET_AVERAGE_PACKET_LOSS = '0x350c23949e43686c';
/**
   * NETWORK_GET_AVERAGE_PING
   * Same as NETWORK_GET_AVERAGE_LATENCY (0xD414BE129BB81B32)
   * 
   * Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2
   *
   * @param {number} player
   * @return {number}
   */
export const NETWORK_GET_AVERAGE_PING = '0x0e3a041ed6ac2b45';
/**
   * NETWORK_GET_DESTROYER_OF_NETWORK_ID
   *
   * @param {number} netId
   * @return {[number, number]}
   */
export const NETWORK_GET_DESTROYER_OF_NETWORK_ID = '0x7a1adeef01740a24';
/**
   * NETWORK_GET_DISPLAYNAMES_FROM_HANDLES
   * Hardcoded to return zero.
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {number}
   */
export const NETWORK_GET_DISPLAYNAMES_FROM_HANDLES = '0x58cc181719256197';
/**
   * NETWORK_GET_ENTITY_FROM_NETWORK_ID
   *
   * @param {number} netId
   * @return {number}
   */
export const NETWORK_GET_ENTITY_FROM_NETWORK_ID = '0xce4e5d9b0a4ff560';
/**
   * NETWORK_GET_ENTITY_IS_NETWORKED
   *
   * @param {number} entity
   * @return {boolean}
   */
export const NETWORK_GET_ENTITY_IS_NETWORKED = '0xc7827959479dcc78';
/**
   * NETWORK_GET_ENTITY_KILLER_OF_PLAYER
   *
   * @param {number} player
   * @return {[Entity, number]}
   */
export const NETWORK_GET_ENTITY_KILLER_OF_PLAYER = '0x42b2daa6b596f5f8';
/**
   * NETWORK_GET_GAMERTAG_FROM_HANDLE
   * Always returns a null string.
   *
   * @param {DataView} gamerHandle
   * @return {string | number}
   */
export const NETWORK_GET_GAMERTAG_FROM_HANDLE = '0x426141162ebe5cdb';
/**
   * NETWORK_GET_GAME_MODE
   *
  
   * @return {number}
   */
export const NETWORK_GET_GAME_MODE = '0x225640e09effdc3f';
/**
   * NETWORK_GET_GLOBAL_CLOCK
   *
  
   * @return {[boolean, number, number, number]}
   */
export const NETWORK_GET_GLOBAL_CLOCK = '0x11a7adcd629e170f';
/**
   * NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK
   *
  
   * @return {[number, number, number]}
   */
export const NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK = '0x6d03bfbd643b2a02';
/**
   * NETWORK_GET_HIGHEST_RELIABLE_RESEND_COUNT
   * Old name: _NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const NETWORK_GET_HIGHEST_RELIABLE_RESEND_COUNT = '0x52c1eadaf7b10302';
/**
   * NETWORK_GET_HOST_OF_SCRIPT
   *
   * @param {string | number} scriptName
   * @param {number} p1
   * @param {number} p2
   * @return {number}
   */
export const NETWORK_GET_HOST_OF_SCRIPT = '0x1d6a14f1f9a736fc';
/**
   * NETWORK_GET_HOST_OF_THIS_SCRIPT
   *
  
   * @return {number}
   */
export const NETWORK_GET_HOST_OF_THIS_SCRIPT = '0xc7b4d79b01fa7a5c';
/**
   * NETWORK_GET_HOST_OF_THREAD
   *
   * @param {number} threadId
   * @return {number}
   */
export const NETWORK_GET_HOST_OF_THREAD = '0xb4a25351d79b444c';
/**
   * NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT
   *
  
   * @return {number}
   */
export const NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT = '0x638a3a81733086db';
/**
   * NETWORK_GET_LOCAL_HANDLE
   *
   * @param {DataView} gamerHandle
   * @return {void}
   */
export const NETWORK_GET_LOCAL_HANDLE = '0xe86051786b66cd8e';
/**
   * NETWORK_GET_MAX_NUM_PARTICIPANTS
   * Seems to always return 0, but it's used in quite a few loops.
   * 
   * for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
   *     {
   *         if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
   *         {
   *             var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
   *
  
   * @return {number}
   */
export const NETWORK_GET_MAX_NUM_PARTICIPANTS = '0xa6c90fbc38e395ee';
/**
   * NETWORK_GET_NETWORK_ID_FROM_ENTITY
   *
   * @param {number} entity
   * @return {number}
   */
export const NETWORK_GET_NETWORK_ID_FROM_ENTITY = '0xa11700682f3ad45c';
/**
   * NETWORK_GET_NETWORK_ID_FROM_ROPE_ID
   *
   * @param {number} ropeId
   * @return {number}
   */
export const NETWORK_GET_NETWORK_ID_FROM_ROPE_ID = '0x42871327315edae8';
/**
   * NETWORK_GET_NET_STATISTICS_INFO
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const NETWORK_GET_NET_STATISTICS_INFO = '0x6fd992c4a1c1b986';
/**
   * NETWORK_GET_NP_UNAVAILABLE_REASON
   * Hardcoded to return zero.
   * 
   * ==== PS4 specific info ====
   * 
   * Returns some sort of unavailable reason:
   * -1 = REASON_INVALID
   *  0 = REASON_OTHER
   *  1 = REASON_SYSTEM_UPDATE
   *  2 = REASON_GAME_UPDATE
   *  3 = REASON_SIGNED_OUT
   *  4 = REASON_AGE
   *  5 = REASON_CONNECTION
   * 
   * =================================
   *
  
   * @return {number}
   */
export const NETWORK_GET_NP_UNAVAILABLE_REASON = '0x74fb3e29e6d10fa9';
/**
   * NETWORK_GET_NUM_CONNECTED_PLAYERS
   * Returns the amount of players connected in the current session. Only works when connected to a session/server.
   *
  
   * @return {number}
   */
export const NETWORK_GET_NUM_CONNECTED_PLAYERS = '0xa4a79dd2d9600654';
/**
   * NETWORK_GET_NUM_PARTICIPANTS
   *
  
   * @return {number}
   */
export const NETWORK_GET_NUM_PARTICIPANTS = '0x18d0456e86604654';
/**
   * NETWORK_GET_NUM_SCRIPT_PARTICIPANTS
   *
   * @param {string | number} scriptName
   * @param {number} instanceId
   * @param {number} position
   * @return {number}
   */
export const NETWORK_GET_NUM_SCRIPT_PARTICIPANTS = '0x3658e8cd94fc121a';
/**
   * NETWORK_GET_NUM_UNACKED_RELIABLES
   * Old name: _NETWORK_GET_NUM_UNACKED_FOR_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const NETWORK_GET_NUM_UNACKED_RELIABLES = '0xff8fcf9ffc458a1c';
/**
   * NETWORK_GET_PARTICIPANT_INDEX
   *
   * @param {number} index
   * @return {number}
   */
export const NETWORK_GET_PARTICIPANT_INDEX = '0x1b84df6af2a46938';
/**
   * NETWORK_GET_PLAYER_FROM_GAMER_HANDLE
   *
   * @param {DataView} gamerHandle
   * @return {number}
   */
export const NETWORK_GET_PLAYER_FROM_GAMER_HANDLE = '0xce5f689cf5a0a49d';
/**
   * NETWORK_GET_PLAYER_INDEX
   *
   * @param {number} player
   * @return {number}
   */
export const NETWORK_GET_PLAYER_INDEX = '0x24fb80d107371267';
/**
   * NETWORK_GET_PLAYER_INDEX_FROM_PED
   * Returns the Player associated to a given Ped when in an online session.
   *
   * @param {number} ped
   * @return {number}
   */
export const NETWORK_GET_PLAYER_INDEX_FROM_PED = '0x6c0e2e0125610278';
/**
   * NETWORK_GET_PROMOTION_DLG_SEEN_COUNT
   * Hardcoded to return zero.
   *
  
   * @return {number}
   */
export const NETWORK_GET_PROMOTION_DLG_SEEN_COUNT = '0x2fb53c631a49be92';
/**
   * NETWORK_GET_RANDOM_INT_RANGED
   *
   * @param {number} rangeStart
   * @param {number} rangeEnd
   * @return {number}
   */
export const NETWORK_GET_RANDOM_INT_RANGED = '0xe30cf56f1efa5f43';
/**
   * NETWORK_GET_RECENT_GAMER_NAMES
   *
   * @param {number} p0
   * @param {number} p1
   * @param {DataView} outData
   * @param {number} dataSize
   * @return {boolean}
   */
export const NETWORK_GET_RECENT_GAMER_NAMES = '0xfefcc345ce357453';
/**
   * NETWORK_GET_ROPE_ID_FROM_NETWORK_ID
   *
   * @param {number} netId
   * @return {number}
   */
export const NETWORK_GET_ROPE_ID_FROM_NETWORK_ID = '0xeb1a4dd8352ec828';
/**
   * NETWORK_GET_SCRIPT_STATUS
   *
  
   * @return {number}
   */
export const NETWORK_GET_SCRIPT_STATUS = '0x57d158647a6bfabf';
/**
   * NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT
   *
  
   * @return {boolean}
   */
export const NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT = '0x2910669969e9535e';
/**
   * NETWORK_GET_TIMEOUT_TIME
   *
  
   * @return {number}
   */
export const NETWORK_GET_TIMEOUT_TIME = '0x5ed0356a0ce3a34f';
/**
   * NETWORK_GET_TOTAL_NUM_FRIENDS
   *
  
   * @return {number}
   */
export const NETWORK_GET_TOTAL_NUM_FRIENDS = '0xdb7abdd203fa3704';
/**
   * NETWORK_GET_TOTAL_NUM_PLAYERS
   *
  
   * @return {number}
   */
export const NETWORK_GET_TOTAL_NUM_PLAYERS = '0xcf61d4b4702ee9eb';
/**
   * NETWORK_GET_TUNABLE_CLOUD_CRC
   *
  
   * @return {number}
   */
export const NETWORK_GET_TUNABLE_CLOUD_CRC = '0x10bd227a753b0d84';
/**
   * NETWORK_GET_UNRELIABLE_RESEND_COUNT
   * Old name: _NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const NETWORK_GET_UNRELIABLE_RESEND_COUNT = '0x3765c3a3e8192e10';
/**
   * NETWORK_HANDLE_FROM_FRIEND
   *
   * @param {number} friendIndex
   * @param {DataView} gamerHandle
   * @return {void}
   */
export const NETWORK_HANDLE_FROM_FRIEND = '0xd45cb817d7e177d2';
/**
   * NETWORK_HANDLE_FROM_PLAYER
   *
   * @param {number} player
   * @param {DataView} gamerHandle
   * @return {void}
   */
export const NETWORK_HANDLE_FROM_PLAYER = '0x388eb2b86c73b6b3';
/**
   * NETWORK_HASH_FROM_PLAYER_HANDLE
   *
   * @param {number} player
   * @return {number}
   */
export const NETWORK_HASH_FROM_PLAYER_HANDLE = '0xbc1d768f2f5d6c05';
/**
   * NETWORK_HAS_CONTROL_OF_ENTITY
   *
   * @param {number} entity
   * @return {boolean}
   */
export const NETWORK_HAS_CONTROL_OF_ENTITY = '0x01bf60a500e28887';
/**
   * NETWORK_HAS_CONTROL_OF_NETWORK_ID
   *
   * @param {number} netId
   * @return {boolean}
   */
export const NETWORK_HAS_CONTROL_OF_NETWORK_ID = '0x4d36070fe0215186';
/**
   * NETWORK_HAS_CONTROL_OF_PICKUP
   *
   * @param {number} pickup
   * @return {boolean}
   */
export const NETWORK_HAS_CONTROL_OF_PICKUP = '0x5bc9495f0b3b6fa6';
/**
   * NETWORK_HAS_CONTROL_OF_PICKUP_PLACEMENT
   *
   * @param {any} p0
   * @return {boolean}
   */
export const NETWORK_HAS_CONTROL_OF_PICKUP_PLACEMENT = '0x51eabcf2786515ab';
/**
   * NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD
   *
   * @param {number} entity
   * @return {boolean}
   */
export const NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD = '0xb07d3185e11657a5';
/**
   * NETWORK_HAS_PENDING_INVITE_FAILURE
   *
  
   * @return {boolean}
   */
export const NETWORK_HAS_PENDING_INVITE_FAILURE = '0xd0498ad30e16b6bd';
/**
   * NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA
   *
  
   * @return {boolean}
   */
export const NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA = '0x5d10b3795f3fc886';
/**
   * NETWORK_HAS_ROS_PRIVILEGE
   *
   * @param {number} index
   * @return {boolean}
   */
export const NETWORK_HAS_ROS_PRIVILEGE = '0xa699957e60d80214';
/**
   * NETWORK_HAS_SOCIAL_CLUB_ACCOUNT
   *
  
   * @return {boolean}
   */
export const NETWORK_HAS_SOCIAL_CLUB_ACCOUNT = '0x67a5589628e0cff6';
/**
   * NETWORK_HAS_VALID_ROS_CREDENTIALS
   * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
   *
  
   * @return {boolean}
   */
export const NETWORK_HAS_VALID_ROS_CREDENTIALS = '0x85443ff4c328f53b';
/**
   * NETWORK_HAVE_ONLINE_PRIVILEGES
   *
  
   * @return {boolean}
   */
export const NETWORK_HAVE_ONLINE_PRIVILEGES = '0x25cb5a9f37bfd063';
/**
   * NETWORK_HAVE_ROS_BANNED_PRIV
   *
  
   * @return {boolean}
   */
export const NETWORK_HAVE_ROS_BANNED_PRIV = '0x8020a73847e0ca7d';
/**
   * NETWORK_IS_AIM_CAM_ACTIVE
   *
   * @param {number} player
   * @return {boolean}
   */
export const NETWORK_IS_AIM_CAM_ACTIVE = '0x8e7ce19219669aeb';
/**
   * NETWORK_IS_CLOCK_TIME_OVERRIDDEN
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_CLOCK_TIME_OVERRIDDEN = '0xd7c95d322ff57522';
/**
   * NETWORK_IS_CLOUD_AVAILABLE
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_CLOUD_AVAILABLE = '0x9a4cf4f48ad77302';
/**
   * NETWORK_IS_CONNECTED_VIA_RELAY
   * Old name: _NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER
   *
   * @param {number} player
   * @return {boolean}
   */
export const NETWORK_IS_CONNECTED_VIA_RELAY = '0x16d3d49902f697bb';
/**
   * NETWORK_IS_CUSTOM_UPSELL_ENABLED
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_CUSTOM_UPSELL_ENABLED = '0x78a9535af83715c6';
/**
   * NETWORK_IS_FEATURE_SUPPORTED
   *
   * @param {number} featureId
   * @return {boolean}
   */
export const NETWORK_IS_FEATURE_SUPPORTED = '0x9c725d149622bfde';
/**
   * NETWORK_IS_FINDING_GAMERS
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_FINDING_GAMERS = '0xdddf64c91bfcf0aa';
/**
   * NETWORK_IS_FRIEND
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const NETWORK_IS_FRIEND = '0x1a24a179f9b31654';
/**
   * NETWORK_IS_GAMER_IN_MY_SESSION
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const NETWORK_IS_GAMER_IN_MY_SESSION = '0x0f10b05ddf8d16e9';
/**
   * NETWORK_IS_GAME_IN_PROGRESS
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_GAME_IN_PROGRESS = '0x10fab35428ccc9d7';
/**
   * NETWORK_IS_HANDLE_VALID
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const NETWORK_IS_HANDLE_VALID = '0x6f79b93b0a8e4133';
/**
   * NETWORK_IS_HOST
   * If you are host, returns true else returns false.
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_HOST = '0x8db296b814edda07';
/**
   * NETWORK_IS_HOST_OF_THIS_SCRIPT
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_HOST_OF_THIS_SCRIPT = '0x83cd99a1e6061ab5';
/**
   * NETWORK_IS_IN_MP_CUTSCENE
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_IN_MP_CUTSCENE = '0x6cc27c9fa2040220';
/**
   * NETWORK_IS_IN_PLATFORM_PARTY
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_IN_PLATFORM_PARTY = '0x2fc5650b0271cb57';
/**
   * NETWORK_IS_IN_PLATFORM_PARTY_CHAT
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_IN_PLATFORM_PARTY_CHAT = '0xfd8b834a8ba05048';
/**
   * NETWORK_IS_IN_SESSION
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_IN_SESSION = '0xca97246103b63917';
/**
   * NETWORK_IS_IN_SPECTATOR_MODE
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_IN_SPECTATOR_MODE = '0x048746e388762e11';
/**
   * NETWORK_IS_IN_TUTORIAL_SESSION
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_IN_TUTORIAL_SESSION = '0xada24309fe08dacf';
/**
   * NETWORK_IS_PARTICIPANT_ACTIVE
   *
   * @param {number} p0
   * @return {boolean}
   */
export const NETWORK_IS_PARTICIPANT_ACTIVE = '0x6ff8ff40b6357d45';
/**
   * NETWORK_IS_PENDING_FRIEND
   * Hardcoded to return false.
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const NETWORK_IS_PENDING_FRIEND = '0x0be73da6984a6e33';
/**
   * NETWORK_IS_PLATFORM_INVITE_PENDING
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_PLATFORM_INVITE_PENDING = '0xfc4165c9165c166f';
/**
   * NETWORK_IS_PLAYER_ACTIVE
   *
   * @param {number} player
   * @return {boolean}
   */
export const NETWORK_IS_PLAYER_ACTIVE = '0xb8dfd30d6973e135';
/**
   * NETWORK_IS_PLAYER_A_PARTICIPANT
   *
   * @param {number} player
   * @return {boolean}
   */
export const NETWORK_IS_PLAYER_A_PARTICIPANT = '0x3ca58f6cb7cbd784';
/**
   * NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT
   *
   * @param {number} p0
   * @param {DataView} p1
   * @param {any} p2
   * @return {boolean}
   */
export const NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT = '0x1ad5b71586b94820';
/**
   * NETWORK_IS_PLAYER_CONCEALED
   *
   * @param {number} player
   * @return {boolean}
   */
export const NETWORK_IS_PLAYER_CONCEALED = '0x919b3c98ed8292f9';
/**
   * NETWORK_IS_PLAYER_CONNECTED
   *
   * @param {number} player
   * @return {boolean}
   */
export const NETWORK_IS_PLAYER_CONNECTED = '0x93dc1be4e1abe9d1';
/**
   * NETWORK_IS_PLAYER_INDEX_VALID
   * Returns true if the passed value is less than 32.
   *
   * @param {number} player
   * @return {boolean}
   */
export const NETWORK_IS_PLAYER_INDEX_VALID = '0x255a5ef65eda9167';
/**
   * NETWORK_IS_PLAYER_IN_MP_CUTSCENE
   * Note: scripts seem to indicate that this was renamed to NETWORK_IS_PLAYER_IN_MP_FAST_INSTANCE
   *
   * @param {number} player
   * @return {boolean}
   */
export const NETWORK_IS_PLAYER_IN_MP_CUTSCENE = '0x63f9ee203c3619f2';
/**
   * NETWORK_IS_PROMOTION_ENABLED
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_PROMOTION_ENABLED = '0x8ff6059da26e688a';
/**
   * NETWORK_IS_RESETTING_POPULATION
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_RESETTING_POPULATION = '0x1bb50cd340a996e6';
/**
   * NETWORK_IS_SCRIPT_ACTIVE
   *
   * @param {string | number} scriptName
   * @param {number} p1
   * @param {boolean} p2
   * @param {number} p3
   * @return {boolean}
   */
export const NETWORK_IS_SCRIPT_ACTIVE = '0x9d40df90fad26098';
/**
   * NETWORK_IS_SCRIPT_ACTIVE_BY_HASH
   *
   * @param {number} scriptHash
   * @param {number} p1
   * @param {boolean} p2
   * @param {number} p3
   * @return {boolean}
   */
export const NETWORK_IS_SCRIPT_ACTIVE_BY_HASH = '0x1b89bc43b6e69107';
/**
   * NETWORK_IS_SESSION_ACTIVE
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_SESSION_ACTIVE = '0xd83c2b94e7508980';
/**
   * NETWORK_IS_SESSION_STARTED
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_SESSION_STARTED = '0x9de624d2fc4b603f';
/**
   * NETWORK_IS_SIGNED_ONLINE
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_SIGNED_ONLINE = '0x1077788e268557c2';
/**
   * NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING = '0x0467c11ed88b7d28';
/**
   * NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING
   *
  
   * @return {boolean}
   */
export const NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING = '0x35f0b98a8387274d';
/**
   * NETWORK_PREVENT_SCRIPT_HOST_MIGRATION
   *
  
   * @return {void}
   */
export const NETWORK_PREVENT_SCRIPT_HOST_MIGRATION = '0x2302c0264ea58d31';
/**
   * NETWORK_REFRESH_CURRENT_FRIEND_PAGE
   *
  
   * @return {boolean}
   */
export const NETWORK_REFRESH_CURRENT_FRIEND_PAGE = '0x1f51f367b710a832';
/**
   * NETWORK_REGISTER_ENTITY_AS_NETWORKED
   *
   * @param {number} entity
   * @return {void}
   */
export const NETWORK_REGISTER_ENTITY_AS_NETWORKED = '0x06faacd625d80caa';
/**
   * NETWORK_REGISTER_HOST_BROADCAST_VARIABLES
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const NETWORK_REGISTER_HOST_BROADCAST_VARIABLES = '0x3e9b2f01c50df595';
/**
   * NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES = '0x3364aa97340ca215';
/**
   * NETWORK_REQUEST_CLOUD_TUNABLES
   * Note: this native was added in build 1311.23, but was only used after build 1436.25
   *
  
   * @return {void}
   */
export const NETWORK_REQUEST_CLOUD_TUNABLES = '0x42fb3b532d526e6c';
/**
   * NETWORK_REQUEST_CONTROL_OF_ENTITY
   *
   * @param {number} entity
   * @return {boolean}
   */
export const NETWORK_REQUEST_CONTROL_OF_ENTITY = '0xb69317bf5e782347';
/**
   * NETWORK_REQUEST_CONTROL_OF_NETWORK_ID
   *
   * @param {number} netId
   * @return {boolean}
   */
export const NETWORK_REQUEST_CONTROL_OF_NETWORK_ID = '0xa670b3662faffbd0';
/**
   * NETWORK_REQUEST_CONTROL_OF_PICKUP_PLACEMENT
   *
   * @param {any} p0
   * @return {boolean}
   */
export const NETWORK_REQUEST_CONTROL_OF_PICKUP_PLACEMENT = '0x56ed2c48558dab78';
/**
   * NETWORK_REQUEST_JOIN
   *
   * @param {any} p0
   * @return {number}
   */
export const NETWORK_REQUEST_JOIN = '0xe483bb6be686f632';
/**
   * NETWORK_REQUEST_RECENT_GAMER_NAMES
   *
   * @param {number} p0
   * @param {number} playerCount
   * @return {boolean}
   */
export const NETWORK_REQUEST_RECENT_GAMER_NAMES = '0x6d206d383bb5f6b1';
/**
   * NETWORK_REQUEST_SESSION_SEAMLESS
   * flags:
   * enum eSessionRequestOptionFlags
   * {
   *   SESSION_REQUEST_OPTION_FLAG_INCLUDE_GANG_MEMBERS = (1 << 1),
   *   SESSION_REQUEST_OPTION_FLAG_LEADER_KEEPS_GANG = (1 << 7),
   * };
   * 
   * seamlessType:
   * enum eSeamlessType
   * {
   *   SEAMLESS_TYPE_NORMAL,
   *   SEAMLESS_TYPE_PVE,
   *   SEAMLESS_TYPE_DEV,
   *   SEAMLESS_TYPE_NO_SEAMLESS
   * };
   *
   * @param {number} flags
   * @param {number} seamlessType
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const NETWORK_REQUEST_SESSION_SEAMLESS = '0x04019ae4956d4393';
/**
   * NETWORK_RESET_POPULATION
   *
   * @param {boolean} p0
   * @param {number} p1
   * @return {boolean}
   */
export const NETWORK_RESET_POPULATION = '0x101f538c25abb39a';
/**
   * NETWORK_RESURRECT_LOCAL_PLAYER
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {number} p4
   * @param {boolean} p5
   * @param {any} p6
   * @param {boolean} p7
   * @return {void}
   */
export const NETWORK_RESURRECT_LOCAL_PLAYER = '0xea23c49eaa83acfb';
/**
   * NETWORK_SEED_RANDOM_NUMBER_GENERATOR
   *
   * @param {number} seed
   * @return {void}
   */
export const NETWORK_SEED_RANDOM_NUMBER_GENERATOR = '0xf1b84178f8674195';
/**
   * NETWORK_SESSION_GET_SESSION_FLAGS
   *
  
   * @return {number}
   */
export const NETWORK_SESSION_GET_SESSION_FLAGS = '0x51f33dbc1a41cbfd';
/**
   * NETWORK_SESSION_GET_SESSION_TYPE
   *
  
   * @return {number}
   */
export const NETWORK_SESSION_GET_SESSION_TYPE = '0xf0c0c94b404206fa';
/**
   * NETWORK_SESSION_IS_ANY_REQUEST_IN_PROGRESS
   *
  
   * @return {boolean}
   */
export const NETWORK_SESSION_IS_ANY_REQUEST_IN_PROGRESS = '0xbaffde5f953720d9';
/**
   * NETWORK_SESSION_IS_PRIVATE
   * Checks for session flag 'SF_PRIVATE'
   *
  
   * @return {boolean}
   */
export const NETWORK_SESSION_IS_PRIVATE = '0xcef70aa5b3f89ba1';
/**
   * NETWORK_SESSION_IS_REQUEST_IN_PROGRESS
   *
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const NETWORK_SESSION_IS_REQUEST_IN_PROGRESS = '0x8fb7c254cfcbf78e';
/**
   * NETWORK_SESSION_IS_REQUEST_PENDING_TRANSITION
   *
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const NETWORK_SESSION_IS_REQUEST_PENDING_TRANSITION = '0xccf878d50f8ab10d';
/**
   * NETWORK_SESSION_IS_SESSION_REQUEST_ID_VALID
   *
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const NETWORK_SESSION_IS_SESSION_REQUEST_ID_VALID = '0x2f54b146d3edce4d';
/**
   * NETWORK_SESSION_IS_TRANSITIONING
   *
  
   * @return {boolean}
   */
export const NETWORK_SESSION_IS_TRANSITIONING = '0xf2cbc969c4f090c7';
/**
   * NETWORK_SESSION_LEAVE_SESSION
   *
  
   * @return {boolean}
   */
export const NETWORK_SESSION_LEAVE_SESSION = '0x17c21b7319a05047';
/**
   * NETWORK_SESSION_LEFT_QUEUE_OR_REQUESTED_SESSION
   *
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const NETWORK_SESSION_LEFT_QUEUE_OR_REQUESTED_SESSION = '0xece6a0c1b59cd8be';
/**
   * NETWORK_SESSION_REMOVE_SESSION_FLAGS
   * See _NETWORK_SESSION_ADD_SESSION_FLAGS
   *
   * @param {number} flags
   * @return {boolean}
   */
export const NETWORK_SESSION_REMOVE_SESSION_FLAGS = '0x78335e12db0bf961';
/**
   * NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE
   * matchType:
   * enum eMatchType
   * {
   *   MATCHTYPE_DEPRECATED,
   *   MATCHTYPE_UGCPLAYLIST,
   *   MATCHTYPE_UGCMISSION,
   *   MATCHTYPE_MINIGAME,
   *   MATCHTYPE_SEAMLESS,
   *   MATCHTYPE_PRIVATE_DO_NOT_USE
   * };
   *
   * @param {number} flags
   * @param {number} matchType
   * @param {number} userHash
   * @param {number} p3
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE = '0x309bbebea8a3986c';
/**
   * NETWORK_SESSION_REQUEST_SESSION_PRIVATE
   * Session flag 'SF_PRIVATE' is set internally
   * p1 represents max amount of players in private session
   *
   * @param {number} flags
   * @param {number} numPlayers
   * @param {number} userHash
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const NETWORK_SESSION_REQUEST_SESSION_PRIVATE = '0x39a8ef7af29a192c';
/**
   * NETWORK_SESSION_REQUEST_SESSION_SEAMLESS
   * Equivalent to NETWORK_REQUEST_SESSION_SEAMLESS if userHash == 0.
   * Otherwise it is equivalent to NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE(flags, MATCHTYPE_SEAMLESS, userHash, 0, sessionRequestId);
   * 
   * p1 is unused
   *
   * @param {number} flags
   * @param {number} seamlessType
   * @param {number} userHash
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const NETWORK_SESSION_REQUEST_SESSION_SEAMLESS = '0x2989e131fde37e97';
/**
   * NETWORK_SET_COMPLETED_MP_INTRO_FLOW_ON_CURRENT_SLOT
   *
   * @param {boolean} completed
   * @return {boolean}
   */
export const NETWORK_SET_COMPLETED_MP_INTRO_FLOW_ON_CURRENT_SLOT = '0x2c5bd9a43987aa27';
/**
   * NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS
   * if set to true other network players can't see it
   * if set to false other network player can see it
   * =========================================
   * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
   * 
   * pc or last gen?
   * 
   * ^^ last-gen
   * 
   * Old name: _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS = '0xf1ca12b18aef5298';
/**
   * NETWORK_SET_ENTITY_REMAINS_WHEN_UNNETWORKED
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_SET_ENTITY_REMAINS_WHEN_UNNETWORKED = '0xd785864798258032';
/**
   * NETWORK_SET_FRIENDLY_FIRE_OPTION
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_SET_FRIENDLY_FIRE_OPTION = '0xf808475fa571d823';
/**
   * NETWORK_SET_IN_MP_CUTSCENE
   *
   * @param {boolean} p0
   * @param {boolean} p1
   * @param {number} p2
   * @param {boolean} p3
   * @return {void}
   */
export const NETWORK_SET_IN_MP_CUTSCENE = '0x9ca5de655269fec4';
/**
   * NETWORK_SET_IN_SPECTATOR_MODE
   *
   * @param {boolean} toggle
   * @param {number} playerPed
   * @return {void}
   */
export const NETWORK_SET_IN_SPECTATOR_MODE = '0x423de3854bb50894';
/**
   * NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME
   *
   * @param {number} time
   * @return {void}
   */
export const NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME = '0x2d95c7e2d7e07307';
/**
   * NETWORK_SET_LOCAL_PLAYER_PENDING_FAST_INSTANCE_ID
   *
   * @param {number} instanceId
   * @return {void}
   */
export const NETWORK_SET_LOCAL_PLAYER_PENDING_FAST_INSTANCE_ID = '0x007ff852dcf49da4';
/**
   * NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT = '0x524ff0aeff9c3973';
/**
   * NETWORK_SET_MISSION_FINISHED
   *
  
   * @return {void}
   */
export const NETWORK_SET_MISSION_FINISHED = '0x3b3d11cd9ffcdfc9';
/**
   * NETWORK_SET_MP_MISSION_FLAG_ON_CURRENT_SLOT
   *
   * @param {boolean} enabled
   * @param {number} flagIndex
   * @return {boolean}
   */
export const NETWORK_SET_MP_MISSION_FLAG_ON_CURRENT_SLOT = '0x86fd10251a7118a4';
/**
   * NETWORK_SET_PLAYER_IS_PASSIVE
   * Old name: _NETWORK_SET_PASSIVE_MODE_OPTION
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_SET_PLAYER_IS_PASSIVE = '0x9c25e8ec4c535fbd';
/**
   * NETWORK_SET_RECENT_GAMERS_ENABLED
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_SET_RECENT_GAMERS_ENABLED = '0x29fe035d35b8589c';
/**
   * NETWORK_SET_RICH_PRESENCE
   *
   * @param {number} p0
   * @param {DataView} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const NETWORK_SET_RICH_PRESENCE = '0x1dccacdcfc569362';
/**
   * NETWORK_SET_SCRIPT_READY_FOR_EVENTS
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const NETWORK_SET_SCRIPT_READY_FOR_EVENTS = '0x7ac752103856fb20';
/**
   * NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT
   *
   * @param {number} maxNumMissionParticipants
   * @param {boolean} p1
   * @param {number} instanceId
   * @return {void}
   */
export const NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT = '0x1ca59e306ecb80a5';
/**
   * NETWORK_SHOULD_SHOW_PROMOTION_DLG
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const NETWORK_SHOULD_SHOW_PROMOTION_DLG = '0xda4b1a479c414fb2';
/**
   * NETWORK_SHOW_ACCOUNT_UPGRADE_UI
   *
  
   * @return {void}
   */
export const NETWORK_SHOW_ACCOUNT_UPGRADE_UI = '0x83fe8d7229593017';
/**
   * NETWORK_SHOW_CHAT_RESTRICTION_MSC
   * nullsub, doesn't do anything
   *
   * @param {number} player
   * @return {void}
   */
export const NETWORK_SHOW_CHAT_RESTRICTION_MSC = '0x6bff5f84102df80a';
/**
   * NETWORK_SHOW_PROFILE_UI
   *
   * @param {DataView} gamerHandle
   * @return {void}
   */
export const NETWORK_SHOW_PROFILE_UI = '0x859ed1cea343fca8';
/**
   * NETWORK_SHOW_PSN_UGC_RESTRICTION
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const NETWORK_SHOW_PSN_UGC_RESTRICTION = '0x5c497525f803486b';
/**
   * NETWORK_SPAWN_CONFIG_SET_FLAGS
   *
   * @param {number} flags
   * @return {void}
   */
export const NETWORK_SPAWN_CONFIG_SET_FLAGS = '0xf94a0d5b254375df';
/**
   * NETWORK_SPAWN_CONFIG_SET_GROUND_TO_ROOT_OFFSET
   *
   * @param {number} offset
   * @return {void}
   */
export const NETWORK_SPAWN_CONFIG_SET_GROUND_TO_ROOT_OFFSET = '0x59577799f6ae2f34';
/**
   * NETWORK_SPAWN_CONFIG_SET_TUNING_FLOAT
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const NETWORK_SPAWN_CONFIG_SET_TUNING_FLOAT = '0x0608326f7b98c08d';
/**
   * NETWORK_START_SOLO_TUTORIAL_SESSION
   *
  
   * @return {void}
   */
export const NETWORK_START_SOLO_TUTORIAL_SESSION = '0x17e0198b3882c2cb';
/**
   * NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK
   * Always returns -1. Seems to be XB1 specific.
   *
   * @param {DataView} gamerHandle
   * @return {number}
   */
export const NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK = '0xdeb2b99a1af1a2a6';
/**
   * NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_DAMAGE
   * Old name: _NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {void}
   */
export const NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_DAMAGE = '0x0c8bc052ae87d744';
/**
   * NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH
   *
   * @param {number} tunableContext
   * @param {number} tunableName
   * @param {boolean} defaultValue
   * @return {boolean}
   */
export const NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH = '0xb2ad5d29a99d4b26';
/**
   * NETWORK_TRY_ACCESS_TUNABLE_FLOAT_HASH
   *
   * @param {number} tunableContext
   * @param {number} tunableName
   * @param {number} defaultValue
   * @return {number}
   */
export const NETWORK_TRY_ACCESS_TUNABLE_FLOAT_HASH = '0xa18393089c05e49c';
/**
   * NETWORK_TRY_ACCESS_TUNABLE_INT_HASH
   *
   * @param {number} tunableContext
   * @param {number} tunableName
   * @param {number} defaultValue
   * @return {number}
   */
export const NETWORK_TRY_ACCESS_TUNABLE_INT_HASH = '0xa25e006b36719774';
/**
   * NET_TO_ENT
   * gets the entity id of a network id
   *
   * @param {number} netHandle
   * @return {number}
   */
export const NET_TO_ENT = '0xbffeab45a9a9094a';
/**
   * NET_TO_OBJ
   * gets the object id of a network id
   *
   * @param {number} netHandle
   * @return {number}
   */
export const NET_TO_OBJ = '0xd8515f5fea14cb3f';
/**
   * NET_TO_PED
   * gets the ped id of a network id
   *
   * @param {number} netHandle
   * @return {number}
   */
export const NET_TO_PED = '0xbdcd95fc216a8b3e';
/**
   * NET_TO_VEH
   *
   * @param {number} netHandle
   * @return {number}
   */
export const NET_TO_VEH = '0x367b936610ba360c';
/**
   * OBJ_TO_NET
   * Returns the network ID of the given object.
   *
   * @param {number} object
   * @return {number}
   */
export const OBJ_TO_NET = '0x99bfdc94a603e541';
/**
   * PARTICIPANT_ID
   * Return the local Participant ID
   *
  
   * @return {number}
   */
export const PARTICIPANT_ID = '0x90986e8876ce0a83';
/**
   * PARTICIPANT_ID_TO_INT
   * Return the local Participant ID.
   * 
   * This native is exactly the same as 'PARTICIPANT_ID' native.
   *
  
   * @return {number}
   */
export const PARTICIPANT_ID_TO_INT = '0x57a3bddad8e5aa0a';
/**
   * PED_TO_NET
   * Returns the network ID of the given ped.
   *
   * @param {number} ped
   * @return {number}
   */
export const PED_TO_NET = '0x0edec3c276198689';
/**
   * PREVENT_MIGRATION_OF_ENTITIES_IN_FAST_INSTANCE_FOR_LOCAL_PLAYER
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const PREVENT_MIGRATION_OF_ENTITIES_IN_FAST_INSTANCE_FOR_LOCAL_PLAYER = '0x89d803cd48622150';
/**
   * PREVENT_NETWORK_ID_MIGRATION
   *
   * @param {number} netId
   * @return {void}
   */
export const PREVENT_NETWORK_ID_MIGRATION = '0x7182edda1ee7db5a';
/**
   * RESERVE_NETWORK_CLIENT_MISSION_OBJECTS
   *
   * @param {number} amount
   * @return {void}
   */
export const RESERVE_NETWORK_CLIENT_MISSION_OBJECTS = '0xe7dda8bd3bcf751c';
/**
   * RESERVE_NETWORK_CLIENT_MISSION_PEDS
   *
   * @param {number} amount
   * @return {void}
   */
export const RESERVE_NETWORK_CLIENT_MISSION_PEDS = '0x807e119f80231732';
/**
   * RESERVE_NETWORK_MISSION_OBJECTS
   *
   * @param {number} amount
   * @return {void}
   */
export const RESERVE_NETWORK_MISSION_OBJECTS = '0x4e5c93bd0c32fbf8';
/**
   * RESERVE_NETWORK_MISSION_PEDS
   *
   * @param {number} amount
   * @return {void}
   */
export const RESERVE_NETWORK_MISSION_PEDS = '0xb60feba45333d36f';
/**
   * RESERVE_NETWORK_MISSION_PICKUPS
   *
   * @param {number} amount
   * @return {void}
   */
export const RESERVE_NETWORK_MISSION_PICKUPS = '0x4d40e7d749bc6e6d';
/**
   * RESERVE_NETWORK_MISSION_VEHICLES
   *
   * @param {number} amount
   * @return {void}
   */
export const RESERVE_NETWORK_MISSION_VEHICLES = '0x76b02e21ed27a469';
/**
   * SET_ENTITY_VISIBLE_IN_CUTSCENE
   *
   * @param {number} entity
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {number} p3
   * @return {void}
   */
export const SET_ENTITY_VISIBLE_IN_CUTSCENE = '0xe0031d3c8f36ab82';
/**
   * SET_LOCAL_PLAYER_AS_GHOST
   * Old name: _SET_LOCAL_PLAYER_AS_GHOST
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_LOCAL_PLAYER_AS_GHOST = '0x5ffe9b4144f9712f';
/**
   * SET_LOCAL_PLAYER_INVISIBLE_LOCALLY
   *
   * @param {boolean} p0
   * @return {void}
   */
export const SET_LOCAL_PLAYER_INVISIBLE_LOCALLY = '0xe5f773c1a1d9d168';
/**
   * SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE
   *
   * @param {boolean} local
   * @param {boolean} remote
   * @param {number} instanceId
   * @return {void}
   */
export const SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE = '0xd1065d68947e7b6e';
/**
   * SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER
   *
   * @param {number} netId
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER = '0xa8a024587329f36a';
/**
   * SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES
   *
   * @param {number} netId
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES = '0xe05e81a888fa63c8';
/**
   * SET_NETWORK_ID_STOP_CLONING
   *
   * @param {number} networkId
   * @param {boolean} bStopCloning
   * @return {void}
   */
export const SET_NETWORK_ID_STOP_CLONING = '0x9ed3108d6847760a';
/**
   * SET_NETWORK_ID_VISIBLE_IN_CUTSCENE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const SET_NETWORK_ID_VISIBLE_IN_CUTSCENE = '0xa6928482543022b4';
/**
   * SET_PLAYER_INVISIBLE_LOCALLY
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PLAYER_INVISIBLE_LOCALLY = '0x12b37d54667db0b8';
/**
   * SET_PLAYER_VISIBLE_LOCALLY
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PLAYER_VISIBLE_LOCALLY = '0xfaa10f1fafb11af2';
/**
   * TEXTURE_DOWNLOAD_GET_NAME
   *
   * @param {number} textureDownloadId
   * @return {string | number}
   */
export const TEXTURE_DOWNLOAD_GET_NAME = '0x3448505b6e35262d';
/**
   * TEXTURE_DOWNLOAD_RELEASE
   *
   * @param {number} textureDownloadId
   * @return {void}
   */
export const TEXTURE_DOWNLOAD_RELEASE = '0x487eb90b98e9fb19';
/**
   * TEXTURE_DOWNLOAD_REQUEST
   * Returns textureDownloadId
   *
   * @param {DataView} gamerHandle
   * @param {string | number} filePath
   * @param {string | number} name
   * @param {boolean} p3
   * @return {number}
   */
export const TEXTURE_DOWNLOAD_REQUEST = '0x16160da74a8e74a2';
/**
   * UGC_CLEAR_QUERY_RESULTS
   *
   * @param {number} ugcRequestId
   * @return {void}
   */
export const UGC_CLEAR_QUERY_RESULTS = '0xe931354fea710038';
/**
   * UGC_DID_DESCRIPTION_REQUEST_SUCCEED
   *
   * @param {number} description
   * @return {boolean}
   */
export const UGC_DID_DESCRIPTION_REQUEST_SUCCEED = '0x162c23ca83ed0a62';
/**
   * UGC_DID_REQUEST_SUCCEED
   *
   * @param {number} ugcRequestId
   * @return {boolean}
   */
export const UGC_DID_REQUEST_SUCCEED = '0x0b6009a90b8495f1';
/**
   * UGC_GET_CACHED_DESCRIPTION
   *
   * @param {number} description
   * @param {number} length
   * @return {string | number}
   */
export const UGC_GET_CACHED_DESCRIPTION = '0x40f7e66472df3e5c';
/**
   * UGC_HAS_DESCRIPTION_REQUEST_FINISHED
   *
   * @param {number} description
   * @return {boolean}
   */
export const UGC_HAS_DESCRIPTION_REQUEST_FINISHED = '0xebfa8d50addc54c4';
/**
   * UGC_HAS_REQUEST_FINISHED
   *
   * @param {number} ugcRequestId
   * @return {boolean}
   */
export const UGC_HAS_REQUEST_FINISHED = '0xa9eb4d606076615d';
/**
   * UGC_IS_DESCRIPTION_REQUEST_IN_PROGRESS
   *
   * @param {number} description
   * @return {boolean}
   */
export const UGC_IS_DESCRIPTION_REQUEST_IN_PROGRESS = '0x2d5dc831176d0114';
/**
   * UGC_IS_LANGUAGE_SUPPORTED
   *
   * @param {number} languageId
   * @return {boolean}
   */
export const UGC_IS_LANGUAGE_SUPPORTED = '0xf53e48461b71eecb';
/**
   * UGC_IS_REQUEST_PENDING
   *
   * @param {number} ugcRequestId
   * @return {boolean}
   */
export const UGC_IS_REQUEST_PENDING = '0xf4ac4fa844fd559a';
/**
   * UGC_QUERY_GET_CONTENT_HAS_PLAYER_RECORD
   *
   * @param {any} p0
   * @param {number} index
   * @return {boolean}
   */
export const UGC_QUERY_GET_CONTENT_HAS_PLAYER_RECORD = '0xf794765390a6dca5';
/**
   * UGC_QUERY_GET_CONTENT_NUM
   *
   * @param {number} ugcRequestId
   * @return {number}
   */
export const UGC_QUERY_GET_CONTENT_NUM = '0x76160e0396142765';
/**
   * UGC_QUERY_WAS_FORCE_CANCELLED
   *
   * @param {number} ugcRequestId
   * @return {boolean}
   */
export const UGC_QUERY_WAS_FORCE_CANCELLED = '0xf8f0705e77a0e705';
/**
   * UGC_RELEASE_ALL_CACHED_DESCRIPTIONS
   *
  
   * @return {void}
   */
export const UGC_RELEASE_ALL_CACHED_DESCRIPTIONS = '0x68103e2247887242';
/**
   * UGC_RELEASE_CACHED_DESCRIPTION
   *
   * @param {number} description
   * @return {boolean}
   */
export const UGC_RELEASE_CACHED_DESCRIPTION = '0x5a34cd9c3c5bec44';
/**
   * UGC_REQUEST_CACHED_DESCRIPTION
   *
   * @param {number} description
   * @return {number}
   */
export const UGC_REQUEST_CACHED_DESCRIPTION = '0x5e0165278f6339ee';
/**
   * UGC_REQUEST_CONTENT_DATA_FROM_PARAMS
   *
   * @param {string | number} contentTypeName
   * @param {string | number} contentId
   * @param {number} fileId
   * @param {number} fileVersion
   * @param {number} languageId
   * @return {number}
   */
export const UGC_REQUEST_CONTENT_DATA_FROM_PARAMS = '0x7fd2990af016795e';
/**
   * UGC_SET_QUERY_DATA_FROM_OFFLINE
   *
   * @param {boolean} p0
   * @return {void}
   */
export const UGC_SET_QUERY_DATA_FROM_OFFLINE = '0xf98dde0a8ed09323';
/**
   * UGC_TEXTURE_DOWNLOAD_REQUEST
   *
   * @param {DataView} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {DataView} p4
   * @param {boolean} p5
   * @return {number}
   */
export const UGC_TEXTURE_DOWNLOAD_REQUEST = '0x308f96458b7087cc';
/**
   * VEH_TO_NET
   * Returns the network ID of the given vehicle.
   *
   * @param {number} vehicle
   * @return {number}
   */
export const VEH_TO_NET = '0xb4c94523f023419c';
/**
   * _0x02B3CDD652B3CDD6
   * Note: this native was added in build 1311.16
   * 
   * GET_NUM_*
   *
  
   * @return {number}
   */
export const _0x02B3CDD652B3CDD6 = '0x02b3cdd652b3cdd6';
/**
   * _0x02C4C6C2900D84DF
   * Only used in SP R* Script dominoes_sp: p1 = 0
   *
   * @param {number} player
   * @param {any} p1
   * @return {void}
   */
export const _0x02C4C6C2900D84DF = '0x02c4c6c2900d84df';
/**
   * _0x039AD6B57D5179FF
   * Note: this native was added in build 1311.23
   *
  
   * @return {number}
   */
export const _0x039AD6B57D5179FF = '0x039ad6b57d5179ff';
/**
   * _0x039B692B3318FAB6
   * Note: this native was added in build 1311.23
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _0x039B692B3318FAB6 = '0x039b692b3318fab6';
/**
   * _0x062842D61D0D53FD
   * Note: this native was added in build 1311.23
   *
  
   * @return {boolean}
   */
export const _0x062842D61D0D53FD = '0x062842d61d0d53fd';
/**
   * _0x0B6B4507AC5EA8B8
   *
  
   * @return {boolean}
   */
export const _0x0B6B4507AC5EA8B8 = '0x0b6b4507ac5ea8b8';
/**
   * _0x0BF90CBB6B72977B
   *
  
   * @return {void}
   */
export const _0x0BF90CBB6B72977B = '0x0bf90cbb6b72977b';
/**
   * _0x0CC28C08613BA9E5
   * nullsub, doesn't do anything
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x0CC28C08613BA9E5 = '0x0cc28c08613ba9e5';
/**
   * _0x0D183D8490EE4366
   * Note: this native was added in build 1311.23
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const _0x0D183D8490EE4366 = '0x0d183d8490ee4366';
/**
   * _0x0E54D4DA6018FF8E
   *
  
   * @return {boolean}
   */
export const _0x0E54D4DA6018FF8E = '0x0e54d4da6018ff8e';
/**
   * _0x106CBDD5077DEDE1
   * Note: this native was added in build 1311.23
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _0x106CBDD5077DEDE1 = '0x106cbdd5077dede1';
/**
   * _0x13F592FC3BF0EA84
   *
   * @param {number} volume
   * @param {boolean} p1
   * @param {number} originalWeight
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x13F592FC3BF0EA84 = '0x13f592fc3bf0ea84';
/**
   * _0x1413B6BF27AB7A95
   *
  
   * @return {number}
   */
export const _0x1413B6BF27AB7A95 = '0x1413b6bf27ab7a95';
/**
   * _0x160F0CE6D76A39C9
   * nullsub, doesn't do anything
   *
  
   * @return {any}
   */
export const _0x160F0CE6D76A39C9 = '0x160f0ce6d76a39c9';
/**
   * _0x16EFB123C4451032
   *
   * @param {number} p0
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const _0x16EFB123C4451032 = '0x16efb123c4451032';
/**
   * _0x18B94666CF610AEB
   *
  
   * @return {boolean}
   */
export const _0x18B94666CF610AEB = '0x18b94666cf610aeb';
/**
   * _0x19447FCAE97704DC
   * Note: this native was added in build 1311.23
   *
   * @param {number} ctx
   * @param {number} ec
   * @param {boolean} ex
   * @param {boolean} ro
   * @return {void}
   */
export const _0x19447FCAE97704DC = '0x19447fcae97704dc';
/**
   * _0x19B52C20B5C4757C
   *
  
   * @return {void}
   */
export const _0x19B52C20B5C4757C = '0x19b52c20b5c4757c';
/**
   * _0x1E4E097D71D449FB
   * Note: this native was added in build 1311.23
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _0x1E4E097D71D449FB = '0x1e4e097d71d449fb';
/**
   * _0x232E1EB23CDB313C
   *
  
   * @return {boolean}
   */
export const _0x232E1EB23CDB313C = '0x232e1eb23cdb313c';
/**
   * _0x236321F1178A5446
   * _NETWORK_GET_A* - _NETWORK_GET_D*
   *
   * @param {number} player
   * @param {number} ped
   * @param {DataView} p2
   * @return {boolean}
   */
export const _0x236321F1178A5446 = '0x236321f1178a5446';
/**
   * _0x2686BD9566B65EDA
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _0x2686BD9566B65EDA = '0x2686bd9566b65eda';
/**
   * _0x26A867C0B7A456D1
   * _GET_LAUNCH_PARAM_(RESPOT?)*
   * Name is probably invalid since this native only reads data from parsed entity.
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _0x26A867C0B7A456D1 = '0x26a867c0b7a456d1';
/**
   * _0x271F95E55C663B8B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x271F95E55C663B8B = '0x271f95e55c663b8b';
/**
   * _0x273E04A3A7AD1F2D
   *
  
   * @return {boolean}
   */
export const _0x273E04A3A7AD1F2D = '0x273e04a3a7ad1f2d';
/**
   * _0x27B1AE4D8C652F08
   *
   * @param {number} p0
   * @return {number}
   */
export const _0x27B1AE4D8C652F08 = '0x27b1ae4d8c652f08';
/**
   * _0x2C4E98DDA475364F
   * nullsub, doesn't do anything
   *
   * @param {string | number} p0
   * @return {void}
   */
export const _0x2C4E98DDA475364F = '0x2c4e98dda475364f';
/**
   * _0x2CD41AC000E6F611
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const _0x2CD41AC000E6F611 = '0x2cd41ac000e6f611';
/**
   * _0x3034C77C79A58880
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x3034C77C79A58880 = '0x3034c77c79a58880';
/**
   * _0x316FD416C432C761
   * Note: this native was added in build 1311.23
   *
  
   * @return {boolean}
   */
export const _0x316FD416C432C761 = '0x316fd416c432c761';
/**
   * _0x335AF56613CA0F49
   * Note: this native was added in build 1311.23
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x335AF56613CA0F49 = '0x335af56613ca0f49';
/**
   * _0x34BC1E79546BA543
   * _NETWORK_A* - _NETWORK_C*
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x34BC1E79546BA543 = '0x34bc1e79546ba543';
/**
   * _0x3AA0CDC63696166D
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0x3AA0CDC63696166D = '0x3aa0cdc63696166d';
/**
   * _0x3CBD6565D9C3B133
   * Note: this native was added in build 1311.23
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x3CBD6565D9C3B133 = '0x3cbd6565d9c3b133';
/**
   * _0x3E4A16BC669E71B3
   *
  
   * @return {boolean}
   */
export const _0x3E4A16BC669E71B3 = '0x3e4a16bc669e71b3';
/**
   * _0x3E74A687A73979C6
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x3E74A687A73979C6 = '0x3e74a687a73979c6';
/**
   * _0x3E8CCE6769DB5F34
   * Stadia only; always returns -1 on other platforms. p0 may be a BOOL.
   *
   * @param {number} p0
   * @return {number}
   */
export const _0x3E8CCE6769DB5F34 = '0x3e8cce6769db5f34';
/**
   * _0x3F0ABAE38A0515AD
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const _0x3F0ABAE38A0515AD = '0x3f0abae38a0515ad';
/**
   * _0x3F2EE18A3E294801
   *
   * @param {number} p0
   * @return {number}
   */
export const _0x3F2EE18A3E294801 = '0x3f2ee18a3e294801';
/**
   * _0x405DDEFB1F531B18
   *
   * @param {number} volume
   * @param {boolean} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x405DDEFB1F531B18 = '0x405ddefb1f531b18';
/**
   * _0x40FEDB13870042F1
   * Note: this native was added in build 1355.30
   *
  
   * @return {void}
   */
export const _0x40FEDB13870042F1 = '0x40fedb13870042f1';
/**
   * _0x41452E8A3B9C0C4B
   *
  
   * @return {number}
   */
export const _0x41452E8A3B9C0C4B = '0x41452e8a3b9c0c4b';
/**
   * _0x422F9D6D6C7BC290
   * Note: this native was added in build 1355.30
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x422F9D6D6C7BC290 = '0x422f9d6d6c7bc290';
/**
   * _0x43CF999205084B4B
   *
  
   * @return {void}
   */
export const _0x43CF999205084B4B = '0x43cf999205084b4b';
/**
   * _0x4538EE7C321590BC
   * Returns the entity associated with the given network ID.
   *
   * @param {number} networkId
   * @return {number}
   */
export const _0x4538EE7C321590BC = '0x4538ee7c321590bc';
/**
   * _0x455156F47DC6B78C
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x455156F47DC6B78C = '0x455156f47dc6b78c';
/**
   * _0x4835413EA6F9C9CD
   * Note: this native was added in build 1311.23
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _0x4835413EA6F9C9CD = '0x4835413ea6f9c9cd';
/**
   * _0x49CF17A564918E8D
   *
  
   * @return {void}
   */
export const _0x49CF17A564918E8D = '0x49cf17a564918e8d';
/**
   * _0x5133CF81924F1129
   * Hardcoded to return zero.
   *
  
   * @return {number}
   */
export const _0x5133CF81924F1129 = '0x5133cf81924f1129';
/**
   * _0x51951DE06C0D1C40
   *
   * @param {number} player
   * @param {number} type
   * @return {void}
   */
export const _0x51951DE06C0D1C40 = '0x51951de06c0d1c40';
/**
   * _0x564552C6AF1EEAB1
   *
  
   * @return {void}
   */
export const _0x564552C6AF1EEAB1 = '0x564552c6af1eeab1';
/**
   * _0x5759160AC17C13CE
   *
   * @param {DataView} gamerHandle
   * @param {string | number} message
   * @return {void}
   */
export const _0x5759160AC17C13CE = '0x5759160ac17c13ce';
/**
   * _0x5A91BCEF74944E93
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _0x5A91BCEF74944E93 = '0x5a91bcef74944e93';
/**
   * _0x5B9C6AC118FD4774
   *
  
   * @return {void}
   */
export const _0x5B9C6AC118FD4774 = '0x5b9c6ac118fd4774';
/**
   * _0x5CB8B0C846D0F30B
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x5CB8B0C846D0F30B = '0x5cb8b0c846d0f30b';
/**
   * _0x5CD3AAD8FF9ED121
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x5CD3AAD8FF9ED121 = '0x5cd3aad8ff9ed121';
/**
   * _0x5D3C528B7A7DF836
   * _NETWORK_SPAWN_CONFIG_*
   *
   * @param {number} nsctf
   * @return {void}
   */
export const _0x5D3C528B7A7DF836 = '0x5d3c528b7a7df836';
/**
   * _0x5ED39DA62BEB1330
   *
   * @param {number} p0
   * @return {any}
   */
export const _0x5ED39DA62BEB1330 = '0x5ed39da62beb1330';
/**
   * _0x5F0E99071582DECA
   *
   * @param {any} p0
   * @param {number} index
   * @param {number} p2
   * @return {any}
   */
export const _0x5F0E99071582DECA = '0x5f0e99071582deca';
/**
   * _0x5F328FC909F0E0FF
   * Note: this native was added in build 1311.23
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {boolean}
   */
export const _0x5F328FC909F0E0FF = '0x5f328fc909f0e0ff';
/**
   * _0x603469298A4308AF
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x603469298A4308AF = '0x603469298a4308af';
/**
   * _0x61BFBAA795E712AD
   *
  
   * @return {void}
   */
export const _0x61BFBAA795E712AD = '0x61bfbaa795e712ad';
/**
   * _0x64A36BA85CE01A81
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0x64A36BA85CE01A81 = '0x64a36ba85ce01a81';
/**
   * _0x67CCDF74C4DF7169
   *
  
   * @return {boolean}
   */
export const _0x67CCDF74C4DF7169 = '0x67ccdf74c4df7169';
/**
   * _0x691E4DE5309EAEFC
   *
   * @param {any} p0
   * @param {DataView} p1
   * @return {void}
   */
export const _0x691E4DE5309EAEFC = '0x691e4de5309eaefc';
/**
   * _0x6C27442A225A241A
   *
   * @param {number} p0
   * @return {number}
   */
export const _0x6C27442A225A241A = '0x6c27442a225a241a';
/**
   * _0x6C7E04E9DE451789
   *
  
   * @return {void}
   */
export const _0x6C7E04E9DE451789 = '0x6c7e04e9de451789';
/**
   * _0x6CEE2E30021DAEC6
   * _NETWORK_SPAWN_CONFIG_*
   *
  
   * @return {void}
   */
export const _0x6CEE2E30021DAEC6 = '0x6cee2e30021daec6';
/**
   * _0x6CF82A7F65A5AD5F
   * _NETWORK_GET_A* - _NETWORK_GET_D*
   *
   * @param {number} ped
   * @param {DataView} p1
   * @return {number}
   */
export const _0x6CF82A7F65A5AD5F = '0x6cf82a7f65a5ad5f';
/**
   * _0x704F92B3AF20D857
   *
   * @param {boolean} setting
   * @return {void}
   */
export const _0x704F92B3AF20D857 = '0x704f92b3af20d857';
/**
   * _0x71FA2D1880C48032
   * Only used in R* Script fm_race_controller
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x71FA2D1880C48032 = '0x71fa2d1880c48032';
/**
   * _0x744BFBB0CA908161
   * Note: this native was added in build 1311.23
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _0x744BFBB0CA908161 = '0x744bfbb0ca908161';
/**
   * _0x75FC34A2BA345BD1
   *
   * @param {number} entity
   * @param {number} player
   * @param {DataView} p2
   * @return {boolean}
   */
export const _0x75FC34A2BA345BD1 = '0x75fc34a2ba345bd1';
/**
   * _0x7673C0D2C5CDAC55
   * Note: this native was added in build 1311.23
   *
  
   * @return {void}
   */
export const _0x7673C0D2C5CDAC55 = '0x7673c0d2c5cdac55';
/**
   * _0x77B299E8799B1332
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x77B299E8799B1332 = '0x77b299e8799b1332';
/**
   * _0x780A13F780A13F1B
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x780A13F780A13F1B = '0x780a13f780a13f1b';
/**
   * _0x78271BC02AE9AF83
   * Note: this native was added in build 1436.31
   *
   * @param {number} p0
   * @return {number}
   */
export const _0x78271BC02AE9AF83 = '0x78271bc02ae9af83';
/**
   * _0x7A8E8DF782B47EB0
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x7A8E8DF782B47EB0 = '0x7a8e8df782b47eb0';
/**
   * _0x7B3FF2D193628126
   *
   * @param {number} player
   * @return {void}
   */
export const _0x7B3FF2D193628126 = '0x7b3ff2d193628126';
/**
   * _0x7BCA0A3972708436
   *
   * @param {DataView} outData
   * @param {number} p1
   * @return {number}
   */
export const _0x7BCA0A3972708436 = '0x7bca0a3972708436';
/**
   * _0x7E300B5B86AB1D1A
   *
   * @param {DataView} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @param {number} p10
   * @param {number} p11
   * @param {number} p12
   * @param {number} p13
   * @param {number} p14
   * @return {void}
   */
export const _0x7E300B5B86AB1D1A = '0x7e300b5b86ab1d1a';
/**
   * _0x814729078AED6D30
   *
  
   * @return {void}
   */
export const _0x814729078AED6D30 = '0x814729078aed6d30';
/**
   * _0x862C5040F4888741
   *
   * @param {number} player1
   * @param {number} player2
   * @return {boolean}
   */
export const _0x862C5040F4888741 = '0x862c5040f4888741';
/**
   * _0x880A7202301E282B
   * Params: p5 = 50.f, p6 = 0 in R* Script net_fetch (NET_FETCH_CLIENT_UPDATE_PED_ROLE_CLUE_IDLE)
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p5
   * @param {any} p6
   * @return {boolean}
   */
export const _0x880A7202301E282B = '0x880a7202301e282b';
/**
   * _0x894B5ECAB45D2342
   *
   * @param {number} netHandle
   * @param {any} p1
   * @return {void}
   */
export const _0x894B5ECAB45D2342 = '0x894b5ecab45d2342';
/**
   * _0x917AD74BDCF8B6E9
   * Note: this native was added in build 1311.23
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _0x917AD74BDCF8B6E9 = '0x917ad74bdcf8b6e9';
/**
   * _0x923346025512DFB7
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x923346025512DFB7 = '0x923346025512dfb7';
/**
   * _0x950ACD8F05B7B9DF
   * Related to container entity (RANSACK_ATTACHED_LOCKBOX / RANSACK_ATTACHED_CHEST)
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x950ACD8F05B7B9DF = '0x950acd8f05b7b9df';
/**
   * _0x979765465A6F25FC
   * Must be called from a background script, otherwise it will do nothing.
   *
   * @param {number} entity
   * @param {boolean} p1
   * @return {void}
   */
export const _0x979765465A6F25FC = '0x979765465a6f25fc';
/**
   * _0x97BCE4C4B3191228
   *
  
   * @return {void}
   */
export const _0x97BCE4C4B3191228 = '0x97bce4c4b3191228';
/**
   * _0x981146E5C9CE9250
   *
   * @param {number} inviteIndex
   * @return {boolean}
   */
export const _0x981146E5C9CE9250 = '0x981146e5c9ce9250';
/**
   * _0x982D7AD755B8F62C
   * Note: this native was added in build 1311.23
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _0x982D7AD755B8F62C = '0x982d7ad755b8f62c';
/**
   * _0x9B39B0555CC692B5
   *
  
   * @return {void}
   */
export const _0x9B39B0555CC692B5 = '0x9b39b0555cc692b5';
/**
   * _0x9E5A47744C0F0376
   * Note: this native was added in build 1311.23
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0x9E5A47744C0F0376 = '0x9e5a47744c0f0376';
/**
   * _0xA2837A5E21FB5A58
   *
   * @param {any} p0
   * @return {boolean}
   */
export const _0xA2837A5E21FB5A58 = '0xa2837a5e21fb5a58';
/**
   * _0xA47D48D06AA5A188
   *
  
   * @return {boolean}
   */
export const _0xA47D48D06AA5A188 = '0xa47d48d06aa5a188';
/**
   * _0xA63E4F050F20021F
   *
  
   * @return {void}
   */
export const _0xA63E4F050F20021F = '0xa63e4f050f20021f';
/**
   * _0xA6F1BAABFF6AD7B9
   *
   * @param {DataView} p0
   * @return {void}
   */
export const _0xA6F1BAABFF6AD7B9 = '0xa6f1baabff6ad7b9';
/**
   * _0xA7670F7991099680
   * Note: this native was added in build 1311.23
   *
   * @param {number} p0
   * @return {void}
   */
export const _0xA7670F7991099680 = '0xa7670f7991099680';
/**
   * _0xA94ECE191D90637A
   *
  
   * @return {number}
   */
export const _0xA94ECE191D90637A = '0xa94ece191d90637a';
/**
   * _0xA95470DA137587F5
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0xA95470DA137587F5 = '0xa95470da137587f5';
/**
   * _0xACC44768AF229042
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const _0xACC44768AF229042 = '0xacc44768af229042';
/**
   * _0xAFA14F98327791CE
   *
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const _0xAFA14F98327791CE = '0xafa14f98327791ce';
/**
   * _0xB131E686BD97B3F8
   *
  
   * @return {void}
   */
export const _0xB131E686BD97B3F8 = '0xb131e686bd97b3f8';
/**
   * _0xB389289F031F059A
   *
  
   * @return {number}
   */
export const _0xB389289F031F059A = '0xb389289f031f059a';
/**
   * _0xBAF7E2979442B29F
   * Note: this native was added in build 1311.23
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _0xBAF7E2979442B29F = '0xbaf7e2979442b29f';
/**
   * _0xBB1EC8C2EEF33BAA
   *
   * @param {number} entity
   * @return {void}
   */
export const _0xBB1EC8C2EEF33BAA = '0xbb1ec8c2eef33baa';
/**
   * _0xBB697756309D77EE
   *
   * @param {boolean} p0
   * @return {any}
   */
export const _0xBB697756309D77EE = '0xbb697756309d77ee';
/**
   * _0xBC7D36946D19E60E
   * Only used in fm_race_controller R* Script (PROCESS_LOCAL_PLAYER_INIT)
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0xBC7D36946D19E60E = '0xbc7d36946d19e60e';
/**
   * _0xBF8276E51761F9DA
   *
  
   * @return {number}
   */
export const _0xBF8276E51761F9DA = '0xbf8276e51761f9da';
/**
   * _0xC028B3F52C707C49
   *
   * @param {any} p0
   * @return {boolean}
   */
export const _0xC028B3F52C707C49 = '0xc028b3f52c707c49';
/**
   * _0xC0CFFDA87C2C163D
   *
   * @param {number} p0
   * @param {any} p1
   * @param {number} p2
   * @return {any}
   */
export const _0xC0CFFDA87C2C163D = '0xc0cffda87c2c163d';
/**
   * _0xC1968045EEB563B7
   * Note: this native was added in build 1311.23
   *
   * @param {number} p0
   * @return {void}
   */
export const _0xC1968045EEB563B7 = '0xc1968045eeb563b7';
/**
   * _0xC8B6D18E22484643
   *
  
   * @return {void}
   */
export const _0xC8B6D18E22484643 = '0xc8b6d18e22484643';
/**
   * _0xC964FCD3D1720697
   * nullsub, doesn't do anything
   *
  
   * @return {any}
   */
export const _0xC964FCD3D1720697 = '0xc964fcd3d1720697';
/**
   * _0xCA58D4FD20D70F24
   *
   * @param {any} p0
   * @return {number}
   */
export const _0xCA58D4FD20D70F24 = '0xca58d4fd20d70f24';
/**
   * _0xCC4E72C339461ED1
   *
  
   * @return {any}
   */
export const _0xCC4E72C339461ED1 = '0xcc4e72c339461ed1';
/**
   * _0xCD53E6CBF609C012
   *
   * @param {number} ugcRequestId
   * @return {boolean}
   */
export const _0xCD53E6CBF609C012 = '0xcd53e6cbf609c012';
/**
   * _0xCF23AB5BD47B384D
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xCF23AB5BD47B384D = '0xcf23ab5bd47b384d';
/**
   * _0xD1FFB246F4E088AC
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0xD1FFB246F4E088AC = '0xd1ffb246f4e088ac';
/**
   * _0xD39A72AE5EBD57E5
   *
  
   * @return {void}
   */
export const _0xD39A72AE5EBD57E5 = '0xd39a72ae5ebd57e5';
/**
   * _0xD3A3C8B9F3BDEF81
   *
  
   * @return {any}
   */
export const _0xD3A3C8B9F3BDEF81 = '0xd3a3c8b9f3bdef81';
/**
   * _0xD3B6EBC6C3D77D44
   * Note: this native was added in build 1311.23
   *
   * @param {number} p0
   * @return {void}
   */
export const _0xD3B6EBC6C3D77D44 = '0xd3b6ebc6c3d77d44';
/**
   * _0xD4022C7286B0DFA2
   *
   * @param {string | number} p0
   * @param {number} p1
   * @param {number} p2
   * @return {any}
   */
export const _0xD4022C7286B0DFA2 = '0xd4022c7286b0dfa2';
/**
   * _0xD42C543F73233041
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0xD42C543F73233041 = '0xd42c543f73233041';
/**
   * _0xD637D327080CD86E
   *
   * @param {number} p0
   * @return {void}
   */
export const _0xD637D327080CD86E = '0xd637d327080cd86e';
/**
   * _0xD78A26024BB13E08
   *
   * @param {number} player
   * @return {void}
   */
export const _0xD78A26024BB13E08 = '0xd78a26024bb13e08';
/**
   * _0xD7BAD4062074B9C1
   *
   * @param {any} p0
   * @return {boolean}
   */
export const _0xD7BAD4062074B9C1 = '0xd7bad4062074b9c1';
/**
   * _0xD7D0DF27CB1765B5
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0xD7D0DF27CB1765B5 = '0xd7d0df27cb1765b5';
/**
   * _0xDA1BFED8582F61F0
   *
  
   * @return {boolean}
   */
export const _0xDA1BFED8582F61F0 = '0xda1bfed8582f61f0';
/**
   * _0xDBDF80673BBA3D65
   * Note: this native was added in build 1491.50
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0xDBDF80673BBA3D65 = '0xdbdf80673bba3d65';
/**
   * _0xDC6AD5C046F33AB4
   *
   * @param {boolean} p0
   * @param {boolean} p1
   * @return {void}
   */
export const _0xDC6AD5C046F33AB4 = '0xdc6ad5c046f33ab4';
/**
   * _0xDCA4A74135E1DEA5
   *
   * @param {any} p0
   * @return {boolean}
   */
export const _0xDCA4A74135E1DEA5 = '0xdca4a74135e1dea5';
/**
   * _0xE10F2D7715ABABEC
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xE10F2D7715ABABEC = '0xe10f2d7715ababec';
/**
   * NETWORK_UNREGISTER_NETWORKED_ENTITY
   *
   * @param {number} entity
   * @return {void}
   */
export const NETWORK_UNREGISTER_NETWORKED_ENTITY = '0xe31a04513237dc89';
/**
   * _0xE39600E50D608693
   *
   * @param {any} p0
   * @param {any} p1
   * @return {boolean}
   */
export const _0xE39600E50D608693 = '0xe39600e50d608693';
/**
   * _0xE3AB5EEFCB6671A2
   *
   * @param {number} setting
   * @return {void}
   */
export const _0xE3AB5EEFCB6671A2 = '0xe3ab5eefcb6671a2';
/**
   * _0xE5634491A58C2703
   *
   * @param {number} p0
   * @return {void}
   */
export const _0xE5634491A58C2703 = '0xe5634491a58c2703';
/**
   * _0xE59F4924BD3A718D
   *
   * @param {number} p0
   * @return {string | number}
   */
export const _0xE59F4924BD3A718D = '0xe59f4924bd3a718d';
/**
   * _0xE5FF65CFF5160752
   *
  
   * @return {void}
   */
export const _0xE5FF65CFF5160752 = '0xe5ff65cff5160752';
/**
   * _0xE79BA3BC265895DA
   *
   * @param {number} p0
   * @return {string | number}
   */
export const _0xE79BA3BC265895DA = '0xe79ba3bc265895da';
/**
   * _0xE8E633215471BB5D
   *
   * @param {any} p0
   * @return {number}
   */
export const _0xE8E633215471BB5D = '0xe8e633215471bb5d';
/**
   * _0xEC089F84A9C16C62
   * nullsub, doesn't do anything
   *
  
   * @return {any}
   */
export const _0xEC089F84A9C16C62 = '0xec089f84a9c16c62';
/**
   * _0xF23A6D6C11D8EC15
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const _0xF23A6D6C11D8EC15 = '0xf23a6d6c11d8ec15';
/**
   * _0xF260AF6F43953316
   * Same Native Handler as VEH_TO_NET, PED_TO_NET, OBJ_TO_NET and NETWORK_GET_NETWORK_ID_FROM_ENTITY
   *
   * @param {number} handle
   * @return {number}
   */
export const _0xF260AF6F43953316 = '0xf260af6f43953316';
/**
   * _0xF302AB9D978352EE
   * Returns the entity's network ID.
   *
   * @param {number} entity
   * @return {number}
   */
export const _0xF302AB9D978352EE = '0xf302ab9d978352ee';
/**
   * _0xF342F6BD0A8287D5
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xF342F6BD0A8287D5 = '0xf342f6bd0a8287d5';
/**
   * _0xF8DC69DC1AD19072
   * Note: this native was added in build 1311.23
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _0xF8DC69DC1AD19072 = '0xf8dc69dc1ad19072';
/**
   * _0xFB3205788F8AFA3F
   * Note: this native was added in build 1311.23
   *
  
   * @return {number}
   */
export const _0xFB3205788F8AFA3F = '0xfb3205788f8afa3f';
/**
   * _0xFC6FCF4C03F1BBF6
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const _0xFC6FCF4C03F1BBF6 = '0xfc6fcf4c03f1bbf6';
/**
   * _NETWORK_LEAVE_SESSION
   * Only used in R* Script startup_clip Seems to just kill the network connection, sets the players coords to 0, 0, 0 when doing GetEntityCoords
   *
  
   * @return {void}
   */
export const _NETWORK_LEAVE_SESSION = '0xfd4272a137703449';
/**
   * _0xFD8112109A96877C
   * Note: this native was added in build 1311.23
   *
  
   * @return {void}
   */
export const _0xFD8112109A96877C = '0xfd8112109a96877c';
/**
   * _0xFE53B1F8D43F19BF
   *
   * @param {number} player1
   * @param {number} player2
   * @return {number}
   */
export const _0xFE53B1F8D43F19BF = '0xfe53b1f8d43f19bf';
/**
   * _0xFF36F36B07E69059
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xFF36F36B07E69059 = '0xff36f36b07e69059';
/**
   * _ANIM_SCENE_TO_NET
   *
   * @param {number} animScene
   * @return {number}
   */
export const _ANIM_SCENE_TO_NET = '0xe0d73cddea79ddcd';
/**
   * _CLEAR_LAUNCH_PARAM
   *
   * @param {string | number} paramName
   * @return {void}
   */
export const _CLEAR_LAUNCH_PARAM = '0x782c94db6469634d';
/**
   * _COMMERCE_STORE_IS_ENABLED
   *
  
   * @return {boolean}
   */
export const _COMMERCE_STORE_IS_ENABLED = '0xdbc754cb6ccb9378';
/**
   * _COMMERCE_STORE_IS_OPEN
   *
  
   * @return {boolean}
   */
export const _COMMERCE_STORE_IS_OPEN = '0xce5e79d9e303628e';
/**
   * _GET_LAUNCH_PARAM_EXISTS
   *
   * @param {string | number} paramName
   * @return {boolean}
   */
export const _GET_LAUNCH_PARAM_EXISTS = '0x02e97ce283648cd9';
/**
   * _GET_LAUNCH_PARAM_STRING
   *
  
   * @return {string | number}
   */
export const _GET_LAUNCH_PARAM_STRING = '0xc59ab6a04333c502';
/**
   * _GET_NUM_CREATED_MISSION_PICKUPS
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _GET_NUM_CREATED_MISSION_PICKUPS = '0xd2ba051b94ca9bcc';
/**
   * _GET_NUM_PEER_NEGOTIATION_RESPONSES
   * Note: this native was added in build 1311.16
   *
  
   * @return {number}
   */
export const _GET_NUM_PEER_NEGOTIATION_RESPONSES = '0x4fe932e84fe932e8';
/**
   * _GET_NUM_RESERVED_MISSION_PICKUPS
   *
   * @param {boolean} p0
   * @return {number}
   */
export const _GET_NUM_RESERVED_MISSION_PICKUPS = '0x62be3ecc79fbd004';
/**
   * _GET_PLAYER_WAYPOINT_IS_ACTIVE
   *
   * @param {number} player
   * @return {boolean}
   */
export const _GET_PLAYER_WAYPOINT_IS_ACTIVE = '0xdcc4b7f7112e8ab7';
/**
   * _GET_RESERVED_MISSION_ENTITIES_FOR_THREAD
   * Only used in R* Script net_stable_manager
   *
   * @param {number} threadId
   * @return {[number, number, number, number, number, number]}
   */
export const _GET_RESERVED_MISSION_ENTITIES_FOR_THREAD = '0x99aac89c510deb0d';
/**
   * _GET_SOCIAL_MATCHMAKING_ALLOWED
   *
  
   * @return {boolean}
   */
export const _GET_SOCIAL_MATCHMAKING_ALLOWED = '0xd0541ef28e9c4783';
/**
   * _LOCAL_PLAYER_PEDSHOT_TEXTURE_DOWNLOAD_REQUEST
   *
   * @param {number} playerSlot
   * @param {number} personaPhotoLocalCacheType
   * @return {number}
   */
export const _LOCAL_PLAYER_PEDSHOT_TEXTURE_DOWNLOAD_REQUEST = '0x6e2fd8cf7eb10e53';
/**
   * _MUGSHOT_TEXTURE_DOWNLOAD_REQUEST
   * Returns textureDownloadId
   *
   * @param {DataView} gamerHandle
   * @param {number} p1
   * @param {string | number} name
   * @param {boolean} p3
   * @return {number}
   */
export const _MUGSHOT_TEXTURE_DOWNLOAD_REQUEST = '0x9b5db6ceafaa10bb';
/**
   * _NETWORK_ADD_PLAYER_TO_RECENT_GAMERS_LIST
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _NETWORK_ADD_PLAYER_TO_RECENT_GAMERS_LIST = '0x157d8f3de12b307f';
/**
   * _NETWORK_ALERT
   *
   * @param {number} ctx
   * @param {number} lh
   * @param {number} ec
   * @param {number} h
   * @return {void}
   */
export const _NETWORK_ALERT = '0x1baa028f52eed310';
/**
   * _NETWORK_ARE_ONLINE_NOTIFICATIONS_SHOWN_IN_STORY_MODE
   * Returns value of fwuiCachedSetting "general.onlineNotificationsInStoryMode"
   *
  
   * @return {boolean}
   */
export const _NETWORK_ARE_ONLINE_NOTIFICATIONS_SHOWN_IN_STORY_MODE = '0xf5c5929e07512f80';
/**
   * _NETWORK_ARE_PLAYERS_IN_SAME_PLATFORM_PARTY
   *
   * @param {DataView} gamerHandle1
   * @param {DataView} gamerHandle2
   * @return {boolean}
   */
export const _NETWORK_ARE_PLAYERS_IN_SAME_PLATFORM_PARTY = '0x11820d1ae80dea39';
/**
   * _NETWORK_AUTO_SESSION_IS_AUTO_WARP_DISABLED
   *
  
   * @return {boolean}
   */
export const _NETWORK_AUTO_SESSION_IS_AUTO_WARP_DISABLED = '0xe258570e0c116a66';
/**
   * _NETWORK_AUTO_SESSION_IS_INSTANCED_SESSION
   *
  
   * @return {boolean}
   */
export const _NETWORK_AUTO_SESSION_IS_INSTANCED_SESSION = '0x277865a734918ae6';
/**
   * _NETWORK_AUTO_SESSION_IS_PROCESSING_SESSION_SPLIT
   *
  
   * @return {boolean}
   */
export const _NETWORK_AUTO_SESSION_IS_PROCESSING_SESSION_SPLIT = '0xa021095c983f20d8';
/**
   * _NETWORK_AUTO_SESSION_SET_ALLOWED_TO_MERGE
   *
   * @param {boolean} toggle
   * @param {DataView} p1
   * @param {number} p2
   * @return {void}
   */
export const _NETWORK_AUTO_SESSION_SET_ALLOWED_TO_MERGE = '0x63246a24f5747510';
/**
   * _NETWORK_AUTO_SESSION_SET_ALLOWED_TO_SPLIT
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _NETWORK_AUTO_SESSION_SET_ALLOWED_TO_SPLIT = '0x0a428058079ee65c';
/**
   * _NETWORK_AUTO_SESSION_SET_AUTO_WARP_ENABLED
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _NETWORK_AUTO_SESSION_SET_AUTO_WARP_ENABLED = '0x4440fee3efe78f54';
/**
   * _NETWORK_AUTO_SESSION_SPLIT_SESSION_SUCCESSFUL
   *
  
   * @return {boolean}
   */
export const _NETWORK_AUTO_SESSION_SPLIT_SESSION_SUCCESSFUL = '0x6d87ba8ef15226cd';
/**
   * _NETWORK_CAN_ADD_FRIEND
   * On PC this returns true if gamerHandle is a valid handle.
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const _NETWORK_CAN_ADD_FRIEND = '0x99abe9bf9dada162';
/**
   * _NETWORK_CAN_RECEIVE_INVITE_FROM_HANDLE
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const _NETWORK_CAN_RECEIVE_INVITE_FROM_HANDLE = '0xf23d6475640d29eb';
/**
   * _NETWORK_CLEAR_CLOCK_OVERRIDE_OVERTIME
   *
   * @param {number} milliseconds
   * @return {void}
   */
export const _NETWORK_CLEAR_CLOCK_OVERRIDE_OVERTIME = '0x65f040d91001ed4b';
/**
   * _NETWORK_CLOCK_TIME_OVERRIDE
   *
   * @param {number} hour
   * @param {number} minute
   * @param {number} second
   * @param {number} transitionTime
   * @param {boolean} pauseClock
   * @return {void}
   */
export const _NETWORK_CLOCK_TIME_OVERRIDE = '0x669e223e64b1903c';
/**
   * _NETWORK_CLOCK_TIME_OVERRIDE_2
   *
   * @param {number} hour
   * @param {number} minute
   * @param {number} second
   * @param {number} transitionTime
   * @param {boolean} pauseClock
   * @param {boolean} clockwise
   * @return {void}
   */
export const _NETWORK_CLOCK_TIME_OVERRIDE_2 = '0xe28c13ecc36ff14e';
/**
   * _NETWORK_DEBUG_REQUEST_ENTITY_POSITION
   * Must be called from a background script, otherwise it will do nothing.
   *
   * @param {DataView} p0
   * @return {void}
   */
export const _NETWORK_DEBUG_REQUEST_ENTITY_POSITION = '0xfa38b52f91b59075';
/**
   * _NETWORK_DID_RECENT_GAMER_NAMES_REQUEST_SUCCEED
   *
  
   * @return {boolean}
   */
export const _NETWORK_DID_RECENT_GAMER_NAMES_REQUEST_SUCCEED = '0x12aeb56b489415c5';
/**
   * _NETWORK_GET_CURRENT_FRIEND_PAGE_DATA
   *
   * @param {DataView} p0
   * @return {boolean}
   */
export const _NETWORK_GET_CURRENT_FRIEND_PAGE_DATA = '0xa3eec0a5aff3fc5b';
/**
   * _NETWORK_GET_DISPLAY_NAME_FROM_HANDLE
   * Example:
   * 
   * char displayName[64];
   * if (_NETWORK_GET_DISPLAY_NAME_FROM_HANDLE(handle, displayName))
   * {
   *   // use displayName
   * }
   *
   * @param {DataView} gamerHandle
   * @param {string | number} displayName
   * @return {boolean}
   */
export const _NETWORK_GET_DISPLAY_NAME_FROM_HANDLE = '0x7fee4f07c54b6b3c';
/**
   * _NETWORK_GET_GAMERTAG_FROM_FRIEND
   *
   * @param {DataView} gamerHandle
   * @return {string | number}
   */
export const _NETWORK_GET_GAMERTAG_FROM_FRIEND = '0x5659d87be674ab17';
/**
   * _NETWORK_GET_GAMER_SESSION_FROM_HANDLE
   *
   * @param {DataView} data
   * @param {number} count
   * @return {boolean}
   */
export const _NETWORK_GET_GAMER_SESSION_FROM_HANDLE = '0xfbdfe1c1356e12e8';
/**
   * _NETWORK_GET_GAMER_STATUS
   *
   * @param {DataView} gamerHandle
   * @param {number} p1
   * @return {number}
   */
export const _NETWORK_GET_GAMER_STATUS = '0xddaeb478e58f8dea';
/**
   * _NETWORK_GET_GLOBAL_ENTITY_FLAGS
   *
   * @param {number} entity
   * @return {number}
   */
export const _NETWORK_GET_GLOBAL_ENTITY_FLAGS = '0xdd7806fd0543bc3d';
/**
   * _NETWORK_GET_INSTANCE_ID_OF_THREAD
   *
   * @param {number} threadId
   * @return {number}
   */
export const _NETWORK_GET_INSTANCE_ID_OF_THREAD = '0xfb9eced5b68f3b78';
/**
   * _NETWORK_GET_NUM_RECENT_GAMERS
   *
  
   * @return {number}
   */
export const _NETWORK_GET_NUM_RECENT_GAMERS = '0x37a834aec6a4f74a';
/**
   * _NETWORK_GET_PLATFORM_INVITE_ID
   *
  
   * @return {number}
   */
export const _NETWORK_GET_PLATFORM_INVITE_ID = '0x9bcf28fb5d65a9be';
/**
   * _NETWORK_GET_PLAYER_FAST_INSTANCE_ID
   *
   * @param {number} player
   * @return {number}
   */
export const _NETWORK_GET_PLAYER_FAST_INSTANCE_ID = '0xd9267375834c5eab';
/**
   * _NETWORK_GET_PLAYER_OWNER_OF_NETWORK_ID
   *
   * @param {number} netId
   * @return {number}
   */
export const _NETWORK_GET_PLAYER_OWNER_OF_NETWORK_ID = '0xa6c0787443c9583e';
/**
   * _NETWORK_GET_RANK
   *
  
   * @return {number}
   */
export const _NETWORK_GET_RANK = '0x32c90cdfaf40514c';
/**
   * _NETWORK_GET_ROS_TITLE_NAME
   * Returns CGameConfig->ConfigOnlineServices->RosTitleName (see gameconfig.xml)
   *
  
   * @return {string | number}
   */
export const _NETWORK_GET_ROS_TITLE_NAME = '0xac6153a0722f524c';
/**
   * _NETWORK_GET_SESSION_HOST
   *
  
   * @return {number}
   */
export const _NETWORK_GET_SESSION_HOST = '0x8dc9aa3b508b1a85';
/**
   * _NETWORK_GET_SIZE_OF_HOST_BROADCAST_DATA_STORAGE
   *
  
   * @return {[number, number]}
   */
export const _NETWORK_GET_SIZE_OF_HOST_BROADCAST_DATA_STORAGE = '0xba24095ea96dfe17';
/**
   * _NETWORK_GET_SIZE_OF_PLAYER_BROADCAST_DATA_STORAGE
   *
  
   * @return {[number, number]}
   */
export const _NETWORK_GET_SIZE_OF_PLAYER_BROADCAST_DATA_STORAGE = '0x690806bc83bc8ca2';
/**
   * _NETWORK_GET_XP
   *
  
   * @return {number}
   */
export const _NETWORK_GET_XP = '0xdb438cc9bc6f4022';
/**
   * _NETWORK_HAS_COMPLETED_MP_INTRO_FLOW_ON_CURRENT_SLOT
   *
  
   * @return {boolean}
   */
export const _NETWORK_HAS_COMPLETED_MP_INTRO_FLOW_ON_CURRENT_SLOT = '0xdd73c9838ce7181d';
/**
   * _NETWORK_HAS_CONTROL_OF_ANIM_SCENE
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const _NETWORK_HAS_CONTROL_OF_ANIM_SCENE = '0x26a5c12facff8724';
/**
   * _NETWORK_HAS_CURRENT_GET_GAMER_STATUS_STARTED
   *
  
   * @return {boolean}
   */
export const _NETWORK_HAS_CURRENT_GET_GAMER_STATUS_STARTED = '0x25189f9908e9cd65';
/**
   * _NETWORK_IS_FRIEND_HANDLE_IN_SAME_TITLE
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const _NETWORK_IS_FRIEND_HANDLE_IN_SAME_TITLE = '0x665161d250850a9f';
/**
   * _NETWORK_IS_FRIEND_HANDLE_ONLINE
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const _NETWORK_IS_FRIEND_HANDLE_ONLINE = '0xe348d1404bd80146';
/**
   * _NETWORK_IS_IN_SESSION_LOBBY
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const _NETWORK_IS_IN_SESSION_LOBBY = '0xc5196c42de19f646';
/**
   * _NETWORK_IS_PLAYER_IN_SPECTATOR_MODE
   *
   * @param {number} player
   * @return {boolean}
   */
export const _NETWORK_IS_PLAYER_IN_SPECTATOR_MODE = '0x5b709519997ecf0f';
/**
   * _NETWORK_IS_PREVIOUS_UPLOAD_PENDING
   * _NETWORK_IS_T* - _NETWORK_RE*
   *
  
   * @return {boolean}
   */
export const _NETWORK_IS_PREVIOUS_UPLOAD_PENDING = '0xa21e3bad0a42d199';
/**
   * _NETWORK_IS_RECENT_GAMER_NAMES_REQUEST_IN_PROGRESS
   *
  
   * @return {boolean}
   */
export const _NETWORK_IS_RECENT_GAMER_NAMES_REQUEST_IN_PROGRESS = '0x4664d213a0ccaf40';
/**
   * _NETWORK_IS_THREAD_ACTIVE
   *
   * @param {number} threadId
   * @return {boolean}
   */
export const _NETWORK_IS_THREAD_ACTIVE = '0x31dad2cd6d49546e';
/**
   * _NETWORK_IS_TRACKED_PLAYER_VISIBLE
   *
   * @param {number} player
   * @param {number} trackedPlayer
   * @return {boolean}
   */
export const _NETWORK_IS_TRACKED_PLAYER_VISIBLE = '0xe525878a35b9eebd';
/**
   * _NETWORK_PERSONA_PHOTO_WRITE_LOCAL
   * Returns false if pedshot push failed
   *
   * @param {string | number} texture
   * @param {number} playerSlot
   * @param {number} p2
   * @param {number} personaPhotoLocalCacheType
   * @return {boolean}
   */
export const _NETWORK_PERSONA_PHOTO_WRITE_LOCAL = '0x2a48d9567940598f';
/**
   * _NETWORK_PERSONA_PHOTO_WRITE_SC_PROFILE
   * Returns false if pedshot push failed
   *
   * @param {string | number} texture
   * @param {number} personaPhotoType
   * @param {number} formatIndex
   * @return {boolean}
   */
export const _NETWORK_PERSONA_PHOTO_WRITE_SC_PROFILE = '0xb72999d3120599df';
/**
   * _NETWORK_REMOVE_FRIEND
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const _NETWORK_REMOVE_FRIEND = '0x55f618f68ab854d3';
/**
   * _NETWORK_REQUEST_CONTROL_OF_ANIM_SCENE
   *
   * @param {number} animScene
   * @return {boolean}
   */
export const _NETWORK_REQUEST_CONTROL_OF_ANIM_SCENE = '0xaaa92b631b13f614';
/**
   * _NETWORK_RESURRECT_LOCAL_PLAYER_2
   *
   * @param {DataView} args
   * @return {void}
   */
export const _NETWORK_RESURRECT_LOCAL_PLAYER_2 = '0x4154b7d8c75e5dcf';
/**
   * _NETWORK_SEND_SESSION_INVITE
   *
   * @param {DataView} gamerHandle
   * @param {string | number} contentId
   * @param {DataView} data
   * @param {number} dataSize
   * @param {number} p4
   * @param {number} flags
   * @return {boolean}
   */
export const _NETWORK_SEND_SESSION_INVITE = '0xe47001b7cb8b98ae';
/**
   * _NETWORK_SESSION_ADD_SESSION_FLAGS
   * enum eSessionFlags
   * {
   *   SESSION_FLAG_NONE = 0,
   *   SF_INSTANCE = (1 << 0),
   *   SF_MATCH = (1 << 1),
   *   SF_PRIVATE = (1 << 2),
   *   SF_BLOCK_INVITES = (1 << 3),
   *   SF_BLOCK_JOIN_VIA_PRESENCE = (1 << 4),
   *   SF_BLOCK_NON_HOST_INVITES = (1 << 5),
   *   SF_BLOCK_IN_PROGRESS_MATCHMAKING_BACKFILL = (1 << 6),
   *   SF_BLOCK_IN_GAMEPLAY_MATCHMAKING_BACKFILL = (1 << 7),
   *   SF_BLOCK_INVITES_TEMPORARY = (1 << 8),
   *   SF_IN_GAMEPLAY = (1 << 9),
   *   SF_COMPETITIVE = (1 << 10),
   *   SF_MATCHMAKING_BACKFILL_IS_BLOCKED = (1 << 11)
   * };
   *
   * @param {number} flags
   * @return {boolean}
   */
export const _NETWORK_SESSION_ADD_SESSION_FLAGS = '0xe546bda1b3e288ee';
/**
   * _NETWORK_SESSION_ARE_SESSION_IDS_EQUAL
   * Note: this native was added in build 1311.23
   *
   * @param {DataView} sessionId1
   * @param {DataView} sessionId2
   * @return {boolean}
   */
export const _NETWORK_SESSION_ARE_SESSION_IDS_EQUAL = '0x4dec5000f7b508f0';
/**
   * _NETWORK_SESSION_CANCEL_REQUEST
   *
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const _NETWORK_SESSION_CANCEL_REQUEST = '0xe72e5c1289bd1f40';
/**
   * _NETWORK_SESSION_GET_SESSION_ID
   * Note: this native was added in build 1311.23
   *
   * @param {DataView} sessionId
   * @return {void}
   */
export const _NETWORK_SESSION_GET_SESSION_ID = '0xe9b356c330c0a806';
/**
   * _NETWORK_SESSION_GET_SESSION_REQUEST_RESULT
   * Returns result of session request:
   * 0 - NOT_FOUND
   * 1 - IN_PROGRESS
   * 2 - TIMEOUT
   * 3 - PLAYER_OFFLINE
   * 4 - GANG_MEMBERS_CHANGED
   * 5 - PLAYER_CANCELLED
   * 6 - PLAYER_SET_TOO_LARGE
   * 7 - MATCH_ACCEPTED
   * 8 - OTHER
   *
   * @param {DataView} sessionRequestId
   * @return {[number, number]}
   */
export const _NETWORK_SESSION_GET_SESSION_REQUEST_RESULT = '0x0dd051b1bf4b8bd6';
/**
   * _NETWORK_SESSION_IS_NSRR_SUCCESS
   *
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const _NETWORK_SESSION_IS_NSRR_SUCCESS = '0x0f44a5c78d114922';
/**
   * _NETWORK_SESSION_IS_REQUEST_IN_PROGRESS_BY_QUEUE_GROUP
   *
   * @param {number} queueGroup
   * @return {boolean}
   */
export const _NETWORK_SESSION_IS_REQUEST_IN_PROGRESS_BY_QUEUE_GROUP = '0x9e762a595cf88e4a';
/**
   * _NETWORK_SESSION_PLAYLIST_GET_UPCOMING_CONTENT
   * Only used in R* Script net_rolling_playlist
   *
  
   * @return {void}
   */
export const _NETWORK_SESSION_PLAYLIST_GET_UPCOMING_CONTENT = '0x8f9db6cd03b42b58';
/**
   * _NETWORK_SESSION_PLAYLIST_GO_TO_NEXT_CONTENT
   * Only used in R* Script net_rolling_playlist
   *
  
   * @return {void}
   */
export const _NETWORK_SESSION_PLAYLIST_GO_TO_NEXT_CONTENT = '0xbde605f925b07127';
/**
   * _NETWORK_SESSION_REMOVE_PLAYER_FLAGS
   *
   * @param {number} flags
   * @return {boolean}
   */
export const _NETWORK_SESSION_REMOVE_PLAYER_FLAGS = '0x3215bbe34d3418c5';
/**
   * _NETWORK_SESSION_REQUEST_SESSION_NOMINATED
   *
   * @param {number} flags
   * @param {number} userHash
   * @param {number} p2
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const _NETWORK_SESSION_REQUEST_SESSION_NOMINATED = '0x4f4672457ff597d1';
/**
   * _NETWORK_SESSION_REQUEST_SESSION_ON_CALL
   * category:
   * enum eOnCallType
   * {
   *   NETWORK_SESSION_REQUEST_ON_CALL_TYPE_STORY = 2,
   *   NETWORK_SESSION_REQUEST_ON_CALL_TYPE_MATCH = 3
   * };
   *
   * @param {number} flags
   * @param {number} category
   * @param {DataView} p2
   * @param {number} userHash
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const _NETWORK_SESSION_REQUEST_SESSION_ON_CALL = '0x23d9c1f2e4098edc';
/**
   * _NETWORK_SESSION_SET_PLAYER_FLAGS
   *
   * @param {number} flags
   * @return {boolean}
   */
export const _NETWORK_SESSION_SET_PLAYER_FLAGS = '0x0ae241a4a9adeeec';
/**
   * _NETWORK_SESSION_TRANSITION_TO_SESSION
   *
   * @param {DataView} sessionRequestId
   * @return {boolean}
   */
export const _NETWORK_SESSION_TRANSITION_TO_SESSION = '0xf20b18a330e6db5c';
/**
   * _NETWORK_SET_IN_STATIC_SPECTATOR_MODE
   *
   * @param {boolean} toggle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _NETWORK_SET_IN_STATIC_SPECTATOR_MODE = '0xfbf1ecfb39a77b5f';
/**
   * _NETWORK_SPAWN_CONFIG_ADD_EXCLUSION_VOLUME
   *
   * @param {number} volume
   * @return {void}
   */
export const _NETWORK_SPAWN_CONFIG_ADD_EXCLUSION_VOLUME = '0xeeb7818b1d307212';
/**
   * _NETWORK_SPAWN_CONFIG_ADD_PROPERTY_PREFERENCE
   *
   * @param {number} configProperty
   * @param {boolean} include
   * @param {number} weight
   * @return {void}
   */
export const _NETWORK_SPAWN_CONFIG_ADD_PROPERTY_PREFERENCE = '0xeb6027fd1b4600d5';
/**
   * _NETWORK_SPAWN_CONFIG_ADD_PROPERTY_SCRIPTED
   *
   * @param {number} configProperty
   * @param {boolean} include
   * @return {void}
   */
export const _NETWORK_SPAWN_CONFIG_ADD_PROPERTY_SCRIPTED = '0x44d59ec597bbf348';
/**
   * _NETWORK_SPAWN_CONFIG_ADD_SPAWN_POINT
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @return {void}
   */
export const _NETWORK_SPAWN_CONFIG_ADD_SPAWN_POINT = '0xfd1ac0b3858f224c';
/**
   * _NETWORK_SPAWN_CONFIG_REMOVE_EXCLUSION_VOLUME
   *
   * @param {number} volume
   * @return {void}
   */
export const _NETWORK_SPAWN_CONFIG_REMOVE_EXCLUSION_VOLUME = '0xa35e7bf20fa269e0';
/**
   * _NETWORK_SPAWN_CONFIG_SEARCH_IN_PROGRESS
   *
  
   * @return {boolean}
   */
export const _NETWORK_SPAWN_CONFIG_SEARCH_IN_PROGRESS = '0x89ec2fc89ecb1005';
/**
   * _NETWORK_SPAWN_CONFIG_SET_CANCEL_SEARCH
   *
  
   * @return {void}
   */
export const _NETWORK_SPAWN_CONFIG_SET_CANCEL_SEARCH = '0x765e60a1dcb8b1ce';
/**
   * _NETWORK_SPAWN_CONFIG_SET_LEVEL_WATER_DEPTH
   *
   * @param {number} waterDepthLevel
   * @return {void}
   */
export const _NETWORK_SPAWN_CONFIG_SET_LEVEL_WATER_DEPTH = '0xbdcc671b911040f9';
/**
   * _NET_TO_ANIM_SCENE
   *
   * @param {number} netId
   * @return {number}
   */
export const _NET_TO_ANIM_SCENE = '0xd7f6781a0abaf6fb';
/**
   * _NET_TO_PROPSET
   *
   * @param {number} netId
   * @return {number}
   */
export const _NET_TO_PROPSET = '0xd08066e00d26c448';
/**
   * _PEDMUGSHOT_GET_STATUS
   *
  
   * @return {number}
   */
export const _PEDMUGSHOT_GET_STATUS = '0xcbac13f065c47596';
/**
   * _PEDMUGSHOT_REQUEST_SEND
   *
  
   * @return {any}
   */
export const _PEDMUGSHOT_REQUEST_SEND = '0xfbc30b70b3cdb87e';
/**
   * _PEDMUGSHOT_TAKE
   *
  
   * @return {boolean}
   */
export const _PEDMUGSHOT_TAKE = '0xcd954f330693f5f2';
/**
   * _PROPSET_TO_NET
   *
   * @param {number} propSet
   * @return {number}
   */
export const _PROPSET_TO_NET = '0x74f99ef7ef503398';
/**
   * _REPORT_PLAYER
   *
   * @param {number} player
   * @param {number} reportType
   * @param {string | number} description
   * @param {string | number} horseName
   * @return {void}
   */
export const _REPORT_PLAYER = '0xa197c35f73ac0f12';
/**
   * _REQUEST_PEDSHOT_TEXTURE_LOCAL_BACKUP_DOWNLOAD
   * Only used in R* SP Scripts
   *
   * @param {number} player
   * @param {number} personaPhotoLocalCacheType
   * @return {string | number}
   */
export const _REQUEST_PEDSHOT_TEXTURE_LOCAL_BACKUP_DOWNLOAD = '0x356f9fb0698c1feb';
/**
   * _REQUEST_PEDSHOT_TEXTURE_LOCAL_DOWNLOAD
   * Only used in R* SP Script map_app_event_handler
   *
   * @param {DataView} gamerHandle
   * @param {number} p1
   * @return {string | number}
   */
export const _REQUEST_PEDSHOT_TEXTURE_LOCAL_DOWNLOAD = '0xcaf4ca2f87779f8f';
/**
   * _REQUEST_PEDSHOT_TEXTURE_MULTIPLAYER_DOWNLOAD
   *
   * @param {DataView} gamerHandle
   * @param {number} p1
   * @return {string | number}
   */
export const _REQUEST_PEDSHOT_TEXTURE_MULTIPLAYER_DOWNLOAD = '0xb5c4b18b12a2af23';
/**
   * _SET_DOOR_NETWORKED
   *
   * @param {number} doorHash
   * @return {void}
   */
export const _SET_DOOR_NETWORKED = '0x51d99497abf3f451';
/**
   * _SET_DOOR_UNNETWORKED
   *
   * @param {any} p0
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_DOOR_UNNETWORKED = '0xc1e1a3d5ed7617b8';
/**
   * _SET_ENTITY_GHOSTED_TO_LOCAL_PLAYER
   *
   * @param {number} entity
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_ENTITY_GHOSTED_TO_LOCAL_PLAYER = '0xee5ae9956743ba20';
/**
   * _SET_LAUNCH_PARAM_STRING
   *
   * @param {string | number} params
   * @return {void}
   */
export const _SET_LAUNCH_PARAM_STRING = '0xdffc15aa63d04aab';
/**
   * _SET_LAUNCH_PARAM_VALUE
   *
   * @param {string | number} paramName
   * @param {string | number} value
   * @return {void}
   */
export const _SET_LAUNCH_PARAM_VALUE = '0x668af6e4933ac13f';
/**
   * _SET_LOCAL_PLAYER_DAMAGE_MULTIPLIER_FOR_PLAYER
   *
   * @param {number} player
   * @param {number} damageMultiplier
   * @return {void}
   */
export const _SET_LOCAL_PLAYER_DAMAGE_MULTIPLIER_FOR_PLAYER = '0xd041a32992a55f84';
/**
   * _SET_NETWORK_RESPOT_TIMER
   *
   * @param {number} entity
   * @param {number} timer
   * @param {boolean} p2
   * @return {void}
   */
export const _SET_NETWORK_RESPOT_TIMER = '0x442b4347b6ec36e8';
/**
   * _SET_PLAYER_VISIBILITY_TO_LOCAL_PLAYER_DISABLED
   * _SET_PLAYER_V* - _SET_S*
   *
   * @param {number} player
   * @param {boolean} disabled
   * @return {void}
   */
export const _SET_PLAYER_VISIBILITY_TO_LOCAL_PLAYER_DISABLED = '0xdca6abdb9288fbe4';
/**
   * _SET_SOCIAL_MATCHMAKING_ALLOWED
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_SOCIAL_MATCHMAKING_ALLOWED = '0x777d0571a466b520';
/**
   * _TEXTURE_DOWNLOAD_RELEASE_BY_NAME
   *
   * @param {string | number} name
   * @return {void}
   */
export const _TEXTURE_DOWNLOAD_RELEASE_BY_NAME = '0x7a17b7981560ffa5';
/**
   * _TEXTURE_DOWNLOAD_TEXTURE_NAME_IS_VALID
   *
   * @param {string | number} name
   * @return {boolean}
   */
export const _TEXTURE_DOWNLOAD_TEXTURE_NAME_IS_VALID = '0xe2c3cec3c0903a00';
/**
   * _UGC_HAS_PRIVILEGE
   * Checks if the user has ROS privilege 14.
   *
  
   * @return {boolean}
   */
export const _UGC_HAS_PRIVILEGE = '0x6506bfa755fb209c';
/**
   * _UGC_IS_BOOK_MARKED
   *
   * @param {string | number} contentId
   * @return {boolean}
   */
export const _UGC_IS_BOOK_MARKED = '0xe42d1042f09865fe';
/**
   * _UGC_QUERY_BY_CATEGORY
   * Returns ugcRequestId
   *
   * @param {number} categoryType
   * @param {number} p1
   * @param {number} maxGet
   * @param {string | number} contentTypeName
   * @param {number} p4
   * @param {boolean} p5
   * @return {number}
   */
export const _UGC_QUERY_BY_CATEGORY = '0x8c109958c9bb559d';
/**
   * _UGC_QUERY_BY_CONTENT_ID
   * Returns ugcRequestId
   *
   * @param {string | number} contentId
   * @param {boolean} latestVersion
   * @param {string | number} contentTypeName
   * @return {number}
   */
export const _UGC_QUERY_BY_CONTENT_ID = '0x69d22e183580113f';
/**
   * _UGC_QUERY_BY_CONTENT_TYPE
   * Returns ugcRequestId
   *
   * @param {number} p0
   * @param {number} maxGet
   * @param {string | number} contentTypeName
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @return {number}
   */
export const _UGC_QUERY_BY_CONTENT_TYPE = '0xf40ef49b3099e98e';
/**
   * _UGC_QUERY_GET_BOOK_MARKED
   *
   * @param {any} p0
   * @param {number} index
   * @return {boolean}
   */
export const _UGC_QUERY_GET_BOOK_MARKED = '0x98539fc453aea639';
/**
   * _UGC_QUERY_GET_CREATOR_HANDLE
   *
   * @param {any} p0
   * @param {number} index
   * @param {DataView} gamerHandle
   * @return {any}
   */
export const _UGC_QUERY_GET_CREATOR_HANDLE = '0xadb56322eedfbdc9';
/**
   * _UGC_QUERY_GET_CREATOR_PHOTO
   * Returns string for GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
   *
   * @param {any} p0
   * @param {number} p1
   * @param {any} p2
   * @return {string | number}
   */
export const _UGC_QUERY_GET_CREATOR_PHOTO = '0x409fe0ca6a4d1d49';
/**
   * _UGC_QUERY_GET_DATE
   *
   * @param {any} p0
   * @param {number} index
   * @param {DataView} p2
   * @return {void}
   */
export const _UGC_QUERY_GET_DATE = '0xe0cb4ab15cb32710';
/**
   * _UGC_QUERY_GET_LANGUAGE
   *
   * @param {any} p0
   * @param {number} index
   * @return {number}
   */
export const _UGC_QUERY_GET_LANGUAGE = '0x97764e8ac6487a9a';
/**
   * _UGC_QUERY_GET_MISSION_DESC_HASH
   *
   * @param {any} p0
   * @param {number} index
   * @return {number}
   */
export const _UGC_QUERY_GET_MISSION_DESC_HASH = '0xa6bf569956c60a60';
/**
   * _UGC_QUERY_GET_NAME
   *
   * @param {any} p0
   * @param {number} index
   * @return {string | number}
   */
export const _UGC_QUERY_GET_NAME = '0x2d053ea815702dd1';
/**
   * _UGC_QUERY_GET_OWNER_ID
   *
   * @param {any} p0
   * @param {number} index
   * @return {string | number}
   */
export const _UGC_QUERY_GET_OWNER_ID = '0xf9f0b3028431967b';
/**
   * _UGC_QUERY_GET_PLAYLIST_NAME
   *
   * @param {any} p0
   * @param {number} index
   * @return {string | number}
   */
export const _UGC_QUERY_GET_PLAYLIST_NAME = '0xcaf50048c8d0fba0';
/**
   * _UGC_QUERY_GET_POSIX_PUBLISHED_DATE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {number}
   */
export const _UGC_QUERY_GET_POSIX_PUBLISHED_DATE = '0x104080ca9e519b00';
/**
   * _UGC_QUERY_GET_POSIX_UPDATED_DATE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {number}
   */
export const _UGC_QUERY_GET_POSIX_UPDATED_DATE = '0x21a99a72b00d8002';
/**
   * _UGC_QUERY_GET_PUBLISHED
   *
   * @param {any} p0
   * @param {any} p1
   * @return {boolean}
   */
export const _UGC_QUERY_GET_PUBLISHED = '0x9993f1e11944a3dd';
/**
   * _UGC_QUERY_GET_RATING
   *
   * @param {any} p0
   * @param {number} index
   * @param {number} p2
   * @return {number}
   */
export const _UGC_QUERY_GET_RATING = '0x24cd8faea1368379';
/**
   * _UGC_QUERY_GET_ROOT_CONTENT_ID
   *
   * @param {any} p0
   * @param {number} index
   * @return {string | number}
   */
export const _UGC_QUERY_GET_ROOT_CONTENT_ID = '0x566ceb0542ef5ecf';
/**
   * _UGC_QUERY_GET_VERSION
   *
   * @param {any} p0
   * @param {number} index
   * @param {number} p2
   * @return {number}
   */
export const _UGC_QUERY_GET_VERSION = '0x63e9dcbc8b0931ed';
/**
   * ALLOW_DAMAGE_EVENTS_FOR_NON_NETWORKED_OBJECTS
   *
   * @param {boolean} enabled
   * @return {void}
   */
export const ALLOW_DAMAGE_EVENTS_FOR_NON_NETWORKED_OBJECTS = '0xe2b3b852b537c398';
/**
   * ATTACH_PORTABLE_PICKUP_TO_PED
   *
   * @param {number} pickupObject
   * @param {number} ped
   * @return {void}
   */
export const ATTACH_PORTABLE_PICKUP_TO_PED = '0x8dc39368bdd57755';
/**
   * BLOCK_PICKUP_FROM_PLAYER_COLLECTION
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const BLOCK_PICKUP_FROM_PLAYER_COLLECTION = '0xb8f5062070bb6dbd';
/**
   * BREAK_ALL_OBJECT_FRAGMENT_BONES
   *
   * @param {number} object
   * @return {void}
   */
export const BREAK_ALL_OBJECT_FRAGMENT_BONES = '0x8462be2341a55b6f';
/**
   * BREAK_OBJECT_FRAGMENT_CHILD
   *
   * @param {number} object
   * @param {any} p1
   * @param {boolean} p2
   * @return {void}
   */
export const BREAK_OBJECT_FRAGMENT_CHILD = '0xe7e4c198b0185900';
/**
   * CONVERT_OLD_PICKUP_TYPE_TO_NEW
   * Old name: _GET_PICKUP_HASH
   *
   * @param {number} pickupHash
   * @return {number}
   */
export const CONVERT_OLD_PICKUP_TYPE_TO_NEW = '0x5eaad83f8cfb4575';
/**
   * CREATE_AMBIENT_PICKUP
   * flags: see CREATE_PICKUP
   *
   * @param {number} pickupHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} flags
   * @param {number} value
   * @param {number} modelHash
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {number} p9
   * @param {number} p10
   * @return {number}
   */
export const CREATE_AMBIENT_PICKUP = '0x673966a0c0fd7171';
/**
   * CREATE_OBJECT
   *
   * @param {number} modelHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} isNetwork
   * @param {boolean} bScriptHostObj
   * @param {boolean} dynamic
   * @param {boolean} p7
   * @param {boolean} p8
   * @return {number}
   */
export const CREATE_OBJECT = '0x509d5878eb39e842';
/**
   * CREATE_OBJECT_NO_OFFSET
   *
   * @param {number} modelHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} isNetwork
   * @param {boolean} bScriptHostObj
   * @param {boolean} dynamic
   * @param {boolean} p7
   * @return {number}
   */
export const CREATE_OBJECT_NO_OFFSET = '0x9a294b2138abb884';
/**
   * CREATE_OBJECT_SKELETON
   *
   * @param {number} object
   * @return {boolean}
   */
export const CREATE_OBJECT_SKELETON = '0xb6cbd40f8ea69e8a';
/**
   * CREATE_PICKUP
   * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Placement%20Flags
   * https://github.com/femga/rdr3_discoveries/blob/master/objects/pickup_list.lua
   *
   * @param {number} pickupHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} flags
   * @param {number} p5
   * @param {boolean} p6
   * @param {number} modelHash
   * @param {number} p8
   * @param {number} p9
   * @param {any} p10
   * @return {number}
   */
export const CREATE_PICKUP = '0xfba08c503dd5fa58';
/**
   * CREATE_PICKUP_ROTATE
   * flags: see CREATE_PICKUP
   *
   * @param {number} pickupHash
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} flags
   * @param {number} p8
   * @param {number} p9
   * @param {boolean} p10
   * @param {number} modelHash
   * @param {number} p12
   * @param {number} p13
   * @param {any} p14
   * @return {number}
   */
export const CREATE_PICKUP_ROTATE = '0x891804727e0a98b7';
/**
   * CREATE_PORTABLE_PICKUP
   *
   * @param {number} pickupHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} placeOnGround
   * @param {number} modelHash
   * @return {number}
   */
export const CREATE_PORTABLE_PICKUP = '0x2eaf1fdb2fb55698';
/**
   * DELETE_OBJECT
   * Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
   *
  
   * @return {number}
   */
export const DELETE_OBJECT = '0x931914268722c263';
/**
   * DETACH_PORTABLE_PICKUP_FROM_PED
   *
   * @param {number} pickupObject
   * @return {void}
   */
export const DETACH_PORTABLE_PICKUP_FROM_PED = '0xcf463d1e9a0aecb1';
/**
   * DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} hash
   * @param {boolean} p5
   * @return {boolean}
   */
export const DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS = '0xbfa48e2ff417213f';
/**
   * DOES_PICKUP_EXIST
   *
   * @param {number} pickup
   * @return {boolean}
   */
export const DOES_PICKUP_EXIST = '0xafc1ca75ad4074d1';
/**
   * DOES_PICKUP_OBJECT_EXIST
   *
   * @param {number} pickupObject
   * @return {boolean}
   */
export const DOES_PICKUP_OBJECT_EXIST = '0xd9efb6dbf7daaea3';
/**
   * DOES_PICKUP_OF_TYPE_EXIST_IN_AREA
   *
   * @param {number} pickupHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {boolean}
   */
export const DOES_PICKUP_OF_TYPE_EXIST_IN_AREA = '0xf9c36251f6e48e33';
/**
   * DOES_RAYFIRE_MAP_OBJECT_EXIST
   *
   * @param {number} object
   * @return {boolean}
   */
export const DOES_RAYFIRE_MAP_OBJECT_EXIST = '0x52af537a0c5b8aad';
/**
   * DOOR_SYSTEM_GET_DOOR_STATE
   *
   * @param {number} doorHash
   * @return {number}
   */
export const DOOR_SYSTEM_GET_DOOR_STATE = '0x160aa1b32f6139b8';
/**
   * DOOR_SYSTEM_GET_OPEN_RATIO
   *
   * @param {number} doorHash
   * @return {number}
   */
export const DOOR_SYSTEM_GET_OPEN_RATIO = '0x65499865fca6e5ec';
/**
   * DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE
   *
   * @param {number} doorHash
   * @param {number} distance
   * @return {void}
   */
export const DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE = '0x9ba001cb45cbf627';
/**
   * DOOR_SYSTEM_SET_AUTOMATIC_RATE
   *
   * @param {number} doorHash
   * @param {number} rate
   * @return {void}
   */
export const DOOR_SYSTEM_SET_AUTOMATIC_RATE = '0x03c27e13b42a0e82';
/**
   * DOOR_SYSTEM_SET_DOOR_STATE
   * Door lock states:
   * enum eDoorState
   * {
   *   DOORSTATE_INVALID = -1,
   *   DOORSTATE_UNLOCKED,
   *   DOORSTATE_LOCKED_UNBREAKABLE,
   *   DOORSTATE_LOCKED_BREAKABLE,
   *   DOORSTATE_HOLD_OPEN_POSITIVE,
   *   DOORSTATE_HOLD_OPEN_NEGATIVE
   * };
   *
   * @param {number} doorHash
   * @param {number} state
   * @return {void}
   */
export const DOOR_SYSTEM_SET_DOOR_STATE = '0x6bab9442830c7f53';
/**
   * DOOR_SYSTEM_SET_OPEN_RATIO
   * Sets the ajar angle of a door.
   * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
   *
   * @param {number} doorHash
   * @param {number} ajar
   * @param {boolean} forceUpdate
   * @return {void}
   */
export const DOOR_SYSTEM_SET_OPEN_RATIO = '0xb6e6fba95c7324ac';
/**
   * FIX_OBJECT_FRAGMENT
   *
   * @param {number} object
   * @return {void}
   */
export const FIX_OBJECT_FRAGMENT = '0xf9c1681347c8bd15';
/**
   * FORCE_PICKUP_REGENERATE
   *
   * @param {any} p0
   * @return {void}
   */
export const FORCE_PICKUP_REGENERATE = '0x758a5c1b3b1e1990';
/**
   * GET_CLOSEST_OBJECT_OF_TYPE
   * Returns the closest object of a specified type within a given radius from a specified position
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} modelHash
   * @param {boolean} missionScriptObject
   * @param {boolean} scriptHostObject
   * @param {boolean} networkObject
   * @return {number}
   */
export const GET_CLOSEST_OBJECT_OF_TYPE = '0xe143fa2249364369';
/**
   * GET_OBJECT_FRAGMENT_DAMAGE_HEALTH
   *
   * @param {any} p0
   * @param {boolean} p1
   * @return {number}
   */
export const GET_OBJECT_FRAGMENT_DAMAGE_HEALTH = '0xb6fbfd079b8d0596';
/**
   * GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS
   * Old name: _GET_OBJECT_OFFSET_FROM_COORDS
   *
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} heading
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @return {Vector3}
   */
export const GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS = '0x163e252de035a133';
/**
   * GET_PICKUP_COORDS
   *
   * @param {number} pickup
   * @return {Vector3}
   */
export const GET_PICKUP_COORDS = '0x225b8b35c88029b3';
/**
   * GET_PICKUP_OBJECT
   *
   * @param {number} pickup
   * @return {number}
   */
export const GET_PICKUP_OBJECT = '0x5099bc55630b25ae';
/**
   * GET_RAYFIRE_MAP_OBJECT
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {string | number} name
   * @return {number}
   */
export const GET_RAYFIRE_MAP_OBJECT = '0xb48fced898292e52';
/**
   * GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE
   *
   * @param {number} object
   * @return {number}
   */
export const GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE = '0x260ee4fdbdf4db01';
/**
   * GET_SAFE_PICKUP_COORDS
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {Vector3}
   */
export const GET_SAFE_PICKUP_COORDS = '0x6e16bc2503ff1ff0';
/**
   * GET_STATE_OF_RAYFIRE_MAP_OBJECT
   *
   * @param {number} object
   * @return {number}
   */
export const GET_STATE_OF_RAYFIRE_MAP_OBJECT = '0x899ba936634a322e';
/**
   * GET_WEAPON_TYPE_FROM_PICKUP_TYPE
   *
   * @param {number} pickupHash
   * @return {number}
   */
export const GET_WEAPON_TYPE_FROM_PICKUP_TYPE = '0x08f96ca6c551ad51';
/**
   * HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} modelHash
   * @param {any} p5
   * @return {boolean}
   */
export const HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN = '0x761b0e69ac4d007e';
/**
   * HAS_OBJECT_BEEN_BROKEN
   *
   * @param {any} p0
   * @return {boolean}
   */
export const HAS_OBJECT_BEEN_BROKEN = '0x8abfb70c49cc43e2';
/**
   * HAS_PICKUP_BEEN_COLLECTED
   *
   * @param {number} pickup
   * @return {boolean}
   */
export const HAS_PICKUP_BEEN_COLLECTED = '0x80ec48e6679313f9';
/**
   * IS_DOOR_CLOSED
   *
   * @param {number} doorHash
   * @return {boolean}
   */
export const IS_DOOR_CLOSED = '0xc531ee8a1145a149';
/**
   * IS_DOOR_REGISTERED_WITH_SYSTEM
   *
   * @param {number} doorHash
   * @return {boolean}
   */
export const IS_DOOR_REGISTERED_WITH_SYSTEM = '0xc153c43ea202c8c1';
/**
   * IS_OBJECT_A_PORTABLE_PICKUP
   *
   * @param {number} object
   * @return {boolean}
   */
export const IS_OBJECT_A_PORTABLE_PICKUP = '0x0378c08504160d0d';
/**
   * IS_OBJECT_VISIBLE
   *
   * @param {number} object
   * @return {boolean}
   */
export const IS_OBJECT_VISIBLE = '0x8b32ace6326a7546';
/**
   * IS_POINT_IN_ANGLED_AREA
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @param {boolean} p10
   * @param {boolean} p11
   * @return {boolean}
   */
export const IS_POINT_IN_ANGLED_AREA = '0x2a70bae8883e4c81';
/**
   * ONLY_CLEAN_UP_OBJECT_WHEN_OUT_OF_RANGE
   * Old name: _MARK_OBJECT_FOR_DELETION
   *
   * @param {number} object
   * @return {void}
   */
export const ONLY_CLEAN_UP_OBJECT_WHEN_OUT_OF_RANGE = '0xadbe4809f19f927a';
/**
   * PLACE_OBJECT_ON_GROUND_PROPERLY
   *
   * @param {number} object
   * @param {boolean} p1
   * @return {boolean}
   */
export const PLACE_OBJECT_ON_GROUND_PROPERLY = '0x58a850eaee20faa3';
/**
   * PREVENT_COLLECTION_OF_PORTABLE_PICKUP
   *
   * @param {number} object
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const PREVENT_COLLECTION_OF_PORTABLE_PICKUP = '0x92aefb5f6e294023';
/**
   * REMOVE_ALL_PICKUPS_OF_TYPE
   *
   * @param {number} pickupHash
   * @return {void}
   */
export const REMOVE_ALL_PICKUPS_OF_TYPE = '0x27f9d613092159cf';
/**
   * REMOVE_DOOR_FROM_SYSTEM
   *
   * @param {number} doorHash
   * @return {void}
   */
export const REMOVE_DOOR_FROM_SYSTEM = '0x464d8e1427156fe4';
/**
   * REMOVE_PICKUP
   *
   * @param {number} pickup
   * @return {void}
   */
export const REMOVE_PICKUP = '0x3288d8acaecd2ab2';
/**
   * SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN
   *
   * @param {number} object
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN = '0x406137f8ef90eaf5';
/**
   * SET_CUSTOM_TEXTURES_ON_OBJECT
   *
   * @param {number} object
   * @param {number} txdHash
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const SET_CUSTOM_TEXTURES_ON_OBJECT = '0xe124889ae0521fcf';
/**
   * SET_FORCE_OBJECT_THIS_FRAME
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @return {void}
   */
export const SET_FORCE_OBJECT_THIS_FRAME = '0xf538081986e49e9d';
/**
   * SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS = '0x78857fc65cadb909';
/**
   * SET_LOCAL_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_WITH_MODEL
   * Maximum amount of pickup models that can be disallowed is 10.
   * 
   * Old name: _SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL
   *
   * @param {number} modelHash
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_LOCAL_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_WITH_MODEL = '0x88eaec617cd26926';
/**
   * SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER
   *
   * @param {number} modelHash
   * @param {number} p1
   * @return {void}
   */
export const SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER = '0x0bf3b3bd47d79c08';
/**
   * SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY
   *
   * @param {number} object
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY = '0x4d89d607cb3dd1d2';
/**
   * SET_OBJECT_PHYSICS_PARAMS
   * Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
   * 
   * Other parameters seem to be unknown.
   * 
   * p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
   * p3: seems similar to p2
   * p4: makes obj fall slower the higher the value
   * p5: similar to p4
   *
   * @param {number} object
   * @param {number} weight
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} gravity
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @param {number} p10
   * @param {number} buoyancy
   * @return {void}
   */
export const SET_OBJECT_PHYSICS_PARAMS = '0xf6df6e90de7df90f';
/**
   * SET_OBJECT_TAKES_DAMAGE_FROM_COLLIDING_WITH_BUILDINGS
   *
   * @param {number} object
   * @param {boolean} enabled
   * @return {void}
   */
export const SET_OBJECT_TAKES_DAMAGE_FROM_COLLIDING_WITH_BUILDINGS = '0xeb6f1a9b5510a5d2';
/**
   * SET_OBJECT_TARGETTABLE
   *
   * @param {number} object
   * @param {boolean} targettable
   * @return {void}
   */
export const SET_OBJECT_TARGETTABLE = '0x8a7391690f5afd81';
/**
   * SET_OBJECT_TINT_INDEX
   * Alt name: _SET_OBJECT_TINT
   * 
   * Old name: _SET_OBJECT_TEXTURE_VARIATION
   *
   * @param {number} object
   * @param {number} textureVariation
   * @return {void}
   */
export const SET_OBJECT_TINT_INDEX = '0x971da0055324d033';
/**
   * SET_PICKUP_DO_NOT_AUTO_PLACE_ON_GROUND
   *
   * @param {number} pickupObject
   * @return {void}
   */
export const SET_PICKUP_DO_NOT_AUTO_PLACE_ON_GROUND = '0x634c19521485ab25';
/**
   * SET_PICKUP_GENERATION_RANGE_MULTIPLIER
   *
   * @param {number} multiplier
   * @return {void}
   */
export const SET_PICKUP_GENERATION_RANGE_MULTIPLIER = '0x318516e02de3ece2';
/**
   * SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE = '0x81218ce01b672219';
/**
   * SET_PICKUP_NOT_LOOTABLE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const SET_PICKUP_NOT_LOOTABLE = '0x92e87f60f21a0c3a';
/**
   * SET_PICKUP_PARTICLE_FX_HIGHLIGHT
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const SET_PICKUP_PARTICLE_FX_HIGHLIGHT = '0x1607c7d9b3021df5';
/**
   * SET_PICKUP_PARTICLE_FX_SPAWN
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const SET_PICKUP_PARTICLE_FX_SPAWN = '0xeb9740a38fd6d634';
/**
   * SET_PICKUP_REGENERATION_TIME
   *
   * @param {number} pickup
   * @param {number} duration
   * @return {void}
   */
export const SET_PICKUP_REGENERATION_TIME = '0x78015c9b4b3ecc9d';
/**
   * SET_PICKUP_UNCOLLECTABLE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const SET_PICKUP_UNCOLLECTABLE = '0x4a8cb328cd6f1c9b';
/**
   * SET_STATE_OF_RAYFIRE_MAP_OBJECT
   *
   * @param {number} object
   * @param {number} state
   * @return {void}
   */
export const SET_STATE_OF_RAYFIRE_MAP_OBJECT = '0x5c29f698d404c5e1';
/**
   * SET_TEAM_PICKUP_OBJECT
   *
   * @param {number} object
   * @param {any} p1
   * @param {boolean} p2
   * @return {void}
   */
export const SET_TEAM_PICKUP_OBJECT = '0x53e0df1a2a3cf0ca';
/**
   * SLIDE_OBJECT
   *
   * @param {number} object
   * @param {number} toX
   * @param {number} toY
   * @param {number} toZ
   * @param {number} speedX
   * @param {number} speedY
   * @param {number} speedZ
   * @param {boolean} collision
   * @return {boolean}
   */
export const SLIDE_OBJECT = '0x2fdff4107b8c1147';
/**
   * SUPPRESS_PICKUP_REWARD_TYPE
   *
   * @param {number} rewardType
   * @param {boolean} suppress
   * @return {void}
   */
export const SUPPRESS_PICKUP_REWARD_TYPE = '0xf92099527db8e2a7';
/**
   * TRACK_OBJECT_VISIBILITY
   *
   * @param {number} object
   * @return {void}
   */
export const TRACK_OBJECT_VISIBILITY = '0xb252bc036b525623';
/**
   * _0x08C5825A2932EA7B
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x08C5825A2932EA7B = '0x08c5825a2932ea7b';
/**
   * _0x0943113E02322164
   * Params: p1 = 23 in R* Scripts
   *
   * @param {number} object
   * @param {number} p1
   * @return {any}
   */
export const _0x0943113E02322164 = '0x0943113e02322164';
/**
   * _0x0C0A373D181BF900
   * something to do with doors lockdown when navmesh is swapping?UPDATE_WORLD_STATE  seems to be for unlocking something
   *
   * @param {number} doorHash
   * @return {void}
   */
export const _0x0C0A373D181BF900 = '0x0c0a373d181bf900';
/**
   * _0x1F5E07E14A86FAFC
   * _SET_A(MBIENT_PICKUP_?)*
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x1F5E07E14A86FAFC = '0x1f5e07e14a86fafc';
/**
   * _0x20135AF9C10D2A3D
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x20135AF9C10D2A3D = '0x20135af9c10d2a3d';
/**
   * _0x22031584496CFB70
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x22031584496CFB70 = '0x22031584496cfb70';
/**
   * _0x235C863DA77BD88D
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x235C863DA77BD88D = '0x235c863da77bd88d';
/**
   * _0x250EBB11E81A10BE
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x250EBB11E81A10BE = '0x250ebb11e81a10be';
/**
   * _0x2BF1953C0C21AC88
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x2BF1953C0C21AC88 = '0x2bf1953c0c21ac88';
/**
   * _0x3A77DAE8B4FD7586
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3A77DAE8B4FD7586 = '0x3a77dae8b4fd7586';
/**
   * _0x3DF1A0A58498E209
   *
   * @param {number} object
   * @param {any} p1
   * @return {void}
   */
export const _0x3DF1A0A58498E209 = '0x3df1a0a58498e209';
/**
   * _0x3E2616E7EA539480
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x3E2616E7EA539480 = '0x3e2616e7ea539480';
/**
   * _0x46CBCF0E98A4E156
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x46CBCF0E98A4E156 = '0x46cbcf0e98a4e156';
/**
   * _0x491439AEF410A2FC
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x491439AEF410A2FC = '0x491439aef410a2fc';
/**
   * _0x4AE07EBA3462C5D5
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x4AE07EBA3462C5D5 = '0x4ae07eba3462c5d5';
/**
   * _0x4D8611DFE1126478
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x4D8611DFE1126478 = '0x4d8611dfe1126478';
/**
   * _0x5230BF34EB0EC645
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x5230BF34EB0EC645 = '0x5230bf34eb0ec645';
/**
   * _0x57C242543B7B8FB9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x57C242543B7B8FB9 = '0x57c242543b7b8fb9';
/**
   * _0x58DE624FA7FB0E7F
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x58DE624FA7FB0E7F = '0x58de624fa7fb0e7f';
/**
   * _0x614D0B4533F842D3
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x614D0B4533F842D3 = '0x614d0b4533f842d3';
/**
   * _0x6579860A5558524A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x6579860A5558524A = '0x6579860a5558524a';
/**
   * _0x6E2AA80BB0C03728
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x6E2AA80BB0C03728 = '0x6e2aa80bb0c03728';
/**
   * _0x7D4411D6736CD295
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x7D4411D6736CD295 = '0x7d4411d6736cd295';
/**
   * _0x7F458B543006C8FE
   * something to do with doors lockdown when navmesh is swapping? UPDATE_WORLD_STATE, seems to be for locking something
   *
   * @param {number} doorHash
   * @param {number} p1
   * @return {void}
   */
export const _0x7F458B543006C8FE = '0x7f458b543006c8fe';
/**
   * _0x7FCD49388BC9B775
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x7FCD49388BC9B775 = '0x7fcd49388bc9b775';
/**
   * _0x9A74A9CADFA8A598
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9A74A9CADFA8A598 = '0x9a74a9cadfa8a598';
/**
   * _0x9F52AD67D1A91BAD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x9F52AD67D1A91BAD = '0x9f52ad67d1a91bad';
/**
   * _0xA93F925F1942E434
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA93F925F1942E434 = '0xa93f925f1942e434';
/**
   * _0xAAACF33CBF9B990A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xAAACF33CBF9B990A = '0xaaacf33cbf9b990a';
/**
   * _0xACD4F9831DFAD7F5
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xACD4F9831DFAD7F5 = '0xacd4f9831dfad7f5';
/**
   * _SET_OBJECT_PROMPT_NAME
   * Not official native name
   *
   * @param {number} object
   * @param {string | number} name
   * @return {void}
   */
export const _SET_OBJECT_PROMPT_NAME = '0xaee6c800e124cfe1';
/**
   * _0xB3B1546D23DF8DE1
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0xB3B1546D23DF8DE1 = '0xb3b1546d23df8de1';
/**
   * _0xC07B91B996C1DE89
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xC07B91B996C1DE89 = '0xc07b91b996c1de89';
/**
   * _0xCAAF2BCCFEF37F77
   * _SET_OBJECT_*
   *
   * @param {number} object
   * @param {any} p1
   * @return {void}
   */
export const _0xCAAF2BCCFEF37F77 = '0xcaaf2bccfef37f77';
/**
   * _0xCBFBD38F2E0A263B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCBFBD38F2E0A263B = '0xcbfbd38f2e0a263b';
/**
   * _0xCEAB54F4632C6EF6
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCEAB54F4632C6EF6 = '0xceab54f4632c6ef6';
/**
   * _SET_OBJECT_PROMPT_NAME_FROM_GXT_ENTRY
   * Not official native name
   *
   * @param {number} object
   * @param {number} gxtEntryHash
   * @return {void}
   */
export const _SET_OBJECT_PROMPT_NAME_FROM_GXT_ENTRY = '0xd503d6f0986d58bc';
/**
   * _0xD91E55B6C005EB09
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xD91E55B6C005EB09 = '0xd91e55b6c005eb09';
/**
   * _0xDE116ECFFDD4B997
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xDE116ECFFDD4B997 = '0xde116ecffdd4b997';
/**
   * _0xDFA1237F5228263F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xDFA1237F5228263F = '0xdfa1237f5228263f';
/**
   * _0xE157A8A336C7F04A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE157A8A336C7F04A = '0xe157a8a336c7f04a';
/**
   * _0xEBA314768FB35D58
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xEBA314768FB35D58 = '0xeba314768fb35d58';
/**
   * _0xF65EDE5D02A7A760
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xF65EDE5D02A7A760 = '0xf65ede5d02a7a760';
/**
   * _0xF6E88489B4E6EBE5
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xF6E88489B4E6EBE5 = '0xf6e88489b4e6ebe5';
/**
   * _0xFA99E8E575F2FEF8
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xFA99E8E575F2FEF8 = '0xfa99e8e575f2fef8';
/**
   * _ADD_DOOR_TO_SYSTEM_NEW
   * Registers a door, hashes: https://github.com/femga/rdr3_discoveries/tree/master/doorHashes
   *
   * @param {number} doorHash
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {number} threadId
   * @param {number} p5
   * @param {boolean} p6
   * @return {void}
   */
export const _ADD_DOOR_TO_SYSTEM_NEW = '0xd99229fe93b46286';
/**
   * _DAMAGE_BONE_ON_PROP
   *
   * @param {number} object
   * @param {number} bone
   * @return {void}
   */
export const _DAMAGE_BONE_ON_PROP = '0xe4efb315bcd2a838';
/**
   * _DOOR_SYSTEM_CHANGE_SCRIPT_OWNER
   *
   * @param {number} doorHash
   * @return {void}
   */
export const _DOOR_SYSTEM_CHANGE_SCRIPT_OWNER = '0x985767f5fa45bc44';
/**
   * _DOOR_SYSTEM_FORCE_SHUT
   *
   * @param {number} doorHash
   * @param {boolean} p1
   * @return {void}
   */
export const _DOOR_SYSTEM_FORCE_SHUT = '0x276aaf0f1c7f2494';
/**
   * _DOOR_SYSTEM_GET_AUTOMATIC_RATE
   *
   * @param {number} doorHash
   * @return {number}
   */
export const _DOOR_SYSTEM_GET_AUTOMATIC_RATE = '0x8433e1954be323fc';
/**
   * _DOOR_SYSTEM_SET_ABLE_TO_CHANGE_OPEN_RATIO_WHILE_LOCKED
   *
   * @param {number} doorHash
   * @param {boolean} p1
   * @return {void}
   */
export const _DOOR_SYSTEM_SET_ABLE_TO_CHANGE_OPEN_RATIO_WHILE_LOCKED = '0x1f1fabfe9b2a1254';
/**
   * _DOOR_SYSTEM_SET_AUTOMATIC_STATE
   * _ALLOW_* - _ATTACH_*
   *
   * @param {number} doorHash
   * @param {boolean} disable
   * @return {void}
   */
export const _DOOR_SYSTEM_SET_AUTOMATIC_STATE = '0x1bc47a9dedc8df5d';
/**
   * _GET_AMMO_TYPE_FROM_PICKUP_TYPE
   *
   * @param {number} pickupHash
   * @return {number}
   */
export const _GET_AMMO_TYPE_FROM_PICKUP_TYPE = '0x44b09a23d728045a';
/**
   * _GET_LIGHT_INTENSITY_FROM_OBJECT
   *
   * @param {number} object
   * @return {number}
   */
export const _GET_LIGHT_INTENSITY_FROM_OBJECT = '0xfa3b61ec249b4674';
/**
   * _GET_OBJECT_LIGHT_INTENSITY
   * Returns float value to be used with _SET_LIGHT_INTENSITY_FOR_OBJECT
   *
   * @param {number} object
   * @return {number}
   */
export const _GET_OBJECT_LIGHT_INTENSITY = '0x3397cd4e0353dfba';
/**
   * _HIDE_PICKUP_OBJECT
   *
   * @param {number} pickupObject
   * @param {boolean} toggle
   * @return {void}
   */
export const _HIDE_PICKUP_OBJECT = '0x2777150cc7d9365e';
/**
   * _IS_DOOR_REGISTERED_WITH_NETWORK
   *
   * @param {number} doorHash
   * @return {boolean}
   */
export const _IS_DOOR_REGISTERED_WITH_NETWORK = '0xb5ded7b65c604fdf';
/**
   * _IS_DOOR_REGISTERED_WITH_OWNER
   * Returns true if door is alredy registered with owner
   *
   * @param {number} doorHash
   * @return {boolean}
   */
export const _IS_DOOR_REGISTERED_WITH_OWNER = '0x4f89dad4156ba145';
/**
   * _IS_PICKUP_TYPE_VALID
   *
   * @param {number} pickupHash
   * @return {boolean}
   */
export const _IS_PICKUP_TYPE_VALID = '0x007bd043587f7c82';
/**
   * _MAKE_ITEM_CARRIABLE
   * _PRE* or _Q* or _RE*
   *
   * @param {number} object
   * @return {void}
   */
export const _MAKE_ITEM_CARRIABLE = '0x1461df6db886be3f';
/**
   * _RESET_OBJECT_VELOCITY
   *
   * @param {number} object
   * @return {void}
   */
export const _RESET_OBJECT_VELOCITY = '0xf40ab58d83c35027';
/**
   * _SET_AMBIENT_PICKUP_LIFETIME
   *
   * @param {number} lifetime
   * @return {void}
   */
export const _SET_AMBIENT_PICKUP_LIFETIME = '0xac9ae68f0a463752';
/**
   * _SET_AUTO_JUMPABLE_BY_HORSE
   * Sets object as auto-jumpable by horse.
   *
   * @param {number} object
   * @param {boolean} p1
   * @return {void}
   */
export const _SET_AUTO_JUMPABLE_BY_HORSE = '0x98d2d9c053a1f449';
/**
   * _SET_LIGHT_INTENSITY_FOR_OBJECT
   *
   * @param {number} object
   * @param {number} lightIntensity
   * @return {void}
   */
export const _SET_LIGHT_INTENSITY_FOR_OBJECT = '0xf49574e2332a8f06';
/**
   * _SET_LIGHT_SCATTERING_DISABLED_FOR_OBJECT
   *
   * @param {number} object
   * @param {boolean} disable
   * @return {void}
   */
export const _SET_LIGHT_SCATTERING_DISABLED_FOR_OBJECT = '0x04d1d4e411ce52d0';
/**
   * _SET_LIGHT_TRANSLUCENCY_FOR_OBJECT
   * Params: value = 0.0 - 586.67 (?)
   *
   * @param {number} object
   * @param {number} value
   * @return {void}
   */
export const _SET_LIGHT_TRANSLUCENCY_FOR_OBJECT = '0x63e39f09310f481f';
/**
   * _SET_NETWORK_PICKUP_USABLE_FOR_PLAYER
   * Params: p2 controls whether to make pickups usable/collectable or not in networked games
   *
   * @param {number} player
   * @param {number} pickupHash
   * @param {boolean} isUsable
   * @return {void}
   */
export const _SET_NETWORK_PICKUP_USABLE_FOR_PLAYER = '0x94f3d956bfaeae18';
/**
   * _SET_NOT_JUMPABLE_BY_HORSE
   * Sets object as not jumpable by horse.
   *
   * @param {number} object
   * @param {boolean} p1
   * @return {void}
   */
export const _SET_NOT_JUMPABLE_BY_HORSE = '0xe1c708ba4885796b';
/**
   * _SET_OBJECT_BREAK_SCALE
   *
   * @param {number} object
   * @param {number} scale
   * @return {void}
   */
export const _SET_OBJECT_BREAK_SCALE = '0xffb99ffd17f65889';
/**
   * _SET_OBJECT_BURN_INTENSITY
   *
   * @param {number} object
   * @param {number} intensity
   * @return {void}
   */
export const _SET_OBJECT_BURN_INTENSITY = '0xc8e21c1677dc5e6f';
/**
   * _SET_OBJECT_BURN_LEVEL
   * Seems to mostly have effect on wood-made objects https://imgur.com/a/32oQvOn
   *
   * @param {number} object
   * @param {number} burnLevel
   * @param {boolean} affectAsh
   * @return {void}
   */
export const _SET_OBJECT_BURN_LEVEL = '0x2797c633dcdbbac5';
/**
   * _SET_OBJECT_BURN_OPACITY
   *
   * @param {number} object
   * @param {number} opacity
   * @return {void}
   */
export const _SET_OBJECT_BURN_OPACITY = '0x7d7285efeab5af15';
/**
   * _SET_OBJECT_BURN_SPEED
   * p2 is usually the same as speed parameter
   *
   * @param {number} object
   * @param {number} speed
   * @param {number} p2
   * @return {void}
   */
export const _SET_OBJECT_BURN_SPEED = '0x646564a3b7df68f8';
/**
   * _SET_OBJECT_KICKABLE
   *
   * @param {number} object
   * @param {boolean} kickable
   * @return {void}
   */
export const _SET_OBJECT_KICKABLE = '0xb7017da4d498269f';
/**
   * _SET_OBJECT_TARGETTABLE_2
   *
   * @param {number} object
   * @param {boolean} targettable
   * @return {void}
   */
export const _SET_OBJECT_TARGETTABLE_2 = '0x581edbe56e8d62c9';
/**
   * _SET_OBJECT_TARGETTABLE_FOCUS
   * focus on objects like focus on peds, p1 is to enable/disable p2 is to enable/disable focus when you have a weapon out
   *
   * @param {number} object
   * @param {boolean} toggle
   * @param {boolean} weaponLock
   * @return {void}
   */
export const _SET_OBJECT_TARGETTABLE_FOCUS = '0xa22712e8471aa08e';
/**
   * _SET_PICKUP_COLLECTABLE_ON_MOUNT
   *
   * @param {number} object
   * @return {void}
   */
export const _SET_PICKUP_COLLECTABLE_ON_MOUNT = '0x00ee08603eadee92';
/**
   * CLEAR_CONTROL_LIGHT_EFFECT
   * nullsub, doesn't do anything
   *
   * @param {number} control
   * @return {void}
   */
export const CLEAR_CONTROL_LIGHT_EFFECT = '0xcb0360efefb2580d';
/**
   * CLEAR_CONTROL_SHAKE_SUPPRESSED_ID
   * Old name: _CLEAR_SUPPRESSED_PAD_RUMBLE
   *
   * @param {number} control
   * @return {void}
   */
export const CLEAR_CONTROL_SHAKE_SUPPRESSED_ID = '0xa0cefcea390aab9b';
/**
   * DISABLE_ALL_CONTROL_ACTIONS
   *
   * @param {number} control
   * @return {void}
   */
export const DISABLE_ALL_CONTROL_ACTIONS = '0x5f4b6931816e599b';
/**
   * DISABLE_CONTROL_ACTION
   *
   * @param {number} control
   * @param {number} action
   * @param {boolean} disableRelatedActions
   * @return {void}
   */
export const DISABLE_CONTROL_ACTION = '0xfe99b66d079cf6bc';
/**
   * ENABLE_CONTROL_ACTION
   *
   * @param {number} control
   * @param {number} action
   * @param {boolean} enableRelatedActions
   * @return {void}
   */
export const ENABLE_CONTROL_ACTION = '0x351220255d64c155';
/**
   * GET_CONTROL_HOW_LONG_AGO
   * Returns time in ms since last input.
   *
   * @param {number} control
   * @return {number}
   */
export const GET_CONTROL_HOW_LONG_AGO = '0xd7d22f5592aed8ba';
/**
   * GET_CONTROL_NORMAL
   *
   * @param {number} control
   * @param {number} action
   * @return {number}
   */
export const GET_CONTROL_NORMAL = '0xec3c9b8d5327b563';
/**
   * GET_CONTROL_UNBOUND_NORMAL
   *
   * @param {number} control
   * @param {number} action
   * @return {number}
   */
export const GET_CONTROL_UNBOUND_NORMAL = '0x5b84d09cec5209c5';
/**
   * GET_CONTROL_VALUE
   *
   * @param {number} control
   * @param {number} action
   * @return {number}
   */
export const GET_CONTROL_VALUE = '0xd95e79e8686d2c27';
/**
   * GET_DISABLED_CONTROL_NORMAL
   *
   * @param {number} control
   * @param {number} action
   * @return {number}
   */
export const GET_DISABLED_CONTROL_NORMAL = '0x11e65974a982637c';
/**
   * GET_DISABLED_CONTROL_UNBOUND_NORMAL
   *
   * @param {number} control
   * @param {number} action
   * @return {number}
   */
export const GET_DISABLED_CONTROL_UNBOUND_NORMAL = '0x4f8a26a890fd62fb';
/**
   * HAVE_CONTROLS_CHANGED
   *
   * @param {number} control
   * @return {boolean}
   */
export const HAVE_CONTROLS_CHANGED = '0x6cd79468a1e595c6';
/**
   * IS_CONTROL_ENABLED
   *
   * @param {number} control
   * @param {number} action
   * @return {boolean}
   */
export const IS_CONTROL_ENABLED = '0x1cea6bfdf248e5d9';
/**
   * IS_CONTROL_JUST_PRESSED
   *
   * @param {number} control
   * @param {number} action
   * @return {boolean}
   */
export const IS_CONTROL_JUST_PRESSED = '0x580417101ddb492f';
/**
   * IS_CONTROL_JUST_RELEASED
   *
   * @param {number} control
   * @param {number} action
   * @return {boolean}
   */
export const IS_CONTROL_JUST_RELEASED = '0x50f940259d3841e6';
/**
   * IS_CONTROL_PRESSED
   *
   * @param {number} control
   * @param {number} action
   * @return {boolean}
   */
export const IS_CONTROL_PRESSED = '0xf3a21bcd95725a4a';
/**
   * IS_CONTROL_RELEASED
   *
   * @param {number} control
   * @param {number} action
   * @return {boolean}
   */
export const IS_CONTROL_RELEASED = '0x648ee3e7f38877dd';
/**
   * IS_DISABLED_CONTROL_JUST_PRESSED
   *
   * @param {number} control
   * @param {number} action
   * @return {boolean}
   */
export const IS_DISABLED_CONTROL_JUST_PRESSED = '0x91aef906bca88877';
/**
   * IS_DISABLED_CONTROL_JUST_RELEASED
   *
   * @param {number} control
   * @param {number} action
   * @return {boolean}
   */
export const IS_DISABLED_CONTROL_JUST_RELEASED = '0x305c8dcd79da8b0f';
/**
   * IS_DISABLED_CONTROL_PRESSED
   *
   * @param {number} control
   * @param {number} action
   * @return {boolean}
   */
export const IS_DISABLED_CONTROL_PRESSED = '0xe2587f8cbbd87b1d';
/**
   * IS_LOOK_INVERTED
   *
  
   * @return {boolean}
   */
export const IS_LOOK_INVERTED = '0x77b612531280010d';
/**
   * IS_USING_KEYBOARD_AND_MOUSE
   * padIndex is not used
   * 
   * Old name: _IS_USING_KEYBOARD
   *
   * @param {number} control
   * @return {boolean}
   */
export const IS_USING_KEYBOARD_AND_MOUSE = '0xa571d46727e2b718';
/**
   * SET_CONTROL_LIGHT_EFFECT_COLOR
   * nullsub, doesn't do anything
   * 
   * Old name: _SET_CONTROL_GROUP_COLOR
   *
   * @param {number} control
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @return {void}
   */
export const SET_CONTROL_LIGHT_EFFECT_COLOR = '0x8290252fff36acb5';
/**
   * SET_CONTROL_LIGHT_EFFECT_FLASHING_COLOR
   * nullsub, doesn't do anything
   *
   * @param {number} control
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @return {void}
   */
export const SET_CONTROL_LIGHT_EFFECT_FLASHING_COLOR = '0xa45884db10ec7ee3';
/**
   * SET_CONTROL_SHAKE
   * Old name: SET_PAD_SHAKE
   *
   * @param {number} control
   * @param {number} duration
   * @param {number} frequency
   * @return {void}
   */
export const SET_CONTROL_SHAKE = '0x48b3886c1358d0d5';
/**
   * SET_CONTROL_SHAKE_SUPPRESSED_ID
   * Old name: SET_PAD_SHAKE_SUPPRESSED_ID
   *
   * @param {number} control
   * @param {number} uniqueId
   * @return {void}
   */
export const SET_CONTROL_SHAKE_SUPPRESSED_ID = '0xf239400e16c23e08';
/**
   * SET_CONTROL_TRIGGER_SHAKE
   * nullsub, doesn't do anything
   *
   * @param {number} control
   * @param {number} leftDuration
   * @param {number} leftFrequency
   * @param {number} rightDuration
   * @param {number} rightFrequency
   * @return {void}
   */
export const SET_CONTROL_TRIGGER_SHAKE = '0x14d29bb12d47f68c';
/**
   * SET_CONTROL_VALUE_NEXT_FRAME
   * This is for simulating player input.
   * value is a float value from 0 - 1
   * 
   * control: see IS_CONTROL_ENABLED
   * 
   * Old name: _SET_CONTROL_NORMAL
   *
   * @param {number} control
   * @param {number} action
   * @param {number} value
   * @return {boolean}
   */
export const SET_CONTROL_VALUE_NEXT_FRAME = '0xe8a25867fba3b05e';
/**
   * SET_INPUT_EXCLUSIVE
   *
   * @param {number} control
   * @param {number} action
   * @return {void}
   */
export const SET_INPUT_EXCLUSIVE = '0xede476e5ee29edb1';
/**
   * STOP_CONTROL_SHAKE
   * Old name: STOP_PAD_SHAKE
   *
   * @param {number} control
   * @return {void}
   */
export const STOP_CONTROL_SHAKE = '0x38c16a305e8cdc8d';
/**
   * _0x1252C029FC8EBB4D
   * _IS_R* - _IS_S*
   *
  
   * @return {boolean}
   */
export const _0x1252C029FC8EBB4D = '0x1252c029fc8ebb4d';
/**
   * _0x43F35DDB2905D945
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x43F35DDB2905D945 = '0x43f35ddb2905d945';
/**
   * _0x52C68E92D6E23ADD
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x52C68E92D6E23ADD = '0x52c68e92d6e23add';
/**
   * _0x5F217BC1190503D8
   * rumbleCurve: common_0/data/rumblecurves.meta
   *
   * @param {string | number} rumbleCurve
   * @param {number} p1
   * @return {void}
   */
export const _0x5F217BC1190503D8 = '0x5f217bc1190503d8';
/**
   * _0x709BA8C08C5C008D
   *
  
   * @return {void}
   */
export const _0x709BA8C08C5C008D = '0x709ba8c08c5c008d';
/**
   * _0xBD629C1C4F501C80
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xBD629C1C4F501C80 = '0xbd629c1c4f501c80';
/**
   * _GET_CURRENT_CONTROL_CONTEXT
   * Gets the current control context. See: _SET_CONTROL_CONTEXT
   *
   * @param {number} control
   * @return {number}
   */
export const _GET_CURRENT_CONTROL_CONTEXT = '0xddceb0f26c89c00f';
/**
   * _GET_DISABLED_CONTROL_HOW_LONG_AGO
   *
   * @param {number} control
   * @return {number}
   */
export const _GET_DISABLED_CONTROL_HOW_LONG_AGO = '0x771dfcb24d19c2f6';
/**
   * _IS_CONTROL_ACTION_VALID
   *
   * @param {number} action
   * @param {number} control
   * @return {boolean}
   */
export const _IS_CONTROL_ACTION_VALID = '0xbc0884bc590951c7';
/**
   * _SET_CONTROL_CONTEXT
   * Sets the current control context. Must be called every frame.
   * 
   * context: https://alloc8or.re/rdr3/doc/misc/input_contexts.txt
   * For more information, see common:/data/control/settings.meta
   * https://github.com/femga/rdr3_discoveries/tree/master/Controls
   *
   * @param {number} control
   * @param {number} context
   * @return {void}
   */
export const _SET_CONTROL_CONTEXT = '0x2804658eb7d8a50b';
/**
   * ADD_NAVMESH_BLOCKING_OBJECT
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {boolean} p7
   * @param {any} p8
   * @return {any}
   */
export const ADD_NAVMESH_BLOCKING_OBJECT = '0xfcd5c8e06e502f5a';
/**
   * ADD_NAVMESH_REQUIRED_REGION
   *
   * @param {number} x
   * @param {number} y
   * @param {number} radius
   * @return {void}
   */
export const ADD_NAVMESH_REQUIRED_REGION = '0x387ead7ee42f6685';
/**
   * ARE_NODES_LOADED_FOR_AREA
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} x2
   * @param {number} y2
   * @return {boolean}
   */
export const ARE_NODES_LOADED_FOR_AREA = '0xf7b79a50b905a30d';
/**
   * DOES_NAVMESH_BLOCKING_OBJECT_EXIST
   *
   * @param {any} p0
   * @return {boolean}
   */
export const DOES_NAVMESH_BLOCKING_OBJECT_EXIST = '0x0eaeb0db4b132399';
/**
   * GET_APPROX_FLOOR_FOR_POINT
   * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
   *
   * @param {number} x
   * @param {number} y
   * @return {number}
   */
export const GET_APPROX_FLOOR_FOR_POINT = '0x336511a34f2e5185';
/**
   * GET_CLOSEST_ROAD
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @param {number} p4
   * @param {DataView} p7
   * @param {DataView} p8
   * @param {boolean} p10
   * @return {[any, Vector3, Vector3, number]}
   */
export const GET_CLOSEST_ROAD = '0x132f52bba570fe92';
/**
   * GET_CLOSEST_VEHICLE_NODE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} nodeType
   * @param {number} p5
   * @param {number} p6
   * @return {[boolean, Vector3]}
   */
export const GET_CLOSEST_VEHICLE_NODE = '0x240a18690ae96513';
/**
   * GET_CLOSEST_VEHICLE_NODE_WITH_HEADING
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} nodeType
   * @param {number} p6
   * @param {number} p7
   * @return {[boolean, Vector3, number]}
   */
export const GET_CLOSEST_VEHICLE_NODE_WITH_HEADING = '0x23cffd4ccb243354';
/**
   * GET_GPS_BLIP_ROUTE_FOUND
   *
  
   * @return {boolean}
   */
export const GET_GPS_BLIP_ROUTE_FOUND = '0x869daacbbe9fa006';
/**
   * GET_GPS_BLIP_ROUTE_LENGTH
   *
  
   * @return {number}
   */
export const GET_GPS_BLIP_ROUTE_LENGTH = '0xbbb45c3cf5c8aa85';
/**
   * GET_NTH_CLOSEST_VEHICLE_NODE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} nthClosest
   * @param {number} unknown1
   * @param {number} unknown2
   * @param {any} unknown3
   * @return {[boolean, Vector3]}
   */
export const GET_NTH_CLOSEST_VEHICLE_NODE = '0x5a6d8df6fbc5d0c4';
/**
   * GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} desiredX
   * @param {number} desiredY
   * @param {number} desiredZ
   * @param {number} nthClosest
   * @param {number} nodetype
   * @param {any} p10
   * @param {any} p11
   * @return {[boolean, Vector3, number]}
   */
export const GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION = '0x2fac235a6062f14a';
/**
   * GET_NTH_CLOSEST_VEHICLE_NODE_ID
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} nth
   * @param {number} nodetype
   * @param {number} p5
   * @param {number} p6
   * @return {number}
   */
export const GET_NTH_CLOSEST_VEHICLE_NODE_ID = '0x116443008e5cefc3';
/**
   * GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING
   * Returns the nth closest vehicle node with a heading to a coord
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} nthClosest
   * @param {number} nodeFlags
   * @param {number} zMeasureMult
   * @param {number} zTolerance
   * @return {[number, number, number]}
   */
export const GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING = '0x4114eaa8a7f7766d';
/**
   * GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} nthClosest
   * @param {DataView} unknown1
   * @param {number} unknown2
   * @param {number} unknown3
   * @param {number} unknown4
   * @return {[boolean, Vector3, number]}
   */
export const GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING = '0x591b40d4390db54a';
/**
   * GET_NUM_NAVMESHES_EXISTING_IN_AREA
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @return {number}
   */
export const GET_NUM_NAVMESHES_EXISTING_IN_AREA = '0x01708e8dd3ff8c65';
/**
   * GET_RANDOM_VEHICLE_NODE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} minLanes
   * @param {boolean} avoidDeadEnds
   * @param {boolean} avoidHighways
   * @return {[boolean, Vector3, number]}
   */
export const GET_RANDOM_VEHICLE_NODE = '0x93e0db8440b73a7d';
/**
   * GET_SAFE_COORD_FOR_PED
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} onGround
   * @param {number} flags
   * @return {[boolean, Vector3]}
   */
export const GET_SAFE_COORD_FOR_PED = '0xb61c8e878a4199ca';
/**
   * GET_VEHICLE_NODE_IS_SWITCHED_OFF
   *
   * @param {number} nodeId
   * @return {boolean}
   */
export const GET_VEHICLE_NODE_IS_SWITCHED_OFF = '0x28533dbddf7c2c97';
/**
   * GET_VEHICLE_NODE_POSITION
   *
   * @param {number} nodeId
   * @return {Vector3}
   */
export const GET_VEHICLE_NODE_POSITION = '0x8e8d72ff24dee1fb';
/**
   * IS_NAVMESH_LOADED_IN_AREA
   * Returns whether navmesh for the region is loaded.
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @return {boolean}
   */
export const IS_NAVMESH_LOADED_IN_AREA = '0xf813c7e63f9062a5';
/**
   * IS_POINT_ON_ROAD
   * Gets a value indicating whether the specified position is on a road.
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_POINT_ON_ROAD = '0x125bf4abfc536b09';
/**
   * IS_VEHICLE_NODE_ID_VALID
   * Returns true if the id is non zero.
   *
   * @param {number} vehicleNodeId
   * @return {boolean}
   */
export const IS_VEHICLE_NODE_ID_VALID = '0x5829a02af4f0b3cb';
/**
   * NAVMESH_REQUEST_PATH
   * Starts a nav mesh query for a path between coordinates with a given ped and returns a handle to be validated by _NAVMESH_REQUESTED_QUERY_STATUS and then _NAVMESH_REQUESTED_PATH_WAYPOINTS_FOUND
   * 
   * Only bit flag values used in scripts are 0, 23, and 29. 23 is used with dogs and horses. 29 with legendary animals.
   *
   * @param {number} ped
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} bitFlag
   * @return {number}
   */
export const NAVMESH_REQUEST_PATH = '0x348f211ca2404039';
/**
   * REMOVE_NAVMESH_BLOCKING_OBJECT
   *
   * @param {any} p0
   * @return {void}
   */
export const REMOVE_NAVMESH_BLOCKING_OBJECT = '0x46399a7895957c0e';
/**
   * REQUEST_PATH_NODES_IN_AREA_THIS_FRAME
   * Old name: REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} x2
   * @param {number} y2
   * @return {boolean}
   */
export const REQUEST_PATH_NODES_IN_AREA_THIS_FRAME = '0x07fb139b592fa687';
/**
   * RESET_ROADS_IN_VOLUME
   *
   * @param {number} volume
   * @param {boolean} p1
   * @return {void}
   */
export const RESET_ROADS_IN_VOLUME = '0xd17672447692478e';
/**
   * SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME = '0x0b919e1fb47cc4e0';
/**
   * SET_IGNORE_NO_GPS_FLAG
   * nullsub, doesn't do anything
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_IGNORE_NO_GPS_FLAG = '0x72751156e7678833';
/**
   * SET_PED_PATHS_BACK_TO_ORIGINAL
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const SET_PED_PATHS_BACK_TO_ORIGINAL = '0xe04b48f2cc926253';
/**
   * SET_PED_PATHS_IN_AREA
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {boolean} unknown
   * @param {any} p7
   * @return {void}
   */
export const SET_PED_PATHS_IN_AREA = '0x34f060f4bf92e018';
/**
   * SET_ROADS_BACK_TO_ORIGINAL
   *
   * @param {number} xMin
   * @param {number} yMin
   * @param {number} zMin
   * @param {number} xMax
   * @param {number} yMax
   * @param {number} zMax
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const SET_ROADS_BACK_TO_ORIGINAL = '0x1ee7063b80ffc77c';
/**
   * SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA = '0x0027501b9f3b407e';
/**
   * SET_ROADS_IN_ANGLED_AREA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @return {void}
   */
export const SET_ROADS_IN_ANGLED_AREA = '0x1a5aa1208af5db59';
/**
   * SET_ROADS_IN_AREA
   *
   * @param {number} xMin
   * @param {number} yMin
   * @param {number} zMin
   * @param {number} xMax
   * @param {number} yMax
   * @param {number} zMax
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const SET_ROADS_IN_AREA = '0xbf1a602b5ba52fee';
/**
   * SET_ROADS_IN_VOLUME
   *
   * @param {number} volume
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {void}
   */
export const SET_ROADS_IN_VOLUME = '0xc1799fafd2fdf52b';
/**
   * SIMULATED_ROUTE_GET_ETA
   *
   * @param {any} p0
   * @return {number}
   */
export const SIMULATED_ROUTE_GET_ETA = '0x2dd5f78d73b24172';
/**
   * SIMULATED_ROUTE_IS_LOADED
   *
   * @param {any} p0
   * @return {boolean}
   */
export const SIMULATED_ROUTE_IS_LOADED = '0x240915043cb799d7';
/**
   * SIMULATED_ROUTE_TRAVEL_TO_POINT
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const SIMULATED_ROUTE_TRAVEL_TO_POINT = '0xa1a3de1c215c7394';
/**
   * _0x264E9A5CD78C338F
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x264E9A5CD78C338F = '0x264e9a5cd78c338f';
/**
   * _0x34C9AF25649172D0
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x34C9AF25649172D0 = '0x34c9af25649172d0';
/**
   * _0x4358BCF14C91761C
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @return {void}
   */
export const _0x4358BCF14C91761C = '0x4358bcf14c91761c';
/**
   * _0x4BDEBEA5702B97A9
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0x4BDEBEA5702B97A9 = '0x4bdebea5702b97a9';
/**
   * _0x54F4D7B6670FBB5A
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {any}
   */
export const _0x54F4D7B6670FBB5A = '0x54f4d7b6670fbb5a';
/**
   * _0x5A3B54ADDF5472A3
   *
   * @param {string | number} p0
   * @return {number}
   */
export const _0x5A3B54ADDF5472A3 = '0x5a3b54addf5472a3';
/**
   * _0x5A4E1A41E3A02AD0
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x5A4E1A41E3A02AD0 = '0x5a4e1a41e3a02ad0';
/**
   * _0x665B21666351CB37
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x665B21666351CB37 = '0x665b21666351cb37';
/**
   * _0x6C3F12ECEB6D2E2A
   *
   * @param {number} xMin
   * @param {number} yMin
   * @param {number} zMin
   * @param {number} xMax
   * @param {number} yMax
   * @param {number} zMax
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _0x6C3F12ECEB6D2E2A = '0x6c3f12eceb6d2e2a';
/**
   * _0x6DAD6630AE4A74CB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x6DAD6630AE4A74CB = '0x6dad6630ae4a74cb';
/**
   * _0x869A7015BD4606E9
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x869A7015BD4606E9 = '0x869a7015bd4606e9';
/**
   * _0xA33914B00CA55756
   *
   * @param {string | number} p0
   * @param {number} p1
   * @return {any}
   */
export const _0xA33914B00CA55756 = '0xa33914b00ca55756';
/**
   * _0xAFE2AE66F6251C66
   *
   * @param {number} xMin
   * @param {number} yMin
   * @param {number} zMin
   * @param {number} xMax
   * @param {number} yMax
   * @param {number} zMax
   * @param {number} p6
   * @param {any} p7
   * @return {void}
   */
export const _0xAFE2AE66F6251C66 = '0xafe2ae66f6251c66';
/**
   * _0xB03944057FD735BA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xB03944057FD735BA = '0xb03944057fd735ba';
/**
   * _0xCA27A86CAA4E98ED
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {any}
   */
export const _0xCA27A86CAA4E98ED = '0xca27a86caa4e98ed';
/**
   * _0xCF213A5FC3ABFC08
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xCF213A5FC3ABFC08 = '0xcf213a5fc3abfc08';
/**
   * _0xE5EF9DE716FF737E
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xE5EF9DE716FF737E = '0xe5ef9de716ff737e';
/**
   * _0xEFC535C9FAF563B3
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xEFC535C9FAF563B3 = '0xefc535c9faf563b3';
/**
   * _0xF2A2177AC848B3A8
   * GPS disabled zone: p1 = 0
   * Clearing GPS disabled zone: p1 = 1
   *
   * @param {number} volume
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0xF2A2177AC848B3A8 = '0xf2a2177ac848b3a8';
/**
   * _ADD_NAVMESH_BLOCKING_VOLUME
   *
   * @param {number} volume
   * @param {number} flags
   * @return {boolean}
   */
export const _ADD_NAVMESH_BLOCKING_VOLUME = '0x19c7567d2f2287d6';
/**
   * _DOES_NAVMESH_BLOCKING_VOLUME_EXIST
   *
   * @param {number} volume
   * @return {boolean}
   */
export const _DOES_NAVMESH_BLOCKING_VOLUME_EXIST = '0xde0ea444735c1368';
/**
   * _GET_SPAWN_DATA_FOR_ROAD_NODE
   *
   * @param {number} nodeId
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {[Vector3, number]}
   */
export const _GET_SPAWN_DATA_FOR_ROAD_NODE = '0xa3791b915b8b84c6';
/**
   * _NAVMESH_ACTIVATE_SWAP
   *
   * @param {string | number} name
   * @return {boolean}
   */
export const _NAVMESH_ACTIVATE_SWAP = '0x7c334ff4d9215912';
/**
   * _NAVMESH_ASSIGN_NAVMESH_TO_VEHICLE
   *
   * @param {number} vehicle
   * @param {string | number} navMeshName
   * @return {boolean}
   */
export const _NAVMESH_ASSIGN_NAVMESH_TO_VEHICLE = '0x44026e3db3ced602';
/**
   * _NAVMESH_CLEAR_REQUESTED_PATH
   * Called in scripts after finished with requested pathes. Immediately resets all values connected to the path handle except query status, which changes from 1 to 2 before eventually becoming fully invalidated to 0.
   *
   * @param {number} path
   * @return {boolean}
   */
export const _NAVMESH_CLEAR_REQUESTED_PATH = '0x661bb1e1ff77742d';
/**
   * _NAVMESH_DEACTIVATE_SWAP
   *
   * @param {string | number} name
   * @return {boolean}
   */
export const _NAVMESH_DEACTIVATE_SWAP = '0x527b97c203bb8606';
/**
   * _NAVMESH_DOES_SWAP_EXIST
   *
   * @param {string | number} name
   * @return {boolean}
   */
export const _NAVMESH_DOES_SWAP_EXIST = '0x495cfab2924237c7';
/**
   * _NAVMESH_IS_SWAP_ACTIVE
   *
   * @param {string | number} name
   * @return {boolean}
   */
export const _NAVMESH_IS_SWAP_ACTIVE = '0x5ac0944c156e5f44';
/**
   * _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS
   * Returns the number of waypoints for a requested path (NAVMESH_REQUEST_PATH) if the query is completed (_NAVMESH_REQUESTED_QUERY_STATUS). For use with _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
   *
   * @param {number} path
   * @return {number}
   */
export const _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS = '0xd470725e0703d22f';
/**
   * _NAVMESH_REQUESTED_PATH_WAYPOINTS_FOUND
   * Returns true if a path of waypoints was found. Waypoints can be retrieved with _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS and _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
   *
   * @param {number} path
   * @return {boolean}
   */
export const _NAVMESH_REQUESTED_PATH_WAYPOINTS_FOUND = '0x8800776e410eb669';
/**
   * _NAVMESH_REQUESTED_PATH_WAYPOINTS_TERRAIN
   * Returns a bit flag for seemingly terrain within the waypoints in the path. Checked against bit value 2 to match water in the path, seems to always contain at least 1 though regardless of location/ped.
   *
   * @param {number} path
   * @return {number}
   */
export const _NAVMESH_REQUESTED_PATH_WAYPOINTS_TERRAIN = '0xf61cfedeab627bfa';
/**
   * _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX
   * Returns a vector3 waypoint at the specified index for a path. Use _NAVMESH_REQUESTED_PATH_NUM_WAYPOINTS to get available indexes.
   *
   * @param {number} path
   * @param {number} waypointIndex
   * @return {Vector3}
   */
export const _NAVMESH_REQUESTED_PATH_WAYPOINT_BY_INDEX = '0x430f8319ae56c8a9';
/**
   * _NAVMESH_REQUESTED_QUERY_STATUS
   * Returns eNavMeshQueryStatus
   * enum eNavMeshQueryStatus
   * {
   *   QS_NOT_FOUND,
   *   QS_COMPLETE,
   *   QS_PENDING
   * };
   * 
   * It appears that the pending state of 2 is at least also used when cleaning up a request (_NAVMESH_CLEAR_REQUESTED_PATH) or if a request never completes. Eventually queries are invalidated and return 0.
   * 
   * Old name: _NAVMESH_QUERY_STATUS
   *
   * @param {number} path
   * @return {number}
   */
export const _NAVMESH_REQUESTED_QUERY_STATUS = '0x3a0f82f6ee2291c8';
/**
   * _REMOVE_NAVMESH_BLOCKING_VOLUME
   *
   * @param {number} volume
   * @return {void}
   */
export const _REMOVE_NAVMESH_BLOCKING_VOLUME = '0x2c87c3e1c7b96ee2';
/**
   * _SIMULATED_ROUTE_CREATE
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} p6
   * @return {any}
   */
export const _SIMULATED_ROUTE_CREATE = '0xfd5bb35aab83fd48';
/**
   * _SIMULATED_ROUTE_DELETE
   *
   * @param {any} p0
   * @return {void}
   */
export const _SIMULATED_ROUTE_DELETE = '0x4907d0e4fb26ee65';
/**
   * _SIMULATED_ROUTE_EXISTS
   *
   * @param {any} p0
   * @return {boolean}
   */
export const _SIMULATED_ROUTE_EXISTS = '0x65a8196b8d7f5e0b';
/**
   * ADD_ARMOUR_TO_PED
   * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
   *
   * @param {number} ped
   * @param {number} amount
   * @return {void}
   */
export const ADD_ARMOUR_TO_PED = '0x5ba652a0cd14df2f';
/**
   * ADD_CUSTOM_FORMATION_LOCATION
   *
   * @param {number} groupId
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} position
   * @return {void}
   */
export const ADD_CUSTOM_FORMATION_LOCATION = '0x4e23cd07bd161e06';
/**
   * ADD_FORMATION_LOCATION
   *
   * @param {number} groupId
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {boolean}
   */
export const ADD_FORMATION_LOCATION = '0xb05945c1e9e60d91';
/**
   * ADD_RELATIONSHIP_GROUP
   * The hash of the created relationship group is output in the second parameter.
   *
   * @param {string | number} name
   * @param {number} groupHash
   * @return {boolean}
   */
export const ADD_RELATIONSHIP_GROUP = '0xf372bc22fcb88606';
/**
   * ADD_SCENARIO_BLOCKING_AREA
   * blockingFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScenarioBlockingFlags
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {boolean} p6
   * @param {number} blockingFlags
   * @return {number}
   */
export const ADD_SCENARIO_BLOCKING_AREA = '0x1b5c85c612e5256e';
/**
   * APPLY_DAMAGE_TO_PED
   * damages a ped with the given amount
   *
   * @param {number} ped
   * @param {number} damageAmount
   * @param {boolean} damageArmour
   * @param {number} boneId
   * @param {number} pedKiller
   * @return {void}
   */
export const APPLY_DAMAGE_TO_PED = '0x697157ced63f18d4';
/**
   * APPLY_PED_BLOOD_SPECIFIC
   *
   * @param {number} ped
   * @param {any} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {any} p6
   * @param {number} p7
   * @param {DataView} p8
   * @return {void}
   */
export const APPLY_PED_BLOOD_SPECIFIC = '0xef0d582cbf2d9b0f';
/**
   * APPLY_PED_DAMAGE_PACK
   * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_decals.lua
   *
   * @param {number} ped
   * @param {string | number} damagePack
   * @param {number} damage
   * @param {number} mult
   * @return {void}
   */
export const APPLY_PED_DAMAGE_PACK = '0x46df918788cb093f';
/**
   * CAN_KNOCK_PED_OFF_VEHICLE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const CAN_KNOCK_PED_OFF_VEHICLE = '0x51ac07a44d4f5b8a';
/**
   * CAN_PED_BE_MOUNTED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const CAN_PED_BE_MOUNTED = '0x2d64376cf437363e';
/**
   * CAN_PED_IN_COMBAT_SEE_TARGET
   *
   * @param {number} ped
   * @param {number} target
   * @return {boolean}
   */
export const CAN_PED_IN_COMBAT_SEE_TARGET = '0xead42de3610d0721';
/**
   * CAN_PED_RAGDOLL
   *
   * @param {number} ped
   * @return {boolean}
   */
export const CAN_PED_RAGDOLL = '0x128f79edcece4fd5';
/**
   * CAN_PED_SEE_ENTITY
   * Returns:
   * 0 - CTR_CANNOT_TARGET
   * 1 - CTR_CAN_TARGET
   * 2 - CTR_NOT_SURE_YET
   *
   * @param {number} ped
   * @param {number} targetEntity
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {number}
   */
export const CAN_PED_SEE_ENTITY = '0x7f9b9791d4cb71f6';
/**
   * CAN_PED_SEE_PED_CACHED
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {boolean} p2
   * @return {number}
   */
export const CAN_PED_SEE_PED_CACHED = '0x9d9473cb82d83a30';
/**
   * CLEAR_FACIAL_IDLE_ANIM_OVERRIDE
   *
   * @param {number} ped
   * @return {void}
   */
export const CLEAR_FACIAL_IDLE_ANIM_OVERRIDE = '0x726256cc1eeb182f';
/**
   * CLEAR_PED_BLOOD_DAMAGE
   *
   * @param {number} ped
   * @return {void}
   */
export const CLEAR_PED_BLOOD_DAMAGE = '0x8fe22675a5a45817';
/**
   * CLEAR_PED_BLOOD_DAMAGE_BY_ZONE
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const CLEAR_PED_BLOOD_DAMAGE_BY_ZONE = '0x56e3b78c5408d9f4';
/**
   * CLEAR_PED_DAMAGE_DECAL_BY_ZONE
   *
   * @param {number} ped
   * @param {number} p1
   * @param {string | number} p2
   * @return {void}
   */
export const CLEAR_PED_DAMAGE_DECAL_BY_ZONE = '0x523c79aeefcc4a2a';
/**
   * CLEAR_PED_DECORATIONS
   *
   * @param {number} ped
   * @return {void}
   */
export const CLEAR_PED_DECORATIONS = '0x0e5173c163976e38';
/**
   * CLEAR_PED_ENV_DIRT
   *
   * @param {number} ped
   * @return {void}
   */
export const CLEAR_PED_ENV_DIRT = '0x6585d955a68452a5';
/**
   * CLEAR_PED_LAST_DAMAGE_BONE
   *
   * @param {number} ped
   * @return {void}
   */
export const CLEAR_PED_LAST_DAMAGE_BONE = '0x8ef6b7ac68e2f01b';
/**
   * CLEAR_PED_NON_CREATION_AREA
   *
  
   * @return {void}
   */
export const CLEAR_PED_NON_CREATION_AREA = '0x2e05208086ba0651';
/**
   * CLEAR_PED_WETNESS
   * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
   *
   * @param {number} ped
   * @return {void}
   */
export const CLEAR_PED_WETNESS = '0x9c720776daa43e7e';
/**
   * CLEAR_RAGDOLL_BLOCKING_FLAGS
   * flags: see SET_RAGDOLL_BLOCKING_FLAGS
   *
   * @param {number} ped
   * @param {number} flags
   * @return {void}
   */
export const CLEAR_RAGDOLL_BLOCKING_FLAGS = '0xd86d101fcfd00a4b';
/**
   * CLEAR_RELATIONSHIP_BETWEEN_GROUPS
   *
   * @param {number} relationship
   * @param {number} group1
   * @param {number} group2
   * @return {void}
   */
export const CLEAR_RELATIONSHIP_BETWEEN_GROUPS = '0x5e29243fb56fc6d4';
/**
   * CLONE_PED
   *
   * @param {number} ped
   * @param {boolean} isNetwork
   * @param {boolean} bScriptHostPed
   * @param {boolean} copyHeadBlendFlag
   * @return {number}
   */
export const CLONE_PED = '0xef29a16337facadb';
/**
   * CLONE_PED_TO_TARGET
   * Copies ped's components and props to targetPed.
   * Can be used to clear anything from a ped by cloning it, including bullet holes.
   *
   * @param {number} ped
   * @param {number} targetPed
   * @return {void}
   */
export const CLONE_PED_TO_TARGET = '0xe952d6431689ad9a';
/**
   * COMPUTE_SATCHEL_ITEM_FOR_PED_DAMAGE
   *
   * @param {any} p0
   * @param {number} pedAttached
   * @param {number} damageCleanliness
   * @return {boolean}
   */
export const COMPUTE_SATCHEL_ITEM_FOR_PED_DAMAGE = '0x9e7738b291706746';
/**
   * COUNT_PEDS_IN_COMBAT_WITH_TARGET
   *
   * @param {number} ped
   * @param {number} flag
   * @return {number}
   */
export const COUNT_PEDS_IN_COMBAT_WITH_TARGET = '0x5407b7288d0478b7';
/**
   * COUNT_PEDS_IN_COMBAT_WITH_TARGET_WITHIN_RADIUS
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} flag
   * @return {number}
   */
export const COUNT_PEDS_IN_COMBAT_WITH_TARGET_WITHIN_RADIUS = '0x336b3d200ab007cb';
/**
   * CREATE_GROUP
   * Creates a new ped group.
   * Groups can contain up to 8 peds.
   * 
   * The parameter is unused.
   * 
   * Returns a handle to the created group, or 0 if a group couldn't be created.
   *
   * @param {number} taskAllocator
   * @return {number}
   */
export const CREATE_GROUP = '0x90370ebe0fee1a3d';
/**
   * CREATE_PED
   *
   * @param {number} modelHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {boolean} isNetwork
   * @param {boolean} bScriptHostPed
   * @param {boolean} p7
   * @param {boolean} p8
   * @return {number}
   */
export const CREATE_PED = '0xd49f9b0955c367de';
/**
   * CREATE_PED_INSIDE_VEHICLE
   * seatIndex:
   * enum eVehicleSeat
   * {
   *   VS_ANY_PASSENGER = -2,
   *   VS_DRIVER,
   *   VS_FRONT_RIGHT,
   *   VS_BACK_LEFT,
   *   VS_BACK_RIGHT,
   *   VS_EXTRA_LEFT_1,
   *   VS_EXTRA_RIGHT_1,
   *   VS_EXTRA_LEFT_2,
   *   VS_EXTRA_RIGHT_2,
   *   VS_EXTRA_LEFT_3,
   *   VS_EXTRA_RIGHT_3,
   *   VS_NUM_SEATS
   * };
   *
   * @param {number} vehicle
   * @param {number} modelHash
   * @param {number} seatIndex
   * @param {boolean} p3
   * @param {boolean} p4
   * @param {boolean} p5
   * @return {number}
   */
export const CREATE_PED_INSIDE_VEHICLE = '0x7dd959874c1fd534';
/**
   * CREATE_PED_ON_MOUNT
   *
   * @param {number} mount
   * @param {number} modelHash
   * @param {number} index
   * @param {boolean} p3
   * @param {boolean} p4
   * @param {boolean} p5
   * @param {boolean} p6
   * @return {number}
   */
export const CREATE_PED_ON_MOUNT = '0xf89aa2bd01fc06b7';
/**
   * DELETE_PED
   * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
   *
  
   * @return {number}
   */
export const DELETE_PED = '0xcc0ef140f99365c5';
/**
   * DETACH_CARRIABLE_ENTITY
   *
   * @param {number} entity
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const DETACH_CARRIABLE_ENTITY = '0xed00d72f81cf7278';
/**
   * DISABLE_PED_INJURED_ON_GROUND_BEHAVIOUR
   *
   * @param {number} ped
   * @return {void}
   */
export const DISABLE_PED_INJURED_ON_GROUND_BEHAVIOUR = '0x733c87d4ce22bea2';
/**
   * DOES_GROUP_EXIST
   *
   * @param {number} groupId
   * @return {boolean}
   */
export const DOES_GROUP_EXIST = '0x7c6b0c22f9f40bbe';
/**
   * EXPLODE_PED_HEAD
   * Forces the ped to fall back and kills it.
   * 
   * It doesn't really explode the ped's head but it kills the ped
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {void}
   */
export const EXPLODE_PED_HEAD = '0x2d05ced3a38d0f3a';
/**
   * FADE_AND_DESTROY_PED
   *
  
   * @return {number}
   */
export const FADE_AND_DESTROY_PED = '0x7043d0681285ba2d';
/**
   * FIND_ALL_ATTACHED_CARRIABLE_ENTITIES
   *
   * @param {number} ped
   * @param {number} itemset
   * @return {void}
   */
export const FIND_ALL_ATTACHED_CARRIABLE_ENTITIES = '0xb5ace8b23a438ec0';
/**
   * FORCE_ALL_HEADING_VALUES_TO_ALIGN
   * Old name: _FREEZE_PED_CAMERA_ROTATION
   *
   * @param {number} ped
   * @return {void}
   */
export const FORCE_ALL_HEADING_VALUES_TO_ALIGN = '0xff287323b0e2c69a';
/**
   * FORCE_PED_AI_AND_ANIMATION_UPDATE
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const FORCE_PED_AI_AND_ANIMATION_UPDATE = '0x2208438012482a1a';
/**
   * FORCE_PED_MOTION_STATE
   * motionStateHash: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CPedMotionStates__eMotionState
   *
   * @param {number} ped
   * @param {number} motionStateHash
   * @param {boolean} p2
   * @param {number} p3
   * @param {boolean} p4
   * @return {boolean}
   */
export const FORCE_PED_MOTION_STATE = '0xf28965d04f570dca';
/**
   * GET_ANIM_INITIAL_OFFSET_POSITION
   *
   * @param {string | number} animDict
   * @param {string | number} animName
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} p8
   * @param {number} p9
   * @return {Vector3}
   */
export const GET_ANIM_INITIAL_OFFSET_POSITION = '0xbe22b26dd764c040';
/**
   * GET_ANIM_INITIAL_OFFSET_ROTATION
   *
   * @param {string | number} animDict
   * @param {string | number} animName
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} p8
   * @param {number} p9
   * @return {Vector3}
   */
export const GET_ANIM_INITIAL_OFFSET_ROTATION = '0x4b805e6046ee9e47';
/**
   * GET_CARRIED_ATTACHED_INFO_FOR_SLOT
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const GET_CARRIED_ATTACHED_INFO_FOR_SLOT = '0x608bc6a6aacd5036';
/**
   * GET_CLOSEST_PED
   * Gets the closest ped in a radius.
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {boolean} p4
   * @param {boolean} p5
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {boolean} p9
   * @param {number} pedType
   * @return {[boolean, Ped]}
   */
export const GET_CLOSEST_PED = '0xc33ab876a77f8164';
/**
   * GET_COMBAT_FLOAT
   *
   * @param {number} ped
   * @param {number} combatType
   * @return {number}
   */
export const GET_COMBAT_FLOAT = '0x52dff8a10508090a';
/**
   * GET_CURRENT_TARGET_FOR_PED
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_CURRENT_TARGET_FOR_PED = '0xcd66fea29400a0b5';
/**
   * GET_DEAD_PED_PICKUP_COORDS
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {Vector3}
   */
export const GET_DEAD_PED_PICKUP_COORDS = '0xcd5003b097200f36';
/**
   * GET_GROUP_SIZE
   *
   * @param {number} groupId
   * @return {[boolean, number]}
   */
export const GET_GROUP_SIZE = '0x8de69fe35ca09a45';
/**
   * GET_IS_PED_RESPONDING_TO_NEGATIVE_INTERACTION
   *
   * @param {number} ped
   * @param {number} player
   * @return {boolean}
   */
export const GET_IS_PED_RESPONDING_TO_NEGATIVE_INTERACTION = '0xa454d234e45bb6e5';
/**
   * GET_IS_PED_RESPONDING_TO_POSITIVE_INTERACTION
   *
   * @param {number} ped
   * @param {number} player
   * @return {boolean}
   */
export const GET_IS_PED_RESPONDING_TO_POSITIVE_INTERACTION = '0x9337183fda2e9035';
/**
   * GET_JACK_TARGET
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_JACK_TARGET = '0x5486a79d9fbd342d';
/**
   * GET_LOOTING_PICKUP_TARGET_ENTITY
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_LOOTING_PICKUP_TARGET_ENTITY = '0x14169fa823679e41';
/**
   * GET_MELEE_TARGET_FOR_PED
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_MELEE_TARGET_FOR_PED = '0x18a3e9ee1297fd39';
/**
   * GET_META_PED_ASSET_GUIDS
   * This is a way to get what drawables a ped has equipped
   * Example: you are able to tell if the ped has the drawable PLAYER_ZERO_HAT_017 attached
   * Note: this works with non shop components, direct .ydd files.
   *
   * @param {number} ped
   * @param {number} index
   * @return {[boolean, number, number, number, number]}
   */
export const GET_META_PED_ASSET_GUIDS = '0xa9c28516a6dc9d56';
/**
   * GET_META_PED_ASSET_TINT
   *
   * @param {number} ped
   * @param {number} index
   * @return {[boolean, number, number, number, number]}
   */
export const GET_META_PED_ASSET_TINT = '0xe7998fec53a33bbe';
/**
   * GET_MOUNT
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_MOUNT = '0xe7e11b8dcbed1058';
/**
   * GET_NUM_META_PED_OUTFITS
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_NUM_META_PED_OUTFITS = '0x10c70a515bc03707';
/**
   * GET_PEDS_JACKER
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PEDS_JACKER = '0x9b128dc36c1e04cf';
/**
   * GET_PED_ACCURACY
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_ACCURACY = '0x37f4ad56ecbc0cd6';
/**
   * GET_PED_AS_GROUP_LEADER
   *
   * @param {number} groupId
   * @return {number}
   */
export const GET_PED_AS_GROUP_LEADER = '0x5cce68dbd5fe93ec';
/**
   * GET_PED_AS_GROUP_MEMBER
   *
   * @param {number} groupId
   * @param {number} memberNumber
   * @return {number}
   */
export const GET_PED_AS_GROUP_MEMBER = '0x51455483cf23ed97';
/**
   * GET_PED_BLACKBOARD_SCRIPT_BOOL
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {boolean}
   */
export const GET_PED_BLACKBOARD_SCRIPT_BOOL = '0x4912dfe492db98cd';
/**
   * GET_PED_BLACKBOARD_SCRIPT_FLOAT
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {number}
   */
export const GET_PED_BLACKBOARD_SCRIPT_FLOAT = '0xa29fd00d45311eb7';
/**
   * GET_PED_BLACKBOARD_SCRIPT_INT
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {number}
   */
export const GET_PED_BLACKBOARD_SCRIPT_INT = '0xb71b91b398f8f067';
/**
   * GET_PED_BONE_COORDS
   * Gets the position of the specified bone of the specified ped.
   * 
   * ped: The ped to get the position of a bone from.
   * boneId: The ID of the bone to get the position from. This is NOT the index.
   * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
   * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
   * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
   *
   * @param {number} ped
   * @param {number} boneId
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @return {Vector3}
   */
export const GET_PED_BONE_COORDS = '0x17c07fc640e86b4e';
/**
   * GET_PED_BONE_INDEX
   * no bone = -1
   *
   * @param {number} ped
   * @param {number} boneId
   * @return {number}
   */
export const GET_PED_BONE_INDEX = '0x3f428d08be5aae31';
/**
   * GET_PED_CAUSE_OF_DEATH
   * Returns the hash of the weapon/model/object that killed the ped.
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_CAUSE_OF_DEATH = '0x16ffe42ab2d2dc59';
/**
   * GET_PED_COMBAT_MOVEMENT
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_COMBAT_MOVEMENT = '0xdea92412fcaeb3f5';
/**
   * GET_PED_CONFIG_FLAG
   * flagId: see SET_PED_CONFIG_FLAG
   *
   * @param {number} ped
   * @param {number} flagId
   * @param {boolean} p2
   * @return {boolean}
   */
export const GET_PED_CONFIG_FLAG = '0x7ee53118c892b513';
/**
   * GET_PED_CROUCH_MOVEMENT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const GET_PED_CROUCH_MOVEMENT = '0xd5fe956c70ff370b';
/**
   * GET_PED_CURRENT_MOVE_BLEND_RATIO
   * Old name: _GET_PED_CURRENT_MOVEMENT_SPEED
   *
   * @param {number} ped
   * @return {[boolean, number, number]}
   */
export const GET_PED_CURRENT_MOVE_BLEND_RATIO = '0xf60165e1d2c5370b';
/**
   * GET_PED_DEFENSIVE_AREA_POSITION
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {Vector3}
   */
export const GET_PED_DEFENSIVE_AREA_POSITION = '0x3c06b8786dd94cd1';
/**
   * GET_PED_GRAPPLE_STATE
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_GRAPPLE_STATE = '0x2311f15d971aa680';
/**
   * GET_PED_GROUP_INDEX
   * Returns the groupId of which the specified ped is a member of.
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_GROUP_INDEX = '0xf162e133b4e7a675';
/**
   * GET_PED_IS_BEING_GRAPPLED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const GET_PED_IS_BEING_GRAPPLED = '0x3bdfcf25b58b0415';
/**
   * GET_PED_IS_DOING_COMBAT_ROLL
   *
   * @param {number} ped
   * @return {boolean}
   */
export const GET_PED_IS_DOING_COMBAT_ROLL = '0xc48a9eb0d499b3e5';
/**
   * GET_PED_IS_GRAPPLING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const GET_PED_IS_GRAPPLING = '0x0e99e3bf11bb6367';
/**
   * GET_PED_LAST_DAMAGE_BONE
   *
   * @param {number} ped
   * @return {[boolean, number]}
   */
export const GET_PED_LAST_DAMAGE_BONE = '0xd75960f6bd9ea49c';
/**
   * GET_PED_LOOT_STATUS_MP
   * enum ePedLootStatus
   * {
   *   PLS_NONE,
   *   PLS_PRE_LOOT,
   *   PLS_SAMPLING,
   *   PLS_SKINNING
   * };
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_LOOT_STATUS_MP = '0xc737697c41628340';
/**
   * GET_PED_MAX_HEALTH
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_MAX_HEALTH = '0x4700a416e8324ef3';
/**
   * GET_PED_MONEY
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_MONEY = '0x3f69145bba87bae7';
/**
   * GET_PED_MOTION_FOCUS_ENTITY
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_MOTION_FOCUS_ENTITY = '0x243e1b4607040057';
/**
   * GET_PED_NEARBY_PEDS
   *
   * @param {number} ped
   * @param {DataView} sizeAndPeds
   * @param {number} ignoredPedType
   * @param {number} p3
   * @return {number}
   */
export const GET_PED_NEARBY_PEDS = '0x23f8f5fc7e8c4a6b';
/**
   * GET_PED_NEARBY_VEHICLES
   *
   * @param {number} ped
   * @param {DataView} sizeAndVehs
   * @return {number}
   */
export const GET_PED_NEARBY_VEHICLES = '0xcff869cbfa210d82';
/**
   * GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH = '0x42fdd0f017b1e38e';
/**
   * GET_PED_RELATIONSHIP_GROUP_HASH
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_RELATIONSHIP_GROUP_HASH = '0x7dbdd04862d95f04';
/**
   * GET_PED_RESET_FLAG
   *
   * @param {number} ped
   * @param {number} flagId
   * @return {boolean}
   */
export const GET_PED_RESET_FLAG = '0xaf9e59b1b1fbf2a0';
/**
   * GET_PED_SOURCE_OF_DEATH
   * Returns the entity that killed the ped
   * 
   * It is best to check if the Ped is dead before asking for its killer.
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_SOURCE_OF_DEATH = '0x93c8b64deb84728c';
/**
   * GET_PED_STEALTH_MOVEMENT
   * Returns whether the entity is in stealth mode
   *
   * @param {number} ped
   * @return {boolean}
   */
export const GET_PED_STEALTH_MOVEMENT = '0x7c2ac9ca66575fbf';
/**
   * GET_PED_TIME_OF_DEATH
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_TIME_OF_DEATH = '0x1e98817b311ae98a';
/**
   * GET_PED_TO_PLAYER_WEAPON_DAMAGE_MODIFIER
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_TO_PLAYER_WEAPON_DAMAGE_MODIFIER = '0x936e7cad0ae2ee14';
/**
   * GET_PED_TYPE
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_TYPE = '0xff059e1e4c01e63c';
/**
   * GET_PLAYER_PED_IS_FOLLOWING
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PLAYER_PED_IS_FOLLOWING = '0x6a3975dea89f9a17';
/**
   * GET_RELATIONSHIP_BETWEEN_GROUPS
   *
   * @param {number} group1
   * @param {number} group2
   * @return {number}
   */
export const GET_RELATIONSHIP_BETWEEN_GROUPS = '0x9e6b70061662ae5c';
/**
   * GET_RELATIONSHIP_BETWEEN_PEDS
   *
   * @param {number} ped1
   * @param {number} ped2
   * @return {number}
   */
export const GET_RELATIONSHIP_BETWEEN_PEDS = '0xeba5ad3a0eaf7121';
/**
   * GET_SEAT_PED_IS_TRYING_TO_ENTER
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_SEAT_PED_IS_TRYING_TO_ENTER = '0x6f4c85acd641bcd2';
/**
   * GET_SEAT_PED_IS_USING
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_SEAT_PED_IS_USING = '0x4e76cb57222a00e5';
/**
   * GET_TRACKED_PED_PIXELCOUNT
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_TRACKED_PED_PIXELCOUNT = '0x511f1a683387c7e2';
/**
   * GET_VEHICLE_PED_IS_ENTERING
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_VEHICLE_PED_IS_ENTERING = '0xf92691aed837a5fc';
/**
   * GET_VEHICLE_PED_IS_IN
   * Gets the vehicle the specified Ped is in.
   * 
   * If the Ped is not in a vehicle and includeLastVehicle is true, the vehicle they were last in is returned.
   *
   * @param {number} ped
   * @param {boolean} lastVehicle
   * @return {number}
   */
export const GET_VEHICLE_PED_IS_IN = '0x9a9112a0fe9a4713';
/**
   * GET_VEHICLE_PED_IS_USING
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_VEHICLE_PED_IS_USING = '0x6094ad011a2ea87d';
/**
   * GIVE_PED_HASH_SCENARIO_PROP
   *
   * @param {number} ped
   * @param {number} object
   * @param {string | number} conditionalAnim
   * @param {number} scenarioType
   * @param {number} p4
   * @param {boolean} p5
   * @return {boolean}
   */
export const GIVE_PED_HASH_SCENARIO_PROP = '0x2b02db082258625f';
/**
   * HAS_MOTION_TYPE_ASSET_LOADED
   *
   * @param {number} nameHash
   * @param {number} ped
   * @return {boolean}
   */
export const HAS_MOTION_TYPE_ASSET_LOADED = '0x854bc9b1a1ccd034';
/**
   * INIT_PED_DEFAULT_HEALTH
   *
   * @param {number} ped
   * @return {void}
   */
export const INIT_PED_DEFAULT_HEALTH = '0x7dd7fb3480d8083e';
/**
   * INSTANTLY_FILL_PED_POPULATION
   *
  
   * @return {void}
   */
export const INSTANTLY_FILL_PED_POPULATION = '0x4759cc730f947c81';
/**
   * IS_ANIMAL_INTERACTION_POSSIBLE
   *
   * @param {number} ped
   * @param {number} animal
   * @return {boolean}
   */
export const IS_ANIMAL_INTERACTION_POSSIBLE = '0xd543d3a8fde4f185';
/**
   * IS_ANY_HOSTILE_PED_NEAR_POINT
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {boolean}
   */
export const IS_ANY_HOSTILE_PED_NEAR_POINT = '0x68772db2b2526f9f';
/**
   * IS_ANY_PED_NEAR_POINT
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {boolean}
   */
export const IS_ANY_PED_NEAR_POINT = '0x083961498679dc9f';
/**
   * IS_ANY_PED_SHOOTING_IN_AREA
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {boolean} p6
   * @param {boolean} p7
   * @return {boolean}
   */
export const IS_ANY_PED_SHOOTING_IN_AREA = '0xa0d3d71ea1086c55';
/**
   * IS_EVENT_IN_QUEUE
   *
   * @param {number} ped
   * @param {number} eventType
   * @return {boolean}
   */
export const IS_EVENT_IN_QUEUE = '0xc8d523bf5bbd3808';
/**
   * IS_GROUP_LOCALLY_CONTROLLED
   *
   * @param {number} groupId
   * @return {boolean}
   */
export const IS_GROUP_LOCALLY_CONTROLLED = '0x909ad9e9a92a10df';
/**
   * IS_INSTANTLY_FILL_PED_POPULATION_FINISHED
   *
  
   * @return {boolean}
   */
export const IS_INSTANTLY_FILL_PED_POPULATION_FINISHED = '0x0ee3f0d7feccc54f';
/**
   * IS_LOCATION_SPAWN_SAFE
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const IS_LOCATION_SPAWN_SAFE = '0xfb1e7998b8595825';
/**
   * IS_PED_AIMING_FROM_COVER
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_AIMING_FROM_COVER = '0x3998b1276a3300e5';
/**
   * IS_PED_A_PLAYER
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_A_PLAYER = '0x12534c348c6cb68b';
/**
   * IS_PED_BEING_DRAGGED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_BEING_DRAGGED = '0xef3a8772f085b4aa';
/**
   * IS_PED_BEING_HOGTIED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_BEING_HOGTIED = '0xd453bb601d4a606e';
/**
   * IS_PED_BEING_JACKED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_BEING_JACKED = '0x9a497fe2df198913';
/**
   * IS_PED_BEING_STEALTH_KILLED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_BEING_STEALTH_KILLED = '0x863b23efde9c5df2';
/**
   * IS_PED_BEING_STUNNED
   *
   * @param {number} ped
   * @param {number} weaponType
   * @return {boolean}
   */
export const IS_PED_BEING_STUNNED = '0x4fbacce3b4138ee8';
/**
   * IS_PED_CARRYING_SOMETHING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_CARRYING_SOMETHING = '0xa911ee21edf69daf';
/**
   * IS_PED_CLIMBING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_CLIMBING = '0x53e8cb4f48bfe623';
/**
   * IS_PED_DEAD_OR_DYING
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {boolean}
   */
export const IS_PED_DEAD_OR_DYING = '0x3317dedb88c95038';
/**
   * IS_PED_DEFENSIVE_AREA_ACTIVE
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {boolean}
   */
export const IS_PED_DEFENSIVE_AREA_ACTIVE = '0xba63d9fe45412247';
/**
   * IS_PED_DIVING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_DIVING = '0x5527b8246fef9b11';
/**
   * IS_PED_ENTERING_ANY_TRANSPORT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_ENTERING_ANY_TRANSPORT = '0x1d46b417f926d34d';
/**
   * IS_PED_EVASIVE_DIVING
   * Presumably returns the Entity that the Ped is currently diving out of the way of.
   *
   * @param {number} ped
   * @param {number} evadingEntity
   * @return {boolean}
   */
export const IS_PED_EVASIVE_DIVING = '0x414641c26e105898';
/**
   * IS_PED_FACING_PED
   * angle is ped's view cone
   *
   * @param {number} ped
   * @param {number} otherPed
   * @param {number} angle
   * @return {boolean}
   */
export const IS_PED_FACING_PED = '0xd71649db0a545aa3';
/**
   * IS_PED_FALLING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_FALLING = '0xfb92a102f1c4dfa3';
/**
   * IS_PED_FALLING_OVER
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_FALLING_OVER = '0x3e592d0486dec0f6';
/**
   * IS_PED_FATALLY_INJURED
   * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
   * If the handle is invalid, the function returns true.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_FATALLY_INJURED = '0xd839450756ed5a80';
/**
   * IS_PED_FLEEING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_FLEEING = '0xbbcce00b381f8482';
/**
   * IS_PED_FULLY_ON_MOUNT
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {boolean}
   */
export const IS_PED_FULLY_ON_MOUNT = '0x95cbc65780de7eb1';
/**
   * IS_PED_GETTING_INTO_A_VEHICLE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_GETTING_INTO_A_VEHICLE = '0xbb062b2b5722478e';
/**
   * IS_PED_GOING_INTO_COVER
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_GOING_INTO_COVER = '0x9f65dbc537e59ad5';
/**
   * IS_PED_GROUP_MEMBER
   *
   * @param {number} ped
   * @param {number} groupId
   * @param {boolean} p2
   * @return {boolean}
   */
export const IS_PED_GROUP_MEMBER = '0x9bb01e3834671191';
/**
   * IS_PED_HANGING_ON_TO_VEHICLE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_HANGING_ON_TO_VEHICLE = '0x1c86d8aef8254b78';
/**
   * IS_PED_HEADING_TOWARDS_POSITION
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @return {boolean}
   */
export const IS_PED_HEADING_TOWARDS_POSITION = '0xfcf37a457cb96dc0';
/**
   * IS_PED_HEADTRACKING_ENTITY
   *
   * @param {number} ped
   * @param {number} entity
   * @return {boolean}
   */
export const IS_PED_HEADTRACKING_ENTITY = '0x813a0a7c9d2e831f';
/**
   * IS_PED_HEADTRACKING_PED
   *
   * @param {number} ped1
   * @param {number} ped2
   * @return {boolean}
   */
export const IS_PED_HEADTRACKING_PED = '0x5cd3cb88a7f8850d';
/**
   * IS_PED_HOGTIED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_HOGTIED = '0x3aa24ccc0d451379';
/**
   * IS_PED_HOGTYING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_HOGTYING = '0x42429c674b61238b';
/**
   * IS_PED_HUMAN
   * Returns true/false if the ped is/isn't humanoid.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_HUMAN = '0xb980061da992779d';
/**
   * IS_PED_INCAPACITATED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_INCAPACITATED = '0xb655db7582aec805';
/**
   * IS_PED_INJURED
   * Gets a value indicating whether this ped's health is below its injured threshold.
   * 
   * The default threshold is 100.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_INJURED = '0x84a2dd9ac37c35c1';
/**
   * IS_PED_IN_ANY_BOAT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_ANY_BOAT = '0x2e0e1c2b4f6cb339';
/**
   * IS_PED_IN_ANY_HELI
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_ANY_HELI = '0x298b91ae825e5705';
/**
   * IS_PED_IN_ANY_PLANE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_ANY_PLANE = '0x5fff4cfc74d8fb80';
/**
   * IS_PED_IN_ANY_TAXI
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_ANY_TAXI = '0x6e575d6a898ab852';
/**
   * IS_PED_IN_ANY_TRAIN
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_ANY_TRAIN = '0x6f972c1ab75a1ed0';
/**
   * IS_PED_IN_ANY_VEHICLE
   * Gets a value indicating whether the specified ped is in any vehicle.
   *
   * @param {number} ped
   * @param {boolean} atGetIn
   * @return {boolean}
   */
export const IS_PED_IN_ANY_VEHICLE = '0x997abd671d25ca0b';
/**
   * IS_PED_IN_COMBAT
   *
   * @param {number} ped
   * @param {number} target
   * @return {boolean}
   */
export const IS_PED_IN_COMBAT = '0x4859f1fc66a6278e';
/**
   * IS_PED_IN_COVER
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {boolean}
   */
export const IS_PED_IN_COVER = '0x60dfd0691a170b88';
/**
   * IS_PED_IN_COVER_FACING_LEFT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_COVER_FACING_LEFT = '0x845333b3150583ab';
/**
   * IS_PED_IN_FLYING_VEHICLE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_FLYING_VEHICLE = '0x9134873537fa419c';
/**
   * IS_PED_IN_GROUP
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_GROUP = '0x5891cac5d4acff74';
/**
   * IS_PED_IN_MELEE_COMBAT
   * Notes: The function only returns true while the ped is: 
   * A.) Swinging a random melee attack (including pistol-whipping)
   * 
   * B.) Reacting to being hit by a melee attack (including pistol-whipping)
   * 
   * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter). 
   * 
   * You don't have to be holding the melee-targeting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_MELEE_COMBAT = '0x4e209b2c1ead5159';
/**
   * IS_PED_IN_MODEL
   *
   * @param {number} ped
   * @param {number} modelHash
   * @return {boolean}
   */
export const IS_PED_IN_MODEL = '0x796d90efb19aa332';
/**
   * IS_PED_IN_VEHICLE
   * Gets a value indicating whether the specified ped is in the specified vehicle.
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {boolean} atGetIn
   * @return {boolean}
   */
export const IS_PED_IN_VEHICLE = '0xa3ee4a07279bb9db';
/**
   * IS_PED_JACKING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_JACKING = '0x4ae4ff911dfb61da';
/**
   * IS_PED_JUMPING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_JUMPING = '0xcedabc5900a0bf97';
/**
   * IS_PED_LASSOED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_LASSOED = '0x9682f850056c9ade';
/**
   * IS_PED_MALE
   * Returns true/false if the ped is/isn't male.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_MALE = '0x6d9f5faa7488ba46';
/**
   * IS_PED_MODEL
   *
   * @param {number} ped
   * @param {number} modelHash
   * @return {boolean}
   */
export const IS_PED_MODEL = '0xc9d55b1a358a5bf7';
/**
   * IS_PED_ON_FOOT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_ON_FOOT = '0x01fee67db37f59b2';
/**
   * IS_PED_ON_MOUNT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_ON_MOUNT = '0x460bc76a0e10655e';
/**
   * IS_PED_ON_SPECIFIC_VEHICLE
   *
   * @param {number} ped
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_PED_ON_SPECIFIC_VEHICLE = '0xec5f66e459af3bb2';
/**
   * IS_PED_ON_VEHICLE
   * Gets a value indicating whether the specified ped is on top of any vehicle.
   * 
   * Return 1 when ped is on vehicle.
   * Return 0 when ped is not on a vehicle.
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {boolean}
   */
export const IS_PED_ON_VEHICLE = '0x67722aeb798e5fab';
/**
   * IS_PED_OPENING_DOOR
   * Returns true if the ped is currently opening a door (CTaskOpenDoor).
   * 
   * Old name: _IS_PED_OPENING_A_DOOR
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_OPENING_DOOR = '0x26af0e8e30bd2a2c';
/**
   * IS_PED_PERFORMING_MELEE_ACTION
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {boolean}
   */
export const IS_PED_PERFORMING_MELEE_ACTION = '0xdcca191df9980fd7';
/**
   * IS_PED_PLANTING_BOMB
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_PLANTING_BOMB = '0xc70b5fae151982d8';
/**
   * IS_PED_PRONE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_PRONE = '0xd6a86331a537a7b9';
/**
   * IS_PED_RAGDOLL
   * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_RAGDOLL = '0x47e4e977581c5b55';
/**
   * IS_PED_READY_TO_RENDER
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_READY_TO_RENDER = '0xa0bc8faed8cfeb3c';
/**
   * IS_PED_RELOADING
   * Returns whether the specified ped is reloading.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_RELOADING = '0x24b100c68c645951';
/**
   * IS_PED_RESPONDING_TO_EVENT
   * eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
   *
   * @param {number} ped
   * @param {number} eventType
   * @return {boolean}
   */
export const IS_PED_RESPONDING_TO_EVENT = '0x625b774d75c87068';
/**
   * IS_PED_RESPONDING_TO_THREAT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_RESPONDING_TO_THREAT = '0x77525bbf433f2cd6';
/**
   * IS_PED_RUNNING_MOBILE_PHONE_TASK
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_RUNNING_MOBILE_PHONE_TASK = '0x2afe52f782f25775';
/**
   * IS_PED_RUNNING_RAGDOLL_TASK
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_RUNNING_RAGDOLL_TASK = '0xe3b6097cc25aa69e';
/**
   * IS_PED_SHOOTING
   * Returns whether the specified ped is shooting.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_SHOOTING = '0x34616828cd07f1a1';
/**
   * IS_PED_SITTING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_SITTING = '0x84d0bf2b21862059';
/**
   * IS_PED_SITTING_IN_ANY_VEHICLE
   * Detect if ped is in any vehicle
   * [True/False]
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_SITTING_IN_ANY_VEHICLE = '0x826aa586edb9fef8';
/**
   * IS_PED_SITTING_IN_VEHICLE
   * Detect if ped is sitting in the specified vehicle
   * [True/False]
   *
   * @param {number} ped
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_PED_SITTING_IN_VEHICLE = '0xa808aa1d79230fc2';
/**
   * IS_PED_STOPPED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_STOPPED = '0x530944f6f4b8a214';
/**
   * IS_PED_SWIMMING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_SWIMMING = '0x9de327631295b4c2';
/**
   * IS_PED_SWIMMING_UNDER_WATER
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_SWIMMING_UNDER_WATER = '0xc024869a53992f34';
/**
   * IS_PED_USING_ACTION_MODE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_USING_ACTION_MODE = '0x00e73468d085f745';
/**
   * IS_PED_USING_ANY_SCENARIO
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_USING_ANY_SCENARIO = '0x57ab4a3080f85143';
/**
   * IS_PED_USING_SCENARIO_HASH
   * Equivalent to IS_PED_USING_SCENARIO from V but takes a hash instead of a string.
   *
   * @param {number} ped
   * @param {number} scenarioHash
   * @return {boolean}
   */
export const IS_PED_USING_SCENARIO_HASH = '0x34d6ac1157c8226c';
/**
   * IS_PED_USING_THIS_SCENARIO
   *
   * @param {number} ped
   * @param {number} scenario
   * @return {boolean}
   */
export const IS_PED_USING_THIS_SCENARIO = '0x9c54041bb66bcf9e';
/**
   * IS_PED_VAULTING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_VAULTING = '0x117c70d1f5730b5e';
/**
   * IS_TARGET_PED_IN_PERCEPTION_AREA
   * Returns true if ped is in perception (focused and looking at target ped)
   * Most float params are -1.f in R* Scripts
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} p2
   * @param {number} customDistance
   * @param {number} p4
   * @param {number} p5
   * @return {boolean}
   */
export const IS_TARGET_PED_IN_PERCEPTION_AREA = '0x06087579e7aa85a9';
/**
   * IS_TRACKED_PED_VISIBLE
   * Returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
   * Target needs to be tracked first, won't work otherwise.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_TRACKED_PED_VISIBLE = '0x91c8e617f64188ac';
/**
   * KNOCK_OFF_PED_PROP
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const KNOCK_OFF_PED_PROP = '0x6fd7816a36615f48';
/**
   * KNOCK_PED_OFF_VEHICLE
   *
   * @param {number} ped
   * @return {void}
   */
export const KNOCK_PED_OFF_VEHICLE = '0x45bbcba77c29a841';
/**
   * PED_COWER_IN_PLACE
   *
   * @param {number} ped
   * @param {number} ped2
   * @return {void}
   */
export const PED_COWER_IN_PLACE = '0xf6e1e9f47a7686f8';
/**
   * PED_COWER_MOVE_TO_POINT
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} ped2
   * @param {number} p5
   * @return {void}
   */
export const PED_COWER_MOVE_TO_POINT = '0x1e4c940233fc0c6f';
/**
   * REGISTER_HATED_TARGETS_AROUND_PED
   * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
   *
   * @param {number} ped
   * @param {number} radius
   * @return {void}
   */
export const REGISTER_HATED_TARGETS_AROUND_PED = '0x9222f300bf8354fe';
/**
   * REGISTER_TARGET
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {boolean} p2
   * @return {void}
   */
export const REGISTER_TARGET = '0x2f25d9aefa34fba2';
/**
   * RELEASE_PED_VISIBILITY_TRACKING
   *
   * @param {number} ped
   * @return {void}
   */
export const RELEASE_PED_VISIBILITY_TRACKING = '0x3088634cf8c819cf';
/**
   * REMOVE_GROUP
   *
   * @param {number} groupId
   * @return {void}
   */
export const REMOVE_GROUP = '0x8eb2f69076af7053';
/**
   * REMOVE_PED_DEFENSIVE_AREA
   * Ped will no longer get angry when you stay near him.
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const REMOVE_PED_DEFENSIVE_AREA = '0x74d4e028107450a9';
/**
   * REMOVE_PED_FROM_GROUP
   *
   * @param {number} ped
   * @return {void}
   */
export const REMOVE_PED_FROM_GROUP = '0xed74007ffb146bc2';
/**
   * REMOVE_RELATIONSHIP_GROUP
   *
   * @param {number} groupHash
   * @return {void}
   */
export const REMOVE_RELATIONSHIP_GROUP = '0xb6ba2444ab393da2';
/**
   * REMOVE_SCENARIO_BLOCKING_AREA
   *
   * @param {any} p0
   * @param {boolean} p1
   * @return {void}
   */
export const REMOVE_SCENARIO_BLOCKING_AREA = '0x31d16b74c6e29d66';
/**
   * REMOVE_SCENARIO_BLOCKING_AREAS
   *
  
   * @return {void}
   */
export const REMOVE_SCENARIO_BLOCKING_AREAS = '0xd37401d78a929a49';
/**
   * REMOVE_SHOP_ITEM_FROM_PED_BY_CATEGORY
   * Params: p2, p3 usually 0 in R* Scripts
   *
   * @param {number} ped
   * @param {number} componentCategory
   * @param {number} p2
   * @param {boolean} p3
   * @return {void}
   */
export const REMOVE_SHOP_ITEM_FROM_PED_BY_CATEGORY = '0xdf631e4bce1b1fc4';
/**
   * REMOVE_TAG_FROM_META_PED
   *
   * @param {number} ped
   * @param {number} component
   * @param {number} p2
   * @return {void}
   */
export const REMOVE_TAG_FROM_META_PED = '0xd710a5007c2ac539';
/**
   * REQUEST_PED_USE_SMALL_BBOX_VISIBILITY_TRACKING
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const REQUEST_PED_USE_SMALL_BBOX_VISIBILITY_TRACKING = '0x75ba1cb3b7d40caf';
/**
   * REQUEST_PED_VEHICLE_VISIBILITY_TRACKING
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const REQUEST_PED_VEHICLE_VISIBILITY_TRACKING = '0x2bc338a7b21f4608';
/**
   * REQUEST_PED_VISIBILITY_TRACKING
   *
   * @param {number} ped
   * @return {void}
   */
export const REQUEST_PED_VISIBILITY_TRACKING = '0x7d7a2e43e74e2eb8';
/**
   * RESET_AI_WEAPON_DAMAGE_MODIFIER
   *
  
   * @return {void}
   */
export const RESET_AI_WEAPON_DAMAGE_MODIFIER = '0xea16670e7ba4743c';
/**
   * RESET_GROUP_FORMATION_DEFAULT_SPACING
   *
   * @param {number} groupId
   * @return {void}
   */
export const RESET_GROUP_FORMATION_DEFAULT_SPACING = '0x63dab4ccb3273205';
/**
   * RESET_HORSE_AVOIDANCE_LEVEL_TO_DEFAULT
   *
   * @param {number} horse
   * @return {void}
   */
export const RESET_HORSE_AVOIDANCE_LEVEL_TO_DEFAULT = '0x2a5afd2b8381a6e1';
/**
   * RESET_PED_IN_VEHICLE_CONTEXT
   *
   * @param {number} ped
   * @return {void}
   */
export const RESET_PED_IN_VEHICLE_CONTEXT = '0x22ef8ff8778030eb';
/**
   * RESET_PED_LAST_VEHICLE
   * Resets the value for the last vehicle driven by the Ped.
   *
   * @param {number} ped
   * @return {void}
   */
export const RESET_PED_LAST_VEHICLE = '0xbb8de8cf6a8dd8bb';
/**
   * RESET_PED_RAGDOLL_TIMER
   *
   * @param {number} ped
   * @return {void}
   */
export const RESET_PED_RAGDOLL_TIMER = '0x9fa4664cf62e47e8';
/**
   * RESET_PED_WEAPON_MOVEMENT_CLIPSET
   *
   * @param {number} ped
   * @return {void}
   */
export const RESET_PED_WEAPON_MOVEMENT_CLIPSET = '0x97b0db5b4aa74e77';
/**
   * RESURRECT_PED
   * This function will simply bring the dead ped back to life.
   * 
   * Before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at because theres a chance the ped will fall through the map
   * 
   * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
   *
   * @param {number} ped
   * @return {void}
   */
export const RESURRECT_PED = '0x71bc8e838b9c6035';
/**
   * REVIVE_INJURED_PED
   *
   * @param {number} ped
   * @return {void}
   */
export const REVIVE_INJURED_PED = '0x8d8acd8388cd99ce';
/**
   * SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER
   *
   * @param {number} modifier
   * @return {void}
   */
export const SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER = '0x66460deddd417254';
/**
   * SET_AI_WEAPON_DAMAGE_MODIFIER
   *
   * @param {number} value
   * @return {void}
   */
export const SET_AI_WEAPON_DAMAGE_MODIFIER = '0x1b1e2a40a65b8521';
/**
   * SET_BLOCKING_OF_NON_TEMPORARY_EVENTS
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_BLOCKING_OF_NON_TEMPORARY_EVENTS = '0x9f8aa94d6d97dbf4';
/**
   * SET_BLOCKING_OF_NON_TEMPORARY_EVENTS_FOR_AMBIENT_PEDS_THIS_FRAME
   *
   * @param {boolean} p0
   * @return {void}
   */
export const SET_BLOCKING_OF_NON_TEMPORARY_EVENTS_FOR_AMBIENT_PEDS_THIS_FRAME = '0x9911f4a24485f653';
/**
   * SET_COMBAT_FLOAT
   * combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_FLOATS 
   * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eCombatAttributeFloats
   *
   * @param {number} ped
   * @param {number} combatType
   * @param {number} newValue
   * @return {void}
   */
export const SET_COMBAT_FLOAT = '0xff41b4b141ed981c';
/**
   * SET_CREATE_RANDOM_COPS
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_CREATE_RANDOM_COPS = '0x102e68b2024d536d';
/**
   * SET_ENABLE_BOUND_ANKLES
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ENABLE_BOUND_ANKLES = '0xc52e0f855c58fc2e';
/**
   * SET_ENABLE_HANDCUFFS
   * Ped can not pull out a weapon when true
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const SET_ENABLE_HANDCUFFS = '0xdf1af8b5d56542fa';
/**
   * SET_FACIAL_IDLE_ANIM_OVERRIDE
   *
   * @param {number} ped
   * @param {string | number} animName
   * @param {string | number} animDict
   * @return {void}
   */
export const SET_FACIAL_IDLE_ANIM_OVERRIDE = '0xffc24b988b938b38';
/**
   * SET_FORMATION_POSITIONS_TARGET_RADIUS
   *
   * @param {number} groupId
   * @param {number} radius
   * @return {boolean}
   */
export const SET_FORMATION_POSITIONS_TARGET_RADIUS = '0x7cc7d3b7af7fb71f';
/**
   * SET_GROUP_FORMATION
   * eFormationType
   * 
   * 0: Default
   * 1: Circle Around Leader
   * 2: Alternative Circle Around Leader
   * 3: Line, with Leader at center
   *
   * @param {number} groupId
   * @param {number} formationType
   * @return {void}
   */
export const SET_GROUP_FORMATION = '0xce2f5fc3af7e8c1e';
/**
   * SET_GROUP_FORMATION_SPACING
   *
   * @param {number} groupId
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const SET_GROUP_FORMATION_SPACING = '0x1d9d45004c28c916';
/**
   * SET_GROUP_SEPARATION_RANGE
   * Sets the range at which members will automatically leave the group.
   *
   * @param {number} groupId
   * @param {number} separationRange
   * @return {void}
   */
export const SET_GROUP_SEPARATION_RANGE = '0x4102c7858cfee4e4';
/**
   * SET_HORSE_AVOIDANCE_LEVEL
   * -1 - HORSE_ASSIST__NO_CHANGE
   *  0 - HORSE_ASSIST__MANUAL
   *  1 - HORSE_ASSIST__SEMIASSIST
   *  2 - HORSE_ASSIST__FULLASSIST
   *
   * @param {number} horse
   * @param {number} avoidanceLevel
   * @return {void}
   */
export const SET_HORSE_AVOIDANCE_LEVEL = '0xddcf6fea5d7acc17';
/**
   * SET_IK_TARGET
   *
   * @param {number} ped
   * @param {number} ikIndex
   * @param {number} entityLookAt
   * @param {number} boneLookAt
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {any} p7
   * @param {number} blendInDuration
   * @param {number} blendOutDuration
   * @return {void}
   */
export const SET_IK_TARGET = '0xc32779c16fceecd9';
/**
   * SET_LOOTING_FLAG
   * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLootingFlags__Flags
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/LOOTING_FLAGS
   * 
   * lootFlag:
   * enum eLootFlag
   * {
   *   LOOT_FLAG_IS_CRITICAL_LOOT_TARGET = 7,
   *   LOOT_FLAG_IGNORE_WATER_CHECKS = 8,
   *   LOOT_FLAG_ANIMAL_FLAGGED_FOR_TAGGING = 23,
   * };
   *
   * @param {number} ped
   * @param {number} lootFlag
   * @param {boolean} enabled
   * @return {void}
   */
export const SET_LOOTING_FLAG = '0x6569f31a01b4c097';
/**
   * SET_PAUSE_PED_WRITHE_BLEEDOUT
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PAUSE_PED_WRITHE_BLEEDOUT = '0x925a160133003ac6';
/**
   * SET_PED_ACCURACY
   * accuracy = 0-100, 100 being perfectly accurate
   *
   * @param {number} ped
   * @param {number} accuracy
   * @return {void}
   */
export const SET_PED_ACCURACY = '0x7aefb85c1d49deb6';
/**
   * SET_PED_AS_COP
   * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
   * toggle = bSetRelGroup
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_AS_COP = '0xbb03c38dd3fb7ffd';
/**
   * SET_PED_AS_GROUP_LEADER
   *
   * @param {number} ped
   * @param {number} groupId
   * @param {boolean} p2
   * @return {void}
   */
export const SET_PED_AS_GROUP_LEADER = '0x2a7819605465fbce';
/**
   * SET_PED_AS_GROUP_MEMBER
   *
   * @param {number} ped
   * @param {number} groupId
   * @return {void}
   */
export const SET_PED_AS_GROUP_MEMBER = '0x9f3480fe65db31b5';
/**
   * SET_PED_CAN_ARM_IK
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_ARM_IK = '0x6c3b4d6d13b4c841';
/**
   * SET_PED_CAN_BE_INCAPACITATED
   * When set on a player ped, its just like when you die in RDO
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_BE_INCAPACITATED = '0x5240864e847c691c';
/**
   * SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE
   * state:
   * enum eKnockOffVehicle
   * {
   *   KNOCKOFFVEHICLE_DEFAULT,
   *   KNOCKOFFVEHICLE_NEVER,
   *   KNOCKOFFVEHICLE_EASY,
   *   KNOCKOFFVEHICLE_HARD
   * };
   *
   * @param {number} ped
   * @param {number} state
   * @return {void}
   */
export const SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE = '0x7a6535691b477c48';
/**
   * SET_PED_CAN_BE_TARGETTED
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_BE_TARGETTED = '0x63f58f7c80513aad';
/**
   * SET_PED_CAN_BE_TARGETTED_BY_PLAYER
   *
   * @param {number} ped
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_BE_TARGETTED_BY_PLAYER = '0x66b57b72e0836a76';
/**
   * SET_PED_CAN_BE_TARGETTED_BY_TEAM
   *
   * @param {number} ped
   * @param {number} team
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_BE_TARGETTED_BY_TEAM = '0xbf1ca77833e58f2c';
/**
   * SET_PED_CAN_HEAD_IK
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_HEAD_IK = '0xc11c18092c5530dc';
/**
   * SET_PED_CAN_LEG_IK
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_LEG_IK = '0x73518ece2485412b';
/**
   * SET_PED_CAN_PLAY_AMBIENT_ANIMS
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_PLAY_AMBIENT_ANIMS = '0x6373d1349925a70e';
/**
   * SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS = '0x0eb0585d15254740';
/**
   * SET_PED_CAN_PLAY_GESTURE_ANIMS
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const SET_PED_CAN_PLAY_GESTURE_ANIMS = '0xbaf20c5432058024';
/**
   * SET_PED_CAN_RAGDOLL
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_RAGDOLL = '0xb128377056a54e2a';
/**
   * SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT = '0xdf993ee5e90aba25';
/**
   * SET_PED_CAN_TELEPORT_TO_GROUP_LEADER
   * This only will teleport the ped to the group leader if the group leader teleports (sets coords).
   * 
   * Only works in singleplayer
   *
   * @param {number} pedHandle
   * @param {number} groupId
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_TELEPORT_TO_GROUP_LEADER = '0x2e2f4240b3f24647';
/**
   * SET_PED_CAN_TORSO_IK
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_TORSO_IK = '0xf2b7106d37947ce0';
/**
   * SET_PED_CAN_TORSO_REACT_IK
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_TORSO_REACT_IK = '0xf5846edb26a98a24';
/**
   * SET_PED_CAN_TORSO_VEHICLE_IK
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_TORSO_VEHICLE_IK = '0x6647c5f6f5792496';
/**
   * SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT = '0xec4686ec06434678';
/**
   * SET_PED_CAPSULE
   * Overrides the ped's collision capsule radius for the current tick.
   * Must be called every tick to be effective.
   * 
   * Setting this to 0.001 will allow warping through some objects.
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_CAPSULE = '0x364df566ec833de2';
/**
   * SET_PED_CLOTH_PIN_FRAMES
   * Old name: SET_PED_CLOTH_PACKAGE_INDEX
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const SET_PED_CLOTH_PIN_FRAMES = '0x78c4e9961db3eb5b';
/**
   * SET_PED_COMBAT_ABILITY
   * abilityLevel:
   * enum eCombatAbilityLevel
   * {
   *   CAL_POOR,
   *   CAL_AVERAGE,
   *   CAL_PROFESSIONAL
   * };
   *
   * @param {number} ped
   * @param {number} abilityLevel
   * @return {void}
   */
export const SET_PED_COMBAT_ABILITY = '0xc7622c0d36b2fda8';
/**
   * SET_PED_COMBAT_ATTRIBUTES
   * attributeIndex: https://alloc8or.re/rdr3/doc/enums/eCombatAttribute.txt
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ATTRIBUTES
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @param {boolean} enabled
   * @return {void}
   */
export const SET_PED_COMBAT_ATTRIBUTES = '0x9f7794730795e019';
/**
   * SET_PED_COMBAT_MOVEMENT
   * 0 - Stationary (Will just stand in place)
   * 1 - Defensive (Will try to find cover and very likely to blind fire)
   * 2 - Offensive (Will attempt to charge at enemy but take cover as well)
   * 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
   *
   * @param {number} ped
   * @param {number} combatMovement
   * @return {void}
   */
export const SET_PED_COMBAT_MOVEMENT = '0x4d9ca1009afbd057';
/**
   * SET_PED_COMBAT_RANGE
   * range:
   * enum eCombatRange
   * {
   *   CR_NEAR,
   *   CR_MEDIUM,
   *   CR_FAR,
   *   CR_VERY_FAR
   * };
   *
   * @param {number} ped
   * @param {number} range
   * @return {void}
   */
export const SET_PED_COMBAT_RANGE = '0x3c606747b23e497b';
/**
   * SET_PED_CONFIG_FLAG
   * flagId: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptConfigFlags
   * https://alloc8or.re/rdr3/doc/enums/ePedScriptConfigFlags.txt
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_CONFIG_FLAGS
   *
   * @param {number} ped
   * @param {number} flagId
   * @param {boolean} value
   * @return {void}
   */
export const SET_PED_CONFIG_FLAG = '0x1913fe4cbf41c463';
/**
   * SET_PED_DEFENSIVE_AREA_DIRECTION
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {boolean} p4
   * @return {void}
   */
export const SET_PED_DEFENSIVE_AREA_DIRECTION = '0x413c6c763a4affad';
/**
   * SET_PED_DEFENSIVE_AREA_VOLUME
   *
   * @param {number} ped
   * @param {number} volume
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const SET_PED_DEFENSIVE_AREA_VOLUME = '0xfc3db99c8144cd81';
/**
   * SET_PED_DESIRED_HEADING
   *
   * @param {number} ped
   * @param {number} heading
   * @return {void}
   */
export const SET_PED_DESIRED_HEADING = '0xaa5a7ece2aa8fe70';
/**
   * SET_PED_FIRING_PATTERN
   * Used in various R* MP & SP Scripts
   *
   * @param {number} ped
   * @param {number} patternHash
   * @return {void}
   */
export const SET_PED_FIRING_PATTERN = '0x9ac577f5a12ad8a9';
/**
   * SET_PED_FLEE_ATTRIBUTES
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/FLEE_ATTRIBUTES
   * 
   * attributeFlags:
   * enum eFleeAttribute
   * {
   *   FA_FORCE_EXIT_VEHICLE = (1 << 16),
   *   FA_DISABLE_MOUNT_USAGE = (1 << 20),
   *   FA_DISABLE_ENTER_VEHICLES = (1 << 22),
   * };
   *
   * @param {number} ped
   * @param {number} attributeFlags
   * @param {boolean} enable
   * @return {void}
   */
export const SET_PED_FLEE_ATTRIBUTES = '0x70a2d1137c8ed7c9';
/**
   * SET_PED_GESTURE_GROUP
   *
   * @param {number} ped
   * @param {string | number} gesture
   * @param {number} p2
   * @return {void}
   */
export const SET_PED_GESTURE_GROUP = '0xddf803377f94aaa8';
/**
   * SET_PED_GRAVITY
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_GRAVITY = '0x9ff447b6b6ad960a';
/**
   * SET_PED_GROUP_MEMBER_PASSENGER_INDEX
   *
   * @param {number} ped
   * @param {number} index
   * @return {void}
   */
export const SET_PED_GROUP_MEMBER_PASSENGER_INDEX = '0x0bddb8d9ec6bcf3c';
/**
   * SET_PED_HEARING_RANGE
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_HEARING_RANGE = '0x33a8f7f7d5f7f33c';
/**
   * SET_PED_HIGHLY_PERCEPTIVE
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_HIGHLY_PERCEPTIVE = '0x52d59ab61ddc05dd';
/**
   * SET_PED_ID_RANGE
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_ID_RANGE = '0xf107e836a70dce05';
/**
   * SET_PED_INJURED_ON_GROUND_BEHAVIOUR
   *
   * @param {number} ped
   * @param {number} unk
   * @return {void}
   */
export const SET_PED_INJURED_ON_GROUND_BEHAVIOUR = '0xec4b4b3b9908052a';
/**
   * SET_PED_INTO_VEHICLE
   * Ped: The ped to warp.
   * vehicle: The vehicle to warp the ped into.
   * seatIndex: see CREATE_PED_INSIDE_VEHICLE
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} seatIndex
   * @return {void}
   */
export const SET_PED_INTO_VEHICLE = '0xf75b0d629e1c063d';
/**
   * SET_PED_KEEP_TASK
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_KEEP_TASK = '0x971d38760fbc02ef';
/**
   * SET_PED_LASSO_HOGTIE_FLAG
   *
   * @param {number} ped
   * @param {number} flagId
   * @param {boolean} value
   * @return {void}
   */
export const SET_PED_LASSO_HOGTIE_FLAG = '0xae6004120c18df97';
/**
   * SET_PED_LEG_IK_MODE
   *
   * @param {number} ped
   * @param {number} mode
   * @return {void}
   */
export const SET_PED_LEG_IK_MODE = '0xc396f5b86ff9febd';
/**
   * SET_PED_LOD_MULTIPLIER
   *
   * @param {number} ped
   * @param {number} multiplier
   * @return {void}
   */
export const SET_PED_LOD_MULTIPLIER = '0xdc2c5c242aac342b';
/**
   * SET_PED_MAX_HEALTH
   * Sets the maximum health of a ped.
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_MAX_HEALTH = '0xf5f6378c4f3419d3';
/**
   * SET_PED_MAX_MOVE_BLEND_RATIO
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_MAX_MOVE_BLEND_RATIO = '0x433083750c5e064a';
/**
   * SET_PED_MAX_TIME_IN_WATER
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_MAX_TIME_IN_WATER = '0x43c851690662113d';
/**
   * SET_PED_MAX_TIME_UNDERWATER
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_MAX_TIME_UNDERWATER = '0x6ba428c528d9e522';
/**
   * SET_PED_MIN_MOVE_BLEND_RATIO
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_MIN_MOVE_BLEND_RATIO = '0x01a898d26e2333dd';
/**
   * SET_PED_MODEL_IS_SUPPRESSED
   *
   * @param {number} model
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_MODEL_IS_SUPPRESSED = '0xe163a4bce4de6f11';
/**
   * SET_PED_MONEY
   *
   * @param {number} ped
   * @param {number} amount
   * @return {void}
   */
export const SET_PED_MONEY = '0xa9c8960e8684c1b5';
/**
   * SET_PED_MOVE_ANIMS_BLEND_OUT
   *
   * @param {number} ped
   * @return {void}
   */
export const SET_PED_MOVE_ANIMS_BLEND_OUT = '0x9e8c908f41584ecd';
/**
   * SET_PED_MOVE_RATE_OVERRIDE
   * Min: 0.0f
   * Max: 1.15f
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_MOVE_RATE_OVERRIDE = '0x085bf80fa50a39d1';
/**
   * SET_PED_NAME_DEBUG
   * nullsub, doesn't do anything
   *
   * @param {number} ped
   * @param {string | number} name
   * @return {void}
   */
export const SET_PED_NAME_DEBUG = '0x98efa132a4117be1';
/**
   * SET_PED_NON_CREATION_AREA
   * The distance between these points, is the diagonal of a box (remember it's 3D).
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @return {void}
   */
export const SET_PED_NON_CREATION_AREA = '0xee01041d559983ea';
/**
   * SET_PED_ONTO_MOUNT
   *
   * @param {number} ped
   * @param {number} mount
   * @param {number} seatIndex
   * @param {boolean} p3
   * @return {void}
   */
export const SET_PED_ONTO_MOUNT = '0x028f76b6e78246eb';
/**
   * SET_PED_OWNS_ANIMAL
   *
   * @param {number} ped
   * @param {number} animal
   * @param {boolean} p2
   * @return {void}
   */
export const SET_PED_OWNS_ANIMAL = '0x931b241409216c1f';
/**
   * SET_PED_PANIC_EXIT_SCENARIO
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const SET_PED_PANIC_EXIT_SCENARIO = '0xfe07ff6495d52e2a';
/**
   * SET_PED_RAGDOLL_FORCE_FALL
   *
   * @param {number} ped
   * @return {void}
   */
export const SET_PED_RAGDOLL_FORCE_FALL = '0x01f6594b923b9251';
/**
   * SET_PED_RAGDOLL_ON_COLLISION
   * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @param {boolean} p2
   * @return {void}
   */
export const SET_PED_RAGDOLL_ON_COLLISION = '0xf0a4f1bbf4fa7497';
/**
   * SET_PED_RANDOM_COMPONENT_VARIATION
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const SET_PED_RANDOM_COMPONENT_VARIATION = '0xc8a9481a01e63c28';
/**
   * SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH
   *
   * @param {number} ped
   * @param {number} hash
   * @return {void}
   */
export const SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH = '0xadb3f206518799e8';
/**
   * SET_PED_RELATIONSHIP_GROUP_HASH
   *
   * @param {number} ped
   * @param {number} relationshipGroup
   * @return {void}
   */
export const SET_PED_RELATIONSHIP_GROUP_HASH = '0xc80a74ac829ddd92';
/**
   * SET_PED_RESET_FLAG
   * Needs to be called every frame
   * 
   * flagid:https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedScriptResetFlags
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_RESET_FLAGS
   *
   * @param {number} ped
   * @param {number} flagId
   * @param {boolean} doReset
   * @return {void}
   */
export const SET_PED_RESET_FLAG = '0xc1e8a365bf3b29f2';
/**
   * SET_PED_SEEING_RANGE
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_SEEING_RANGE = '0xf29cf591c4bf6cee';
/**
   * SET_PED_SHOOT_RATE
   * Params: shootRate = 0 - 1000
   *
   * @param {number} ped
   * @param {number} shootRate
   * @return {void}
   */
export const SET_PED_SHOOT_RATE = '0x614da022990752dc';
/**
   * SET_PED_SHOULD_PLAY_COMBAT_SCENARIO_EXIT
   * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} lookIntensity
   * @return {boolean}
   */
export const SET_PED_SHOULD_PLAY_COMBAT_SCENARIO_EXIT = '0x802092b07e3b1eea';
/**
   * SET_PED_SHOULD_PLAY_DIRECTED_NORMAL_SCENARIO_EXIT
   * Old name: _SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const SET_PED_SHOULD_PLAY_DIRECTED_NORMAL_SCENARIO_EXIT = '0xec6935ebe0847b90';
/**
   * SET_PED_SHOULD_PLAY_EMOTIONAL_SCENARIO_EXIT
   * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} lookIntensity
   * @param {boolean} p5
   * @return {boolean}
   */
export const SET_PED_SHOULD_PLAY_EMOTIONAL_SCENARIO_EXIT = '0x62fdad5e01d2dd47';
/**
   * SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
   * lookIntensity:
   * 0 - REACT_LOOK_NONE
   * 1 - REACT_LOOK_LOW
   * 2 - REACT_LOOK_MEDIUM
   * 3 - REACT_LOOK_HIGH
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} lookIntensity
   * @return {boolean}
   */
export const SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT = '0xeeed8fafec331a70';
/**
   * SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT
   *
   * @param {number} ped
   * @return {void}
   */
export const SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT = '0xf1c03a5352243a30';
/**
   * SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT
   *
   * @param {number} ped
   * @return {void}
   */
export const SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT = '0xa3a9299c4f2adb98';
/**
   * SET_PED_SHOULD_PLAY_QUICK_SCENARIO_EXIT
   * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} lookIntensity
   * @param {boolean} p5
   * @return {boolean}
   */
export const SET_PED_SHOULD_PLAY_QUICK_SCENARIO_EXIT = '0x463803429297117c';
/**
   * SET_PED_SPHERE_DEFENSIVE_AREA
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {boolean} p5
   * @param {boolean} p6
   * @param {boolean} p7
   * @return {void}
   */
export const SET_PED_SPHERE_DEFENSIVE_AREA = '0x9d3151a373974804';
/**
   * SET_PED_STEALTH_MOVEMENT
   * Not implemented.
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const SET_PED_STEALTH_MOVEMENT = '0x88cbb5ceb96b7bd2';
/**
   * SET_PED_SWEAT
   *
   * @param {number} ped
   * @param {number} sweat
   * @return {void}
   */
export const SET_PED_SWEAT = '0x27b0405f59637d1f';
/**
   * SET_PED_TARGET_LOSS_RESPONSE
   * TLR_ExitTask = 0,
   * TLR_NeverLoseTarget,
   * TLR_SearchForTarget
   *
   * @param {number} ped
   * @param {number} responseType
   * @return {void}
   */
export const SET_PED_TARGET_LOSS_RESPONSE = '0x0703b9079823da4a';
/**
   * SET_PED_TO_INFORM_RESPECTED_FRIENDS
   *
   * @param {number} ped
   * @param {number} radius
   * @param {number} maxFriends
   * @return {void}
   */
export const SET_PED_TO_INFORM_RESPECTED_FRIENDS = '0x112942c6e708f70b';
/**
   * SET_PED_TO_PLAYER_WEAPON_DAMAGE_MODIFIER
   * Old name: _SET_PED_DAMAGE_MODIFIER
   *
   * @param {number} ped
   * @param {number} damageModifier
   * @return {void}
   */
export const SET_PED_TO_PLAYER_WEAPON_DAMAGE_MODIFIER = '0xd77ae48611b7b10a';
/**
   * SET_PED_TO_RAGDOLL
   * nmTaskMessageParameterName: See physicstasks.ymt. Search for DraggedByCart or 0xD00820D7 (Used in R* SP Script marston8)
   *
   * @param {number} ped
   * @param {number} timeMin
   * @param {number} timeMax
   * @param {number} ragdollType
   * @param {boolean} abortIfInjured
   * @param {boolean} abortIfDead
   * @param {string | number} nmTaskMessageParameterName
   * @return {boolean}
   */
export const SET_PED_TO_RAGDOLL = '0xae99fb955581844a';
/**
   * SET_PED_TO_RAGDOLL_WITH_FALL
   *
   * @param {number} ped
   * @param {number} timeMin
   * @param {number} timeMax
   * @param {number} ragdollType
   * @param {number} falldirX
   * @param {number} falldirY
   * @param {number} falldirZ
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @param {number} p10
   * @param {number} p11
   * @param {number} p12
   * @param {number} p13
   * @return {boolean}
   */
export const SET_PED_TO_RAGDOLL_WITH_FALL = '0xd76632d99e4966c8';
/**
   * SET_PED_USING_ACTION_MODE
   *
   * @param {number} ped
   * @param {boolean} bActionModeEnabled
   * @param {number} p2
   * @param {string | number} action
   * @return {void}
   */
export const SET_PED_USING_ACTION_MODE = '0xd75accf5e0fb5367';
/**
   * SET_PED_VISUAL_FIELD_CENTER_ANGLE
   *
   * @param {number} ped
   * @param {number} angle
   * @return {void}
   */
export const SET_PED_VISUAL_FIELD_CENTER_ANGLE = '0x3b6405e8ab34a907';
/**
   * SET_PED_VISUAL_FIELD_MAX_ANGLE
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_VISUAL_FIELD_MAX_ANGLE = '0x70793bdca1e854d4';
/**
   * SET_PED_VISUAL_FIELD_MIN_ANGLE
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const SET_PED_VISUAL_FIELD_MIN_ANGLE = '0x2db492222fb21e26';
/**
   * SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE
   *
   * @param {number} ped
   * @param {number} range
   * @return {void}
   */
export const SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE = '0x9c74b0bc831b753a';
/**
   * SET_PED_WETNESS_ENABLED_THIS_FRAME
   * combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
   *
   * @param {number} ped
   * @return {void}
   */
export const SET_PED_WETNESS_ENABLED_THIS_FRAME = '0xb5485e4907b53019';
/**
   * SET_PED_WETNESS_HEIGHT
   * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
   *
   * @param {number} ped
   * @param {number} height
   * @return {void}
   */
export const SET_PED_WETNESS_HEIGHT = '0x44cb6447d2571aa0';
/**
   * SET_POP_CONTROL_SPHERE_THIS_FRAME
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const SET_POP_CONTROL_SPHERE_THIS_FRAME = '0xd8c3be3ee94caf2d';
/**
   * SET_RAGDOLL_BLOCKING_FLAGS
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/RAGDOLL_BLOCKING_FLAGS
   * 
   * flags:
   * enum eRagdollBlockingFlags
   * {
   *   RBF_BULLET_IMPACT = (1 << 0),
   *   RBF_VEHICLE_IMPACT = (1 << 1),
   *   RBF_FIRE = (1 << 2),
   *   RBF_ELECTROCUTION = (1 << 3),
   *   RBF_PLAYER_IMPACT = (1 << 4),
   *   RBF_EXPLOSION = (1 << 5),
   *   RBF_IMPACT_OBJECT = (1 << 6),
   *   RBF_MELEE = (1 << 7),
   *   RBF_RUBBER_BULLET = (1 << 8),
   *   RBF_FALLING = (1 << 9),
   *   RBF_WATER_JET = (1 << 10),
   *   RBF_DROWNING = (1 << 11),
   *   RBF_0x9F52E2C4 = (1 << 12),
   *   RBF_PLAYER_BUMP = (1 << 13),
   *   RBF_PLAYER_RAGDOLL_BUMP = (1 << 14),
   *   RBF_PED_RAGDOLL_BUMP = (1 << 15),
   *   RBF_VEHICLE_GRAB = (1 << 16),
   *   RBF_SMOKE_GRENADE = (1 << 17),
   *   RBF_HORSE_BUMP = (1 << 18),
   *   RBF_ACTIVATE_ON_COLLISION = (1 << 19)
   * };
   *
   * @param {number} ped
   * @param {number} flags
   * @return {void}
   */
export const SET_RAGDOLL_BLOCKING_FLAGS = '0x26695ec767728d84';
/**
   * SET_RELATIONSHIP_BETWEEN_GROUPS
   *
   * @param {number} relationship
   * @param {number} group1
   * @param {number} group2
   * @return {void}
   */
export const SET_RELATIONSHIP_BETWEEN_GROUPS = '0xbf25eb89375a37ad';
/**
   * SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME = '0x7a556143a1c03898';
/**
   * SPAWNPOINTS_CANCEL_SEARCH
   *
  
   * @return {void}
   */
export const SPAWNPOINTS_CANCEL_SEARCH = '0xfee4a5459472a9f8';
/**
   * SPAWNPOINTS_GET_NUM_SEARCH_RESULTS
   *
  
   * @return {number}
   */
export const SPAWNPOINTS_GET_NUM_SEARCH_RESULTS = '0xa635c11b8c44afc2';
/**
   * SPAWNPOINTS_GET_SEARCH_RESULT
   *
   * @param {number} randomInt
   * @param {DataView} y
   * @return {[number, number]}
   */
export const SPAWNPOINTS_GET_SEARCH_RESULT = '0x280c7e3ac7f56e90';
/**
   * SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS
   *
   * @param {any} p0
   * @param {DataView} p1
   * @return {void}
   */
export const SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS = '0xb782f8238512bad5';
/**
   * SPAWNPOINTS_IS_SEARCH_ACTIVE
   *
  
   * @return {boolean}
   */
export const SPAWNPOINTS_IS_SEARCH_ACTIVE = '0x3c67506996001f5e';
/**
   * SPAWNPOINTS_IS_SEARCH_COMPLETE
   *
  
   * @return {boolean}
   */
export const SPAWNPOINTS_IS_SEARCH_COMPLETE = '0xa586fbeb32a53dbb';
/**
   * SPAWNPOINTS_IS_SEARCH_FAILED
   *
  
   * @return {boolean}
   */
export const SPAWNPOINTS_IS_SEARCH_FAILED = '0xf445de8da80a1792';
/**
   * SPAWNPOINTS_START_SEARCH
   * Params: p4 = 35.f, duration = 5000 in R* Scripts
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} width
   * @param {number} p4
   * @param {number} spawnpointsFlag
   * @param {number} p6
   * @param {number} duration
   * @param {number} p8
   * @return {void}
   */
export const SPAWNPOINTS_START_SEARCH = '0x2df9038c90ad5264';
/**
   * SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA
   * Searching area between coords 1 and 2
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} width
   * @param {number} spawnpointsFlag
   * @param {number} p8
   * @param {number} duration
   * @param {number} p10
   * @return {void}
   */
export const SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA = '0xb2aff10216defa2f';
/**
   * SPECIAL_FUNCTION_DO_NOT_USE
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const SPECIAL_FUNCTION_DO_NOT_USE = '0xf9acf4a08098ea25';
/**
   * TIME_SINCE_PED_LAST_SHOT
   * Returns time since the specified ped last shot, in seconds. (fPlayerJustShotTime)
   *
   * @param {number} ped
   * @return {number}
   */
export const TIME_SINCE_PED_LAST_SHOT = '0x285d36c5c72b0569';
/**
   * TOGGLE_SCENARIO_PED_COWER_IN_PLACE
   * If toggle is true, when the ped is using a scenario he will stop it and become scared
   * If toggle is false, the ped will not be scared anymore and continue his scenario
   * 
   * Old name: _SET_PED_SCARED_WHEN_USING_SCENARIO
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const TOGGLE_SCENARIO_PED_COWER_IN_PLACE = '0x9a77dfd295e29b09';
/**
   * WAS_PED_SKELETON_UPDATED
   * Despite this function's name, it simply returns whether the specified handle is a Ped.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const WAS_PED_SKELETON_UPDATED = '0x11b499c1e0ff8559';
/**
   * _0x00B380FF2DF6AB7A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x00B380FF2DF6AB7A = '0x00b380ff2df6ab7a';
/**
   * _0x0105FEE8F9091255
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x0105FEE8F9091255 = '0x0105fee8f9091255';
/**
   * _0x024EC9B649111915
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x024EC9B649111915 = '0x024ec9b649111915';
/**
   * _0x028E7B3BBA0BD2FC
   * _SET_ST* - _SET_SW*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x028E7B3BBA0BD2FC = '0x028e7b3bba0bd2fc';
/**
   * _0x02E741E19E39628C
   * _SET_PLAYER_SN* - _SET_PLAYER_STAMINA*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x02E741E19E39628C = '0x02e741e19e39628c';
/**
   * _0x0455546F23FF08E4
   * _DOES_GROUP_* - _DOES_N*
   *
   * @param {number} groupId
   * @return {boolean}
   */
export const _0x0455546F23FF08E4 = '0x0455546f23ff08e4';
/**
   * _0x06A10B4D7F50B0C3
   * _GET_PED_D*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x06A10B4D7F50B0C3 = '0x06a10b4d7f50b0c3';
/**
   * _0x070A3841406C43D5
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x070A3841406C43D5 = '0x070a3841406c43d5';
/**
   * _0x07EA5B053FA60AC7
   *
   * @param {number} groupId
   * @param {boolean} p1
   * @return {void}
   */
export const _0x07EA5B053FA60AC7 = '0x07ea5b053fa60ac7';
/**
   * _0x09171A6F8FDE5DC1
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x09171A6F8FDE5DC1 = '0x09171a6f8fde5dc1';
/**
   * _0x095C2277FED731DB
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x095C2277FED731DB = '0x095c2277fed731db';
/**
   * _0x09D7AFD3716DA8E1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _0x09D7AFD3716DA8E1 = '0x09d7afd3716da8e1';
/**
   * _TOGGLE_PLAYER_PED_FLINCH
   * _TOGGLE_S* - _UPDATE_*
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} scale
   * @return {void}
   */
export const _TOGGLE_PLAYER_PED_FLINCH = '0x09e378c52b1433b5';
/**
   * _0x0A4618FFD517E24D
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0A4618FFD517E24D = '0x0a4618ffd517e24d';
/**
   * _0x0ADA3EC589E1736E
   *
  
   * @return {void}
   */
export const _0x0ADA3EC589E1736E = '0x0ada3ec589e1736e';
/**
   * _0x0B787A37EEDD226F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0B787A37EEDD226F = '0x0b787a37eedd226f';
/**
   * _0x0D3B1568917EBDA0
   * _IS_PED_M*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _0x0D3B1568917EBDA0 = '0x0d3b1568917ebda0';
/**
   * _0x0D497AA69059FE40
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0D497AA69059FE40 = '0x0d497aa69059fe40';
/**
   * _0x0EA9EACBA3B01601
   * _CAN_PED_B* - _CAN_PED_I*
   *
   * @param {number} ped1
   * @param {number} ped2
   * @param {boolean} p2
   * @return {number}
   */
export const _0x0EA9EACBA3B01601 = '0x0ea9eacba3b01601';
/**
   * _0x0EEF7A81C17679DB
   * _IS_PED_L* - _IS_PED_M*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x0EEF7A81C17679DB = '0x0eef7a81c17679db';
/**
   * _0x0F967019CC853BCC
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0F967019CC853BCC = '0x0f967019cc853bcc';
/**
   * _0x0FB1BA7FF73B41E1
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x0FB1BA7FF73B41E1 = '0x0fb1ba7ff73b41e1';
/**
   * _0x0FFDF937E5C11382
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0x0FFDF937E5C11382 = '0x0ffdf937e5c11382';
/**
   * _0x101B45C5F56D970F
   *
   * @param {DataView} p0
   * @param {number} ped
   * @param {number} damageCleanliness
   * @param {number} p3
   * @return {boolean}
   */
export const _0x101B45C5F56D970F = '0x101b45c5f56d970f';
/**
   * _0x10F96086123B939F
   * NB_CUSTOM_CLIENT_ON_CREATE_COMPLETE - set legendary to not avoid prey
   *
   * @param {number} legendaryPed
   * @param {number} preyPed
   * @param {number} p2
   * @return {void}
   */
export const _0x10F96086123B939F = '0x10f96086123b939f';
/**
   * _0x1148F706CF4EBDDA
   * _CAN_PED_SEE* - _CAN_PED_USE_(SCENARIO_HASH?)*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {boolean}
   */
export const _0x1148F706CF4EBDDA = '0x1148f706cf4ebdda';
/**
   * _0x1298B3D8E4C2409F
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x1298B3D8E4C2409F = '0x1298b3d8e4c2409f';
/**
   * _0x12EB4E31F092C9B3
   * _GET_IS_PED_(BLEEDING_OUT?)*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x12EB4E31F092C9B3 = '0x12eb4e31f092c9b3';
/**
   * _0x12F2D161BF4031FC
   * _SET_A* - _SET_B*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x12F2D161BF4031FC = '0x12f2d161bf4031fc';
/**
   * _0x134775B093AD5C38
   * _GET_PED_M*
   *
   * @param {number} ped
   * @return {number}
   */
export const _0x134775B093AD5C38 = '0x134775b093ad5c38';
/**
   * _0x154B7E841AC7412F
   * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
   *
   * @param {number} groupId
   * @param {boolean} p1
   * @return {void}
   */
export const _0x154B7E841AC7412F = '0x154b7e841ac7412f';
/**
   * _0x15F4732C357B1D6D
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x15F4732C357B1D6D = '0x15f4732c357b1d6d';
/**
   * _0x16802C32B2FCA06B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x16802C32B2FCA06B = '0x16802c32b2fca06b';
/**
   * _0x16F798A05BB9E3B5
   * _PED_COWER_M*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x16F798A05BB9E3B5 = '0x16f798a05bb9e3b5';
/**
   * _0x1D23D3F70606D788
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x1D23D3F70606D788 = '0x1d23d3f70606d788';
/**
   * _0x1D4636C90BBEFACB
   * _SET_PED_CA* - _SET_PED_CO*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x1D4636C90BBEFACB = '0x1d4636c90bbefacb';
/**
   * _0x1E017404784AA6A3
   * something to do with speech lines? 
   *  some hashs MAR2_RIDE1, MAR2_RIDE1, RBCH1_RIDE1, SAD5_RIDE1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _0x1E017404784AA6A3 = '0x1e017404784aa6a3';
/**
   * _0x1F44B7E283C09EDE
   * Only used in SP R* Scripts
   * Params: p2 = same as p2 of 0x3C529A827998F9B3
   * _SET_PED_TA* - _SET_PED_TO_*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x1F44B7E283C09EDE = '0x1f44b7e283c09ede';
/**
   * _APPLY_COLD_TO_PED
   * Apply cold intensity to ped from 0.0 to 1.0
   *
   * @param {number} ped
   * @param {number} intensity
   * @param {number} p2
   * @return {void}
   */
export const _APPLY_COLD_TO_PED = '0x1f8215d0e446f593';
/**
   * _0x2371C39D4F91C288
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x2371C39D4F91C288 = '0x2371c39d4f91c288';
/**
   * _0x23BDE06596A22CEC
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x23BDE06596A22CEC = '0x23bde06596a22cec';
/**
   * _0x242EDF85D4E87B65
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x242EDF85D4E87B65 = '0x242edf85d4e87b65';
/**
   * _0x256EDD55C6BE1482
   * _IS_PED_FL* - _IS_PED_FU*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x256EDD55C6BE1482 = '0x256edd55c6be1482';
/**
   * _0x273915CE30780986
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x273915CE30780986 = '0x273915ce30780986';
/**
   * _0x27E8A84C12B0B7D1
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x27E8A84C12B0B7D1 = '0x27e8a84c12b0b7d1';
/**
   * _0x28508173C6A7CC18
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x28508173C6A7CC18 = '0x28508173c6a7cc18';
/**
   * _0x290B2E6CCDE532E1
   * _IS_PED_L* - _IS_PED_M*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x290B2E6CCDE532E1 = '0x290b2e6ccde532e1';
/**
   * _0x29924EB8EE9DB926
   * _SET_PED_K* or _SET_PED_L*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x29924EB8EE9DB926 = '0x29924eb8ee9db926';
/**
   * _0x29F3539189D3E277
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x29F3539189D3E277 = '0x29f3539189d3e277';
/**
   * _0x2B4CE170DE09F346
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x2B4CE170DE09F346 = '0x2b4ce170de09f346';
/**
   * _0x2BA9D7BF629F920C
   * Used in Script Function CHECK_IS_PLAYER_SEEN
   * _GET_PED_*
   *
   * @param {number} ped
   * @return {number}
   */
export const _0x2BA9D7BF629F920C = '0x2ba9d7bf629f920c';
/**
   * _0x2D976DBDC731DF80
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x2D976DBDC731DF80 = '0x2d976dbdc731df80';
/**
   * _0x2DC0E8DCBD3546E9
   * _IS_PED_D*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x2DC0E8DCBD3546E9 = '0x2dc0e8dcbd3546e9';
/**
   * _0x2DD4E0E26DFAD97D
   * _IS_PED_M* - _IS_PED_O*
   *
   * @param {number} ped1
   * @param {number} ped2
   * @param {number} p2
   * @return {boolean}
   */
export const _0x2DD4E0E26DFAD97D = '0x2dd4e0e26dfad97d';
/**
   * _0x2E5B5D1F1453E08E
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x2E5B5D1F1453E08E = '0x2e5b5d1f1453e08e';
/**
   * _0x2FA568BFA725F8D6
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x2FA568BFA725F8D6 = '0x2fa568bfa725f8d6';
/**
   * _0x31B2E7F2E3C58B89
   * _GET_SHOP_ITEM_NUM_*? returns a number of ? p1 seems to be always joaat("base") 
   *
   * @param {number} componentHash
   * @param {number} p1
   * @param {number} metapedType
   * @param {boolean} isMp
   * @return {number}
   */
export const _0x31B2E7F2E3C58B89 = '0x31b2e7f2e3c58b89';
/**
   * _0x32417CB860A3BDC4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x32417CB860A3BDC4 = '0x32417cb860a3bdc4';
/**
   * _0x326F7951EF0D7F75
   * Only used in R* SP Script short_update
   * _GET_TARGET_* - _GET_TRACKED*
   *
   * @param {number} ped
   * @param {number} eventType
   * @return {any}
   */
export const _0x326F7951EF0D7F75 = '0x326f7951ef0d7f75';
/**
   * _0x329772C47DBB2FBC
   * _SET_PED_P* - _SET_PED_R*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x329772C47DBB2FBC = '0x329772c47dbb2fbc';
/**
   * _0x32CCAD8A981B53D3
   * _STOP_(?)*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x32CCAD8A981B53D3 = '0x32ccad8a981b53d3';
/**
   * _0x32CEDA9A0AB4CEF7
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0x32CEDA9A0AB4CEF7 = '0x32ceda9a0ab4cef7';
/**
   * _0x34B5CEAC180A5D6E
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0x34B5CEAC180A5D6E = '0x34b5ceac180a5d6e';
/**
   * _0x34C11114887150FD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x34C11114887150FD = '0x34c11114887150fd';
/**
   * _0x34EDDD59364AD74A
   *
   * @param {number} ped
   * @param {DataView} p1
   * @return {void}
   */
export const _0x34EDDD59364AD74A = '0x34eddd59364ad74a';
/**
   * _0x354CA4DDDEEC397A
   *
   * @param {number} ped
   * @return {number}
   */
export const _0x354CA4DDDEEC397A = '0x354ca4dddeec397a';
/**
   * _RESET_PED_STAMINA
   * Seems to set the peds stamina to 30%
   *
   * @param {number} ped
   * @return {void}
   */
export const _RESET_PED_STAMINA = '0x36513affc703c60d';
/**
   * _0x370A973252741AC4
   * _RESET_PED_*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x370A973252741AC4 = '0x370a973252741ac4';
/**
   * _0x3A5697B80FED5EBE
   * _SET_PED_MO*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const _0x3A5697B80FED5EBE = '0x3a5697b80fed5ebe';
/**
   * _0x3ACCE14DFA6BA8C2
   * Used in R* Script net_fetch (NET_FETCH_UPDATE_RECIPIENT_PROP_ILO_IN_COMBAT) and various SP Scripts
   * Params: p1 = 4/5/6, p5 = 40.f/100.f, coords = Player ped
   * Perhaps returns some distance (Clearing that the local player is able to use ILO while in combat because they are near the recipient but also near hated peds)
   * _GET_NUM_M* - _GET_PEDS_J*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p5
   * @param {number} itemset
   * @return {number}
   */
export const _0x3ACCE14DFA6BA8C2 = '0x3acce14dfa6ba8c2';
/**
   * _0x3AEC4A410ECAF30D
   * _IS_PED_R*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x3AEC4A410ECAF30D = '0x3aec4a410ecaf30d';
/**
   * _0x3C529A827998F9B3
   * _SET_PED_TA* - _SET_PED_TO_*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x3C529A827998F9B3 = '0x3c529a827998f9b3';
/**
   * _0x3D9F958834AB9C30
   *
   * @param {number} ped
   * @return {number}
   */
export const _0x3D9F958834AB9C30 = '0x3d9f958834ab9c30';
/**
   * _0x3EFED081B4834BA1
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x3EFED081B4834BA1 = '0x3efed081b4834ba1';
/**
   * _0x3FCBB5FCFD968698
   * Used for script function PROCESS_PLAYER_HAT_EVENT
   * Returns requestId to be used with 0x13E7320C762F0477
   *
   * @param {number} drawable
   * @param {number} albedo
   * @param {number} normal
   * @param {number} material
   * @param {any} p4
   * @return {number}
   */
export const _0x3FCBB5FCFD968698 = '0x3fcbb5fcfd968698';
/**
   * _0x3FDBB99EFD8CE4AF
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x3FDBB99EFD8CE4AF = '0x3fdbb99efd8ce4af';
/**
   * _0x3FDCC1F8C17E303E
   * Changes health bar around heart core icon
   * INITIALISE_NEW_ROLE - Applying Super Jump buffs: p1 = 10, p2 = 0.0f
   * INITIALISE_NEW_ROLE - Clearing up Super Jump buffs: p1 = 10, p2 = 1.0f
   * _SET_D*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x3FDCC1F8C17E303E = '0x3fdcc1f8c17e303e';
/**
   * _0x405180B14DA5A935
   * _SET_PED_A*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x405180B14DA5A935 = '0x405180b14da5a935';
/**
   * _0x40C3524D4ED83554
   * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
   *
   * @param {number} groupId
   * @param {boolean} p1
   * @return {void}
   */
export const _0x40C3524D4ED83554 = '0x40c3524d4ed83554';
/**
   * _0x40C9155AF8BC13F3
   * _IS_PED_RE*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x40C9155AF8BC13F3 = '0x40c9155af8bc13f3';
/**
   * _0x413697EC260AABBF
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x413697EC260AABBF = '0x413697ec260aabbf';
/**
   * _0x41C23A8E6B344867
   * _SET_PED_IN*
   *
   * @param {number} ped
   * @param {string | number} p1
   * @return {void}
   */
export const _0x41C23A8E6B344867 = '0x41c23a8e6b344867';
/**
   * _0x45FEA6D5539BD474
   * _SET_PED_IN*
   *
   * @param {number} ped
   * @param {string | number} p1
   * @return {void}
   */
export const _0x45FEA6D5539BD474 = '0x45fea6d5539bd474';
/**
   * _0x4642182A298187D0
   *
   * @param {number} ped
   * @param {number} p1
   * @param {DataView} p2
   * @param {number} p3
   * @param {number} p4
   * @return {number}
   */
export const _0x4642182A298187D0 = '0x4642182a298187d0';
/**
   * _0x46BF2A810679D6E6
   * Returns vehicle (desired) speed
   * _COMPUTE_(VEHICLE_SPEED_USING_BLEND_RATIO?)*
   *
   * @param {number} ped
   * @param {number} maxMoveBlendRatio
   * @return {number}
   */
export const _0x46BF2A810679D6E6 = '0x46bf2a810679d6e6';
/**
   * _0x49DADFC4CD808B0A
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x49DADFC4CD808B0A = '0x49dadfc4cd808b0a';
/**
   * _0x4B19F171450E0D4F
   *
   * @param {number} ped
   * @return {number}
   */
export const _0x4B19F171450E0D4F = '0x4b19f171450e0d4f';
/**
   * _0x4E68C7EF706DF35D
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @param {number} relationshipGroup
   * @return {void}
   */
export const _0x4E68C7EF706DF35D = '0x4e68c7ef706df35d';
/**
   * _0x4EC4EA2F72B36358
   * _SET_PED_A*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x4EC4EA2F72B36358 = '0x4ec4ea2f72b36358';
/**
   * _0x4F27603E44A8E4C0
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0x4F27603E44A8E4C0 = '0x4f27603e44a8e4c0';
/**
   * _0x4F63433CE3C08230
   * Only used in R* Script shop_harriet
   * _SET_PED_F*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x4F63433CE3C08230 = '0x4f63433ce3c08230';
/**
   * _0x5203038FF8BAE577
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {boolean}
   */
export const _0x5203038FF8BAE577 = '0x5203038ff8bae577';
/**
   * _0x52250B92EA70BE3D
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x52250B92EA70BE3D = '0x52250b92ea70be3d';
/**
   * _0x52A24D8A1DA89658
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0x52A24D8A1DA89658 = '0x52a24d8a1da89658';
/**
   * _0x53BA7D96B9A421D9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x53BA7D96B9A421D9 = '0x53ba7d96b9a421d9';
/**
   * _0x54D3CD482742C482
   *
   * @param {number} animal
   * @param {number} p2
   * @return {void}
   */
export const _0x54D3CD482742C482 = '0x54d3cd482742c482';
/**
   * _0x550CB89DD7F4FA3D
   * _HAS_PED_*
   *
   * @param {number} ped1
   * @param {number} ped2
   * @return {boolean}
   */
export const _0x550CB89DD7F4FA3D = '0x550cb89dd7f4fa3d';
/**
   * _0x55546004A244302A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x55546004A244302A = '0x55546004a244302a';
/**
   * _0x56076667E7C2DCD6
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x56076667E7C2DCD6 = '0x56076667e7c2dcd6';
/**
   * _0x56E4BAD93D33453C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x56E4BAD93D33453C = '0x56e4bad93d33453c';
/**
   * _0x577C60BA06D0EA64
   * _IS_PED_C* - _IS_PED_D*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x577C60BA06D0EA64 = '0x577c60ba06d0ea64';
/**
   * _0x57F35552E771BE9D
   * _SET_PED_M*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x57F35552E771BE9D = '0x57f35552e771be9d';
/**
   * _APPLY_PED_DAMAGE_PACK_TO_BONE
   * seems to only work with PD_Vomit ? 
   *
   * @param {number} ped
   * @param {number} boneId
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {string | number} damagePack
   * @return {void}
   */
export const _APPLY_PED_DAMAGE_PACK_TO_BONE = '0x58d32261ae0f0843';
/**
   * _0x5A1A929C8B729B4A
   * _C*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x5A1A929C8B729B4A = '0x5a1a929c8b729b4a';
/**
   * _0x5AF24CA9C974E51A
   * _SET_C*
   *
   * @param {number} ped1
   * @param {number} ped2
   * @return {void}
   */
export const _0x5AF24CA9C974E51A = '0x5af24ca9c974e51a';
/**
   * _0x5B73975B4F12F7F3
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x5B73975B4F12F7F3 = '0x5b73975b4f12f7f3';
/**
   * _0x5BB04BC74A474B47
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x5BB04BC74A474B47 = '0x5bb04bc74a474b47';
/**
   * _0x5BF0B9D9A8E227A0
   * _IS_PED_B* - _IS_PED_C*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x5BF0B9D9A8E227A0 = '0x5bf0b9d9a8e227a0';
/**
   * _0x5C6C7C70CA302801
   * _IS_PED_IN*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x5C6C7C70CA302801 = '0x5c6c7c70ca302801';
/**
   * _0x5C90E20C25E6D83C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x5C90E20C25E6D83C = '0x5c90e20c25e6d83c';
/**
   * _0x5CA20FBE49891BBD
   * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_FLOW & PROCESS_GENERIC_PLAYER_INITIALIZATION
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x5CA20FBE49891BBD = '0x5ca20fbe49891bbd';
/**
   * _0x5CB2EBB467BE3ED6
   *
   * @param {number} animal
   * @param {number} p2
   * @return {void}
   */
export const _0x5CB2EBB467BE3ED6 = '0x5cb2ebb467be3ed6';
/**
   * _0x5D4CD22A8C82A81A
   * Related to ped hat
   * _SET_PED_LA* - _SET_PED_LE*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x5D4CD22A8C82A81A = '0x5d4cd22a8c82a81a';
/**
   * _0x5DA36CCCB63C0895
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x5DA36CCCB63C0895 = '0x5da36cccb63c0895';
/**
   * _0x5E9FAF6C513347B4
   * Only used in R* SP Scripts
   * _GET_PED_IN*
   *
   * @param {number} ped
   * @param {number} eventType
   * @return {number}
   */
export const _0x5E9FAF6C513347B4 = '0x5e9faf6c513347b4';
/**
   * _0x5EFA8A3D8A60D662
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x5EFA8A3D8A60D662 = '0x5efa8a3d8a60d662';
/**
   * _0x5FCF25D584065BFD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x5FCF25D584065BFD = '0x5fcf25d584065bfd';
/**
   * _0x600BBDD29820370C
   * Not implemented.
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x600BBDD29820370C = '0x600bbdd29820370c';
/**
   * _0x604E1010E3162E86
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x604E1010E3162E86 = '0x604e1010e3162e86';
/**
   * _0x606D529DADA3C940
   * Not implemented.
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const _0x606D529DADA3C940 = '0x606d529dada3c940';
/**
   * _0x62FDF4E678E40CC6
   * Returns p1 value for 0x8E84119A23C16623
   *
   * @param {number} entity
   * @param {any} p1
   * @return {any}
   */
export const _0x62FDF4E678E40CC6 = '0x62fdf4e678e40cc6';
/**
   * _0x633F83B301C87994
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x633F83B301C87994 = '0x633f83b301c87994';
/**
   * _0x642720D8D69328B6
   * _SET_PED_M*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x642720D8D69328B6 = '0x642720d8d69328b6';
/**
   * _0x6507AC3BD7C99009
   * _IS_N* - _IS_P*
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @return {boolean}
   */
export const _0x6507AC3BD7C99009 = '0x6507ac3bd7c99009';
/**
   * _0x6734F0A6A52C371C
   *
   * @param {number} player
   * @param {number} horseSlot
   * @return {void}
   */
export const _0x6734F0A6A52C371C = '0x6734f0a6a52c371c';
/**
   * _0x6A190B94C2541A99
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6A190B94C2541A99 = '0x6a190b94c2541a99';
/**
   * _0x6A489892E813951A
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6A489892E813951A = '0x6a489892e813951a';
/**
   * _0x6B67320E0D57856A
   *
   * @param {number} ped
   * @param {DataView} p1
   * @param {number} p2
   * @param {boolean} p3
   * @return {void}
   */
export const _0x6B67320E0D57856A = '0x6b67320e0d57856a';
/**
   * _0x6DB875AFC584FA32
   * Only used in R* SP Script winter1: p1 = 5000
   * _SET_PED_M*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {any}
   */
export const _0x6DB875AFC584FA32 = '0x6db875afc584fa32';
/**
   * _0x6E8B87139854022D
   * Only used in SP R* Script train_robbery3: p1 = CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC & CLIPSET@VEH_TRAIN@HANDCART@BASE_PANIC_JOHN
   *
   * @param {number} ped
   * @param {string | number} clipset
   * @return {void}
   */
export const _0x6E8B87139854022D = '0x6e8b87139854022d';
/**
   * _GET_CARRIED_PELT_SKINS
   *
   * @param {number} mount
   * @param {DataView} outData
   * @return {number}
   */
export const _GET_CARRIED_PELT_SKINS = '0x6f43c351a5d51e2f';
/**
   * _0x6F46F8ACB44C4FC1
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x6F46F8ACB44C4FC1 = '0x6f46f8acb44c4fc1';
/**
   * _0x7020839C7302D8AC
   * _HAS_*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x7020839C7302D8AC = '0x7020839c7302d8ac';
/**
   * _0x704C908E9C405136
   * _CLEAR*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x704C908E9C405136 = '0x704c908e9c405136';
/**
   * _0x712B2C2B2471B493
   * _SET_PED_MO*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x712B2C2B2471B493 = '0x712b2c2b2471b493';
/**
   * _0x735662994E60A710
   * _SET_PED_F*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x735662994E60A710 = '0x735662994e60a710';
/**
   * _0x7406C71F4AC2FFCC
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x7406C71F4AC2FFCC = '0x7406c71f4ac2ffcc';
/**
   * _0x758F081DB204DDDE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x758F081DB204DDDE = '0x758f081db204ddde';
/**
   * _0x75A082563B4452E5
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x75A082563B4452E5 = '0x75a082563b4452e5';
/**
   * _0x75D3333409CD33CE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x75D3333409CD33CE = '0x75d3333409cd33ce';
/**
   * _0x763FA8A9D76EE3A7
   * Used in Script Function NB_EVENT_OVERRIDE__HANDLE__EVENT_DAMAGE_ENTITY
   *
   * @param {number} ped
   * @return {number}
   */
export const _0x763FA8A9D76EE3A7 = '0x763fa8a9d76ee3a7';
/**
   * _0x77243ED4F7CAAA55
   * _IS_I* - _IS_L*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x77243ED4F7CAAA55 = '0x77243ed4f7caaa55';
/**
   * _0x7ABBD9E449E0DB00
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x7ABBD9E449E0DB00 = '0x7abbd9e449e0db00';
/**
   * _0x7B5C293238EE4F20
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x7B5C293238EE4F20 = '0x7b5c293238ee4f20';
/**
   * _0x7BB810E8B343AC7B
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x7BB810E8B343AC7B = '0x7bb810e8b343ac7b';
/**
   * _0x7C08E7CB8D951B70
   * Only used in SP
   * _SET_REMOVE_PED*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x7C08E7CB8D951B70 = '0x7c08e7cb8d951b70';
/**
   * _0x7C10221CE718AA72
   * _CLEAR_PED_M*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x7C10221CE718AA72 = '0x7c10221ce718aa72';
/**
   * _0x7C8AA850617651D9
   * Returns wether `0x1E017404784AA6A3` was applied on the ped.
   *  some hashs MAR2_RIDE1, MAR2_RIDE1, RBCH1_RIDE1, SAD5_RIDE1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {any}
   */
export const _0x7C8AA850617651D9 = '0x7c8aa850617651d9';
/**
   * _0x7E5185B979706210
   * _SET_FORMATION_P*
   *
   * @param {number} groupId
   * @param {number} p1
   * @return {void}
   */
export const _0x7E5185B979706210 = '0x7e5185b979706210';
/**
   * _0x7E8F9949B7AABBF0
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x7E8F9949B7AABBF0 = '0x7e8f9949b7aabbf0';
/**
   * _0x7EDB3C766B0D073F
   * Only used in R* Script net_moonshine_property
   * _A* - _B*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x7EDB3C766B0D073F = '0x7edb3c766b0d073f';
/**
   * _0x7EE3A8660F38797E
   * _IS_PED_H* - _IS_PED_I*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x7EE3A8660F38797E = '0x7ee3a8660f38797e';
/**
   * _0x7F090958AE95B61B
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _0x7F090958AE95B61B = '0x7f090958ae95b61b';
/**
   * _0x8101BA1C0B462412
   * _ATTACH_*
   *
   * @param {number} ped
   * @param {number} ropeId
   * @return {void}
   */
export const _0x8101BA1C0B462412 = '0x8101ba1c0b462412';
/**
   * _0x815C0074A1BC0D93
   * _SET_PED_COMBAT_R - _SET_PED_C*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x815C0074A1BC0D93 = '0x815c0074a1bc0d93';
/**
   * _0x82CB0F3F0C7785E5
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x82CB0F3F0C7785E5 = '0x82cb0f3f0c7785e5';
/**
   * _0x851966E1E35AF491
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x851966E1E35AF491 = '0x851966e1e35af491';
/**
   * _0x85F500F4E24CA43E
   * Used in Script Function SKCS_PLAYER_ROBBING
   * _SET_PED_A*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x85F500F4E24CA43E = '0x85f500f4e24ca43e';
/**
   * _0x86F0B6730C32AC14
   * _SET_PED_*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x86F0B6730C32AC14 = '0x86f0b6730c32ac14';
/**
   * _0x86FAFC18E3D4380C
   *
   * @param {number} groupId
   * @param {boolean} p1
   * @return {void}
   */
export const _0x86FAFC18E3D4380C = '0x86fafc18e3d4380c';
/**
   * _0x878E8104FA27CDAE
   *
   * @param {number} vehicle
   * @param {number} p1
   * @return {void}
   */
export const _0x878E8104FA27CDAE = '0x878e8104fa27cdae';
/**
   * _0x87C2724A56F66020
   * _CLEAR_PED_E* - _CLEAR_PED_L*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x87C2724A56F66020 = '0x87c2724a56f66020';
/**
   * _0x8822F124788B8D0A
   * Only used in R* Script train_robbery4
   * _SET_PED_D*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x8822F124788B8D0A = '0x8822f124788b8d0a';
/**
   * _0x8822F139408B8D0A
   * If returned true, SET_ENABLE_BOUND_ANKLES is called in R* Script guama2
   * _GET_D* - _GET_E*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x8822F139408B8D0A = '0x8822f139408b8d0a';
/**
   * _0x88A5564B19C15391
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x88A5564B19C15391 = '0x88a5564b19c15391';
/**
   * _0x88A95BB640FC186F
   * Used in R* Script generic_weight_control_item
   * _CLEAR_PED_E* - CLEAR_PED_(G?)L*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x88A95BB640FC186F = '0x88a95bb640fc186f';
/**
   * _0x88B2026A3B0BE33D
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x88B2026A3B0BE33D = '0x88b2026a3b0be33d';
/**
   * _0x897934E868EDDD6C
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const _0x897934E868EDDD6C = '0x897934e868eddd6c';
/**
   * _0x89816B58C3466262
   * _GET_PED_B* - _GET_PED_C*
   *
   * @param {number} ped
   * @return {any}
   */
export const _0x89816B58C3466262 = '0x89816b58c3466262';
/**
   * _0x899DFA0009AC93DE
   * _SET_PED_O*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x899DFA0009AC93DE = '0x899dfa0009ac93de';
/**
   * _0x89E59DBD15E21177
   * _SET_C*
   *
   * @param {number} groupId
   * @param {number} p1
   * @return {void}
   */
export const _0x89E59DBD15E21177 = '0x89e59dbd15e21177';
/**
   * _0x8AF46E5159A5B620
   * _SET_PED_IN*
   *
   * @param {number} ped
   * @param {number} speechParams
   * @return {void}
   */
export const _0x8AF46E5159A5B620 = '0x8af46e5159a5b620';
/**
   * _0x8AF8E647D6B2A649
   * Returns offset (0 < 32) to be used with MISC::SET_BIT
   * _GET_PED_CR*
   *
   * @param {number} groupId
   * @param {number} ped
   * @return {number}
   */
export const _0x8AF8E647D6B2A649 = '0x8af8e647d6b2a649';
/**
   * _0x8AFCCC0F18D70018
   * _SET_FORMATION_*
   *
   * @param {number} groupId
   * @param {boolean} p1
   * @return {void}
   */
export const _0x8AFCCC0F18D70018 = '0x8afccc0f18d70018';
/**
   * _0x8BA0C65AC15A7D33
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x8BA0C65AC15A7D33 = '0x8ba0c65ac15a7d33';
/**
   * _0x8BE24D74D74C6E9B
   * Used in Script Function NET_CAMP_DOG_CLIENT_HANDLE_ANIMAL_INTERACTION
   *
   * @param {number} ped
   * @return {number}
   */
export const _0x8BE24D74D74C6E9B = '0x8be24d74d74c6e9b';
/**
   * _0x8CB2553C559102C1
   * _SET_PED_T* - SET_PED_U*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0x8CB2553C559102C1 = '0x8cb2553c559102c1';
/**
   * _0x8D9DB115FBA8E23D
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x8D9DB115FBA8E23D = '0x8d9db115fba8e23d';
/**
   * _0x900CA00CE703E1E2
   * Used in Script Function AGGRO_SHOULD_PED_HEAR_DEATH
   * _GET_PED_*
   *
   * @param {number} ped
   * @return {number}
   */
export const _0x900CA00CE703E1E2 = '0x900ca00ce703e1e2';
/**
   * _0x9078FB0557364099
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9078FB0557364099 = '0x9078fb0557364099';
/**
   * _0x913D04A5176F84C9
   * _IS_PED_S* - _IS_PED_U*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x913D04A5176F84C9 = '0x913d04a5176f84c9';
/**
   * _0x9184788BFF1EDAD7
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9184788BFF1EDAD7 = '0x9184788bff1edad7';
/**
   * _0x91BAB9E064F036CD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x91BAB9E064F036CD = '0x91bab9e064f036cd';
/**
   * _0x92A1B55A59720395
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x92A1B55A59720395 = '0x92a1b55a59720395';
/**
   * _0x94132D7C8D3575C4
   * _GET_IS_PED_*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x94132D7C8D3575C4 = '0x94132d7c8d3575c4';
/**
   * _HAS_PED_INTERACTED_WITH_PLAYER_RECENTLY
   * Returns whether a ped has interacted with a player recently.
   * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/0x947E43F544B6AB34
   *
   * @param {number} ped
   * @param {number} player
   * @param {number} flag
   * @param {number} ms
   * @return {boolean}
   */
export const _HAS_PED_INTERACTED_WITH_PLAYER_RECENTLY = '0x947e43f544b6ab34';
/**
   * _0x9629FAF6460D35CB
   *
   * @param {number} group
   * @param {boolean} p1
   * @return {void}
   */
export const _0x9629FAF6460D35CB = '0x9629faf6460d35cb';
/**
   * _0x96595B36D6A2279B
   * Only used in R* Script mob4 combined with SET_ANIMAL_TUNING_BOOL_PARAM
   * _SET_PED_S* - _SET_PED_TARGET_*
   *
   * @param {number} animal
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x96595B36D6A2279B = '0x96595b36d6a2279b';
/**
   * _0x966DE09688A1DE39
   * _SET_FORMATION_P*
   *
   * @param {number} groupId
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const _0x966DE09688A1DE39 = '0x966de09688a1de39';
/**
   * _0x96C7B659854DE629
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x96C7B659854DE629 = '0x96c7b659854de629';
/**
   * _0x97A38B65EBDA3D50
   * _SET_PED_D*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x97A38B65EBDA3D50 = '0x97a38b65ebda3d50';
/**
   * _0x97B06669AC569003
   * _CLEAR*
   *
   * @param {number} ped1
   * @param {number} ped2
   * @return {void}
   */
export const _0x97B06669AC569003 = '0x97b06669ac569003';
/**
   * _0x97C475212B327666
   * _SET_SCENARIO_PED_* - _SET_SPAWNER_*
   *
   * @param {number} groupId
   * @param {boolean} p1
   * @return {void}
   */
export const _0x97C475212B327666 = '0x97c475212b327666';
/**
   * _0x9851DE7AEC10B4E1
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p3
   * @param {number} p4
   * @param {any} p5
   * @return {void}
   */
export const _0x9851DE7AEC10B4E1 = '0x9851de7aec10b4e1';
/**
   * _0x992187D975635DF5
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x992187D975635DF5 = '0x992187d975635df5';
/**
   * _0x99DF2639DA76C1DC
   * _CAN_PED_*
   *
   * @param {number} ped1
   * @param {number} ped2
   * @param {number} p2
   * @return {boolean}
   */
export const _0x99DF2639DA76C1DC = '0x99df2639da76c1dc';
/**
   * _0x9A4AC116CC1EEE14
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9A4AC116CC1EEE14 = '0x9a4ac116cc1eee14';
/**
   * _0x9AB33CB5834885B3
   * _SET_PED_M*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const _0x9AB33CB5834885B3 = '0x9ab33cb5834885b3';
/**
   * _0x9B65444C07B782BF
   * Only used in SP R* Script winter1: p1 = Winter1Mount
   *
   * @param {number} ped
   * @param {string | number} p1
   * @return {void}
   */
export const _0x9B65444C07B782BF = '0x9b65444c07b782bf';
/**
   * _GET_CATEGORY_OF_COMPONENT_AT_INDEX
   *
   * @param {number} ped
   * @param {number} componentIndex
   * @param {any} p2
   * @return {number}
   */
export const _GET_CATEGORY_OF_COMPONENT_AT_INDEX = '0x9b90842304c938a7';
/**
   * _0x9B9B9FA0EA283E3D
   * Used in Script Function SKCS_PLAYER_ROBBING
   * _SET_PED_SHOULD_PLAY_* - _SET_PED_SW*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x9B9B9FA0EA283E3D = '0x9b9b9fa0ea283e3d';
/**
   * _0x9BBEAF8B0C007F1E
   * _SET_PLAYER_CAN_B* - _SET_PLAYER_CAN_U*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x9BBEAF8B0C007F1E = '0x9bbeaf8b0c007f1e';
/**
   * _HAS_PED_BEEN_SHOT_BY_PLAYER_RECENTLY
   * this native checks if player has shot a specific ped for the duration passed p2 is in milliseconds 
   *
   * @param {number} player
   * @param {number} ped
   * @param {number} duration
   * @return {boolean}
   */
export const _HAS_PED_BEEN_SHOT_BY_PLAYER_RECENTLY = '0x9c81338b2e62ce0a';
/**
   * _0x9D8DFE2DE9CB4DFC
   * _RESET_PED_*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x9D8DFE2DE9CB4DFC = '0x9d8dfe2de9cb4dfc';
/**
   * _0x9E3842E5DAD69F80
   * Only used in SP R* Script loanshark_hunter
   *
   * @param {number} volume
   * @return {void}
   */
export const _0x9E3842E5DAD69F80 = '0x9e3842e5dad69f80';
/**
   * _0x9E66708B2B41F14A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9E66708B2B41F14A = '0x9e66708b2b41f14a';
/**
   * _0x9F0F28B42C4EE80A
   *
   * @param {number} animal
   * @param {number} p2
   * @return {void}
   */
export const _0x9F0F28B42C4EE80A = '0x9f0f28b42c4ee80a';
/**
   * _0x9F933E0985E12C51
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const _0x9F933E0985E12C51 = '0x9f933e0985e12c51';
/**
   * _0xA064BBABB064446F
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xA064BBABB064446F = '0xa064bbabb064446f';
/**
   * _0xA180FBD502A03125
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xA180FBD502A03125 = '0xa180fbd502a03125';
/**
   * _0xA1FBAC56D38563E2
   *
   * @param {number} volume
   * @return {boolean}
   */
export const _0xA1FBAC56D38563E2 = '0xa1fbac56d38563e2';
/**
   * _0xA2116C1E4ED85C24
   * _SET_PED_*
   *
   * @param {number} ped
   * @param {boolean} inverted
   * @return {void}
   */
export const _0xA2116C1E4ED85C24 = '0xa2116c1e4ed85c24';
/**
   * _0xA218D2BBCAA7388C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xA218D2BBCAA7388C = '0xa218d2bbcaa7388c';
/**
   * _0xA274F51EF7E34B95
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xA274F51EF7E34B95 = '0xa274f51ef7e34b95';
/**
   * _0xA2B8E47442C76CEC
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA2B8E47442C76CEC = '0xa2b8e47442c76cec';
/**
   * _0xA2F8B3B5FEDFC100
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA2F8B3B5FEDFC100 = '0xa2f8b3b5fedfc100';
/**
   * _0xA31D350D66FA1855
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xA31D350D66FA1855 = '0xa31d350d66fa1855';
/**
   * _0xA405BF9F01960C16
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xA405BF9F01960C16 = '0xa405bf9f01960c16';
/**
   * _0xA4AC05B1A364EBC5
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xA4AC05B1A364EBC5 = '0xa4ac05b1a364ebc5';
/**
   * _0xA4B6432E3880F2F9
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xA4B6432E3880F2F9 = '0xa4b6432e3880f2f9';
/**
   * _0xA691C10054275290
   *
   * @param {number} mount
   * @param {number} player
   * @param {number} dismountedTimestamp
   * @return {void}
   */
export const _0xA691C10054275290 = '0xa691c10054275290';
/**
   * _0xA6D6F03095C88F59
   * _DELETE_*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xA6D6F03095C88F59 = '0xa6d6f03095c88f59';
/**
   * _0xA7A806677F8DE138
   * Washing player's face/hands now
   * _CLEAR_PED_E* - _CLEAR_PED_L*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xA7A806677F8DE138 = '0xa7a806677f8de138';
/**
   * _0xA7DC9266ED6A4E51
   * _CLEAR_PED_B* - _CLEAR_PED_C*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xA7DC9266ED6A4E51 = '0xa7dc9266ed6a4e51';
/**
   * _0xA8A95CECB1906EA2
   * _SET_ENABLE_B* - _SET_ENABLE_H*
   *
   * @param {number} groupId
   * @param {boolean} p1
   * @return {void}
   */
export const _0xA8A95CECB1906EA2 = '0xa8a95cecb1906ea2';
/**
   * _0xA90684ED185CCB4B
   * Only used in R* Script mob4 and rcm_mason4
   * _SET_PED_DEFENSIVE_* - _SET_PED_DESIRED_*
   *
   * @param {number} animal
   * @param {boolean} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const _0xA90684ED185CCB4B = '0xa90684ed185ccb4b';
/**
   * _0xA967D6A8ED2D713B
   * _SET_PED_P* - _SET_PED_R*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0xA967D6A8ED2D713B = '0xa967d6a8ed2d713b';
/**
   * _0xAA6C49AE90A32299
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0xAA6C49AE90A32299 = '0xaa6c49ae90a32299';
/**
   * _SET_ACTIVE_META_PED_COMPONENTS_UPDATED
   * Related to _0x704C908E9C405136 for component loading
   * Can be used to fix missing outfit changes, always paired with _UPDATE_PED_VARIATION
   * _S*
   * Doesn't actually return anything.
   *
   * @param {number} ped
   * @param {boolean} isMp
   * @return {any}
   */
export const _SET_ACTIVE_META_PED_COMPONENTS_UPDATED = '0xaab86462966168ce';
/**
   * _0xAAC0EE3B4999ABB5
   *
   * @param {number} ped
   * @param {number} targetPed
   * @return {void}
   */
export const _0xAAC0EE3B4999ABB5 = '0xaac0ee3b4999abb5';
/**
   * _0xAD3330E3C3E98007
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xAD3330E3C3E98007 = '0xad3330e3c3e98007';
/**
   * _0xAE6B68A83ABBE7C0
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xAE6B68A83ABBE7C0 = '0xae6b68a83abbe7c0';
/**
   * _0xAF041C10756C30FB
   * _CLEAR_PED_D*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {void}
   */
export const _0xAF041C10756C30FB = '0xaf041c10756c30fb';
/**
   * _0xB05CC690CDE8A4A9
   * Used to set up bad guy groups in nb_kidnapped R* Script (MP_RE_KIDNAPPED): p1 = 4.f
   * _SET_FORMATION_*
   *
   * @param {number} groupId
   * @param {number} p1
   * @return {boolean}
   */
export const _0xB05CC690CDE8A4A9 = '0xb05cc690cde8a4a9';
/**
   * _0xB06F5F1DEF417216
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xB06F5F1DEF417216 = '0xb06f5f1def417216';
/**
   * _GET_META_PED_RACE
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_META_PED_RACE = '0xb292203008ebbaac';
/**
   * _0xB29C553BA582D09E
   * Used in Script Function SATCHEL_COUNT_BREAKDOWN_COMPONENTS
   *
   * @param {DataView} p0
   * @param {number} model
   * @param {number} damageCleanliness
   * @param {number} p3
   * @return {any}
   */
export const _0xB29C553BA582D09E = '0xb29c553ba582d09e';
/**
   * _0xB4B7C92FCE7347B7
   * _RESET_PED_C*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xB4B7C92FCE7347B7 = '0xb4b7c92fce7347b7';
/**
   * _0xB65927F861E7AE39
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _0xB65927F861E7AE39 = '0xb65927f861e7ae39';
/**
   * _0xB7DBB2986B87E230
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _0xB7DBB2986B87E230 = '0xb7dbb2986b87e230';
/**
   * _0xB8AB265426CFE6DD
   * _SET_HO*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0xB8AB265426CFE6DD = '0xb8ab265426cfe6dd';
/**
   * _0xB8E2D655E1D5BD39
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xB8E2D655E1D5BD39 = '0xb8e2d655e1d5bd39';
/**
   * _0xB91AB3BE7F655D49
   * _IS_PED_J* - _IS_PED_L*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xB91AB3BE7F655D49 = '0xb91ab3be7f655d49';
/**
   * _0xB9BDFAE609DFB7C5
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xB9BDFAE609DFB7C5 = '0xb9bdfae609dfb7c5';
/**
   * _SET_PED_DESIRES_GROUP
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PED_DESIRES_GROUP = '0xbad2a311667a50d7';
/**
   * _0xBB3E5370EBB6BE28
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xBB3E5370EBB6BE28 = '0xbb3e5370ebb6be28';
/**
   * _0xBC1DC48270468444
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xBC1DC48270468444 = '0xbc1dc48270468444';
/**
   * _0xBD0E4F52F6D95242
   * _IS_PED_M* - _IS_PED_O*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xBD0E4F52F6D95242 = '0xbd0e4f52f6d95242';
/**
   * _0xBF567DF2BEF211A6
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xBF567DF2BEF211A6 = '0xbf567df2bef211a6';
/**
   * _0xBFA6B7731C3BAF02
   * Only used in R* Script tg_p (CLIENT__AMBIENT_POPULATION - Player starts the populate in region)
   *
  
   * @return {void}
   */
export const _0xBFA6B7731C3BAF02 = '0xbfa6b7731c3baf02';
/**
   * _0xC17A94CC8FC3C61A
   * _SET_PED_P* - _SET_PED_R*
   *
   * @param {number} entity
   * @param {number} boneId
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const _0xC17A94CC8FC3C61A = '0xc17a94cc8fc3c61a';
/**
   * _0xC2722B252C79E641
   * _FORCE_PED_*
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {boolean} p3
   * @return {void}
   */
export const _0xC2722B252C79E641 = '0xc2722b252c79e641';
/**
   * _0xC2EF407645BEECDC
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC2EF407645BEECDC = '0xc2ef407645beecdc';
/**
   * _0xC3995D396F1D97B6
   * _GET_PED_G* - _GET_PED_I*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {boolean}
   */
export const _0xC3995D396F1D97B6 = '0xc3995d396f1d97b6';
/**
   * _SET_PELT_FOR_HORSE_BY_INVENTORY_ITEM
   * Set the pelt of the animal to the back of the horse
   * EXAMPLE:
   * local mount = GetMountOwnedByPlayer(PlayerId())
   * Citizen.InvokeNative(0xC412AA1C73111FE0,mount,GetHashKey('PROVISION_DEER_HIDE_POOR'),GetHashKey('a_c_deer_01_uppr_000_c0_001_ab'),0,0)
   *
   * @param {number} horse
   * @param {number} itemHash
   * @param {number} albedo
   * @param {number} normal
   * @param {boolean} p4
   * @return {void}
   */
export const _SET_PELT_FOR_HORSE_BY_INVENTORY_ITEM = '0xc412aa1c73111fe0';
/**
   * _0xC48AF420371C7407
   * _SET_PED_M*
   *
   * @param {number} ped
   * @param {number} grapple
   * @return {any}
   */
export const _0xC48AF420371C7407 = '0xc48af420371c7407';
/**
   * _PED_SET_SIMPLE_PLAYER_MEMORY
   * memoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/_PED_SET_SIMPLE_PLAYER_MEMORY
   *
   * @param {number} ped
   * @param {number} memoryType
   * @return {void}
   */
export const _PED_SET_SIMPLE_PLAYER_MEMORY = '0xc494c76a34266e82';
/**
   * _GET_PED_RAGDOLL_BONE_INDEX
   * Returns boneIndex
   *
   * @param {number} ped
   * @param {number} boneId
   * @return {number}
   */
export const _GET_PED_RAGDOLL_BONE_INDEX = '0xc5303f460a40d21d';
/**
   * _0xC5B78E41DCF8227C
   * _SET_H* - _SET_I*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0xC5B78E41DCF8227C = '0xc5b78e41dcf8227c';
/**
   * _0xC6136B40FFFB778B
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0xC6136B40FFFB778B = '0xc6136b40fffb778b';
/**
   * _0xC6981AFF6D2A71C2
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC6981AFF6D2A71C2 = '0xc6981aff6d2a71c2';
/**
   * _0xC6C4E15CF7D52FEA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xC6C4E15CF7D52FEA = '0xc6c4e15cf7d52fea';
/**
   * _0xC9151483CC06A414
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xC9151483CC06A414 = '0xc9151483cc06a414';
/**
   * _0xC991EF46FE323867
   * Not implemented.
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const _0xC991EF46FE323867 = '0xc991ef46fe323867';
/**
   * _0xC99F104BDF8C7F5A
   * _SET_PLAYER_N* - _SET_PLAYER_S*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0xC99F104BDF8C7F5A = '0xc99f104bdf8c7f5a';
/**
   * _0xCA95924C893A0C91
   * Returns vehicle speed
   * _COMPUTE_*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {number}
   */
export const _0xCA95924C893A0C91 = '0xca95924c893a0c91';
/**
   * _0xCA95C156C14B2054
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCA95C156C14B2054 = '0xca95c156c14b2054';
/**
   * _0xCAC43D060099EA72
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xCAC43D060099EA72 = '0xcac43d060099ea72';
/**
   * _0xCB1A3864C524F784
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCB1A3864C524F784 = '0xcb1a3864c524f784';
/**
   * _0xCB86D3E3E3708901
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {any}
   */
export const _0xCB86D3E3E3708901 = '0xcb86d3e3e3708901';
/**
   * _0xCB8F4C9343EBE240
   * Only used in R* SP Scripts
   * _GET_PLAYER_W* - _GET_RANDOM_*
   *
   * @param {number} ped
   * @param {number} eventType
   * @return {[boolean, Vector3]}
   */
export const _0xCB8F4C9343EBE240 = '0xcb8f4c9343ebe240';
/**
   * _0xCBDE59C48F2B06F5
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xCBDE59C48F2B06F5 = '0xcbde59c48f2b06f5';
/**
   * _0xCD9E5F94A2F38683
   * _SET_PED_R* - _SET_PED_S*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0xCD9E5F94A2F38683 = '0xcd9e5f94a2f38683';
/**
   * _0xCDFB8C04D4C95D9B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xCDFB8C04D4C95D9B = '0xcdfb8c04d4c95d9b';
/**
   * _0xCE7A6C1D5CDE1F9D
   *
   * @param {number} ped
   * @param {number} object
   * @param {string | number} propName
   * @param {string | number} animName
   * @return {void}
   */
export const _0xCE7A6C1D5CDE1F9D = '0xce7a6c1d5cde1f9d';
/**
   * _0xCF0B19806473D324
   * _SET_PED_COMBAT_*
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _0xCF0B19806473D324 = '0xcf0b19806473d324';
/**
   * _0xD049920CD29F6CC8
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0xD049920CD29F6CC8 = '0xd049920cd29f6cc8';
/**
   * _0xD049FDAF089FDDB0
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0xD049FDAF089FDDB0 = '0xd049fdaf089fddb0';
/**
   * _0xD103F6DBB5442BE8
   * Params: p1 either a 1 or 0, so perhaps BOOL
   * _SET_PED_A*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0xD103F6DBB5442BE8 = '0xd103f6dbb5442be8';
/**
   * _0xD2F0FE8805D91647
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xD2F0FE8805D91647 = '0xd2f0fe8805d91647';
/**
   * _0xD355E2F1BB41087E
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _0xD355E2F1BB41087E = '0xd355e2f1bb41087e';
/**
   * _0xD4D403EA031F351C
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xD4D403EA031F351C = '0xd4d403ea031f351c';
/**
   * _0xD55DB4466D00A258
   * Used in Script Function LA_CHECK_ALERTED
   * _GET_IS_PED_*
   *
   * @param {number} legendaryAnimal
   * @return {boolean}
   */
export const _0xD55DB4466D00A258 = '0xd55db4466d00a258';
/**
   * _0xD5BD1B5318A81994
   * _SET_FORMATION_*
   *
   * @param {number} groupId
   * @param {boolean} p1
   * @return {void}
   */
export const _0xD5BD1B5318A81994 = '0xd5bd1b5318a81994';
/**
   * _0xD61FCF9FCFD515B7
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xD61FCF9FCFD515B7 = '0xd61fcf9fcfd515b7';
/**
   * _0xD7D2F45C56A4F4DF
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xD7D2F45C56A4F4DF = '0xd7d2f45c56a4f4df';
/**
   * _0xD8544F6260F5F01E
   * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
   * p1 is mostly 10
   * _CLEAR_PED_N* - _CLEAR_PED_W*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0xD8544F6260F5F01E = '0xd8544f6260f5f01e';
/**
   * _0xD8CEEED54C672B5D
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _0xD8CEEED54C672B5D = '0xd8ceeed54c672b5d';
/**
   * _0xD97BC27AC039F681
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0xD97BC27AC039F681 = '0xd97bc27ac039f681';
/**
   * _IS_PED_AFLOAT
   * detects if ped is afloat in water like swimming or in a boat (driving or standing on it)
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_AFLOAT = '0xdc88d06719070c39';
/**
   * _0xDC91F22F09BC6C2F
   * Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_GAME
   * _SET_RELATIONSHIP_*
   *
   * @param {number} group
   * @param {boolean} p1
   * @return {void}
   */
export const _0xDC91F22F09BC6C2F = '0xdc91f22f09bc6c2f';
/**
   * _0xDD9540E7B1C9714F
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} r
   * @param {number} g
   * @param {number} b
   * @return {void}
   */
export const _0xDD9540E7B1C9714F = '0xdd9540e7b1c9714f';
/**
   * _0xDDFAD4DEAA7FA362
   * _SET_FORMATION_P*
   *
   * @param {number} groupId
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const _0xDDFAD4DEAA7FA362 = '0xddfad4deaa7fa362';
/**
   * _0xDEDBED3020DA49DC
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xDEDBED3020DA49DC = '0xdedbed3020da49dc';
/**
   * _0xDEE8D30AA5C2E28D
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0xDEE8D30AA5C2E28D = '0xdee8d30aa5c2e28d';
/**
   * _0xE0FE107AB174D64A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE0FE107AB174D64A = '0xe0fe107ab174d64a';
/**
   * _0xE1103300F3456DE7
   * _SET_FORMATION_P*
   *
   * @param {number} groupId
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0xE1103300F3456DE7 = '0xe1103300f3456de7';
/**
   * _0xE1AADD0055D76603
   * _C*
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} boneIndex1
   * @param {number} boneIndex2
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p7
   * @param {boolean} p8
   * @param {boolean} p9
   * @param {number} p10
   * @return {void}
   */
export const _0xE1AADD0055D76603 = '0xe1aadd0055d76603';
/**
   * _0xE1B3BE07D3AADDED
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0xE1B3BE07D3AADDED = '0xe1b3be07d3aadded';
/**
   * _0xE20027B414BFE6C7
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE20027B414BFE6C7 = '0xe20027b414bfe6c7';
/**
   * _0xE29D8CD66553DBAA
   * _SET_PED_R* -_SET_PED_S*
   *
   * @param {number} horse
   * @return {void}
   */
export const _0xE29D8CD66553DBAA = '0xe29d8cd66553dbaa';
/**
   * _0xE37ACEE15AC50C7E
   * _SET_PED_IN*
   *
   * @param {number} ped
   * @param {string | number} p1
   * @return {void}
   */
export const _0xE37ACEE15AC50C7E = '0xe37acee15ac50c7e';
/**
   * _0xE4C95E0AE31C6512
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const _0xE4C95E0AE31C6512 = '0xe4c95e0ae31c6512';
/**
   * _0xE4EF4382E22C780C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE4EF4382E22C780C = '0xe4ef4382e22c780c';
/**
   * _0xE50C9816B3F22D8B
   * _SET_D*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0xE50C9816B3F22D8B = '0xe50c9816b3f22d8b';
/**
   * _0xE6CB36F43A95D75F
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE6CB36F43A95D75F = '0xe6cb36f43a95d75f';
/**
   * _0xE735A7DA22E88359
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE735A7DA22E88359 = '0xe735a7da22e88359';
/**
   * _0xE737D5F14304A2EC
   * Only used in R* Script nb_animal_attack: p2 = 120000
   * _SET_PED_SH* - _SET_PED_SP*
   *
   * @param {number} ped
   * @param {number} player
   * @param {number} p2
   * @return {void}
   */
export const _0xE737D5F14304A2EC = '0xe737d5f14304a2ec';
/**
   * _0xE76687023D8C8505
   * Used for AUDIO / ANIMSCENE (REFERENCE_REGIONAL_CHARACTER)
   * Params: p1 = 0
   * _GET_PED_IN*
   *
   * @param {number} perscharModel
   * @param {number} p1
   * @return {number}
   */
export const _0xE76687023D8C8505 = '0xe76687023d8c8505';
/**
   * _0xE8ABE3B73FC7FE17
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xE8ABE3B73FC7FE17 = '0xe8abe3b73fc7fe17';
/**
   * _GET_PLAYER_DISMOUNT_TIMESTAMP
   * Returns dismounted timestamp
   *
   * @param {number} mount
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_DISMOUNT_TIMESTAMP = '0xe8d1ccb9375c101b';
/**
   * _0xE9E06EA514A69061
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE9E06EA514A69061 = '0xe9e06ea514a69061';
/**
   * _0xEA8763E505AFD49A
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xEA8763E505AFD49A = '0xea8763e505afd49a';
/**
   * _0xEB8886E1065654CD
   * Washing player's face/hands now
   * _FA* - _FI*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {string | number} p2
   * @param {number} p3
   * @return {void}
   */
export const _0xEB8886E1065654CD = '0xeb8886e1065654cd';
/**
   * _0xEBAAC9A750E7563B
   * If returned true: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling UP the bounds due to tracking
   * If returned false: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling DOWN the bounds due to tracking
   * _IS_PED_T* - _IS_PED_U*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xEBAAC9A750E7563B = '0xebaac9a750e7563b';
/**
   * _0xEBD49472BCCF7642
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xEBD49472BCCF7642 = '0xebd49472bccf7642';
/**
   * _0xEC60D1D225BC50AA
   * _SET_C*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0xEC60D1D225BC50AA = '0xec60d1d225bc50aa';
/**
   * _0xED1C764997A86D5A
   * Only used in R* Script nb_stalking_hunter
   *
   * @param {number} ped1
   * @param {number} ped2
   * @return {void}
   */
export const _0xED1C764997A86D5A = '0xed1c764997a86d5a';
/**
   * _0xEEDC9B29314B2733
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @return {void}
   */
export const _0xEEDC9B29314B2733 = '0xeedc9b29314b2733';
/**
   * _0xEF371232BC6053E1
   * _ADD_*
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xEF371232BC6053E1 = '0xef371232bc6053e1';
/**
   * _0xF47D54B986F0A346
   * Used in Script Function MOONSHINE_BAND_CLIENT_PATRON_UPDATE
   *
   * @param {number} ped
   * @param {number} danceIntensity
   * @return {void}
   */
export const _0xF47D54B986F0A346 = '0xf47d54b986f0a346';
/**
   * _0xF4860514AD354226
   * Only used in SP Scripts
   * Returns count / index
   * _C*
   *
   * @param {number} shockingEvent
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @return {[number, number]}
   */
export const _0xF4860514AD354226 = '0xf4860514ad354226';
/**
   * _0xF634E2892220EF34
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const _0xF634E2892220EF34 = '0xf634e2892220ef34';
/**
   * _0xF6A8C4B4A11AE89C
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {any}
   */
export const _0xF6A8C4B4A11AE89C = '0xf6a8c4b4a11ae89c';
/**
   * _0xF7327ACC7A89AEF1
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xF7327ACC7A89AEF1 = '0xf7327acc7a89aef1';
/**
   * _0xF917F92BF22ECBAB
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xF917F92BF22ECBAB = '0xf917f92bf22ecbab';
/**
   * _0xF9331B3A314EB49D
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xF9331B3A314EB49D = '0xf9331b3a314eb49d';
/**
   * _0xF9CBD46433E36713
   * Used in Script Function PLAYER_HEAD_TRACKING_MAINTAIN
   *
   * @param {number} ped
   * @param {number} targetEntity
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {string | number} p9
   * @return {void}
   */
export const _0xF9CBD46433E36713 = '0xf9cbd46433e36713';
/**
   * _SET_PED_WETNESS
   * only works when you use SET_PED_WETNESS_HEIGHT first , if you do 0.0 (it resets) you need to apply again with SET_PED_WETNESS_HEIGHT to see the wetness effects again
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _SET_PED_WETNESS = '0xf9cff5bb70e8a2cb';
/**
   * _0xFA0D206B489A6846
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0xFA0D206B489A6846 = '0xfa0d206b489a6846';
/**
   * _0xFA742B82D093D848
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xFA742B82D093D848 = '0xfa742b82d093d848';
/**
   * _0xFA8C10DCE0706D43
   * _HAS_PED_*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xFA8C10DCE0706D43 = '0xfa8c10dce0706d43';
/**
   * _0xFC23348F0F4E245F
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xFC23348F0F4E245F = '0xfc23348f0f4e245f';
/**
   * _GET_NUM_RESERVED_STAMINA
   * returns the number of reserved stamina similar to _GET_NUM_RESERVED_HEALTH
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_NUM_RESERVED_STAMINA = '0xfc3b580c4380b5b7';
/**
   * _0xFD3C31A2E45671E7
   * _DISABLE_A* - _DISABLE_C*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0xFD3C31A2E45671E7 = '0xfd3c31a2e45671e7';
/**
   * _0xFD8E853F0BC2E942
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xFD8E853F0BC2E942 = '0xfd8e853f0bc2e942';
/**
   * _0xFEA6126C34DF2532
   * METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
   * _SET_M* - _SET_P*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0xFEA6126C34DF2532 = '0xfea6126c34df2532';
/**
   * _0xFFA1594703ED27CA
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0xFFA1594703ED27CA = '0xffa1594703ed27ca';
/**
   * _0xFFDE295662405B25
   * _GET_PED_COMBAT_M* - _GET_PED_C*
   *
   * @param {number} ped
   * @return {number}
   */
export const _0xFFDE295662405B25 = '0xffde295662405b25';
/**
   * _ADD_PED_STAY_OUT_VOLUME
   *
   * @param {number} ped
   * @param {number} volume
   * @return {boolean}
   */
export const _ADD_PED_STAY_OUT_VOLUME = '0xe9b168527b337bf0';
/**
   * _ADD_PED_SUBSCRIBE_TO_LEGENDARY_BLIPS
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _ADD_PED_SUBSCRIBE_TO_LEGENDARY_BLIPS = '0xe37287ee358939c3';
/**
   * _ADD_SCENARIO_BLOCKING_VOLUME
   * flag: see ADD_SCENARIO_BLOCKING_AREA
   *
   * @param {number} volume
   * @param {boolean} p1
   * @param {number} flag
   * @return {any}
   */
export const _ADD_SCENARIO_BLOCKING_VOLUME = '0x4c39c95ae5db1329';
/**
   * _ADD_SCENARIO_TRANSITION
   * Forces transition now, called together with 0xD65FDC686A031C83
   *
   * @param {number} ped
   * @return {void}
   */
export const _ADD_SCENARIO_TRANSITION = '0x6d07b371e9439019';
/**
   * _ADD_TEXTURE_LAYER
   * Creates ped overlay in texture override data and returns it's index.
   * This index are used for further overlay editing.
   * 
   * albedoHash: a hash of overlay's albedo texture
   * colorType: a color type(from 0 to 2). 0 is used for overlays with RGB colors usually.
   *
   * @param {number} textureId
   * @param {number} albedoHash
   * @param {number} normalHash
   * @param {number} materialHash
   * @param {number} blendType
   * @param {number} texAlpha
   * @param {number} sheetGridIndex
   * @return {number}
   */
export const _ADD_TEXTURE_LAYER = '0x86bb5ff45f193a02';
/**
   * _APPLY_PED_META_PED_OUTFIT
   * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
   *
   * @param {number} requestId
   * @param {number} ped
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {boolean}
   */
export const _APPLY_PED_META_PED_OUTFIT = '0x74f512e29cb717e2';
/**
   * _APPLY_SHOP_ITEM_TO_PED
   *
   * @param {number} ped
   * @param {number} componentHash
   * @param {boolean} immediately
   * @param {boolean} isMp
   * @param {boolean} p4
   * @return {void}
   */
export const _APPLY_SHOP_ITEM_TO_PED = '0xd3a7b003ed343fd9';
/**
   * _APPLY_TEXTURE_ON_PED
   *
   * @param {number} ped
   * @param {number} componentHash
   * @param {number} textureId
   * @return {void}
   */
export const _APPLY_TEXTURE_ON_PED = '0x0b46e25761519058';
/**
   * _ARE_ALL_AMBIENT_PED_RESERVATIONS_READY
   *
  
   * @return {boolean}
   */
export const _ARE_ALL_AMBIENT_PED_RESERVATIONS_READY = '0x5e420ff293ee5472';
/**
   * _ATTACH_VOLUME_TO_ENTITY
   *
   * @param {number} volume
   * @param {number} entity
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} p8
   * @param {boolean} p9
   * @return {void}
   */
export const _ATTACH_VOLUME_TO_ENTITY = '0x7c00cfc48a782dc0';
/**
   * _CAN_PED_USE_SCENARIO_POINT
   * p2 is always 0, p3 is always 0, p4 is always 1
   *
   * @param {number} ped
   * @param {number} scenario
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {boolean}
   */
export const _CAN_PED_USE_SCENARIO_POINT = '0xab643407d0b26f07';
/**
   * _CHANGE_PED_STAMINA
   * Alters entity's stamina by 'amount'. Can be negative (to drain stamina). float amount: -1000.0 - 1000.0
   *
   * @param {number} ped
   * @param {number} amount
   * @return {boolean}
   */
export const _CHANGE_PED_STAMINA = '0xc3d4b754c0e86b9e';
/**
   * _CLEAR_ACTIVE_ANIMAL_OWNER
   * Used in Script Functions PLAYER_HORSE_RELEASE_HORSE_TO_AMBIENT_WORLD (p1 = true), HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = false)
   * Set to false for player horse in scripts and seems it's only true when releasing/changing a player horse? Cannot determine what effect it has, but it doesn't seem to affect _GET_HORSE_TAMING_STATE
   *
   * @param {number} horse
   * @param {boolean} clear
   * @return {void}
   */
export const _CLEAR_ACTIVE_ANIMAL_OWNER = '0xbcc76708e5677e1d';
/**
   * _CLEAR_PED_ACTION_DISABLE_FLAG
   *
   * @param {number} ped
   * @param {number} actionDisableFlag
   * @return {void}
   */
export const _CLEAR_PED_ACTION_DISABLE_FLAG = '0x949b2f9ed2917f5d';
/**
   * _CLEAR_PED_BLOOD_DAMAGE_FACIAL
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _CLEAR_PED_BLOOD_DAMAGE_FACIAL = '0x7f5d88333ee8a86f';
/**
   * _CLEAR_PED_COMBAT_STYLE
   * Params: p1 = 1 in R* Scripts
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _CLEAR_PED_COMBAT_STYLE = '0x78815fc52832b690';
/**
   * _CLEAR_PED_COMBAT_STYLE_MOD
   * _CLEAR_PED_COMBAT_*
   *
   * @param {number} ped
   * @param {number} combatStyleModHash
   * @return {void}
   */
export const _CLEAR_PED_COMBAT_STYLE_MOD = '0x1fa132cbcd7cb239';
/**
   * _CLEAR_PED_DESIRED_LOCO_FOR_MODEL
   * Clears locomotion archetype
   *
   * @param {number} ped
   * @return {void}
   */
export const _CLEAR_PED_DESIRED_LOCO_FOR_MODEL = '0x4fd80c3dd84b817b';
/**
   * _CLEAR_PED_DESIRED_LOCO_MOTION_TYPE
   *
   * @param {number} ped
   * @return {void}
   */
export const _CLEAR_PED_DESIRED_LOCO_MOTION_TYPE = '0x58f7db5bd8fa2288';
/**
   * _CLEAR_PED_GRAPPLE_FLAG
   *
   * @param {number} ped
   * @param {number} flag
   * @return {void}
   */
export const _CLEAR_PED_GRAPPLE_FLAG = '0xeae3b5b019c8d23f';
/**
   * _CLEAR_PED_TARGET_ACTION_DISABLE_FLAG
   *
   * @param {number} ped
   * @param {number} actionDisableFlag
   * @return {void}
   */
export const _CLEAR_PED_TARGET_ACTION_DISABLE_FLAG = '0xbbf6d1d07c02d00a';
/**
   * _CLEAR_PED_TEXTURE
   * Removes every texture layer
   * Old Name: _RESET_PED_TEXTURE_2
   *
   * @param {number} textureId
   * @return {void}
   */
export const _CLEAR_PED_TEXTURE = '0xb63b9178d0f58d82';
/**
   * _CLEAR_PELT_FROM_HORSE
   *
   * @param {number} horse
   * @param {number} peltId
   * @return {void}
   */
export const _CLEAR_PELT_FROM_HORSE = '0x627f7f3a0c4c51ff';
/**
   * _COMPUTE_SATCHEL_ITEM_FOR_PED_CARCASS
   * Related to dead animals items/loots
   * Notice: skinningQuality is partially calculated using pedQuality
   *
   * @param {DataView} outInventoryItemArray
   * @param {number} ped
   * @param {number} damageCleanliness
   * @param {number} skinningQuality
   * @return {number}
   */
export const _COMPUTE_SATCHEL_ITEM_FOR_PED_CARCASS = '0x6b89faa36fc909a3';
/**
   * _CREATE_GRAVITY_WELL
   * Creates a handle to an instance of "CScriptResource_GravityWell", this system forces local ped to target specified position when moving, however player still can interrupt this.
   * Can be useful to "point" player at some specific position.
   * Only works while on-foot.
   * 
   * _CREATE_[P-Z]
   *
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} heading
   * @param {number} radius
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {boolean} stopAtDestination
   * @return {number}
   */
export const _CREATE_GRAVITY_WELL = '0x4f5ebe70081e5a20';
/**
   * _CREATE_META_PED
   * Only used in SP scripts, for example odriscolls1: BOOLS: true, true, true, false, false
   *
   * @param {number} requestId
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {boolean} p5
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {boolean} p9
   * @return {number}
   */
export const _CREATE_META_PED = '0x0bcd4091c8eaba42';
/**
   * _CREATE_META_PED_ASSET
   * Creates prop from metaped asset bundle
   * https://github.com/femga/rdr3_discoveries/blob/master/objects/metaped_asset_bundles_list.lua
   * Creates a pickup-able metaped component. asset doesn't seems to be related to component hashes. Hash example : 0xD20354AB (https ://i.imgur.com/dzHkcDb.png)
   *
   * @param {number} asset
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {boolean} p9
   * @return {number}
   */
export const _CREATE_META_PED_ASSET = '0x9641a9a20310f6b8';
/**
   * _CREATE_META_PED_OUTFIT_PED
   * Creates metaped from ped outfit requestId. See _REQUEST_METAPED_OUTFIT
   *
   * @param {number} requestId
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {boolean} p5
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {boolean} p8
   * @return {number}
   */
export const _CREATE_META_PED_OUTFIT_PED = '0xeaf682a14f8e5f53';
/**
   * _DETACH_VOLUME_FROM_ENTITY
   *
   * @param {number} volume
   * @param {number} entity
   * @return {void}
   */
export const _DETACH_VOLUME_FROM_ENTITY = '0x19c975b81be53c28';
/**
   * _DISABLE_ALL_LOOK_AT_REQUESTS
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _DISABLE_ALL_LOOK_AT_REQUESTS = '0xe1965a380342be1f';
/**
   * _DISABLE_AMBIENT_LOOK_AT_REQUESTS
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _DISABLE_AMBIENT_LOOK_AT_REQUESTS = '0x80038740c96ad17f';
/**
   * _DOES_META_PED_OUTFIT_EXIST_FOR_PED_MODEL
   *
   * @param {number} outfit
   * @param {number} model
   * @return {boolean}
   */
export const _DOES_META_PED_OUTFIT_EXIST_FOR_PED_MODEL = '0xc0e880b7a441164d';
/**
   * _DOES_META_PED_SUBOUTFIT_EXIST_FOR_PED_MODEL
   *
   * @param {number} outfit
   * @param {number} suboutfit
   * @param {number} model
   * @return {boolean}
   */
export const _DOES_META_PED_SUBOUTFIT_EXIST_FOR_PED_MODEL = '0x4ff3c2b4e6a196c1';
/**
   * _EQUIP_META_PED_OUTFIT
   * Note: you have to update your ped's variation after calling (using 0xCC8CA3E88256E58F)
   * 
   * Body Types:
   * MPCREATOR_NEUTRAL
   * MPCREATOR_SKINNY
   * MPCREATOR_SKINNY_MUSCULAR
   * MPCREATOR_HEAVY
   * MPCREATOR_HEAVY_MUSCULAR
   * 
   * eBodyWeightOutfit (pedattributes.ymt):
   * -2045421226 (smallest)
   * -1745814259
   * -325933489
   * -1065791927
   * -844699484
   * -1273449080
   * 927185840
   * 149872391
   * 399015098
   * -644349862
   * 1745919061 (default)
   * 1004225511
   * 1278600348
   * 502499352
   * -2093198664
   * -1837436619
   * 1736416063
   * 2040610690
   * -1173634986
   * -867801909
   * 1960266524 (biggest)
   * 
   * https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_outfits.lua
   * 
   * Alt name: _EQUIP_META_PED_OUTFIT_COMPONENT
   *
   * @param {number} ped
   * @param {number} hash
   * @return {void}
   */
export const _EQUIP_META_PED_OUTFIT = '0x1902c4cfcc5be57c';
/**
   * _EQUIP_META_PED_OUTFIT_EXTRA
   * Changes Multiplayer ped face and body type components, they can be stacked
   * Params: p3 = 1
   * Body shape for mp_male from 124 - 128, 110 - 115 for mp_female
   * Face shape for mp_male from 110 - 123, 96 - 109 for mp_female
   * Cloth type for mp_male from 0 - 109, 0 - 95 for mp_female
   *
   * @param {number} ped
   * @param {number} component
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _EQUIP_META_PED_OUTFIT_EXTRA = '0xa5bae410b03e7371';
/**
   * _EQUIP_META_PED_OUTFIT_PRESET
   * Sets the outfit preset for the ped. The presetId is an index which determines its preset outfit. p2 is always false in the scripts.
   * If p2 is true as player, then certain components like facial hair and hair will not be removed.
   * Old name: _SET_PED_OUTFIT_PRESET
   *
   * @param {number} ped
   * @param {number} presetId
   * @param {boolean} p2
   * @return {void}
   */
export const _EQUIP_META_PED_OUTFIT_PRESET = '0x77ff8d35eec6bbc4';
/**
   * _EQUIP_META_PED_SUBOUTFIT
   *
   * @param {number} ped
   * @param {number} suboutfit
   * @param {number} p2
   * @return {void}
   */
export const _EQUIP_META_PED_SUBOUTFIT = '0x66ff395445a88a6e';
/**
   * _FAKE_SET_PED_LOCO_INJURED
   *
   * @param {number} ped
   * @param {boolean} enabled
   * @return {void}
   */
export const _FAKE_SET_PED_LOCO_INJURED = '0x8b3cb08158e98481';
/**
   * _FORCE_PED_DEATH
   *
   * @param {number} ped
   * @param {number} pedKiller
   * @param {number} weapon
   * @return {void}
   */
export const _FORCE_PED_DEATH = '0x1ce875505d45338a';
/**
   * _GET_ACCURACY_AGAINST_LOCAL_PLAYER_MODIFIER
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_ACCURACY_AGAINST_LOCAL_PLAYER_MODIFIER = '0xdc9273d95976ba22';
/**
   * _GET_ACTIVE_ANIMAL_OWNER
   *
   * @param {number} animal
   * @return {number}
   */
export const _GET_ACTIVE_ANIMAL_OWNER = '0xf103823ffe72bb49';
/**
   * _GET_ACTIVE_DYNAMIC_SCENARIO
   * Returns kneeling, sitting, squating, and sleeping scenario hashes
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_ACTIVE_DYNAMIC_SCENARIO = '0x569f1e1237508deb';
/**
   * _GET_ACTIVE_DYNAMIC_SCENARIO_2
   * Returns kneeling, sitting, squating, and sleeping scenario hashes
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_ACTIVE_DYNAMIC_SCENARIO_2 = '0xc22aa08a8adb87d4';
/**
   * _GET_BLOCKING_OF_NON_TEMPORARY_EVENTS
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _GET_BLOCKING_OF_NON_TEMPORARY_EVENTS = '0x268b3aebf032a88d';
/**
   * _GET_CARRIER_AS_HUMAN
   *
   * @param {number} entity
   * @return {number}
   */
export const _GET_CARRIER_AS_HUMAN = '0x79443d56c8df45ee';
/**
   * _GET_CARRIER_AS_MOUNT
   *
   * @param {number} entity
   * @return {number}
   */
export const _GET_CARRIER_AS_MOUNT = '0xa033d7e4bbf9844d';
/**
   * _GET_CARRIER_AS_PED
   *
   * @param {number} entity
   * @return {number}
   */
export const _GET_CARRIER_AS_PED = '0x09b83e68de004cd4';
/**
   * _GET_CHAR_EXPRESSION
   * Gets MetaPedExpression at index specified
   * 
   * For index, see: _SET_CHAR_EXPRESSION
   * 
   * Old name: _GET_PED_FACE_FEATURE
   *
   * @param {number} ped
   * @param {number} index
   * @return {number}
   */
export const _GET_CHAR_EXPRESSION = '0xfd1ba1eef7985bb8';
/**
   * _GET_DEFAULT_RELATIONSHIP_GROUP_HASH
   *
   * @param {number} modelHash
   * @return {number}
   */
export const _GET_DEFAULT_RELATIONSHIP_GROUP_HASH = '0x3cc4a718c258bdd0';
/**
   * _GET_FIRST_ENTITY_PED_IS_CARRYING
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_FIRST_ENTITY_PED_IS_CARRYING = '0xd806cd2a4f2c2996';
/**
   * _GET_GROUP_FORMATION
   *
   * @param {number} groupId
   * @return {number}
   */
export const _GET_GROUP_FORMATION = '0x13a1b061007c906b';
/**
   * _GET_HEALTH_RECHARGE_MULTIPLIER
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_HEALTH_RECHARGE_MULTIPLIER = '0x95b8e397b8f4360f';
/**
   * _GET_HORSE_TAMING_STATE
   * Returns an int based on enum eTamingState
   * 
   * enum eTamingState
   * {
   *   ATS_INVALID = 0,
   *   ATS_INACTIVE,
   *   ATS_TARGET_DETECTED,
   *   ATS_CALLED_OUT,
   *   ATS_MOUNTABLE,
   *   ATS_BEING_PATTED,
   *   ATS_BREAKING_ACTIVE,
   *   ATS_SPOOKED,
   *   ATS_RETREATING,
   *   ATS_FLEEING
   * };
   *
   * @param {number} horse
   * @return {number}
   */
export const _GET_HORSE_TAMING_STATE = '0x454ad4da6c41b5bd';
/**
   * _GET_INCAPACITATION_TIME_REMAINING
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_INCAPACITATION_TIME_REMAINING = '0x88d9d76d78065487';
/**
   * _GET_IS_PED_BEING_ROBBED
   * If p2 is false, then this native will return true until the interaction is complete. If true, the native will return true until player pockets robbery item.
   * _GET_IS_PED_[M-R]*
   *
   * @param {number} ped
   * @param {number} player
   * @param {boolean} trueUntilPlayerPocketsItem
   * @return {boolean}
   */
export const _GET_IS_PED_BEING_ROBBED = '0xe33f98bd76490abc';
/**
   * _GET_IS_PED_COMMAND_HASH_PRESENT
   *
   * @param {number} ped
   * @param {number} commandHash
   * @return {boolean}
   */
export const _GET_IS_PED_COMMAND_HASH_PRESENT = '0x68821369a2ceadd5';
/**
   * _GET_IS_PED_IN_DISPUTE_WITH_PED
   * Returns true if ped is in a dispute another ped (pedInDisputeWith can also be 0)
   *
   * @param {number} ped
   * @param {number} pedInDisputeWith
   * @return {boolean}
   */
export const _GET_IS_PED_IN_DISPUTE_WITH_PED = '0x331550b212014b92';
/**
   * _GET_IS_PED_MOTIVATION_STATE_ENABLED
   * motivationState: see _SET_PED_MOTIVATION
   *
   * @param {number} ped
   * @param {number} motivationState
   * @return {boolean}
   */
export const _GET_IS_PED_MOTIVATION_STATE_ENABLED = '0x33fa048675821da7';
/**
   * _GET_LASSOED_LASSOER
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_LASSOED_LASSOER = '0x0c31c51168e80365';
/**
   * _GET_LASSOER_OF_PED
   * _IS_PED_S* - _IS_PED_U*
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_LASSOER_OF_PED = '0x833f0053340ef413';
/**
   * _GET_LASSO_TARGET
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_LASSO_TARGET = '0xb65a4dab460a19bd';
/**
   * _GET_LAST_LED_MOUNT
   * Returns last horse the ped was leading
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_LAST_LED_MOUNT = '0x693126b5d0457d0d';
/**
   * _GET_LAST_MOUNT
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_LAST_MOUNT = '0x4c8b59171957bcf7';
/**
   * _GET_LAST_VEHICLE_DRAFT_HORSE_WAS_ATTACHED_TO
   *
   * @param {number} horse
   * @return {number}
   */
export const _GET_LAST_VEHICLE_DRAFT_HORSE_WAS_ATTACHED_TO = '0x5064db5083c29921';
/**
   * _GET_LOOTING_FLAG
   * lootFlag: see SET_LOOTING_FLAG
   *
   * @param {number} ped
   * @param {number} lootFlag
   * @return {boolean}
   */
export const _GET_LOOTING_FLAG = '0xe4c11f104620ddce';
/**
   * _GET_META_PED_TYPE
   * enum eMetaPedType
   * {
   *   MPT_MALE,
   *   MPT_FEMALE,
   *   MPT_TEEN,
   *   MPT_ANIMAL,
   *   MPT_NONE
   * };
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_META_PED_TYPE = '0xec9a1261bf0ce510';
/**
   * _GET_NUM_COMPONENTS_IN_PED
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_NUM_COMPONENTS_IN_PED = '0x90403e8107b60e81';
/**
   * _GET_NUM_COMPONENT_CATEGORIES_IN_PED
   * Works similar to 0x90403E8107B60E81 (_GET_NUM_COMPONENTS_IN_PED) but is used to get category hashes instead
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_NUM_COMPONENT_CATEGORIES_IN_PED = '0xa622e66eee92a08d';
/**
   * _GET_NUM_FREE_SLOTS_IN_PED_POOL
   *
  
   * @return {number}
   */
export const _GET_NUM_FREE_SLOTS_IN_PED_POOL = '0x313778edca9158e2';
/**
   * _GET_NUM_RESERVED_AMBIENT_PEDS_DESIRED
   *
  
   * @return {number}
   */
export const _GET_NUM_RESERVED_AMBIENT_PEDS_DESIRED = '0x62de46f061caa468';
/**
   * _GET_NUM_RESERVED_AMBIENT_PEDS_READY
   *
  
   * @return {number}
   */
export const _GET_NUM_RESERVED_AMBIENT_PEDS_READY = '0x5c16855277819bbf';
/**
   * _GET_NUM_RESERVED_HEALTH
   *
   * @param {number} ped
   * @return {any}
   */
export const _GET_NUM_RESERVED_HEALTH = '0x16f2c8c084ab2092';
/**
   * _GET_PEDS_IN_COMBAT_WITH_TARGET
   *
   * @param {number} ped
   * @param {number} itemset
   * @param {number} flag
   * @return {number}
   */
export const _GET_PEDS_IN_COMBAT_WITH_TARGET = '0x7be607daff382fd2';
/**
   * _GET_PED_ATTITUDE
   * AI_ATTITUDE_NEUTRAL = 0,
   * AI_ATTITUDE_FRIENDLY,
   * AI_ATTITUDE_WARY,
   * AI_ATTITUDE_COMBATIVE,
   * AI_ATTITUDE_NEVER_MET
   *
   * @param {number} ped
   * @param {number} player
   * @return {number}
   */
export const _GET_PED_ATTITUDE = '0x7cc2186c32d3540a';
/**
   * _GET_PED_BLACKBOARD_BOOL
   * Can be used to get a peds foliage active status: variableName = FoliageActive
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {boolean}
   */
export const _GET_PED_BLACKBOARD_BOOL = '0x498f2e77982d6945';
/**
   * _GET_PED_BLACKBOARD_FLOAT
   * Can be used to get a peds foliage raw height: variableName = FoliageHeight
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {number}
   */
export const _GET_PED_BLACKBOARD_FLOAT = '0x56e58d4d118fb45e';
/**
   * _GET_PED_BLACKBOARD_HASH
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {number}
   */
export const _GET_PED_BLACKBOARD_HASH = '0xbf5e791bbbf90a3c';
/**
   * _GET_PED_BRAWLING_STYLE
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_BRAWLING_STYLE = '0xec6b59be445fec51';
/**
   * _GET_PED_CAN_BE_INCAPACITATED_THIS_FRAME
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _GET_PED_CAN_BE_INCAPACITATED_THIS_FRAME = '0x7a4e00364b5d727b';
/**
   * _GET_PED_COMBAT_ATTRIBUTE
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @return {boolean}
   */
export const _GET_PED_COMBAT_ATTRIBUTE = '0xcc2b20596e29e4e3';
/**
   * _GET_PED_COMPONENT_CATEGORY_BY_INDEX
   * Returns category hash that each ped component has. Hash examples: MASKS, HATS, HEADS, HORSE_MANES
   *
   * @param {number} ped
   * @param {number} index
   * @return {number}
   */
export const _GET_PED_COMPONENT_CATEGORY_BY_INDEX = '0xccb97b51893c662f';
/**
   * _GET_PED_DAMAGED
   * Returns true if _GET_PED_DAMAGE_CLEANLINESS was ever lower than 2
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _GET_PED_DAMAGED = '0x6cfc373008a1edaf';
/**
   * _GET_PED_DAMAGE_CLEANLINESS
   * enum ePedDamageCleanliness
   * {
   *   PED_DAMAGE_CLEANLINESS_POOR,
   *   PED_DAMAGE_CLEANLINESS_GOOD,
   *   PED_DAMAGE_CLEANLINESS_PERFECT
   * };
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_DAMAGE_CLEANLINESS = '0x88effed5fe8b0b4a';
/**
   * _GET_PED_DEFENSIVE_VOLUME
   *
   * @param {number} ped
   * @param {any} p1
   * @return {number}
   */
export const _GET_PED_DEFENSIVE_VOLUME = '0xef2e6f870783369b';
/**
   * _GET_PED_DRUNKNESS
   * Returns ped drunk level
   * _H* or _I*
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_DRUNKNESS = '0x6fb76442469abd68';
/**
   * _GET_PED_GRAPPLER
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_GRAPPLER = '0xd0b7aeb56229d317';
/**
   * _GET_PED_GRAPPLE_FLAG
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_GRAPPLE_FLAG = '0xf3c873ed0c595109';
/**
   * _GET_PED_GRAPPLE_STYLE
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_GRAPPLE_STYLE = '0x753b15ad0fd6f3e3';
/**
   * _GET_PED_HEIGHT
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_HEIGHT = '0x1d491ccf7211fb74';
/**
   * _GET_PED_ID_RANGE
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_ID_RANGE = '0x31167ed4324b758d';
/**
   * _GET_PED_INCAPACITATION_HEALTH
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_INCAPACITATION_HEALTH = '0x89bfdf6d53145545';
/**
   * _GET_PED_INTERACTION_PERSONALITY
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_INTERACTION_PERSONALITY = '0xd7ad3c7ebaf88c92';
/**
   * _GET_PED_LASSO_HOGTIE_FLAG
   * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Lasso%20Hogtie%20Flags
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/LASSO_HOGTIE_FLAG
   *
   * @param {number} ped
   * @param {number} flagId
   * @return {boolean}
   */
export const _GET_PED_LASSO_HOGTIE_FLAG = '0x2c76fa0e01681f8d';
/**
   * _GET_PED_LAST_DROPPED_HAT
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_LAST_DROPPED_HAT = '0x1f714e7a9dadfc42';
/**
   * _GET_PED_LOD_MULTIPLIER
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_LOD_MULTIPLIER = '0x1b710e6f4ab69341';
/**
   * _GET_PED_MAX_STAMINA
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_MAX_STAMINA = '0xcb42afe2b613ee55';
/**
   * _GET_PED_MELEE_ACTION_PHASE
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_MELEE_ACTION_PHASE = '0x6127f25ed21c533c';
/**
   * _GET_PED_META_OUTFIT_HASH
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_META_OUTFIT_HASH = '0x30569f348d126a5a';
/**
   * _GET_PED_MODEL_SIZE_FROM_HASH
   * PS_SMALL = 0,
   * PS_MEDIUM,
   * PS_MEDIUM_LARGE,
   * PS_LARGE,
   * PS_EXTRA_LARGE
   *
   * @param {number} modelHash
   * @return {number}
   */
export const _GET_PED_MODEL_SIZE_FROM_HASH = '0xa65aa1ace81e5a77';
/**
   * _GET_PED_MOTIVATION
   * If targetPed is set to 0 the ped motivationState affects everyone
   *
   * @param {number} ped
   * @param {number} motivationState
   * @param {number} targetPed
   * @return {number}
   */
export const _GET_PED_MOTIVATION = '0x42688e94e96fd9b4';
/**
   * _GET_PED_QUALITY
   * Returns Ped Quality to be used to calculate Skinning Quality
   * 
   * enum ePedQuality
   * {
   *   PQ_INVALID = -1,
   *   PQ_LOW,
   *   PQ_MEDIUM,
   *   PQ_HIGH,
   *   PQ_MAX
   * };
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_QUALITY = '0x7bcc6087d130312a';
/**
   * _GET_PED_REGISTER_PROP
   * Gets a registered/attached prop entity for a particular ped. Second parameter will detach the prop entity from the ped if true. Props primarily appear to come from scenarios, such as a broom or hay bale.
   * 
   * Known props: https://pastebin.com/ap2NEJqB
   *
   * @param {number} ped
   * @param {string | number} propName
   * @param {boolean} detachProp
   * @return {number}
   */
export const _GET_PED_REGISTER_PROP = '0x4d0d2e3d8bc000eb';
/**
   * _GET_PED_REMAINING_REVIVAL_TIME
   * normalized / non normalized
   * 0.0        / 1000.0         STARTED IN WRITHE STAGE
   * 1.0        / 0.0            END OF WRITHE, DEAD
   * -1.0                        DEAD
   * 
   * Returns some value from AI task 562 (unknown).
   *
   * @param {number} ped
   * @param {boolean} normalized
   * @return {number}
   */
export const _GET_PED_REMAINING_REVIVAL_TIME = '0xebe89623eb861271';
/**
   * _GET_PED_STAMINA
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_STAMINA = '0x775a1ca7893aa8b5';
/**
   * _GET_PED_STAMINA_NORMALIZED
   * Returns stamina normalizedValue / normalizedUnlockedMax
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_STAMINA_NORMALIZED = '0x22f2a386d43048a9';
/**
   * _GET_PED_TRANQUILIZER
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_TRANQUILIZER = '0x65c75fdccac86464';
/**
   * _GET_PELT_FROM_HORSE
   * Returns peltId
   *
   * @param {number} horse
   * @param {number} index
   * @return {number}
   */
export const _GET_PELT_FROM_HORSE = '0x0ceeb6f4780b1f2f';
/**
   * _GET_PLAYER_CURRENT_ANIMAL_DAMAGE_MODIFIER
   * Returns animal skin quality modifier
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_CURRENT_ANIMAL_DAMAGE_MODIFIER = '0xee2d5c819a65bf26';
/**
   * _GET_PLAYER_PED_WATER_DEPTH
   * Returns how deep the water is below the ped (if in water)
   * -1.0f = Not in water
   * 10.0f = Max water depth
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PLAYER_PED_WATER_DEPTH = '0x2942457417a5fd24';
/**
   * _GET_RIDER_OF_MOUNT
   *
   * @param {number} mount
   * @param {boolean} p1
   * @return {number}
   */
export const _GET_RIDER_OF_MOUNT = '0xb676efda03dada52';
/**
   * _GET_SHOP_ITEM_BASE_LAYERS
   *
   * @param {number} shopItem
   * @param {any} p1
   * @param {number} ped
   * @param {number} metapedType
   * @param {boolean} p4
   * @return {[boolean, number, number, number, number, number, number, number, number]}
   */
export const _GET_SHOP_ITEM_BASE_LAYERS = '0x63342c50ec115ce8';
/**
   * _GET_SHOP_ITEM_COMPONENT_AT_INDEX
   *
   * @param {number} ped
   * @param {number} index
   * @param {boolean} p2
   * @param {DataView} argStruct
   * @param {DataView} argStruct2
   * @return {number}
   */
export const _GET_SHOP_ITEM_COMPONENT_AT_INDEX = '0x77ba37622e22023b';
/**
   * _GET_SHOP_ITEM_COMPONENT_CATEGORY
   *
   * @param {number} componentHash
   * @param {number} metapedType
   * @param {boolean} isMp
   * @return {number}
   */
export const _GET_SHOP_ITEM_COMPONENT_CATEGORY = '0x5ff9a878c3d115b8';
/**
   * _GET_SHOP_ITEM_HAT_COMPONENT
   *
   * @param {number} ped
   * @param {number} metapedType
   * @param {boolean} p2
   * @return {any}
   */
export const _GET_SHOP_ITEM_HAT_COMPONENT = '0x7e02e4218d916b94';
/**
   * _GET_SHOP_ITEM_NUM_WEARABLE_STATES
   * Returns the number of wearable states available for a shop item / component. p2 seems to be true in scripts.
   * 
   * For use with 0x6243635AF2F1B826 (_GET_SHOP_ITEM_AVAILABLE_WEARABLE_STATE_BY_INDEX)
   *
   * @param {number} componentHash
   * @param {boolean} isMpFemale
   * @param {boolean} p2
   * @return {number}
   */
export const _GET_SHOP_ITEM_NUM_WEARABLE_STATES = '0xffcc2db2d9953401';
/**
   * _GET_SHOP_ITEM_WEARABLE_STATE_BY_INDEX
   * Gets an available wearable state by index for a shop item / component - it does not retreive what the current state is. p3 seems to be true in scripts.
   * 
   * Use 0xFFCC2DB2D9953401 (_GET_SHOP_ITEM_NUM_WEARABLE_STATES) to get the number of available wearable states
   *
   * @param {number} componentHash
   * @param {number} wearableStateIndex
   * @param {boolean} isMpFemale
   * @param {boolean} p3
   * @return {number}
   */
export const _GET_SHOP_ITEM_WEARABLE_STATE_BY_INDEX = '0x6243635af2f1b826';
/**
   * _GET_STAMINA_DEPLETION_MULTIPLIER
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_STAMINA_DEPLETION_MULTIPLIER = '0x825f6dd559a0895b';
/**
   * _GET_STAMINA_RECHARGE_MULTIPLIER
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_STAMINA_RECHARGE_MULTIPLIER = '0xe7687eb2f634abf0';
/**
   * _GET_TOTAL_PED_DAMAGE_FROM_AI
   * _GET_WA*
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_TOTAL_PED_DAMAGE_FROM_AI = '0x92c8eaca29f6bed6';
/**
   * _GET_TRANSPORT_PED_IS_SEATED_ON
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_TRANSPORT_PED_IS_SEATED_ON = '0x849bd6c6314793d0';
/**
   * _GET_VEHICLE_DRAFT_HORSE_IS_ATTACHED_TO
   *
   * @param {number} horse
   * @return {number}
   */
export const _GET_VEHICLE_DRAFT_HORSE_IS_ATTACHED_TO = '0xe4770da1b8ff4fd1';
/**
   * _GIVE_PED_HASH_COMMAND
   * Ped Command Hash are special commands, that can be activated to change conditional anim variations or trigger transitions between conditional anims.
   * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
   *
   * @param {number} ped
   * @param {number} commandHash
   * @param {number} activationDuration
   * @return {void}
   */
export const _GIVE_PED_HASH_COMMAND = '0xd65fdc686a031c83';
/**
   * _GIVE_PED_SCENARIO_PROP
   *
   * @param {number} ped
   * @param {number} object
   * @param {string | number} conditionalAnim
   * @param {string | number} p3
   * @param {string | number} p4
   * @param {boolean} p5
   * @return {boolean}
   */
export const _GIVE_PED_SCENARIO_PROP = '0x3bbdd6143ff16f98';
/**
   * _GIVE_PED_SCENARIO_PROP_DYNAMIC
   * Only used in SP R* Script rcm_jack2
   *
   * @param {number} ped
   * @param {number} object
   * @param {string | number} p2
   * @param {string | number} p3
   * @param {boolean} p4
   * @return {boolean}
   */
export const _GIVE_PED_SCENARIO_PROP_DYNAMIC = '0xa0774e388ce4a679';
/**
   * _HAS_META_PED_ASSET_LOADED
   *
   * @param {number} requestId
   * @return {boolean}
   */
export const _HAS_META_PED_ASSET_LOADED = '0xb0b2c6d170b0e8e5';
/**
   * _HAS_META_PED_OUTFIT_LOADED
   *
   * @param {number} requestId
   * @return {boolean}
   */
export const _HAS_META_PED_OUTFIT_LOADED = '0x610438375e5d1801';
/**
   * _HAS_META_PED_REQUEST_LOADED
   *
   * @param {number} requestId
   * @return {boolean}
   */
export const _HAS_META_PED_REQUEST_LOADED = '0xc0940ac858c1e126';
/**
   * _HAS_PED_BEEN_SHOVED_RECENTLY
   *
   * @param {number} ped
   * @param {number} ms
   * @return {boolean}
   */
export const _HAS_PED_BEEN_SHOVED_RECENTLY = '0x29fce825613fefca';
/**
   * _HAS_PED_EMOTIONAL_PRESET_LOADED
   * See _REQUEST_PED_EMOTIONAL_PRESET
   *
   * @param {number} ped
   * @param {string | number} name
   * @return {boolean}
   */
export const _HAS_PED_EMOTIONAL_PRESET_LOADED = '0xde3904b22695d9f9';
/**
   * _HAS_PED_TAKEN_GORE_DAMAGE
   * limb: 3 = Left Hand, 4 = Left Arm, 6 = Right Hand, 7 = Right Arm, 9 = Left Foot, 10 = Left Leg, 12 = Right Foot, 13 = Right Leg, 37 = Head
   *
   * @param {number} ped
   * @param {number} limb
   * @return {boolean}
   */
export const _HAS_PED_TAKEN_GORE_DAMAGE = '0xba208a8d6399a3ac';
/**
   * _HORSE_AGITATE
   * _H* - _I*
   *
   * @param {number} mount
   * @param {boolean} kickOffRider
   * @return {void}
   */
export const _HORSE_AGITATE = '0xbae08f00021bffb2';
/**
   * _INCAPACITATED_REVIVE
   *
   * @param {number} ped
   * @param {number} ped2
   * @return {void}
   */
export const _INCAPACITATED_REVIVE = '0xf6262491c7704a63';
/**
   * _IS_ANIMAL_CONTROLLED_BY_A_PLAYER
   * Returns true only if it's a player ped and an animal as well.
   * _IS_ANY_* - _IS_CONTROL_*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_ANIMAL_CONTROLLED_BY_A_PLAYER = '0x0e2f43516f998269';
/**
   * _IS_ANIMAL_INTERACTION_RUNNING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_ANIMAL_INTERACTION_RUNNING = '0x7fc84e85d98f063d';
/**
   * _IS_META_PED_ASSET_VALID
   *
   * @param {number} requestId
   * @return {boolean}
   */
export const _IS_META_PED_ASSET_VALID = '0x93ffd92f05ec32fd';
/**
   * _IS_META_PED_FISH
   * Returns true if given ped is a fish.
   * _IS_ME* - _IS_MO*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_META_PED_FISH = '0x118d476a6f1a13f1';
/**
   * _IS_META_PED_OUTFIT_EQUIPPED
   * Used in script function HORSE_IS_META_PED_OUTFIT_SADDLE_EQUIPPED
   *
   * @param {number} ped
   * @param {number} outfit
   * @return {boolean}
   */
export const _IS_META_PED_OUTFIT_EQUIPPED = '0x98082246107a6acf';
/**
   * _IS_META_PED_OUTFIT_REQUEST_VALID
   *
   * @param {number} requestId
   * @return {boolean}
   */
export const _IS_META_PED_OUTFIT_REQUEST_VALID = '0xb25e57fc8e37114d';
/**
   * _IS_META_PED_REQUEST_VALID
   *
   * @param {number} requestId
   * @return {boolean}
   */
export const _IS_META_PED_REQUEST_VALID = '0x43e4da469541a9c9';
/**
   * _IS_META_PED_USING_COMPONENT_CATEGORY
   * checks if a ped is using a component category
   * see component category hashes here https://raw.githubusercontent.com/femga/rdr3_discoveries/refs/heads/master/clothes/cloth_hash_names.lua
   * Old name: _IS_META_PED_USING_COMPONENT
   *
   * @param {number} ped
   * @param {number} componentCategory
   * @return {boolean}
   */
export const _IS_META_PED_USING_COMPONENT_CATEGORY = '0xfb4891bd7578cdc1';
/**
   * _IS_MOUNT_SEAT_FREE
   *
   * @param {number} mount
   * @param {number} seat
   * @return {boolean}
   */
export const _IS_MOUNT_SEAT_FREE = '0xaab0fe202e9fc9f0';
/**
   * _IS_PED_ACTION_DISABLE_FLAG_ENABLED
   *
   * @param {number} ped
   * @param {number} actionDisableFlag
   * @return {boolean}
   */
export const _IS_PED_ACTION_DISABLE_FLAG_ENABLED = '0xb346c85d49cc998e';
/**
   * _IS_PED_CHILD
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_CHILD = '0x137772000daf42c5';
/**
   * _IS_PED_CLIMBING_LADDER
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_CLIMBING_LADDER = '0x59643424b68d52b5';
/**
   * _IS_PED_COWERING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_COWERING = '0xb086c8c0f5701d14';
/**
   * _IS_PED_DOING_SCENARIO_TRANSITION
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_DOING_SCENARIO_TRANSITION = '0xc488b8c0e52560d8';
/**
   * _IS_PED_DRAGGING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_DRAGGING = '0x226cf9b159e38f42';
/**
   * _IS_PED_DRUNK
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_DRUNK = '0x50f124e6ef188b22';
/**
   * IS_PED_GROUP_LEADER
   *
   * @param {number} ped
   * @param {number} groupId
   * @return {boolean}
   */
export const IS_PED_GROUP_LEADER = '0x878b68960c1c2a35';
/**
   * _IS_PED_INTIMIDATED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_INTIMIDATED = '0x57779b55b83e2bea';
/**
   * _IS_PED_INVESTIGATING
   * _IS_PED_IN*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_INVESTIGATING = '0x7583a9d35248b83f';
/**
   * _IS_PED_IN_POINT
   * If returned true: There are enemy peds near friendly turn in ped. Going to aggro.
   * If returned false: Moving back to idle as there aren't any remaining enemy peds near ped
   * _IS_PED_IN_*
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {boolean} p5
   * @return {boolean}
   */
export const _IS_PED_IN_POINT = '0x078076ab50fb117f';
/**
   * _IS_PED_LEADING_ANY_GROUP
   * _IS_PED_L* - _IS_PED_M*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_LEADING_ANY_GROUP = '0x917760cfe7a0e0f1';
/**
   * _IS_PED_MODEL_SUPPRESSED
   *
   * @param {number} model
   * @return {boolean}
   */
export const _IS_PED_MODEL_SUPPRESSED = '0xaa9f048dcf69b6dc';
/**
   * _IS_PED_QUEUED_FOR_DELETION
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_QUEUED_FOR_DELETION = '0x8d9bfce3352de47f';
/**
   * _IS_PED_SLIDING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_SLIDING = '0xd6740e14e4cefc0b';
/**
   * _IS_PED_TARGET_ACTION_DISABLE_FLAG_ENABLED
   *
   * @param {number} ped
   * @param {number} actionDisableFlag
   * @return {boolean}
   */
export const _IS_PED_TARGET_ACTION_DISABLE_FLAG_ENABLED = '0x02aa2096fe00f3e1';
/**
   * _IS_PED_USING_ACTION_MODE_2
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_USING_ACTION_MODE_2 = '0xebb208d6ae712c03';
/**
   * _IS_PED_VISIBILITY_TRACKED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_VISIBILITY_TRACKED = '0x5102307ce88798eb';
/**
   * _IS_SCENARIO_BLOCKING_AREA_VALID
   *
   * @param {any} p0
   * @return {boolean}
   */
export const _IS_SCENARIO_BLOCKING_AREA_VALID = '0x91a5f9cbebb9d936';
/**
   * _IS_TARGET
   *
   * @param {number} ped
   * @param {number} targetPed
   * @return {boolean}
   */
export const _IS_TARGET = '0x6e5cbcb3941d7d08';
/**
   * _IS_TEXTURE_VALID
   *
   * @param {number} textureId
   * @return {boolean}
   */
export const _IS_TEXTURE_VALID = '0x31dc8d3f216d8509';
/**
   * _IS_THIS_MODEL_A_HORSE
   *
   * @param {number} model
   * @return {boolean}
   */
export const _IS_THIS_MODEL_A_HORSE = '0x772a1969f649e902';
/**
   * _IS_TRACKED_PED_VISIBILITY_PERCENTAGE_NOT_LESS_THAN
   *
   * @param {number} ped
   * @param {number} percent
   * @return {boolean}
   */
export const _IS_TRACKED_PED_VISIBILITY_PERCENTAGE_NOT_LESS_THAN = '0x164cecc59e70df86';
/**
   * _IS_USING_SLIPSTREAM
   * _IS_TRACKED_* - IS_V*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_USING_SLIPSTREAM = '0xaf61b3cd8c3b82c3';
/**
   * _PED_CLEAR_LOCO_MOTION
   *
   * @param {number} ped
   * @return {void}
   */
export const _PED_CLEAR_LOCO_MOTION = '0x935cf6e42baf7f4d';
/**
   * _PED_DUELING_DID_PLAYER_HEADSHOT_OPPONENT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _PED_DUELING_DID_PLAYER_HEADSHOT_OPPONENT = '0xbd6b242b8bd5543a';
/**
   * _PED_EMOTIONAL_PRESET_LOCO_MOTION
   * target: 0 affects everyone
   * duration: -1 indefinite
   * flag: always 4 in R* Scripts
   *
   * @param {number} ped
   * @param {string | number} presetName
   * @param {number} targetPed
   * @param {number} duration
   * @param {number} flag
   * @return {void}
   */
export const _PED_EMOTIONAL_PRESET_LOCO_MOTION = '0xaab050da48b57978';
/**
   * _PED_WAS_KILLED_BY_HEADSHOT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _PED_WAS_KILLED_BY_HEADSHOT = '0x06fa94c835787c64';
/**
   * _REFRESH_LOOT_STATE_FOR_PED
   * Returns loot state
   * enum eLootState
   * {
   *   LAP_NONE,
   *   LAP_RESUMING,
   *   LAP_GETTING_ON_FOOT,
   *   LAP_DISTANT_NAV,
   *   LAP_CHOOSING_ACTION,
   *   LAP_APPROACHING,
   *   LAP_ENTERING,
   *   LAP_LOOTING,
   *   LAP_EXITING
   * };
   * 
   * _POSSE_* - _REGISTER_HATED*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p3
   * @param {number} p4
   * @return {[number, Ped]}
   */
export const _REFRESH_LOOT_STATE_FOR_PED = '0x5463c962bc7777c3';
/**
   * _REFRESH_META_PED_SHOP_ITEMS
   * p1 is always 1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _REFRESH_META_PED_SHOP_ITEMS = '0x59bd177a1a48600a';
/**
   * _REGISTER_HATED_TARGETS_IN_AREA
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {void}
   */
export const _REGISTER_HATED_TARGETS_IN_AREA = '0xd8736efda38edc5c';
/**
   * _RELEASE_META_PED_ASSET_REQUEST
   *
   * @param {number} requestId
   * @return {void}
   */
export const _RELEASE_META_PED_ASSET_REQUEST = '0x13e7320c762f0477';
/**
   * _RELEASE_META_PED_OUTFIT_REQUEST
   *
   * @param {number} requestId
   * @return {void}
   */
export const _RELEASE_META_PED_OUTFIT_REQUEST = '0x4592b8b9b0ef5f48';
/**
   * _RELEASE_META_PED_REQUEST
   *
   * @param {number} requestId
   * @return {void}
   */
export const _RELEASE_META_PED_REQUEST = '0x3972f78a78b5d9df';
/**
   * _RELEASE_TEXTURE
   * Removes a texture created by 0xC5E7204F322E49EB.
   *
   * @param {number} textureId
   * @return {void}
   */
export const _RELEASE_TEXTURE = '0x6befaa907b076859';
/**
   * _REMOVE_GRAVITY_WELL
   * Removes gravity well by handle returned from 0x4F5EBE70081E5A20
   *
   * @param {number} handle
   * @return {void}
   */
export const _REMOVE_GRAVITY_WELL = '0x87247bc60b60bed8';
/**
   * _REMOVE_MOTION_TYPE_ASSET
   *
   * @param {number} nameHash
   * @param {number} ped
   * @return {void}
   */
export const _REMOVE_MOTION_TYPE_ASSET = '0xde7b2b4144906cdf';
/**
   * _REMOVE_PED_BLACKBOARD_BOOL
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {void}
   */
export const _REMOVE_PED_BLACKBOARD_BOOL = '0xa6f67bec53379a32';
/**
   * _REMOVE_PED_BLACKBOARD_FLOAT
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {void}
   */
export const _REMOVE_PED_BLACKBOARD_FLOAT = '0x411189e51b8020ba';
/**
   * _REMOVE_PED_BLACKBOARD_HASH
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {void}
   */
export const _REMOVE_PED_BLACKBOARD_HASH = '0x0e17378642156790';
/**
   * _REMOVE_PED_BLACKBOARD_INT
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @return {void}
   */
export const _REMOVE_PED_BLACKBOARD_INT = '0x81b75428a7813e67';
/**
   * _REMOVE_PED_EMOTIONAL_PRESET
   * See _REQUEST_PED_EMOTIONAL_PRESET
   *
   * @param {number} ped
   * @param {string | number} name
   * @return {void}
   */
export const _REMOVE_PED_EMOTIONAL_PRESET = '0xfc3bab1801a8255a';
/**
   * _REMOVE_PED_FROM_MOUNT
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _REMOVE_PED_FROM_MOUNT = '0x5337b721c51883a9';
/**
   * _REMOVE_PED_OVERLAY
   *
   * @param {number} textureId
   * @param {number} overlayId
   * @return {void}
   */
export const _REMOVE_PED_OVERLAY = '0x96c349de04c49011';
/**
   * _REMOVE_PED_PROP
   *
   * @param {number} ped
   * @param {string | number} propName
   * @return {void}
   */
export const _REMOVE_PED_PROP = '0x3a50753042b6891b';
/**
   * _REMOVE_PED_STAY_OUT_VOLUME
   *
   * @param {number} ped
   * @param {number} volume
   * @return {boolean}
   */
export const _REMOVE_PED_STAY_OUT_VOLUME = '0x0cab404cd2db41f5';
/**
   * _REMOVE_PED_SUBSCRIBE_TO_LEGENDARY_BLIPS
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _REMOVE_PED_SUBSCRIBE_TO_LEGENDARY_BLIPS = '0x011a42fd923d41ca';
/**
   * _REMOVE_SHOP_ITEM_FROM_PED
   * Directly removes a shop item component from a ped
   * Params: p2 and p3 are always 0
   *
   * @param {number} ped
   * @param {number} componentHash
   * @param {number} p2
   * @param {boolean} p3
   * @return {void}
   */
export const _REMOVE_SHOP_ITEM_FROM_PED = '0x0d7ffa1b2f69ed82';
/**
   * _REMOVE_TARGET
   *
   * @param {number} ped
   * @param {number} targetPed
   * @return {void}
   */
export const _REMOVE_TARGET = '0x4707e9c23d8ca3fe';
/**
   * _REQUEST_META_PED
   * Returns requestId
   * Params: p1 = 1 in R* Scripts (Used in SP only)
   *
   * @param {number} model
   * @param {number} p1
   * @return {number}
   */
export const _REQUEST_META_PED = '0xf97c34c33487d569';
/**
   * _REQUEST_META_PED_ASSET_BUNDLE
   * Returns requestId
   * Params: p1 = 1 in R* Scripts
   *
   * @param {number} asset
   * @param {number} p1
   * @return {number}
   */
export const _REQUEST_META_PED_ASSET_BUNDLE = '0x91fe941f9fcfb702';
/**
   * _REQUEST_META_PED_COMPONENT
   *
   * @param {number} metaPedType
   * @param {any} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {any}
   */
export const _REQUEST_META_PED_COMPONENT = '0xf6d9e1f3560cbf8e';
/**
   * _REQUEST_META_PED_OUTFIT
   * https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
   * Returns requestId, to be used with 0x74F512E29CB717E2
   *
   * @param {number} model
   * @param {number} outfit
   * @return {number}
   */
export const _REQUEST_META_PED_OUTFIT = '0x13154a76ce0cf9ab';
/**
   * _REQUEST_MOTION_TYPE_ASSET
   *
   * @param {number} nameHash
   * @param {number} ped
   * @return {void}
   */
export const _REQUEST_MOTION_TYPE_ASSET = '0xf7ea250b9a919e03';
/**
   * _REQUEST_PED_EMOTIONAL_PRESET
   * For more information, see common:/data/emotional_presets.meta
   *
   * @param {number} ped
   * @param {string | number} name
   * @return {void}
   */
export const _REQUEST_PED_EMOTIONAL_PRESET = '0x5c3c55eaad19915f';
/**
   * _REQUEST_PED_FACIAL_MOOD_THIS_FRAME
   * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/fwFacialAnimRequest__Mood
   * Params: p2 = 6 in R* Scripts
   *
   * @param {number} ped
   * @param {number} mood
   * @param {number} p2
   * @return {void}
   */
export const _REQUEST_PED_FACIAL_MOOD_THIS_FRAME = '0x8b3b71c80a29a4bb';
/**
   * _REQUEST_PED_FOR_SCENARIO_TYPE
   *
   * @param {number} ped
   * @param {number} object
   * @param {string | number} p2
   * @param {number} scenarioType
   * @param {string | number} p4
   * @param {boolean} p5
   * @return {any}
   */
export const _REQUEST_PED_FOR_SCENARIO_TYPE = '0xbded916a9f9b0604';
/**
   * _REQUEST_PED_GETUP_ANIMATION
   * Known get up animation types: REAR, FRONT
   *
   * @param {number} ped
   * @param {string | number} getUpType
   * @return {void}
   */
export const _REQUEST_PED_GETUP_ANIMATION = '0xeaa8242c8479c27d';
/**
   * _REQUEST_PROP_SCENARIO_PED
   *
   * @param {number} ped
   * @param {number} object
   * @param {string | number} p2
   * @param {string | number} p3
   * @param {string | number} p4
   * @param {boolean} p5
   * @return {any}
   */
export const _REQUEST_PROP_SCENARIO_PED = '0xbec65c6049b3219d';
/**
   * _REQUEST_TEXTURE
   * Creates a texture override data for ped and returns it's index.
   * So you can replace any texture of any ped's component.
   * Also, you can add overlays on it, such as aging, lipstick and more.
   * Textures can be reused by multiple peds at once.
   * You can keep only 32 textures at once(including other peds).
   * 
   * https://github.com/femga/rdr3_discoveries/blob/master/clothes/change_overlays_script.lua
   * materialHash: https://github.com/femga/rdr3_discoveries/blob/master/clothes/cloth_drawable_albedo_normal_material_TEMPORARY.lua
   *
   * @param {number} albedoHash
   * @param {number} normalHash
   * @param {number} materialHash
   * @return {number}
   */
export const _REQUEST_TEXTURE = '0xc5e7204f322e49eb';
/**
   * _RESERVE_AMBIENT_PEDS
   *
   * @param {number} numPeds
   * @return {void}
   */
export const _RESERVE_AMBIENT_PEDS = '0xed9582b3da8f02b4';
/**
   * _RESERVE_AMBIENT_PEDS_TOTAL
   *
   * @param {number} numPeds
   * @return {void}
   */
export const _RESERVE_AMBIENT_PEDS_TOTAL = '0xf008e0ba1fe1d644';
/**
   * _RESET_PED_COMPONENTS
   *
   * @param {number} ped
   * @return {void}
   */
export const _RESET_PED_COMPONENTS = '0x0bfa1bd465cdfefd';
/**
   * _RESET_PED_INCAPACITATION_BLEED_OUT_DURATION
   *
   * @param {number} ped
   * @return {void}
   */
export const _RESET_PED_INCAPACITATION_BLEED_OUT_DURATION = '0x4b9668db91dc39b8';
/**
   * _RESET_PED_LADDER_MOVEMENT_SPEED_MODIFIER
   *
   * @param {number} ped
   * @return {void}
   */
export const _RESET_PED_LADDER_MOVEMENT_SPEED_MODIFIER = '0x801917e7d7bce418';
/**
   * _RESET_PED_TEXTURE
   * Removes every texture layer but the base layer
   * Clearing texture's data: setting params to default values, but keep overlays.
   *
   * @param {number} textureId
   * @return {void}
   */
export const _RESET_PED_TEXTURE = '0x8472a1789478f82f';
/**
   * _RESTORE_PED_STAMINA
   * 0.0 <= stamina <= 100.0
   *
   * @param {number} ped
   * @param {number} stamina
   * @return {void}
   */
export const _RESTORE_PED_STAMINA = '0x675680d089bfa21f';
/**
   * _SET_ACCURACY_AGAINST_LOCAL_PLAYER_MODIFIER
   *
   * @param {number} ped
   * @param {number} modifier
   * @return {void}
   */
export const _SET_ACCURACY_AGAINST_LOCAL_PLAYER_MODIFIER = '0xc2266aa617668ad3';
/**
   * _SET_AMBIENT_ANIMAL_DENSITY_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_AMBIENT_ANIMAL_DENSITY_MULTIPLIER_THIS_FRAME = '0xc0258742b034dfaf';
/**
   * _SET_AMBIENT_HUMAN_DENSITY_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_AMBIENT_HUMAN_DENSITY_MULTIPLIER_THIS_FRAME = '0xba0980b5c0a11924';
/**
   * _SET_AMBIENT_PED_DENSITY_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_AMBIENT_PED_DENSITY_MULTIPLIER_THIS_FRAME = '0xab0d553fe20a6e25';
/**
   * _SET_CHAR_EXPRESSION
   * Sets MetaPedExpression at index specified. Morphs components, such as changing body size or facial features.
   * 
   * Note: You have to update the ped's variation (using 0xCC8CA3E88256E58F) after calling this native
   * 
   * index = MetaPedExpression IDs
   * List of face features: https://pastebin.com/9jb88FXW
   * Full list of MetaPedExpressions: https://pastebin.com/Ld76cAn7
   * value: -1.0 to 1.0 (values beyond this likely won't sync to other clients)
   * 
   * This native also allows you to change a horse's gender.
   * 
   * Old name: _SET_PED_FACE_FEATURE
   *
   * @param {number} ped
   * @param {number} index
   * @param {number} value
   * @return {void}
   */
export const _SET_CHAR_EXPRESSION = '0x5653ab26c82938cf';
/**
   * _SET_CURRENT_DEFENSE_AGAINST_PLAYERS_MODIFIER
   *
   * @param {number} horse
   * @param {number} modifier
   * @return {void}
   */
export const _SET_CURRENT_DEFENSE_AGAINST_PLAYERS_MODIFIER = '0x069eddf1fd4deb0a';
/**
   * _SET_DEFENSE_MODIFIER_FOR_PED
   *
   * @param {number} ped
   * @param {number} modifier
   * @return {void}
   */
export const _SET_DEFENSE_MODIFIER_FOR_PED = '0x9b6808ec46be849b';
/**
   * _SET_FORMATION_AUTO_ASSIGN_POSITION
   *
   * @param {number} groupId
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_FORMATION_AUTO_ASSIGN_POSITION = '0x478f6b9920446ce2';
/**
   * _SET_HEALTH_RECHARGE_MULTIPLIER
   *
   * @param {number} ped
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_HEALTH_RECHARGE_MULTIPLIER = '0xde1b1907a83a1550';
/**
   * _SET_INTERACTION_LOCKON_FLAG
   *
   * @param {number} ped
   * @param {number} player
   * @param {number} flag
   * @param {boolean} enable
   * @return {void}
   */
export const _SET_INTERACTION_LOCKON_FLAG = '0xfeca2081f61ed2cd';
/**
   * _SET_META_PED_TAG
   * Use to apply metaped player components
   * Replaces asset, alternatively you can remove assets using REMOVE_TAG_FROM_META_PED
   *
   * @param {number} ped
   * @param {number} drawable
   * @param {number} albedo
   * @param {number} normal
   * @param {number} material
   * @param {number} palette
   * @param {number} tint0
   * @param {number} tint1
   * @param {number} tint2
   * @return {void}
   */
export const _SET_META_PED_TAG = '0xbc6df00d7a4a6819';
/**
   * _SET_META_PED_WEARINESS
   * Sets ped eye redness, weariness: 0.f to 1.f
   *
   * @param {number} ped
   * @param {number} weariness
   * @return {void}
   */
export const _SET_META_PED_WEARINESS = '0x314c5465195f3b30';
/**
   * _SET_MIN_PED_HEALTH_THRESHOLD
   *
   * @param {number} ped
   * @param {number} healthAmount
   * @return {void}
   */
export const _SET_MIN_PED_HEALTH_THRESHOLD = '0x7883aa809df43d98';
/**
   * _SET_MOUNT_BONDING_LEVEL
   *
   * @param {number} ped
   * @param {number} bondingLevel
   * @return {void}
   */
export const _SET_MOUNT_BONDING_LEVEL = '0xa69899995997a63b';
/**
   * _SET_MOUNT_SECURITY_ENABLED
   * Note: this native was added in build 1232.40
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_MOUNT_SECURITY_ENABLED = '0x11e6b9629c46d6ec';
/**
   * _SET_PED_ACTION_DISABLE_FLAG
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ACTION_DISABLE_FLAGS
   *
   * @param {number} ped
   * @param {number} actionDisableFlag
   * @return {void}
   */
export const _SET_PED_ACTION_DISABLE_FLAG = '0xb8de69d9473b7593';
/**
   * _SET_PED_ACTIVATE_WOUND_EFFECT
   * bloodFountainPressure: visible effect from 0.0 till 20.0
   * yaw: visible effect from -3.0 till 3.0
   * bloodFountainDirection: 1.0 left side, -1.0 right side
   * bloodFountainPulse: from 0.1 (low) till 1.0 (fast)
   * make blood fountain from your stomach: _SET_PED_ACTIVATE_WOUND_EFFECT(ped, unk, 2, 14411, 0.0, 0.1, 0.0, 0.0, 3.0, -1.0, 1.0)
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} boneId
   * @param {number} moveWoundLeftRight
   * @param {number} bloodFountainPressure
   * @param {number} yaw
   * @param {number} bloodFountainDirection
   * @param {number} bloodFountainPulse
   * @param {number} p8
   * @param {number} p9
   * @return {void}
   */
export const _SET_PED_ACTIVATE_WOUND_EFFECT = '0xffd54d9fe71b966a';
/**
   * _SET_PED_ACTIVE_PLAYER_TYPE
   * Params: hash - ARTHUR or JOHN
   * _SET_PED_(A-D)*
   *
   * @param {number} ped
   * @param {number} playerType
   * @return {void}
   */
export const _SET_PED_ACTIVE_PLAYER_TYPE = '0xb285ad0ec870b2df';
/**
   * _SET_PED_ANIMAL_DETECTION_MODIFIER
   *
   * @param {number} ped
   * @param {number} modifier
   * @return {void}
   */
export const _SET_PED_ANIMAL_DETECTION_MODIFIER = '0x43ca928e892cfdb8';
/**
   * _SET_PED_BEAT_MULTIPLIER
   * NET_FETCH_CLIENT_UPDATE_PED_FIGHT_PROFICIENCY: Changing parry multiplier for ped
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _SET_PED_BEAT_MULTIPLIER = '0x6dbf2d78709ad70b';
/**
   * _SET_PED_BLACKBOARD_BOOL
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @param {boolean} value
   * @param {number} removeTimer
   * @return {void}
   */
export const _SET_PED_BLACKBOARD_BOOL = '0xcb9401f918cb0f75';
/**
   * _SET_PED_BLACKBOARD_FLOAT
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @param {number} value
   * @param {number} removeTimer
   * @return {void}
   */
export const _SET_PED_BLACKBOARD_FLOAT = '0x437c08db4febe2bd';
/**
   * _SET_PED_BLACKBOARD_HASH
   * p1:
   * BodyPartChained
   * OverloadMostInjuredBodyPart
   * 
   * p2:
   * LeftLeg
   * Legs
   * RightArm
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @param {string | number} value
   * @param {number} removeTimer
   * @return {void}
   */
export const _SET_PED_BLACKBOARD_HASH = '0xa762c9d6cf165e0d';
/**
   * _SET_PED_BLACKBOARD_INT
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/BLACKBOARDS
   * Blackboard natives allow you to apply and check certain data to/for peds.
   * Blackboard bools, floats and strings are subdivided into 6 sections: "all", "animation", "any", "code", "global" and "script"
   * Most changes are only visible for "script" blackboards, some "script" blackboards change ped motions
   * "removeTimer" is self-removal timer, can be "-1" so your data will not be removed by the game (forever); 100 = 1 second
   *
   * @param {number} ped
   * @param {string | number} variableName
   * @param {number} value
   * @param {number} removeTimer
   * @return {void}
   */
export const _SET_PED_BLACKBOARD_INT = '0x5f53010c4c3f6baf';
/**
   * _SET_PED_BLEEDOUT_PROFILE
   * Bleedout profiles:
   * Animal_FastBleedout
   * Animal_Generic
   * Human_FastBleedout
   * Human_Generic
   * Human_Mission
   * 
   * For more information, see common/data/ai/peddamageinfo.meta
   *
   * @param {number} ped
   * @param {number} bleedoutProfile
   * @return {void}
   */
export const _SET_PED_BLEEDOUT_PROFILE = '0x66c047719b0e80e1';
/**
   * _SET_PED_BRAWLING_STYLE
   * brawlingStyle:
   * enum eBrawlingStyle : Hash
   * {
   *   BS_AI = 0x802C604D,
   *   BS_AI_BARBRAWL = 0x4FF5F0C7,
   *   BS_AI_DEFENSIVE = 0xD888F2FD,
   *   BS_AI_MOONSHINE_BARBRAWL = 0xA01B433A,
   *   BS_ALLIGATOR = 0x7A5548ED,
   *   BS_ALLIGATOR_LARGE = 0x368EC7CB,
   *   BS_ALLY = 0x69C76C14,
   *   BS_ANIMAL = 0xD777C754,
   *   BS_BADGER = 0x7E7C3F53,
   *   BS_BEAR = 0x0BC66E35,
   *   BS_BEAVER = 0x4E313783,
   *   BS_BOAR = 0x176A5831,
   *   BS_BOUNTY_HUNTER = 0x3900654C,
   *   BS_BRUISER = 0x4514DB61,
   *   BS_BULL = 0x4E50C5D2,
   *   BS_COUGAR = 0x9DAA7CCB,
   *   BS_COW = 0xB0E91295,
   *   BS_COYOTE = 0xA448EB69,
   *   BS_DEER = 0xA781E6B3,
   *   BS_DOG = 0x5A4155C4,
   *   BS_ELK = 0x408697F0,
   *   BS_FEMALE = 0x6A3BB2C2,
   *   BS_FEMALE_STRONG = 0x4DAFDD84,
   *   BS_GANGUP = 0xD0CECFF2,
   *   BS_GOAT = 0x078E649F,
   *   BS_HORSE = 0xF6B775F3,
   *   BS_MICAH_FINALE = 0x1F0BB27A,
   *   BS_MOOSE = 0x968917AB,
   *   BS_MUSKRAT = 0x1EDC33AC,
   *   BS_NO_MELEE = 0x25B5F931,
   *   BS_PIG = 0x22EAD110,
   *   BS_PLAYER = 0x78BAEF07,
   *   BS_PLAYER_FINALE = 0xF9E77D2D,
   *   BS_PLAYER_MOONSHINER = 0x687BF19F,
   *   BS_PLAYER_WINTER1 = 0x3C6A802F,
   *   BS_QUICK = 0xC4CABB1B,
   *   BS_RACCOON = 0x505F8917,
   *   BS_SHEEP = 0x6827CCCF,
   *   BS_SNAKE = 0x82BEBC4B,
   *   BS_TIMID = 0x431AEF77,
   *   BS_WOLF = 0xA8F023D4
   * };
   *
   * @param {number} ped
   * @param {number} brawlingStyle
   * @return {void}
   */
export const _SET_PED_BRAWLING_STYLE = '0x8ba83cc4288cd56d';
/**
   * _SET_PED_CAN_BE_LASSOED
   * SET_PED_CAN_*
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PED_CAN_BE_LASSOED = '0xfd6943b6df77e449';
/**
   * SET_PED_CAN_BODY_RECOIL_IK
   *
   * @param {number} pedIndex
   * @param {boolean} bEnableIk
   * @return {void}
   */
export const SET_PED_CAN_BODY_RECOIL_IK = '0xee9df765990e8d1d';
/**
   * _SET_PED_COMBAT_ATTRIBUTE_HASH
   * Hashes: GUARD, COMBAT_ANIMAL, LAW, LAW_SHERIFF
   * _SET_PED_COMBAT_A* - _SET_PED_COMBAT_M*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _SET_PED_COMBAT_ATTRIBUTE_HASH = '0xbd75500141e4725c';
/**
   * _SET_PED_COMBAT_BEHAVIOUR
   *
   * @param {number} ped
   * @param {number} behaviour
   * @return {void}
   */
export const _SET_PED_COMBAT_BEHAVIOUR = '0x9238a3d970bbb0a9';
/**
   * _SET_PED_COMBAT_STYLE
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_STYLES
   * Params: p2 is usually 1, sometimes 0 or 2
   * duration in seconds, -1.0 = forever
   *
   * @param {number} ped
   * @param {number} combatStyleHash
   * @param {number} p2
   * @param {number} duration
   * @return {void}
   */
export const _SET_PED_COMBAT_STYLE = '0x8acc0506743a8a5c';
/**
   * _SET_PED_COMBAT_STYLE_MOD
   * duration in seconds, -1.0 = forever
   *
   * @param {number} ped
   * @param {number} combatStyleModHash
   * @param {number} duration
   * @return {void}
   */
export const _SET_PED_COMBAT_STYLE_MOD = '0x8b1e8e35a6e814ea';
/**
   * _SET_PED_CROUCH_MOVEMENT
   *
   * @param {number} ped
   * @param {boolean} state
   * @param {number} p2
   * @param {boolean} immediately
   * @return {void}
   */
export const _SET_PED_CROUCH_MOVEMENT = '0x7de9692c6f64cfe8';
/**
   * _SET_PED_CULL_RANGE
   * The higher the multiplier the less the engine renders culls (https://docs.unity3d.com/Manual/OcclusionCulling.html)
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _SET_PED_CULL_RANGE = '0x8ac1d721b2097b6e';
/**
   * _SET_PED_DAMAGED
   *
   * @param {number} ped
   * @param {boolean} damaged
   * @return {void}
   */
export const _SET_PED_DAMAGED = '0xdace03c65c6666db';
/**
   * _SET_PED_DAMAGE_CLEANLINESS
   * damageCleanliness: see _GET_PED_DAMAGE_CLEANLINESS
   *
   * @param {number} ped
   * @param {number} damageCleanliness
   * @return {void}
   */
export const _SET_PED_DAMAGE_CLEANLINESS = '0x7528720101a807a5';
/**
   * _SET_PED_DEFENSIVE_AREA_TO_ANGLED_AREA
   * _SET_PED_(A?)*
   *
   * @param {number} ped
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {any} p7
   * @param {boolean} p8
   * @param {boolean} p9
   * @param {number} entity
   * @param {boolean} p11
   * @return {void}
   */
export const _SET_PED_DEFENSIVE_AREA_TO_ANGLED_AREA = '0xeb2bfe5d009f0331';
/**
   * _SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_ENTITY
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} p6
   * @param {boolean} p7
   * @return {void}
   */
export const _SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_ENTITY = '0x1854217c640b39ec';
/**
   * _SET_PED_DESIRED_LOCO_FOR_MODEL
   * Seems to set the ped's loco type.
   * Values used in the scripts:
   * algie
   * angry_female
   * arthur_healthy
   * cowboy
   * cowboy_f
   * default
   * default_female
   * free_slave_01
   * free_slave_02
   * gold_panner
   * guard_lantern
   * injured_general
   * john_marston
   * lilly_millet
   * lone_prisoner
   * lost_man
   * mp_ova_hunter
   * mp_ova_hunter_female
   * murfree
   * old_female
   * primate
   * rally
   * waiter
   * war_veteran
   *
   * @param {number} ped
   * @param {string | number} locomotionArchetype
   * @return {void}
   */
export const _SET_PED_DESIRED_LOCO_FOR_MODEL = '0x923583741dc87bce';
/**
   * _SET_PED_DESIRED_LOCO_MOTION_TYPE
   * Sets peds motion type
   *
   * @param {number} ped
   * @param {string | number} locoMotionType
   * @return {void}
   */
export const _SET_PED_DESIRED_LOCO_MOTION_TYPE = '0x89f5e7adecccb49c';
/**
   * _SET_PED_DIRT_CLEANED
   * Params: ped, 0f, -1, true, true in R* MP Scripts
   * _SET_PED_DE* - _SET_PED_F*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const _SET_PED_DIRT_CLEANED = '0xe3144b932dfdff65';
/**
   * _SET_PED_DISABLE_KICK_MOVE
   * Disables being able to kick move ped.
   *
   * @param {number} ped
   * @param {boolean} disable
   * @return {void}
   */
export const _SET_PED_DISABLE_KICK_MOVE = '0xadd31a5c7a5faa73';
/**
   * _SET_PED_DRUNKNESS
   * SOBER = 0.0f, SLIGHTLY_DRUNK = 0.25f, MODERATELY_DRUNK = 0.5f, VERY_DRUNK = 1.0f
   *
   * @param {number} ped
   * @param {boolean} enabled
   * @param {number} drunknessLevel
   * @return {void}
   */
export const _SET_PED_DRUNKNESS = '0x406ccf555b04fad3';
/**
   * _SET_PED_FIRING_PATTERN_2
   * Used in R* MP Script fm_mission_controller and various R* SP Scripts for ambush*
   *
   * @param {number} ped
   * @param {number} patternHash
   * @return {void}
   */
export const _SET_PED_FIRING_PATTERN_2 = '0x20e54854def6a54a';
/**
   * _SET_PED_FIRING_PATTERN_3
   * Only used in R* MP Script fm_mission_controller
   *
   * @param {number} ped
   * @param {number} patternHash
   * @return {void}
   */
export const _SET_PED_FIRING_PATTERN_3 = '0x244e8c282188e40f';
/**
   * _SET_PED_FORMATION_POSITION
   *
   * @param {number} ped
   * @param {number} position
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PED_FORMATION_POSITION = '0x0e9e95fdedcc9d35';
/**
   * _SET_PED_GETUP_ANIMATION
   *
   * @param {number} ped
   * @param {string | number} animName
   * @param {boolean} p2
   * @return {void}
   */
export const _SET_PED_GETUP_ANIMATION = '0x3ae3552e7c207cc5';
/**
   * _SET_PED_GRAPPLE_ACTION
   *
   * @param {number} ped
   * @param {number} grappleAction
   * @return {void}
   */
export const _SET_PED_GRAPPLE_ACTION = '0x8301d87b1b89e219';
/**
   * _SET_PED_GRAPPLE_ANIMATION
   *
   * @param {number} ped
   * @param {number} grappleAnim
   * @return {void}
   */
export const _SET_PED_GRAPPLE_ANIMATION = '0x56e9c26cd29d1ed6';
/**
   * _SET_PED_GRAPPLE_EFFECT_MULTIPLIER
   *
   * @param {number} ped
   * @param {number} multiplier
   * @return {any}
   */
export const _SET_PED_GRAPPLE_EFFECT_MULTIPLIER = '0x99a6e246c315bf60';
/**
   * _SET_PED_GRAPPLE_FLAG
   *
   * @param {number} ped
   * @param {number} flag
   * @param {boolean} enable
   * @return {void}
   */
export const _SET_PED_GRAPPLE_FLAG = '0x789dabd18e9024db';
/**
   * _SET_PED_GRAPPLE_SEQUENCE
   *
   * @param {number} ped
   * @param {string | number} grappleSequence
   * @return {void}
   */
export const _SET_PED_GRAPPLE_SEQUENCE = '0x604190f0cf0df158';
/**
   * _SET_PED_GRAPPLE_STYLE
   * Hashes: GS_DRAGGING, GS_FACE_TO_BACK, GS_FACE_TO_FACE, GS_FACE_TO_FACE_WALL, GS_MOUNTED
   *
   * @param {number} ped
   * @param {number} style
   * @return {any}
   */
export const _SET_PED_GRAPPLE_STYLE = '0x630e7b01f091a197';
/**
   * _SET_PED_HEADSHOT_DAMAGE_MULTIPLIER
   *
   * @param {number} ped
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_PED_HEADSHOT_DAMAGE_MULTIPLIER = '0x2ba918c823b8ba56';
/**
   * _SET_PED_HEALTH_CONFIG
   * configHash: see pedhealth.meta
   *
   * @param {number} ped
   * @param {number} configHash
   * @return {void}
   */
export const _SET_PED_HEALTH_CONFIG = '0xf6b82fce03b43a37';
/**
   * _SET_PED_IMMERSION_FLAG
   * Only used in R* Script beat_sharp_shooter
   * Blocks ped from swimming underwater
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PED_IMMERSION_FLAG = '0x7fb0088e8769cddb';
/**
   * _SET_PED_INCAPACITATION_FLAGS
   *
   * @param {number} ped
   * @param {number} flags
   * @return {void}
   */
export const _SET_PED_INCAPACITATION_FLAGS = '0xd67b6f3bcf81ba47';
/**
   * _SET_PED_INCAPACITATION_MODIFIERS
   *
   * @param {number} ped
   * @param {boolean} canBeIncapacitated
   * @param {number} threshold
   * @param {number} bleedoutTime
   * @param {number} p4
   * @return {void}
   */
export const _SET_PED_INCAPACITATION_MODIFIERS = '0x39ed303390ddeac7';
/**
   * _SET_PED_INCAPACITATION_TOTAL_BLEED_OUT_DURATION
   *
   * @param {number} ped
   * @param {number} duration
   * @return {void}
   */
export const _SET_PED_INCAPACITATION_TOTAL_BLEED_OUT_DURATION = '0x2890418b39bc8fff';
/**
   * _SET_PED_INTERACTION_NEGATIVE_RESPONSE
   *
   * @param {number} ped
   * @param {string | number} speech
   * @return {void}
   */
export const _SET_PED_INTERACTION_NEGATIVE_RESPONSE = '0xa3c53cde922bc78b';
/**
   * _SET_PED_INTERACTION_PERSONALITY
   * personality (script_mp_rel): NONE, AGGRESSIVE, TIMID (non-aggressive), CRIPPS, SCRIPTEDINTIMIDATION, MAGGIE, MARCEL, SCRIPTEDSALOON
   * personality (script_rel): AVOID, SCRIPTEDOUTLAW, TIMIDGUARDDOG, SCRIPTEDTIMIDROB, AGGRESSIVECAMPER, LAZYDOG, KIERANTIEDUP, SCRIPTEDGALA
   *
   * @param {number} ped
   * @param {number} personality
   * @return {void}
   */
export const _SET_PED_INTERACTION_PERSONALITY = '0x24c82ef607105faa';
/**
   * _SET_PED_INTERACTION_POSITIVE_RESPONSE
   *
   * @param {number} ped
   * @param {string | number} speech
   * @return {void}
   */
export const _SET_PED_INTERACTION_POSITIVE_RESPONSE = '0x20c5459379d75c1c';
/**
   * _SET_PED_KNOCKED_BY_ONE_HIT
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _SET_PED_KNOCKED_BY_ONE_HIT = '0x5bcf0b79d4f5dba3';
/**
   * _SET_PED_LADDER_MOVEMENT_SPEED_MODIFIER
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _SET_PED_LADDER_MOVEMENT_SPEED_MODIFIER = '0x05ce6af4df071d23';
/**
   * _SET_PED_LIGHTS
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PED_LIGHTS = '0x13a210949fcbd92b';
/**
   * _SET_PED_MOTIVATION
   * enum eMotivationState
   * {
   *   TOILET_STATE,
   *   FEAR_STATE,
   *   ANGRY_STATE,
   *   AGITATION_STATE,
   *   HUNGRY_STATE,
   *   TIRED_STATE,
   *   SAD_STATE,
   *   BRAVE_STATE,
   *   OFFER_ITEM_STATE,
   *   SUSPICION,
   *   DRUNK_STATE
   * };
   * 
   * If targetPed is set to 0 the ped motivationState affects everyone
   *
   * @param {number} ped
   * @param {number} motivationState
   * @param {number} threshold
   * @param {number} targetPed
   * @return {void}
   */
export const _SET_PED_MOTIVATION = '0x06d26a96ca1bca75';
/**
   * _SET_PED_MOTIVATION_MODIFIER
   * The higher the modifier, the slower the motivationState value will decrease
   *
   * @param {number} ped
   * @param {number} motivationState
   * @param {number} modifier
   * @return {void}
   */
export const _SET_PED_MOTIVATION_MODIFIER = '0xa1eb5d029e0191d3';
/**
   * _SET_PED_MOTIVATION_STATE_OVERRIDE
   * motivationState: see _SET_PED_MOTIVATION
   *
   * @param {number} ped
   * @param {number} motivationState
   * @param {boolean} enabled
   * @return {void}
   */
export const _SET_PED_MOTIVATION_STATE_OVERRIDE = '0x2eb75fb86c41f026';
/**
   * _SET_PED_PERSONALITY
   * Hashes: STANDARD_PED_AGRO_GUARD, BOUNTY_HUNTER, PLAYER_HORSE, LAW_POLICE, GUARD_DOG, ATTACK_DOG
   * Personalities can also be found in common:/data/ai/interactionpersonalities
   *
   * @param {number} ped
   * @param {number} personality
   * @return {void}
   */
export const _SET_PED_PERSONALITY = '0xb8b6430ead2d2437';
/**
   * _SET_PED_PROMPT_NAME
   *
   * @param {number} ped
   * @param {string | number} name
   * @return {void}
   */
export const _SET_PED_PROMPT_NAME = '0x4a48b6e03babb4ac';
/**
   * _SET_PED_PROMPT_NAME_2
   *
   * @param {number} ped
   * @param {string | number} name
   * @return {void}
   */
export const _SET_PED_PROMPT_NAME_2 = '0x19b14e04b009e28b';
/**
   * _SET_PED_PROMPT_NAME_FROM_GXT_ENTRY
   *
   * @param {number} ped
   * @param {number} gxtEntryHash
   * @return {void}
   */
export const _SET_PED_PROMPT_NAME_FROM_GXT_ENTRY = '0xfca8fb9e15fa80d3';
/**
   * _SET_PED_PROMPT_NAME_FROM_GXT_ENTRY_2
   *
   * @param {number} ped
   * @param {number} gxtEntryHash
   * @return {void}
   */
export const _SET_PED_PROMPT_NAME_FROM_GXT_ENTRY_2 = '0xc2745d9261664901';
/**
   * _SET_PED_QUALITY
   * quality: see _GET_PED_QUALITY
   *
   * @param {number} ped
   * @param {number} quality
   * @return {void}
   */
export const _SET_PED_QUALITY = '0xce6b874286d640bb';
/**
   * _SET_PED_SCALE
   *
   * @param {number} ped
   * @param {number} scale
   * @return {void}
   */
export const _SET_PED_SCALE = '0x25acfc650b65c538';
/**
   * _SET_PED_SCENT
   * 0.0 - 1.0
   * Modifies the "scent line" on the ped's body when using Eagle Eye.
   *
   * @param {number} ped
   * @param {number} scent
   * @return {void}
   */
export const _SET_PED_SCENT = '0x01b21b81865e2a1f';
/**
   * _SET_PED_TARGET_ACTION_DISABLE_FLAG
   *
   * @param {number} ped
   * @param {number} actionDisableFlag
   * @return {void}
   */
export const _SET_PED_TARGET_ACTION_DISABLE_FLAG = '0xc163dac52ac975d3';
/**
   * _SET_PED_TO_BE_REMOVED
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {any} p4
   * @return {void}
   */
export const _SET_PED_TO_BE_REMOVED = '0x36e4b61dc56de77c';
/**
   * _SET_PED_TO_DISABLE_RAGDOLL
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PED_TO_DISABLE_RAGDOLL = '0x221f4d9912b7fe86';
/**
   * _SET_PED_TRAIL_EFFECT
   * duration in seconds
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {number} duration
   * @return {void}
   */
export const _SET_PED_TRAIL_EFFECT = '0xa5950e16b8f31052';
/**
   * _SET_PED_USE_HORSE_MAP_COLLISION
   * Doesn't actually return anything.
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {any}
   */
export const _SET_PED_USE_HORSE_MAP_COLLISION = '0xeb72453b6f5b45b0';
/**
   * _SET_PED_VOICE_VOLUME
   * _SET_PED_S* - _SET_PED_T*
   *
   * @param {number} ped
   * @param {number} volume
   * @return {void}
   */
export const _SET_PED_VOICE_VOLUME = '0xd05ad61f242c626b';
/**
   * _SET_PED_WRITHING_DURATION
   *
   * @param {number} ped
   * @param {number} writhingDuration1
   * @param {number} writhingDuration2
   * @param {number} p3
   * @return {void}
   */
export const _SET_PED_WRITHING_DURATION = '0x4db9d03ac4e1fa84';
/**
   * _SET_PELT_FOR_HORSE
   *
   * @param {number} horse
   * @param {number} peltId
   * @return {void}
   */
export const _SET_PELT_FOR_HORSE = '0xa73f50e8796150d5';
/**
   * _SET_PLAYER_ANTAGONIZE_DISABLED_FOR_PED
   *
   * @param {number} ped
   * @param {number} player
   * @param {number} duration
   * @return {void}
   */
export const _SET_PLAYER_ANTAGONIZE_DISABLED_FOR_PED = '0x5708edd71b50c008';
/**
   * _SET_PLAYER_CURRENT_ANIMAL_DAMAGE_MODIFIER
   * Animal Skin Quality Modifier
   * Params: p2 = 2, p3 = 3 in R* Scripts
   *
   * @param {number} player
   * @param {number} modifier
   * @param {number} p2
   * @param {number} p3
   * @return {any}
   */
export const _SET_PLAYER_CURRENT_ANIMAL_DAMAGE_MODIFIER = '0x9eff3c91df38304f';
/**
   * _SET_PLAYER_GREET_DISABLED_FOR_PED
   *
   * @param {number} ped
   * @param {number} player
   * @param {number} duration
   * @return {void}
   */
export const _SET_PLAYER_GREET_DISABLED_FOR_PED = '0x19173c3f15367b54';
/**
   * _SET_RANDOM_OUTFIT_VARIATION
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _SET_RANDOM_OUTFIT_VARIATION = '0x283978a15512b2fe';
/**
   * _SET_REMOVE_PED_NETWORKED
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _SET_REMOVE_PED_NETWORKED = '0x39a2fc5af55a52b1';
/**
   * _SET_SCENARIO_ANIMAL_DENSITY_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_SCENARIO_ANIMAL_DENSITY_MULTIPLIER_THIS_FRAME = '0xdb48e99f8e064e56';
/**
   * _SET_SCENARIO_HUMAN_DENSITY_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_SCENARIO_HUMAN_DENSITY_MULTIPLIER_THIS_FRAME = '0x28cb6391acedd9db';
/**
   * _SET_SCENARIO_PED_DENSITY_THIS_FRAME
   * Sets the scenario ped density to the given config.
   * 
   * Valid configs:
   * - BLACKWATER
   * - DEFAULT
   * - NEWBORDEAUX
   * - RHODES
   * - STRAWBERRY
   * - TUMBLEWEED
   * - VALENTINE
   * - VANHORN
   * 
   * See common/data/ai/densityscoringconfigs.meta for more information.
   *
   * @param {number} configHash
   * @return {void}
   */
export const _SET_SCENARIO_PED_DENSITY_THIS_FRAME = '0x95423627a9ca598e';
/**
   * _SET_SCENARIO_PED_RANGE_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_SCENARIO_PED_RANGE_MULTIPLIER_THIS_FRAME = '0xa77fa7be9312f8c0';
/**
   * _SET_STAMINA_DEPLETION_MULTIPLIER
   *
   * @param {number} ped
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_STAMINA_DEPLETION_MULTIPLIER = '0xef5a3d2285d8924b';
/**
   * _SET_STAMINA_RECHARGE_MULTIPLIER
   *
   * @param {number} ped
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_STAMINA_RECHARGE_MULTIPLIER = '0x345c9f993a8ab4a4';
/**
   * _SET_TANK_ATTRIBUTE_SIZE
   * Size will be permanent
   *
   * @param {number} ped
   * @param {number} attributeIndex
   * @param {number} size
   * @return {void}
   */
export const _SET_TANK_ATTRIBUTE_SIZE = '0x7ff72de061df55e2';
/**
   * _SET_TEXTURE_LAYER_ALPHA
   *
   * @param {number} textureId
   * @param {number} layerId
   * @param {number} texAlpha
   * @return {void}
   */
export const _SET_TEXTURE_LAYER_ALPHA = '0x6c76bc24f8bb709a';
/**
   * _SET_TEXTURE_LAYER_MOD
   *
   * @param {number} textureId
   * @param {number} layerId
   * @param {number} modTextureHash
   * @param {number} modAlpha
   * @param {number} modChannel
   * @return {void}
   */
export const _SET_TEXTURE_LAYER_MOD = '0xf2ea041f1146d75b';
/**
   * _SET_TEXTURE_LAYER_PALLETE
   * paletteHash: https://raw.githubusercontent.com/femga/rdr3_discoveries/master/clothes/cloth_color_palletes.lua
   *
   * @param {number} textureId
   * @param {number} layerId
   * @param {number} paletteHash
   * @return {void}
   */
export const _SET_TEXTURE_LAYER_PALLETE = '0x1ed8588524ac9be1';
/**
   * _SET_TEXTURE_LAYER_ROUGHNESS
   *
   * @param {number} textureId
   * @param {number} layerId
   * @param {number} texRough
   * @return {void}
   */
export const _SET_TEXTURE_LAYER_ROUGHNESS = '0x057c4f092e2298be';
/**
   * _SET_TEXTURE_LAYER_SHEET_GRID_INDEX
   *
   * @param {number} textureId
   * @param {number} layerId
   * @param {number} sheetGridIndex
   * @return {void}
   */
export const _SET_TEXTURE_LAYER_SHEET_GRID_INDEX = '0x3329aae2882fc8e4';
/**
   * _SET_TEXTURE_LAYER_TEXTURE_MAP
   *
   * @param {number} textureId
   * @param {number} layerId
   * @param {number} albedoHash
   * @param {number} normalHash
   * @param {number} materialHash
   * @return {void}
   */
export const _SET_TEXTURE_LAYER_TEXTURE_MAP = '0x253a63b5badbc398';
/**
   * _SET_TEXTURE_LAYER_TINT
   * Seem color is not RGB or HSV
   *
   * @param {number} textureId
   * @param {number} layerId
   * @param {number} tint0
   * @param {number} tint1
   * @param {number} tint2
   * @return {void}
   */
export const _SET_TEXTURE_LAYER_TINT = '0x2df59ffe6ffd6044';
/**
   * _SET_TEXTURE_OUTFIT_TINTS
   * Used in script function METAPED_CLOTHING__XML__APPLY_OUTFIT_TINTS_TO_PED
   *
   * @param {number} ped
   * @param {number} componentCategory
   * @param {number} palette
   * @param {number} tint0
   * @param {number} tint1
   * @param {number} tint2
   * @return {void}
   */
export const _SET_TEXTURE_OUTFIT_TINTS = '0x4efc1f8ff1ad94de';
/**
   * _SET_TOTAL_PED_DAMAGE_FALLOFF_BONUS
   * _SET_W(EAPON?)*
   *
   * @param {number} ped
   * @param {number} bonus
   * @return {void}
   */
export const _SET_TOTAL_PED_DAMAGE_FALLOFF_BONUS = '0x932786ce3c76477c';
/**
   * _SET_TOTAL_PED_DAMAGE_FROM_AI
   * _SET_W(EAPON?)*
   *
   * @param {number} ped
   * @param {number} totalDamage
   * @return {void}
   */
export const _SET_TOTAL_PED_DAMAGE_FROM_AI = '0x73b6f907b913c860';
/**
   * _SHOOT_TRIGGER_AT_COORDS
   * Triggers a gunshot
   * Params: p5 = -1 in R* Scripts
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @return {any}
   */
export const _SHOOT_TRIGGER_AT_COORDS = '0x4c57f27d1554e6b0';
/**
   * _SPAWNPOINTS_START_SEARCH_WITH_VOLUME
   *
   * @param {number} volume
   * @param {number} spawnpointsFlag
   * @param {number} p2
   * @param {number} duration
   * @param {number} p4
   * @return {void}
   */
export const _SPAWNPOINTS_START_SEARCH_WITH_VOLUME = '0x83ed1fc9df3411f5';
/**
   * _UNRESERVE_AMBIENT_PEDS
   *
   * @param {number} numPeds
   * @return {void}
   */
export const _UNRESERVE_AMBIENT_PEDS = '0x7d4e70a67a651c71';
/**
   * _UPDATE_ANIMAL_DAMAGE_MODIFIER
   *
   * @param {number} player
   * @return {void}
   */
export const _UPDATE_ANIMAL_DAMAGE_MODIFIER = '0x0f9e754ebe8fdbfa';
/**
   * _UPDATE_PED_TEXTURE
   * Should be called at least once for any new texture override.
   * Otherwise component textures will be just black.
   * Also needs to be called for updating any ped overlays to apply the changes.
   *
   * @param {number} textureId
   * @return {void}
   */
export const _UPDATE_PED_TEXTURE = '0x92daaba2c1c10b0e';
/**
   * _UPDATE_PED_VARIATION
   * Update variation on ped, needed after first creation, or when component or texture/overlay is changed
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @param {boolean} p5
   * @return {void}
   */
export const _UPDATE_PED_VARIATION = '0xcc8ca3e88256e58f';
/**
   * _UPDATE_PED_WOUND_EFFECT
   * Params: 0.0f to remove wound effects
   *
   * @param {number} ped
   * @param {number} value
   * @return {void}
   */
export const _UPDATE_PED_WOUND_EFFECT = '0x66b1cb778d911f49';
/**
   * _UPDATE_SHOP_ITEM_WEARABLE_STATE
   *
   * @param {number} ped
   * @param {number} componentHash
   * @param {number} wearableState
   * @param {number} p3
   * @param {boolean} p4
   * @param {number} p5
   * @return {void}
   */
export const _UPDATE_SHOP_ITEM_WEARABLE_STATE = '0x66b957aac2eaaeab';
/**
   * _WARP_PED_OUT_OF_VEHICLE
   *
   * @param {number} ped
   * @return {void}
   */
export const _WARP_PED_OUT_OF_VEHICLE = '0xe0b61ed8bb37712f';
/**
   * _0x08FC896D2CB31FCC
   *
   * @param {any} p0
   * @param {boolean} p1
   * @return {number}
   */
export const _0x08FC896D2CB31FCC = '0x08fc896d2cb31fcc';
/**
   * _0x0B3A99AB6713AA52
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0B3A99AB6713AA52 = '0x0b3a99ab6713aa52';
/**
   * _0x112DDF56300BC6E5
   * Returns the PersChar index of the persCharHash passed
   *
   * @param {number} persCharHash
   * @return {number}
   */
export const _0x112DDF56300BC6E5 = '0x112ddf56300bc6e5';
/**
   * _SET_PERSCHAR_OUTFIT
   *
   * @param {number} persCharHash
   * @param {number} outfit
   * @return {void}
   */
export const _SET_PERSCHAR_OUTFIT = '0x2df89cd2ed1d0bde';
/**
   * _0x2E957AA81F2C61C9
   *
  
   * @return {void}
   */
export const _0x2E957AA81F2C61C9 = '0x2e957aa81f2c61c9';
/**
   * _0x406808610220405B
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x406808610220405B = '0x406808610220405b';
/**
   * _0x4AFC7288C77238B3
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x4AFC7288C77238B3 = '0x4afc7288c77238b3';
/**
   * _0x4F81EAD1DE8FA19B
   *
   * @param {number} persChar
   * @return {void}
   */
export const _0x4F81EAD1DE8FA19B = '0x4f81ead1de8fa19b';
/**
   * _0x535A66AAD2BF68F9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x535A66AAD2BF68F9 = '0x535a66aad2bf68f9';
/**
   * _0x59C7AD6FEA2AC449
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x59C7AD6FEA2AC449 = '0x59c7ad6fea2ac449';
/**
   * _0x5EE6FCCC9C832CA2
   *
   * @param {any} p0
   * @return {Vector3}
   */
export const _0x5EE6FCCC9C832CA2 = '0x5ee6fccc9c832ca2';
/**
   * _0x63AA2B8EB087886A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x63AA2B8EB087886A = '0x63aa2b8eb087886a';
/**
   * _0x669C25840C6F7AE2
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x669C25840C6F7AE2 = '0x669c25840c6f7ae2';
/**
   * _0x6759BEE6762E140B
   *
   * @param {number} persChar
   * @return {void}
   */
export const _0x6759BEE6762E140B = '0x6759bee6762e140b';
/**
   * _0x69786495C92A3044
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x69786495C92A3044 = '0x69786495c92a3044';
/**
   * _0x70605812ABC9FF0F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x70605812ABC9FF0F = '0x70605812abc9ff0f';
/**
   * _0x8AE4EFA464DAE42D
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8AE4EFA464DAE42D = '0x8ae4efa464dae42d';
/**
   * _RESET_PERSCHAR_SCHEDULE
   *
   * @param {number} persCharHash
   * @return {void}
   */
export const _RESET_PERSCHAR_SCHEDULE = '0x8b44273a92cd406c';
/**
   * _0x8BC555034A5A5E8C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8BC555034A5A5E8C = '0x8bc555034a5a5e8c';
/**
   * _0x92690B0822493CE0
   *
  
   * @return {void}
   */
export const _0x92690B0822493CE0 = '0x92690b0822493ce0';
/**
   * _0x94995829ED15A598
   *
   * @param {any} p0
   * @return {Vector3}
   */
export const _0x94995829ED15A598 = '0x94995829ed15a598';
/**
   * _0x9C7F95946E304778
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x9C7F95946E304778 = '0x9c7f95946e304778';
/**
   * _0xA2B18FF8D39F6D87
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xA2B18FF8D39F6D87 = '0xa2b18ff8d39f6d87';
/**
   * _0xA4DCB3F0DD7488BD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0xA4DCB3F0DD7488BD = '0xa4dcb3f0dd7488bd';
/**
   * _0xA8120EBEAF290C7A
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xA8120EBEAF290C7A = '0xa8120ebeaf290c7a';
/**
   * _0xA8C406C2A56EDC16
   *
   * @param {number} persChar
   * @return {void}
   */
export const _0xA8C406C2A56EDC16 = '0xa8c406c2a56edc16';
/**
   * _0xB173599D61FAEB31
   *
  
   * @return {void}
   */
export const _0xB173599D61FAEB31 = '0xb173599d61faeb31';
/**
   * _0xB65E7F733956CF25
   *
   * @param {number} persChar
   * @return {void}
   */
export const _0xB65E7F733956CF25 = '0xb65e7f733956cf25';
/**
   * _0xBB68908CD11AEBDC
   *
   * @param {number} persChar
   * @return {void}
   */
export const _0xBB68908CD11AEBDC = '0xbb68908cd11aebdc';
/**
   * _0xCEB40B678E403759
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xCEB40B678E403759 = '0xceb40b678e403759';
/**
   * _0xD4B614179BCD0654
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xD4B614179BCD0654 = '0xd4b614179bcd0654';
/**
   * _0xD95D777F828B2BBB
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xD95D777F828B2BBB = '0xd95d777f828b2bbb';
/**
   * _GET_PERSCHAR_OUTFIT
   *
   * @param {number} persCharHash
   * @return {number}
   */
export const _GET_PERSCHAR_OUTFIT = '0xdc9655d47dec0353';
/**
   * _0xE0E65E0D261F7507
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE0E65E0D261F7507 = '0xe0e65e0d261f7507';
/**
   * _0xE4C51A8A3BD1664C
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xE4C51A8A3BD1664C = '0xe4c51a8a3bd1664c';
/**
   * _0xEC254C2C9B0F08F1
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xEC254C2C9B0F08F1 = '0xec254c2c9b0f08f1';
/**
   * _0xEFC5C6670E0B99BA
   *
  
   * @return {void}
   */
export const _0xEFC5C6670E0B99BA = '0xefc5c6670e0b99ba';
/**
   * _0xF8DE7154F7D1458F
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xF8DE7154F7D1458F = '0xf8de7154f7d1458f';
/**
   * _0xFCC6DB8DBE709BC8
   *
   * @param {number} persChar
   * @return {void}
   */
export const _0xFCC6DB8DBE709BC8 = '0xfcc6db8dbe709bc8';
/**
   * _CREATE_PERSISTENT_CHARACTER
   *
   * @param {number} hash
   * @return {number}
   */
export const _CREATE_PERSISTENT_CHARACTER = '0x4f76e3676583d951';
/**
   * _DELETE_PERSCHAR
   *
   * @param {number} persChar
   * @return {void}
   */
export const _DELETE_PERSCHAR = '0xfc77c5b44d5ff7c0';
/**
   * _FORCE_DESPAWN_PERSCHAR
   *
   * @param {number} persChar
   * @return {void}
   */
export const _FORCE_DESPAWN_PERSCHAR = '0x7b204f88f6c3d287';
/**
   * _FORCE_SPAWN_PERSCHAR
   *
   * @param {number} persChar
   * @param {boolean} p1
   * @return {number}
   */
export const _FORCE_SPAWN_PERSCHAR = '0x0cadc3a977997472';
/**
   * _GET_PERSCHAR_INDEX_FROM_PED_INDEX
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PERSCHAR_INDEX_FROM_PED_INDEX = '0x32a1e3b83d501096';
/**
   * _GET_PERSCHAR_MODEL_NAME
   *
   * @param {number} persCharHash
   * @return {number}
   */
export const _GET_PERSCHAR_MODEL_NAME = '0xa00df706c60173d1';
/**
   * _GET_PERSCHAR_PED_INDEX
   *
   * @param {number} persChar
   * @return {number}
   */
export const _GET_PERSCHAR_PED_INDEX = '0x31c70a716cae1fee';
/**
   * _IS_PERSISTENT_CHARACTER_DEAD
   *
   * @param {number} persChar
   * @return {boolean}
   */
export const _IS_PERSISTENT_CHARACTER_DEAD = '0xeb98b38ca60742d7';
/**
   * _IS_PERSISTENT_CHARACTER_VALID
   *
   * @param {number} persChar
   * @return {boolean}
   */
export const _IS_PERSISTENT_CHARACTER_VALID = '0x800df3fc913355f3';
/**
   * _RETASK_PERSISTENT_CHARACTER
   *
   * @param {number} persChar
   * @return {void}
   */
export const _RETASK_PERSISTENT_CHARACTER = '0x631cd2d77fdc0316';
/**
   * _REVIVE_PERSCHAR
   *
   * @param {number} persChar
   * @return {boolean}
   */
export const _REVIVE_PERSCHAR = '0x49a8c2cd97815215';
/**
   * _SET_PERSCHAR_SCHEDULE
   *
   * @param {number} persCharHash
   * @param {string | number} schedule
   * @return {void}
   */
export const _SET_PERSCHAR_SCHEDULE = '0x187d65f3aec5d679';
/**
   * PERSISTENCE_ADD_SCENARIO_LOOTED
   *
   * @param {number} scenario
   * @return {void}
   */
export const PERSISTENCE_ADD_SCENARIO_LOOTED = '0x8245c1f3262f4ac2';
/**
   * PERSISTENCE_REMOVE_ALL_ENTITIES_IN_AREA
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {void}
   */
export const PERSISTENCE_REMOVE_ALL_ENTITIES_IN_AREA = '0x9d16896f0dbe78a2';
/**
   * _0x065887B694359799
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x065887B694359799 = '0x065887b694359799';
/**
   * _0x1F56FB3FDB4EAF65
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x1F56FB3FDB4EAF65 = '0x1f56fb3fdb4eaf65';
/**
   * _0x291CC21D1FB6790E
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x291CC21D1FB6790E = '0x291cc21d1fb6790e';
/**
   * _0x2E545965DF98D476
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x2E545965DF98D476 = '0x2e545965df98d476';
/**
   * _0x3CA5E58C9731A16B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3CA5E58C9731A16B = '0x3ca5e58c9731a16b';
/**
   * _0x5A79220F6D38D7C3
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x5A79220F6D38D7C3 = '0x5a79220f6d38d7c3';
/**
   * _0x66DAA3A9274E8E82
   * _PERSISTENCE_*
   *
  
   * @return {void}
   */
export const _0x66DAA3A9274E8E82 = '0x66daa3a9274e8e82';
/**
   * _0x7A1BD123E5CDB6E5
   *
  
   * @return {void}
   */
export const _0x7A1BD123E5CDB6E5 = '0x7a1bd123e5cdb6e5';
/**
   * _0x8DE104BEC243A73B
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x8DE104BEC243A73B = '0x8de104bec243a73b';
/**
   * _0xB03140014ACA6C40
   * nullsub, doesn't do anything
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xB03140014ACA6C40 = '0xb03140014aca6c40';
/**
   * _0xBA2C49EA6A8D24FF
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {any}
   */
export const _0xBA2C49EA6A8D24FF = '0xba2c49ea6a8d24ff';
/**
   * _0xCFDA2518F322D836
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xCFDA2518F322D836 = '0xcfda2518f322d836';
/**
   * _0xDC0A1F0ECEC9F0C0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xDC0A1F0ECEC9F0C0 = '0xdc0a1f0ecec9f0c0';
/**
   * _0xE225CEF1901F6108
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE225CEF1901F6108 = '0xe225cef1901f6108';
/**
   * _0xF5622FA6ACFCA7DB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xF5622FA6ACFCA7DB = '0xf5622fa6acfca7db';
/**
   * _0xFC9806DA9A460093
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @return {void}
   */
export const _0xFC9806DA9A460093 = '0xfc9806da9a460093';
/**
   * _PERSISTENCE_IS_SCENARIO_MARKED_AS_LOOTED
   *
   * @param {number} scenario
   * @return {boolean}
   */
export const _PERSISTENCE_IS_SCENARIO_MARKED_AS_LOOTED = '0xfb7cf1de938a3e22';
/**
   * _PERSISTENCE_IS_SCENARIO_MARKED_AS_LOOTED_AT_COORDS
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const _PERSISTENCE_IS_SCENARIO_MARKED_AS_LOOTED_AT_COORDS = '0xb6e1a185c2b9319a';
/**
   * _PERSISTENCE_IS_SCENARIO_MARKED_AS_LOOTED_AT_COORDS_WITH_MODEL
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} model
   * @return {boolean}
   */
export const _PERSISTENCE_IS_SCENARIO_MARKED_AS_LOOTED_AT_COORDS_WITH_MODEL = '0x188313616d184213';
/**
   * _PERSISTENCE_REFRESH_TOWN_VOLUME
   * Only used in R* script long_update.ysc in script function REFRESH_CLOSEST_TOWN
   *
   * @param {number} volume
   * @return {void}
   */
export const _PERSISTENCE_REFRESH_TOWN_VOLUME = '0xefb5f34cc0953b27';
/**
   * ACTIVATE_PHYSICS
   *
   * @param {number} entity
   * @return {void}
   */
export const ACTIVATE_PHYSICS = '0x710311adf0e20730';
/**
   * ADD_ROPE
   * There are 19 types of rope, from type = 0 to type = 18
   * Rope definitions are stored in ropedata.xml
   * Rope types 0, 15 and 18 have proper physics for hanging objects (taut, do not sag, small to medium diameter, good aspect for a rope)
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} length
   * @param {number} ropeType
   * @param {number} maxLength
   * @param {number} minLength
   * @param {number} p10
   * @param {boolean} p11
   * @param {boolean} p12
   * @param {boolean} rigid
   * @param {number} p14
   * @param {boolean} breakWhenShot
   * @param {DataView} unkPtr
   * @param {boolean} p17
   * @return {number}
   */
export const ADD_ROPE = '0xe832d760399eb220';
/**
   * ATTACH_ENTITIES_TO_ROPE
   * Attaches entity 1 to entity 2.
   * If you use a boneName (p12/p13) make sure boneId (p15/p16) is set to -1.
   *
   * @param {number} ropeId
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} ent1X
   * @param {number} ent1Y
   * @param {number} ent1Z
   * @param {number} ent2X
   * @param {number} ent2Y
   * @param {number} ent2Z
   * @param {number} length
   * @param {number} alwaysZero1
   * @param {number} alwaysZero2
   * @param {string | number} boneName1
   * @param {string | number} boneName2
   * @param {boolean} p14
   * @param {number} boneId1
   * @param {number} boneId2
   * @param {number} alwaysZero3
   * @param {number} alwaysZero4
   * @param {boolean} p19
   * @param {boolean} p20
   * @return {void}
   */
export const ATTACH_ENTITIES_TO_ROPE = '0x3d95ec8b6d940ac3';
/**
   * BREAK_ENTITY_GLASS
   *
   * @param {number} entity
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {any} p9
   * @param {boolean} p10
   * @return {void}
   */
export const BREAK_ENTITY_GLASS = '0x2e648d16f6e308f3';
/**
   * DELETE_CHILD_ROPE
   *
   * @param {number} ropeId
   * @return {void}
   */
export const DELETE_CHILD_ROPE = '0xaa5d6b1888e4db20';
/**
   * DELETE_ROPE
   *
  
   * @return {number}
   */
export const DELETE_ROPE = '0x52b4829281364649';
/**
   * DETACH_ROPE_FROM_ENTITY
   *
   * @param {number} ropeId
   * @param {number} entity
   * @return {void}
   */
export const DETACH_ROPE_FROM_ENTITY = '0xbcf3026912a8647d';
/**
   * DOES_ROPE_EXIST
   *
   * @param {number} ropeId
   * @return {boolean}
   */
export const DOES_ROPE_EXIST = '0xfd5448be3111ed96';
/**
   * GET_ROPE_LAST_VERTEX_COORD
   *
   * @param {number} ropeId
   * @return {Vector3}
   */
export const GET_ROPE_LAST_VERTEX_COORD = '0x21bb0fbd3e217c2d';
/**
   * GET_ROPE_VERTEX_COORD
   *
   * @param {number} ropeId
   * @param {number} vertex
   * @return {Vector3}
   */
export const GET_ROPE_VERTEX_COORD = '0xea61ca8e80f09e4d';
/**
   * GET_ROPE_VERTEX_COUNT
   *
   * @param {number} ropeId
   * @return {number}
   */
export const GET_ROPE_VERTEX_COUNT = '0x3655f544cd30f0b5';
/**
   * ROPE_DRAW_SHADOW_ENABLED
   *
   * @param {boolean} toggle
   * @return {number}
   */
export const ROPE_DRAW_SHADOW_ENABLED = '0xf159a63806bb5ba8';
/**
   * ROPE_FORCE_LENGTH
   * Forces a rope to a certain length.
   *
   * @param {number} ropeId
   * @param {number} length
   * @return {void}
   */
export const ROPE_FORCE_LENGTH = '0xd009f759a723db1b';
/**
   * ROPE_SET_UPDATE_ORDER
   *
   * @param {number} ropeId
   * @param {any} p1
   * @return {void}
   */
export const ROPE_SET_UPDATE_ORDER = '0xdc57a637a20006ed';
/**
   * SET_DAMPING
   *
   * @param {number} entity
   * @param {number} vertex
   * @param {number} value
   * @return {void}
   */
export const SET_DAMPING = '0xeea3b200a6feb65b';
/**
   * SET_DISABLE_BREAKING
   *
   * @param {number} object
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_DISABLE_BREAKING = '0x5cec1a84620e7d5b';
/**
   * SET_DISABLE_FRAG_DAMAGE
   *
   * @param {number} object
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_DISABLE_FRAG_DAMAGE = '0x01ba3aed21c16cfb';
/**
   * START_ROPE_UNWINDING_FRONT
   *
   * @param {number} ropeId
   * @return {void}
   */
export const START_ROPE_UNWINDING_FRONT = '0x538d1179ec1aa9a9';
/**
   * START_ROPE_WINDING
   *
   * @param {number} ropeId
   * @return {void}
   */
export const START_ROPE_WINDING = '0x1461c72c889e343e';
/**
   * STOP_ROPE_UNWINDING_FRONT
   *
   * @param {number} ropeId
   * @return {void}
   */
export const STOP_ROPE_UNWINDING_FRONT = '0xfff3a50779efbbb3';
/**
   * STOP_ROPE_WINDING
   *
   * @param {number} ropeId
   * @return {void}
   */
export const STOP_ROPE_WINDING = '0xcb2d4ab84a19aa7c';
/**
   * _0x0CB16D05E03FB525
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0CB16D05E03FB525 = '0x0cb16d05e03fb525';
/**
   * _0x1D97DA8ACB5D2582
   *
   * @param {number} ropeId
   * @param {number} p1
   * @return {void}
   */
export const _0x1D97DA8ACB5D2582 = '0x1d97da8acb5d2582';
/**
   * _0x1FC92BDBA1106BD2
   *
   * @param {number} ropeId
   * @param {number} p1
   * @return {void}
   */
export const _0x1FC92BDBA1106BD2 = '0x1fc92bdba1106bd2';
/**
   * _0x21D0890D88DFB0B0
   *
   * @param {number} ropeId
   * @param {boolean} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @param {number} p10
   * @return {void}
   */
export const _0x21D0890D88DFB0B0 = '0x21d0890d88dfb0b0';
/**
   * _0x31160EC47E7C9549
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x31160EC47E7C9549 = '0x31160ec47e7c9549';
/**
   * _0x32F4DBFDFCCCC735
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x32F4DBFDFCCCC735 = '0x32f4dbfdfcccc735';
/**
   * _0x3900491C0D61ED4B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3900491C0D61ED4B = '0x3900491c0d61ed4b';
/**
   * _0x423C6B1F3786D28B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x423C6B1F3786D28B = '0x423c6b1f3786d28b';
/**
   * _0x461FCBDEB4D06717
   *
   * @param {number} ropeId
   * @param {boolean} p1
   * @return {void}
   */
export const _0x461FCBDEB4D06717 = '0x461fcbdeb4d06717';
/**
   * _0x483D4E917B0D35A9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x483D4E917B0D35A9 = '0x483d4e917b0d35a9';
/**
   * _0x522FA3F490E2F7AC
   *
   * @param {number} ropeId
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x522FA3F490E2F7AC = '0x522fa3f490e2f7ac';
/**
   * _0x5A989B7EE3672A56
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x5A989B7EE3672A56 = '0x5a989b7ee3672a56';
/**
   * _0x5BD7457221CC5FF4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x5BD7457221CC5FF4 = '0x5bd7457221cc5ff4';
/**
   * _0x5E981C764DF33117
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x5E981C764DF33117 = '0x5e981c764df33117';
/**
   * _0x69C810B72291D831
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _0x69C810B72291D831 = '0x69c810b72291d831';
/**
   * _0x6EA0E93CFFA472CC
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6EA0E93CFFA472CC = '0x6ea0e93cffa472cc';
/**
   * _0x751DF00EEFF122E3
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x751DF00EEFF122E3 = '0x751df00eeff122e3';
/**
   * _0x76BAD9D538BCA1AA
   *
   * @param {number} ropeId
   * @param {number} p1
   * @return {void}
   */
export const _0x76BAD9D538BCA1AA = '0x76bad9d538bca1aa';
/**
   * _0x814D453FCFDF119F
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x814D453FCFDF119F = '0x814d453fcfdf119f';
/**
   * _0x8D59079C37C21D78
   * _ROPE_SET_*
   *
   * @param {number} ropeId
   * @param {number} p1
   * @return {void}
   */
export const _0x8D59079C37C21D78 = '0x8d59079c37c21d78';
/**
   * _0x8EEDFD8921389928
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @return {void}
   */
export const _0x8EEDFD8921389928 = '0x8eedfd8921389928';
/**
   * _0x9C24846D0A4A2776
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9C24846D0A4A2776 = '0x9c24846d0a4a2776';
/**
   * _0xB40EA9E0D2E2F7F3
   *
   * @param {number} ropeId
   * @param {number} p1
   * @return {void}
   */
export const _0xB40EA9E0D2E2F7F3 = '0xb40ea9e0d2e2f7f3';
/**
   * _0xB7469CB9AC3C0FD4
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _0xB7469CB9AC3C0FD4 = '0xb7469cb9ac3c0fd4';
/**
   * _0xBB3E9B073E66C3C9
   *
   * @param {number} ropeId
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const _0xBB3E9B073E66C3C9 = '0xbb3e9b073e66c3c9';
/**
   * _0xBDDA142759307528
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xBDDA142759307528 = '0xbdda142759307528';
/**
   * _0xC64E7A62632AD2FE
   *
   * @param {number} ropeId
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _0xC64E7A62632AD2FE = '0xc64e7a62632ad2fe';
/**
   * _0xC89E7410A93AC19A
   *
   * @param {number} ropeId
   * @param {number} p1
   * @return {void}
   */
export const _0xC89E7410A93AC19A = '0xc89e7410a93ac19a';
/**
   * _0xD699E688B49C0FD2
   *
   * @param {number} ropeId
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {boolean} p4
   * @return {void}
   */
export const _0xD699E688B49C0FD2 = '0xd699e688b49c0fd2';
/**
   * _0xDEDE679ED29DD4E7
   *
   * @param {number} ropeId
   * @param {boolean} p1
   * @return {void}
   */
export const _0xDEDE679ED29DD4E7 = '0xdede679ed29dd4e7';
/**
   * _0xE54BF2CE6C7D23A9
   *
   * @param {number} ropeId
   * @param {number} p1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _0xE54BF2CE6C7D23A9 = '0xe54bf2ce6c7d23a9';
/**
   * _0xEAF529446488EB18
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xEAF529446488EB18 = '0xeaf529446488eb18';
/**
   * _0xF1EA2A881EB7F2CD
   *
   * @param {number} ropeId
   * @param {boolean} p1
   * @return {void}
   */
export const _0xF1EA2A881EB7F2CD = '0xf1ea2a881eb7f2cd';
/**
   * _0xF27F1A8DE4F50A1B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _0xF27F1A8DE4F50A1B = '0xf27f1a8de4f50a1b';
/**
   * _0xF8CA39D5C0D1D9A1
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xF8CA39D5C0D1D9A1 = '0xf8ca39d5c0d1d9a1';
/**
   * _0xFB9153A54AC713E8
   *
   * @param {number} ropeId
   * @param {boolean} p1
   * @return {void}
   */
export const _0xFB9153A54AC713E8 = '0xfb9153a54ac713e8';
/**
   * _ADD_ROPE_2
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} length
   * @param {number} ropeType
   * @param {boolean} isNetworked
   * @param {number} p9
   * @param {number} p10
   * @return {number}
   */
export const _ADD_ROPE_2 = '0xe9c59f6809373a99';
/**
   * _ATTACH_ENTITES_TO_ROPE_3
   *
   * @param {number} ropeId
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {any} p9
   * @param {any} p10
   * @return {void}
   */
export const _ATTACH_ENTITES_TO_ROPE_3 = '0xe9cd9a67834985a7';
/**
   * _ATTACH_ENTITIES_TO_ROPE_2
   * Attaches a rope to two entities: binds two bones from two entities; one entity can be an object, i.e. a suspension point, the other an NPC bone
   *
   * @param {number} ropeId
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} ent1X
   * @param {number} ent1Y
   * @param {number} ent1Z
   * @param {number} ent2X
   * @param {number} ent2Y
   * @param {number} ent2Z
   * @param {string | number} boneName1
   * @param {string | number} boneName2
   * @return {void}
   */
export const _ATTACH_ENTITIES_TO_ROPE_2 = '0x462ff2a432733a44';
/**
   * _BREAK_ROPE
   * ropeTop returns top half of rope, ropeBottom returns bottom half of rope
   *
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {number} p6
   * @return {[number, number, number]}
   */
export const _BREAK_ROPE = '0x4cfa2b7fae115ecb';
/**
   * _CREATE_ROPE_WINDING_ABILITY
   * Combining this with ADD_ROPE enables winding
   * p1: mostly empty (0)
   * ropeModelType: RB_L_Wrist02, RB_R_Wrist02, ropeAttach, noose01x_Rope_03, SKEL_Neck0, SKEL_L_FOOT, SKEL_Neck1, Root_s_meatbit_Chunck_Xlarge01x
   * _CREATE_*
   *
   * @param {number} ropeId
   * @param {string | number} p1
   * @param {string | number} ropeModelType
   * @param {number} length
   * @param {boolean} p4
   * @return {void}
   */
export const _CREATE_ROPE_WINDING_ABILITY = '0x3c6490d940ff5d0b';
/**
   * _HITCH_HORSE
   *
   * @param {number} horse
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _HITCH_HORSE = '0x06aade17334f7a40';
/**
   * _IS_ROPE_ATTACHED_TO_ENTITY
   *
   * @param {number} ropeId
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_ROPE_ATTACHED_TO_ENTITY = '0x9b4f7e3e4f9c77b3';
/**
   * _IS_ROPE_BROKEN
   *
   * @param {number} ropeId
   * @return {boolean}
   */
export const _IS_ROPE_BROKEN = '0x79c2bec82cfd7f7f';
/**
   * _RELEASE_ROPE
   *
   * @param {number} ropeId
   * @return {void}
   */
export const _RELEASE_ROPE = '0x6076213101a47b3b';
/**
   * _ROPE_CHANGE_VISIBILITY
   *
   * @param {boolean} visible
   * @return {number}
   */
export const _ROPE_CHANGE_VISIBILITY = '0x7a54d82227a139db';
/**
   * _ROPE_GET_BREAKER_OF_ROPE
   *
   * @param {number} ropeId
   * @return {number}
   */
export const _ROPE_GET_BREAKER_OF_ROPE = '0xee360cfc80c8b2bc';
/**
   * _ROPE_GET_FORCED_LENGTH
   *
   * @param {number} ropeId
   * @return {number}
   */
export const _ROPE_GET_FORCED_LENGTH = '0x3d69537039f8d824';
/**
   * _START_ROPE_UNWINDING_BACK
   *
   * @param {number} ropeId
   * @return {void}
   */
export const _START_ROPE_UNWINDING_BACK = '0x00f611a794a3c36e';
/**
   * _STOP_ROPE_UNWINDING_BACK
   *
   * @param {number} ropeId
   * @return {void}
   */
export const _STOP_ROPE_UNWINDING_BACK = '0x10daa76cb8a201a1';
/**
   * _UNHITCH_HORSE
   *
   * @param {number} horse
   * @return {void}
   */
export const _UNHITCH_HORSE = '0x0348469daa17576c';
/**
   * BOOST_PLAYER_HORSE_SPEED_FOR_TIME
   *
   * @param {number} player
   * @param {number} speedBoost
   * @param {number} duration
   * @return {void}
   */
export const BOOST_PLAYER_HORSE_SPEED_FOR_TIME = '0x09c28f828ee674fa';
/**
   * CAN_PLAYER_START_MISSION
   *
   * @param {number} player
   * @return {boolean}
   */
export const CAN_PLAYER_START_MISSION = '0x2df170b1185af777';
/**
   * CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED
   *
   * @param {number} player
   * @return {void}
   */
export const CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED = '0x0361096d6ce4372c';
/**
   * CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED
   *
   * @param {number} player
   * @return {void}
   */
export const CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED = '0x270b63a641be32f2';
/**
   * CLEAR_PLAYER_WANTED_LEVEL
   * nullsub, doesn't do anything
   *
   * @param {number} player
   * @return {void}
   */
export const CLEAR_PLAYER_WANTED_LEVEL = '0x4e4b996c928c7aa6';
/**
   * DISABLE_PLAYER_FIRING
   * Inhibits the player from using any method of combat including melee and firearms.
   * 
   * NOTE: Only disables the firing for one frame
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const DISABLE_PLAYER_FIRING = '0x2970929fd5f9fc89';
/**
   * EAGLE_EYE_SET_CUSTOM_ENTITY_TINT
   *
   * @param {number} entity
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @return {void}
   */
export const EAGLE_EYE_SET_CUSTOM_ENTITY_TINT = '0x62ed71e133b6c9f1';
/**
   * FORCE_CLEANUP
   *
   * @param {number} cleanupFlags
   * @return {void}
   */
export const FORCE_CLEANUP = '0x768c017fb878e4f4';
/**
   * FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME
   *
   * @param {string | number} name
   * @param {number} cleanupFlags
   * @return {void}
   */
export const FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME = '0xdaacaf8b687f2353';
/**
   * FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID
   *
   * @param {number} id
   * @param {number} cleanupFlags
   * @return {void}
   */
export const FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID = '0xf4c9512a2f0a3031';
/**
   * GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP
   *
  
   * @return {number}
   */
export const GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP = '0x84e8e29ebd4a46d2';
/**
   * GET_DISCOVERABLE_NAME_HASH_AND_TYPE_FOR_ENTITY
   * Returns name hash (name) and outHash includes the type.
   *
   * @param {number} entity
   * @return {[number, number]}
   */
export const GET_DISCOVERABLE_NAME_HASH_AND_TYPE_FOR_ENTITY = '0x0139637a3bff8b6d';
/**
   * GET_ENTITY_PLAYER_IS_FREE_AIMING_AT
   *
   * @param {number} player
   * @param {number} entity
   * @return {boolean}
   */
export const GET_ENTITY_PLAYER_IS_FREE_AIMING_AT = '0xa6817c110b830ead';
/**
   * GET_HAS_PLAYER_DISCOVERED_CHARACTER_NAME_MP
   *
   * @param {number} discoveryHash
   * @return {boolean}
   */
export const GET_HAS_PLAYER_DISCOVERED_CHARACTER_NAME_MP = '0x354f689c4ffaab37';
/**
   * GET_IS_PLAYER_UI_PROMPT_ACTIVE
   *
   * @param {number} player
   * @param {number} p1
   * @return {boolean}
   */
export const GET_IS_PLAYER_UI_PROMPT_ACTIVE = '0x51bea356b1c60225';
/**
   * GET_MAX_WANTED_LEVEL
   * Gets the maximum wanted level the player can get.
   * Ranges from 0 to 5.
   *
  
   * @return {number}
   */
export const GET_MAX_WANTED_LEVEL = '0xd04cfad1e2b7984a';
/**
   * GET_MOUNT_OWNED_BY_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const GET_MOUNT_OWNED_BY_PLAYER = '0xf49f14462f0ae27c';
/**
   * GET_PLAYERS_LAST_VEHICLE
   *
  
   * @return {number}
   */
export const GET_PLAYERS_LAST_VEHICLE = '0x2f96e7720b0b19ea';
/**
   * GET_PLAYER_CURRENT_STEALTH_NOISE
   *
   * @param {number} player
   * @return {number}
   */
export const GET_PLAYER_CURRENT_STEALTH_NOISE = '0xd7ecc25e176ecba5';
/**
   * GET_PLAYER_GROUP
   * Returns the group ID the player is member of.
   *
   * @param {number} player
   * @return {number}
   */
export const GET_PLAYER_GROUP = '0x9bab31815159abcf';
/**
   * GET_PLAYER_INDEX
   * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
   *
  
   * @return {number}
   */
export const GET_PLAYER_INDEX = '0x47e385b0d957c8d4';
/**
   * GET_PLAYER_INTERACTION_TARGET_ENTITY
   *
   * @param {number} player
   * @param {number} outEntity
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {boolean}
   */
export const GET_PLAYER_INTERACTION_TARGET_ENTITY = '0x3ee1f7a8c32f24e1';
/**
   * GET_PLAYER_INVINCIBLE
   * Returns the player's invincibility status.
   *
   * @param {number} player
   * @return {boolean}
   */
export const GET_PLAYER_INVINCIBLE = '0x0cbbcb2ccfa7dc4e';
/**
   * GET_PLAYER_NAME
   *
   * @param {number} player
   * @return {string | number}
   */
export const GET_PLAYER_NAME = '0x7124fd9ac0e01ba0';
/**
   * GET_PLAYER_PED
   *
   * @param {number} player
   * @return {number}
   */
export const GET_PLAYER_PED = '0x275f255ed201b937';
/**
   * GET_PLAYER_PED_SCRIPT_INDEX
   * Does the same like PLAYER::GET_PLAYER_PED
   *
   * @param {number} player
   * @return {number}
   */
export const GET_PLAYER_PED_SCRIPT_INDEX = '0x5c880f9056d784c8';
/**
   * GET_PLAYER_RECEIVED_BATTLE_EVENT_RECENTLY
   *
   * @param {number} player
   * @param {number} p1
   * @param {boolean} p2
   * @return {boolean}
   */
export const GET_PLAYER_RECEIVED_BATTLE_EVENT_RECENTLY = '0xfb6eb8785f808551';
/**
   * GET_PLAYER_TARGET_ENTITY
   *
   * @param {number} player
   * @param {number} entity
   * @return {boolean}
   */
export const GET_PLAYER_TARGET_ENTITY = '0xae663ddd99c8a670';
/**
   * GET_PLAYER_TEAM
   * Gets the player's team.
   * Returns -1 in singleplayer.
   *
   * @param {number} player
   * @return {number}
   */
export const GET_PLAYER_TEAM = '0xb464eb6a40c7975b';
/**
   * GET_PLAYER_WANTED_LEVEL
   *
   * @param {number} player
   * @return {number}
   */
export const GET_PLAYER_WANTED_LEVEL = '0xabc532f9098bfd9d';
/**
   * GET_TARGET_CHARACTER_NAME_FOR_LOCAL_PLAYER
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_TARGET_CHARACTER_NAME_FOR_LOCAL_PLAYER = '0x36e3d8b5a6552fe8';
/**
   * GET_TARGET_CHARACTER_NAME_SCRIPT_OVERRIDE_HASH
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_TARGET_CHARACTER_NAME_SCRIPT_OVERRIDE_HASH = '0x0335106f3acabbed';
/**
   * GET_TARGET_CHARACTER_NAME_SCRIPT_OVERRIDE_RAW_STRING
   *
   * @param {number} ped
   * @return {string | number}
   */
export const GET_TARGET_CHARACTER_NAME_SCRIPT_OVERRIDE_RAW_STRING = '0x755e08680f21ef30';
/**
   * GET_WANTED_LEVEL_RADIUS
   *
   * @param {number} p0
   * @return {number}
   */
export const GET_WANTED_LEVEL_RADIUS = '0x80b00eb26d9521c7';
/**
   * GET_WANTED_LEVEL_THRESHOLD
   *
   * @param {number} wantedLevel
   * @return {number}
   */
export const GET_WANTED_LEVEL_THRESHOLD = '0x1b1a3b358f7d8f07';
/**
   * HAS_FORCE_CLEANUP_OCCURRED
   *
   * @param {number} cleanupFlags
   * @return {boolean}
   */
export const HAS_FORCE_CLEANUP_OCCURRED = '0xc11469dca6fc3bb5';
/**
   * HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE
   *
   * @param {number} player
   * @return {boolean}
   */
export const HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE = '0xc932f57f31ea9152';
/**
   * HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED
   *
   * @param {number} player
   * @return {boolean}
   */
export const HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED = '0x16c8d205dd5a2e90';
/**
   * HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED
   *
   * @param {number} player
   * @return {boolean}
   */
export const HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED = '0xda4a4b9b96e20092';
/**
   * INT_TO_PARTICIPANTINDEX
   * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
   *
   * @param {number} value
   * @return {number}
   */
export const INT_TO_PARTICIPANTINDEX = '0x58ff971fc8f2702c';
/**
   * INT_TO_PLAYERINDEX
   * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
   *
   * @param {number} value
   * @return {number}
   */
export const INT_TO_PLAYERINDEX = '0x748b3a65c2604c33';
/**
   * IS_PLAYER_BEING_ARRESTED
   * Return true while player is being arrested / busted.
   * 
   * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
   * 
   * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
   *
   * @param {number} player
   * @param {boolean} atArresting
   * @return {boolean}
   */
export const IS_PLAYER_BEING_ARRESTED = '0xc8183ae963c58374';
/**
   * IS_PLAYER_CLIMBING
   * Returns TRUE if the player ('s ped) is climbing at the moment.
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_PLAYER_CLIMBING = '0xb8a70c22fd48197a';
/**
   * IS_PLAYER_CONTROL_ON
   * Returns whether the player can control himself.
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_PLAYER_CONTROL_ON = '0x7964097fce4c244b';
/**
   * IS_PLAYER_DEAD
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_PLAYER_DEAD = '0x2e9c3fcb6798f397';
/**
   * IS_PLAYER_FREE_AIMING
   * Gets a value indicating whether the specified player is currently aiming freely.
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_PLAYER_FREE_AIMING = '0x936f967d4be1ce9d';
/**
   * IS_PLAYER_FREE_AIMING_AT_ENTITY
   * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
   *
   * @param {number} player
   * @param {number} entity
   * @return {boolean}
   */
export const IS_PLAYER_FREE_AIMING_AT_ENTITY = '0x8c67c11c68713d25';
/**
   * IS_PLAYER_PLAYING
   * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_PLAYER_PLAYING = '0xbffb35986caae58c';
/**
   * IS_PLAYER_READY_FOR_CUTSCENE
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_PLAYER_READY_FOR_CUTSCENE = '0xaa67bcb0097f2fa3';
/**
   * IS_PLAYER_RIDING_TRAIN
   * Returns true if the player is riding a train.
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_PLAYER_RIDING_TRAIN = '0x2fb0acada6a238dd';
/**
   * IS_PLAYER_SCRIPT_CONTROL_ON
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_PLAYER_SCRIPT_CONTROL_ON = '0xb78350754157c00f';
/**
   * IS_PLAYER_TARGETTING_ANYTHING
   *
   * @param {number} player
   * @return {boolean}
   */
export const IS_PLAYER_TARGETTING_ANYTHING = '0x4605c66e0f935f83';
/**
   * IS_PLAYER_TARGETTING_ENTITY
   *
   * @param {number} player
   * @param {number} entity
   * @param {boolean} p2
   * @return {boolean}
   */
export const IS_PLAYER_TARGETTING_ENTITY = '0x27f89fdc16688a7a';
/**
   * IS_PLAYER_TELEPORT_ACTIVE
   *
  
   * @return {boolean}
   */
export const IS_PLAYER_TELEPORT_ACTIVE = '0x085eeaeb8783feb5';
/**
   * IS_PLAYER_WANTED_LEVEL_GREATER
   *
   * @param {number} player
   * @param {number} wantedLevel
   * @return {boolean}
   */
export const IS_PLAYER_WANTED_LEVEL_GREATER = '0xe1c0ad4c24324c36';
/**
   * IS_SYSTEM_UI_BEING_DISPLAYED
   *
  
   * @return {boolean}
   */
export const IS_SYSTEM_UI_BEING_DISPLAYED = '0x908258b6209e71f7';
/**
   * NETWORK_PLAYER_ID_TO_INT
   * Does exactly the same thing as PLAYER_ID()
   *
  
   * @return {number}
   */
export const NETWORK_PLAYER_ID_TO_INT = '0x8a9386f0749a17fa';
/**
   * PLAYER_ID
   * This returns YOUR 'identity' as a Player type.
   * 
   * Always returns 0 in story mode.
   *
  
   * @return {number}
   */
export const PLAYER_ID = '0x217e9dc48139933d';
/**
   * PLAYER_PED_ID
   * Returns current player ped
   *
  
   * @return {number}
   */
export const PLAYER_PED_ID = '0x096275889b8e0ee0';
/**
   * REPORT_POLICE_SPOTTED_PLAYER
   *
   * @param {number} player
   * @return {void}
   */
export const REPORT_POLICE_SPOTTED_PLAYER = '0xcbccf73ffa69cc6b';
/**
   * RESET_LAW_RESPONSE_DELAY_OVERRIDE
   *
  
   * @return {void}
   */
export const RESET_LAW_RESPONSE_DELAY_OVERRIDE = '0x5ce5cacc01d0f985';
/**
   * RESET_PLAYER_ARREST_STATE
   *
   * @param {number} player
   * @return {void}
   */
export const RESET_PLAYER_ARREST_STATE = '0x12917931c31f1750';
/**
   * RESET_PLAYER_INPUT_GAIT
   *
   * @param {number} player
   * @return {void}
   */
export const RESET_PLAYER_INPUT_GAIT = '0x61a2eecab274829b';
/**
   * RESET_WANTED_LEVEL_DIFFICULTY
   *
   * @param {number} player
   * @return {void}
   */
export const RESET_WANTED_LEVEL_DIFFICULTY = '0x062d14f18e8b0cae';
/**
   * RESTORE_PLAYER_STAMINA
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const RESTORE_PLAYER_STAMINA = '0xc41f4b6e23fe6a4a';
/**
   * SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE
   * This can be between 1.0f - 50.0f
   *
   * @param {number} player
   * @param {number} multiplier
   * @return {void}
   */
export const SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE = '0x5da6500fe849da16';
/**
   * SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE_THIS_FRAME
   *
   * @param {number} player
   * @return {void}
   */
export const SET_ALL_NEUTRAL_RANDOM_PEDS_FLEE_THIS_FRAME = '0x16752daa7e6d3f72';
/**
   * SET_ALL_RANDOM_PEDS_FLEE
   * Sets whether all random peds will run away from player if they are agitated (threatened) (bool=true), or some peds can stand up for themselves (bool=false).
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ALL_RANDOM_PEDS_FLEE = '0xe705309b8c6445a4';
/**
   * SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
   *
   * @param {number} player
   * @return {void}
   */
export const SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME = '0xd5c198a62f1deb0a';
/**
   * SET_EVERYONE_IGNORE_PLAYER
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_EVERYONE_IGNORE_PLAYER = '0x34630a768925b852';
/**
   * SET_LAW_RESPONSE_DELAY_OVERRIDE
   *
   * @param {number} p0
   * @return {void}
   */
export const SET_LAW_RESPONSE_DELAY_OVERRIDE = '0xd2dfc9cca5596a11';
/**
   * SET_LOCKON_TO_FRIENDLY_PLAYERS
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_LOCKON_TO_FRIENDLY_PLAYERS = '0x4a056257802dd3e5';
/**
   * SET_MAX_WANTED_LEVEL
   *
   * @param {number} maxWantedLevel
   * @return {void}
   */
export const SET_MAX_WANTED_LEVEL = '0x28a4bd2cee236e19';
/**
   * SET_MIN_TIME_BEFORE_HORSE_BUCKING
   *
   * @param {number} mount
   * @param {number} iMinBuckTime
   * @return {void}
   */
export const SET_MIN_TIME_BEFORE_HORSE_BUCKING = '0x506ce71fb6e8cf5e';
/**
   * SET_PED_AS_TEMP_PLAYER_HORSE
   *
   * @param {number} player
   * @param {number} horse
   * @return {boolean}
   */
export const SET_PED_AS_TEMP_PLAYER_HORSE = '0x227b06324234fb09';
/**
   * SET_PLAYER_CAN_BE_HASSLED_BY_GANGS
   * Sets whether this player can be hassled by gangs.
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PLAYER_CAN_BE_HASSLED_BY_GANGS = '0xc7fe774412046825';
/**
   * SET_PLAYER_CAN_USE_COVER
   * Sets whether this player can take cover.
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PLAYER_CAN_USE_COVER = '0x5eda520f7a3baf4e';
/**
   * SET_PLAYER_CLOTH_PIN_FRAMES
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const SET_PLAYER_CLOTH_PIN_FRAMES = '0xd0d9317dfeef9a66';
/**
   * SET_PLAYER_CONTROL
   * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eSetPlayerControlFlags
   *
   * @param {number} player
   * @param {boolean} toggle
   * @param {number} flags
   * @param {boolean} bPreventHeadingChange
   * @return {void}
   */
export const SET_PLAYER_CONTROL = '0x4d51e59243281d80';
/**
   * SET_PLAYER_FORCED_AIM
   *
   * @param {number} player
   * @param {boolean} toggle
   * @param {number} ped
   * @param {number} p3
   * @param {boolean} p4
   * @return {void}
   */
export const SET_PLAYER_FORCED_AIM = '0xd5fcc166aeb2fd0f';
/**
   * SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER
   *
   * @param {number} player
   * @param {number} regenRate
   * @return {void}
   */
export const SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER = '0x8899c244ebcf70de';
/**
   * SET_PLAYER_INVINCIBLE
   * Simply sets you as invincible (Health will not deplete).
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PLAYER_INVINCIBLE = '0xfebeebc9cbdf4b12';
/**
   * SET_PLAYER_LOCKON
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PLAYER_LOCKON = '0x462aa1973cbba75e';
/**
   * SET_PLAYER_LOCKON_RANGE_OVERRIDE
   * Affects the range of auto aim target.
   *
   * @param {number} player
   * @param {number} range
   * @return {void}
   */
export const SET_PLAYER_LOCKON_RANGE_OVERRIDE = '0x3a3cd06597388322';
/**
   * SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE
   *
   * @param {number} player
   * @return {void}
   */
export const SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE = '0xbec463b3a11c909e';
/**
   * SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE
   *
   * @param {number} player
   * @param {number} vehicle
   * @return {void}
   */
export const SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE = '0xda35a134038557ec';
/**
   * SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER
   *
   * @param {number} player
   * @param {number} modifier
   * @return {void}
   */
export const SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER = '0xe4cb5a3f18170381';
/**
   * SET_PLAYER_MODEL
   * Make sure to request the model first and wait until it has loaded.
   *
   * @param {number} player
   * @param {number} modelHash
   * @param {boolean} p2
   * @return {void}
   */
export const SET_PLAYER_MODEL = '0xed40380076a31506';
/**
   * SET_PLAYER_NOISE_MULTIPLIER
   *
   * @param {number} player
   * @param {number} multiplier
   * @return {void}
   */
export const SET_PLAYER_NOISE_MULTIPLIER = '0xb5ec6bdaebca454c';
/**
   * SET_PLAYER_SIMULATE_AIMING
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PLAYER_SIMULATE_AIMING = '0xe0447def81ccdfd2';
/**
   * SET_PLAYER_SNEAKING_NOISE_MULTIPLIER
   *
   * @param {number} player
   * @param {number} multiplier
   * @return {void}
   */
export const SET_PLAYER_SNEAKING_NOISE_MULTIPLIER = '0x4de44fa389dca565';
/**
   * SET_PLAYER_STAMINA_RECHARGE_MULTIPLIER
   *
   * @param {number} player
   * @param {number} multiplier
   * @return {void}
   */
export const SET_PLAYER_STAMINA_RECHARGE_MULTIPLIER = '0xfeca17cf3343694b';
/**
   * SET_PLAYER_TARGETING_MODE
   * Sets your targeting mode for when you're on foot.
   * enum eTargetingMode
   * {
   *   TARGETING_MODE_INVALID = -1,
   *   TARGETING_MODE_CAUSAL, (Wide)
   *   TARGETING_MODE_NORMAL,
   *   TARGETING_MODE_HARD, (Narrow)
   *   TARGETING_MODE_EXPERT (Free Aim)
   * };
   *
   * @param {number} targetMode
   * @return {void}
   */
export const SET_PLAYER_TARGETING_MODE = '0xd66a941f401e7302';
/**
   * SET_PLAYER_TEAM
   * Sets the player's team.
   *
   * @param {number} player
   * @param {number} team
   * @param {boolean} bRestrictToThisScript
   * @return {void}
   */
export const SET_PLAYER_TEAM = '0xe8dd8536f01de600';
/**
   * SET_PLAYER_WANTED_LEVEL
   * nullsub, doesn't do anything
   *
   * @param {number} player
   * @param {number} wantedLevel
   * @param {boolean} disableNoMission
   * @return {void}
   */
export const SET_PLAYER_WANTED_LEVEL = '0x384d4765395e006c';
/**
   * SET_PLAYER_WEAPON_DAMAGE_MODIFIER
   * This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
   *
   * @param {number} player
   * @param {number} modifier
   * @return {void}
   */
export const SET_PLAYER_WEAPON_DAMAGE_MODIFIER = '0x94d529f7b73d7a85';
/**
   * SET_PLAYER_WEAPON_DEFENSE_MODIFIER
   *
   * @param {number} player
   * @param {number} modifier
   * @return {void}
   */
export const SET_PLAYER_WEAPON_DEFENSE_MODIFIER = '0xd15cc2d493160be3';
/**
   * SET_PLAYER_WEAPON_TYPE_DAMAGE_MODIFIER
   *
   * @param {number} player
   * @param {number} weaponHash
   * @param {number} damageModifier
   * @return {void}
   */
export const SET_PLAYER_WEAPON_TYPE_DAMAGE_MODIFIER = '0xd04ad186ce8bb129';
/**
   * SET_POLICE_RADAR_BLIPS
   * If toggle is set to false:
   *  The police won't be shown on the (mini)map
   * 
   * If toggle is set to true:
   *  The police will be shown on the (mini)map
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_POLICE_RADAR_BLIPS = '0x6fd7dd6b63f2820e';
/**
   * SET_SWIM_MULTIPLIER_FOR_PLAYER
   * Swim speed multiplier.
   * Multiplier goes up to 1.49f
   *
   * @param {number} player
   * @param {number} multiplier
   * @return {void}
   */
export const SET_SWIM_MULTIPLIER_FOR_PLAYER = '0xbfceabde34da5085';
/**
   * SET_WANTED_LEVEL_MULTIPLIER
   *
   * @param {number} multiplier
   * @return {void}
   */
export const SET_WANTED_LEVEL_MULTIPLIER = '0xd7fa719cb54866c2';
/**
   * SIMULATE_PLAYER_INPUT_GAIT
   *
   * @param {number} player
   * @param {number} speed
   * @param {number} duration
   * @param {number} heading
   * @param {boolean} p4
   * @param {boolean} p5
   * @return {void}
   */
export const SIMULATE_PLAYER_INPUT_GAIT = '0xfa0c063c422c4355';
/**
   * START_PLAYER_TELEPORT
   *
   * @param {number} player
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {boolean} p5
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {boolean} p8
   * @return {void}
   */
export const START_PLAYER_TELEPORT = '0xdf8822c55edda65b';
/**
   * STOP_PLAYER_TELEPORT
   * Disables the player's teleportation
   *
  
   * @return {void}
   */
export const STOP_PLAYER_TELEPORT = '0x0858b86146601be8';
/**
   * SUPPRESS_WITNESSES_CALLING_POLICE_THIS_FRAME
   *
   * @param {number} player
   * @return {void}
   */
export const SUPPRESS_WITNESSES_CALLING_POLICE_THIS_FRAME = '0x96722257e5381e00';
/**
   * UPDATE_PLAYER_TELEPORT
   *
   * @param {number} player
   * @return {boolean}
   */
export const UPDATE_PLAYER_TELEPORT = '0xc39dce4672cbfbc1';
/**
   * UPDATE_WANTED_POSITION_THIS_FRAME
   *
   * @param {number} player
   * @return {void}
   */
export const UPDATE_WANTED_POSITION_THIS_FRAME = '0xd0b0b044112bf424';
/**
   * _0x00B156AFEBCC5AE0
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x00B156AFEBCC5AE0 = '0x00b156afebcc5ae0';
/**
   * _SET_PLAYER_WEAPON_DRAW_SPEED
   *
   * @param {number} player
   * @param {number} weapon
   * @param {number} speed
   * @return {void}
   */
export const _SET_PLAYER_WEAPON_DRAW_SPEED = '0x00eb5a760638db55';
/**
   * _0x03B4B759A8990505
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x03B4B759A8990505 = '0x03b4b759a8990505';
/**
   * _SET_PLAYER_PROMPT_LEAVE_TEXT
   * Sets the stand prompt for a specific player using a predefined text entry. use AddTextEntry for promptTextKey for custom names
   *
   * @param {number} player
   * @param {string | number} promptTextKey
   * @return {void}
   */
export const _SET_PLAYER_PROMPT_LEAVE_TEXT = '0x06c3db00b69d5435';
/**
   * _0x06E1FB78B1E59CA5
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x06E1FB78B1E59CA5 = '0x06e1fb78b1e59ca5';
/**
   * _0x086549F3B0381CB1
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x086549F3B0381CB1 = '0x086549f3b0381cb1';
/**
   * _0x0869D499A7848309
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _0x0869D499A7848309 = '0x0869d499a7848309';
/**
   * _0x08E22898A6AF4905
   * _SET_PLAYER_*? some multiplier or modifier for health or statmina ?
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _0x08E22898A6AF4905 = '0x08e22898a6af4905';
/**
   * _0x0B7803F6F7BB43E0
   * Hardcoded to return zero/false.
   *
  
   * @return {any}
   */
export const _0x0B7803F6F7BB43E0 = '0x0b7803f6f7bb43e0';
/**
   * _CLEAR_DEADEYE_AURA_INTENSITY_WITH_FLAG
   * Clears the intensity of aura effects applied to entities for a specific player in Deadeye mode based on a flag parameter. This function is used to reset any intensity modifications set by `_SET_DEADEYE_ENTITY_AURA_INTENSITY_WITH_FLAG - 0x131E294EF60160DF`, restoring affected entities' aura intensity to their default state.
   *
   * @param {number} player
   * @param {number} bitflag
   * @return {void}
   */
export const _CLEAR_DEADEYE_AURA_INTENSITY_WITH_FLAG = '0x0e9057a9da78d0f8';
/**
   * _0x0F4EAF69DA41AF43
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x0F4EAF69DA41AF43 = '0x0f4eaf69da41af43';
/**
   * _0x0F9CF06986300875
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0F9CF06986300875 = '0x0f9cf06986300875';
/**
   * _SET_PLAYER_MELEE_PROMPT_TEXT
   * Sets the melee combat prompt for a specific player using a predefined text entry. use game string or 
   * AddTextEntry("custom_text", "Throw a punch") and use custom_text in the native
   *
   * @param {number} player
   * @param {string | number} label
   * @return {void}
   */
export const _SET_PLAYER_MELEE_PROMPT_TEXT = '0x0faf95d71ed67ade';
/**
   * _0x107F2A66E1C4C83A
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x107F2A66E1C4C83A = '0x107f2a66e1c4c83a';
/**
   * _0x113EF458AB6CDA67
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x113EF458AB6CDA67 = '0x113ef458ab6cda67';
/**
   * _0x12E09E278C6C29B7
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x12E09E278C6C29B7 = '0x12e09e278c6c29b7';
/**
   * _SET_DEADEYE_ENTITY_AURA_INTENSITY_WITH_FLAG
   * Applies a customizable aura effect to nearby entities when Deadeye is active, with control over aura intensity and additional behavior based on a flag parameter.
   * - flag (int): A flag that determines the behavior of the aura effect and which entities are affected. 2: Applies aura to humans. 4: Applies aura to animals.
   *
   * @param {number} player
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} intensity
   * @param {number} flag
   * @return {void}
   */
export const _SET_DEADEYE_ENTITY_AURA_INTENSITY_WITH_FLAG = '0x131e294ef60160df';
/**
   * _0x14E57F88BA0A07FC
   *
   * @param {number} location
   * @return {void}
   */
export const _0x14E57F88BA0A07FC = '0x14e57f88ba0a07fc';
/**
   * _0x19B2C7A6C34FAD54
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x19B2C7A6C34FAD54 = '0x19b2c7a6c34fad54';
/**
   * _GET_PEDS_DAMAGED_BY_PLAYER_RECENTLY
   * it is used to check for that period of time if player damaged any peds only returns the last 3 hits with the entity ids so if you hit the same entity 3 times it will return the same entity id 3 times, if you hit 4 different entities within that time it will return the last 3 entity ids
   *  only stores the last 3 hits in the data view buffer
   * duration is in miliseconds
   * you need dataview
   *
   * @param {number} player
   * @param {number} duration
   * @param {DataView} struct
   * @return {boolean}
   */
export const _GET_PEDS_DAMAGED_BY_PLAYER_RECENTLY = '0x1a6e84f13c952094';
/**
   * _0x1AD8AD999C27F44A
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x1AD8AD999C27F44A = '0x1ad8ad999c27f44a';
/**
   * _0x1D256EED194F5B58
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x1D256EED194F5B58 = '0x1d256eed194f5b58';
/**
   * _EAGLE_EYE_CAN_PLAYER_FOCUS_ON_TRACK
   * Checks if the player can focus on tracks while in Eagle Eye mode. Returns true if the player is able to focus on a track, otherwise false.
   *
   * @param {number} player
   * @return {boolean}
   */
export const _EAGLE_EYE_CAN_PLAYER_FOCUS_ON_TRACK = '0x1da5c5b0923e1b85';
/**
   * _0x1E8099F449ABB0BA
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x1E8099F449ABB0BA = '0x1e8099f449abb0ba';
/**
   * _0x1F488807BC8E0630
   * _RESET_PLAYER_A* - _RESET_PLAYER_I*
   *
   * @param {number} player
   * @return {void}
   */
export const _0x1F488807BC8E0630 = '0x1f488807bc8e0630';
/**
   * _0x1FDA57E8908F2609
   *
   * @param {number} player
   * @param {number} ped
   * @param {boolean} useSteerassist
   * @return {void}
   */
export const _0x1FDA57E8908F2609 = '0x1fda57e8908f2609';
/**
   * _IS_PLAYER_ON_MOUNT_LOCKON_ENTITY
   * This native is used to determine if the player has an active lockon an entity while riding a horse.
   *
   * @param {number} player
   * @return {boolean}
   */
export const _IS_PLAYER_ON_MOUNT_LOCKON_ENTITY = '0x2009f8ab7a5e9d6d';
/**
   * _0x21091B4BEB6376EE
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x21091B4BEB6376EE = '0x21091b4beb6376ee';
/**
   * _0x216BC0D3D2E413D2
   *
   * @param {number} player
   * @param {any} p1
   * @return {void}
   */
export const _0x216BC0D3D2E413D2 = '0x216bc0d3d2e413d2';
/**
   * _0x22B3CABEDDB538B2
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _0x22B3CABEDDB538B2 = '0x22b3cabeddb538b2';
/**
   * _EAGLE_EYE_SET_RANGE
   *
   * @param {number} player
   * @param {number} range
   * @return {void}
   */
export const _EAGLE_EYE_SET_RANGE = '0x22c8b10802301381';
/**
   * _0x263D69767F76059C
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _0x263D69767F76059C = '0x263d69767f76059c';
/**
   * _GET_NUM_DEADEYE_MARKS_ON_PED
   * Retrieves the number of marks placed on a PED when Deadeye mode is active for the specified player. 
   *
   * @param {number} player
   * @param {number} ped
   * @return {number}
   */
export const _GET_NUM_DEADEYE_MARKS_ON_PED = '0x27ad7162d3fed01e';
/**
   * _SET_DEADEYE_ENTITY_AURA_WITH_FLAG
   * Applies a aura effect to nearby entities when Deadeye is active, based on a flag parameter. This includes humans, animals, vehicles, and horses pulling those vehicles. Additionally, depending on the flag value, the player's appearance may change (e.g., turning gray).
   * - flag (int): A flag that determines the behavior of the aura effect. 2 means people 4 means animal etc.
   *
   * @param {number} player
   * @param {number} flag
   * @return {void}
   */
export const _SET_DEADEYE_ENTITY_AURA_WITH_FLAG = '0x2b12b6fc8b8772ab';
/**
   * _0x2BB8D58E88777499
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x2BB8D58E88777499 = '0x2bb8d58e88777499';
/**
   * _0x2BEED53B912537D0
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x2BEED53B912537D0 = '0x2beed53b912537d0';
/**
   * _0x2C2D287748E8E9B7
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x2C2D287748E8E9B7 = '0x2c2d287748e8e9b7';
/**
   * _0x2E1ABE627C95ED9B
   *
  
   * @return {any}
   */
export const _0x2E1ABE627C95ED9B = '0x2e1abe627c95ed9b';
/**
   * _0x2E67707BEC52CA4B
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x2E67707BEC52CA4B = '0x2e67707bec52ca4b';
/**
   * _0x310CE349E0C0EC4B
   *
   * @param {number} player
   * @param {number} ped
   * @param {number} p2
   * @return {void}
   */
export const _0x310CE349E0C0EC4B = '0x310ce349e0c0ec4b';
/**
   * _0x325434C68358D282
   * Only used in script function UPDATE_PLAYER_JUST_DIED_STATE
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x325434C68358D282 = '0x325434c68358d282';
/**
   * _EAGLE_EYE_SET_HIDE_ALL_TRAILS
   * Sets whether all trails are hidden during Eagle Eye mode.
   *
   * @param {number} player
   * @param {boolean} hide
   * @return {void}
   */
export const _EAGLE_EYE_SET_HIDE_ALL_TRAILS = '0x330ca55a3647fa1c';
/**
   * _0x35A33783EC3C3448
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x35A33783EC3C3448 = '0x35a33783ec3c3448';
/**
   * _EAGLE_EYE_GET_TRACKED_PED_ID
   * Retrieves the ID of the ped that the specified player is currently tracking while in Eagle Eye mode.
   *
   * @param {number} player
   * @return {number}
   */
export const _EAGLE_EYE_GET_TRACKED_PED_ID = '0x3813e11a378958a5';
/**
   * _ADD_AMBIENT_PLAYER_INTERACTIVE_FOCUS_PRESET
   * Associates a specific interactive focus mode preset between a player and a ped, with a specified location and target entity.
   * To access all available presets, refer to the file located at: `/update_1.rpf/common/data/interactive_focus_mode_presets.meta`
   *
   * @param {number} player
   * @param {number} ped
   * @param {string | number} preset
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} targetEntity
   * @param {string | number} name
   * @return {void}
   */
export const _ADD_AMBIENT_PLAYER_INTERACTIVE_FOCUS_PRESET = '0x3946fc742ac305cd';
/**
   * _0x39D8D7082BC34B72
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x39D8D7082BC34B72 = '0x39d8d7082bc34b72';
/**
   * _0x3A8611BD7BDE84F7
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3A8611BD7BDE84F7 = '0x3a8611bd7bde84f7';
/**
   * _0x3ACAC8832E77BC93
   * Used in script function INIT_DEADEYE_SLOWDOWN
   *
   * @param {number} player
   * @param {boolean} p1
   * @return {void}
   */
export const _0x3ACAC8832E77BC93 = '0x3acac8832e77bc93';
/**
   * _0x3AD212429E095EFB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3AD212429E095EFB = '0x3ad212429e095efb';
/**
   * _0x3B296934DB026873
   * nullsub, doesn't do anything
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3B296934DB026873 = '0x3b296934db026873';
/**
   * _0x3BB84F812E052C90
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x3BB84F812E052C90 = '0x3bb84f812e052c90';
/**
   * _0x3C4AE8506638C7E2
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3C4AE8506638C7E2 = '0x3c4ae8506638c7e2';
/**
   * _0x3D9DA5C9EFD20D88
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3D9DA5C9EFD20D88 = '0x3d9da5c9efd20d88';
/**
   * _0x3DAABE78A23694BC
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3DAABE78A23694BC = '0x3daabe78a23694bc';
/**
   * _0x45EF176B532CA851
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x45EF176B532CA851 = '0x45ef176b532ca851';
/**
   * _0x497A18F8F88AA9D8
   *
  
   * @return {void}
   */
export const _0x497A18F8F88AA9D8 = '0x497a18f8f88aa9d8';
/**
   * _0x4D1699543B1C023C
   * _SET_SPECIAL_ABILITY_*
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _0x4D1699543B1C023C = '0x4d1699543b1c023c';
/**
   * _0x4DBC4873707E8FD6
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x4DBC4873707E8FD6 = '0x4dbc4873707e8fd6';
/**
   * _0x4EC8BE63B8A5D4EF
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _0x4EC8BE63B8A5D4EF = '0x4ec8be63b8a5d4ef';
/**
   * _0x4F0D2256AAE94EDA
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x4F0D2256AAE94EDA = '0x4f0d2256aae94eda';
/**
   * _0x51139D8C17B16FBC
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x51139D8C17B16FBC = '0x51139d8c17b16fbc';
/**
   * _0x57028FD99886F6F9
   * _IS_PLAYER_D* - _IS_PLAYER_F*
   *
  
   * @return {boolean}
   */
export const _0x57028FD99886F6F9 = '0x57028fd99886f6f9';
/**
   * _0x570A13A4CA2799BB
   * Used in script function INIT_DEADEYE_SLOWDOWN
   *
   * @param {number} player
   * @param {boolean} p1
   * @return {void}
   */
export const _0x570A13A4CA2799BB = '0x570a13a4ca2799bb';
/**
   * _0x57D9991DC1334151
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x57D9991DC1334151 = '0x57d9991dc1334151';
/**
   * _0x585CE159DB46FADB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x585CE159DB46FADB = '0x585ce159db46fadb';
/**
   * _0x5B7B97E99F84138B
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x5B7B97E99F84138B = '0x5b7b97e99f84138b';
/**
   * _0x5C2E5E3CAEEB1F58
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x5C2E5E3CAEEB1F58 = '0x5c2e5e3caeeb1f58';
/**
   * _0x621D1B289CAF5978
   * _IS_PLAYER_S* - _IS_PLAYER_T*
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x621D1B289CAF5978 = '0x621d1b289caf5978';
/**
   * _0x628E742FE1F79C4A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x628E742FE1F79C4A = '0x628e742fe1f79c4a';
/**
   * _0x65887EAC535A0B0C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x65887EAC535A0B0C = '0x65887eac535a0b0c';
/**
   * _0x67659A8F248E0141
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x67659A8F248E0141 = '0x67659a8f248e0141';
/**
   * _0x6852288340B43239
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x6852288340B43239 = '0x6852288340b43239';
/**
   * _0x694FFA4308060CD1
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x694FFA4308060CD1 = '0x694ffa4308060cd1';
/**
   * _0x6C54E69516CC56BD
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x6C54E69516CC56BD = '0x6c54e69516cc56bd';
/**
   * _EAGLE_EYE_ADD_PARTICLE_EFFECT_TO_ENTITY
   * Add a yellow particle to the entity.
   * entity: entity to apply yellow particle
   * entity2: same entity as entit
   * p2: always 
   * p3: always 0
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const _EAGLE_EYE_ADD_PARTICLE_EFFECT_TO_ENTITY = '0x6ecfc621a168424c';
/**
   * _0x6EDB5D08CB03E763
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x6EDB5D08CB03E763 = '0x6edb5d08cb03e763';
/**
   * _HAS_PLAYER_DAMAGED_ANY_PED_RECENTLY
   * this native checks if the player has damaged or killed any ped human/animal recently within the duration passed, either by shooting or even using melee
   * duration is in miliseconds
   *
   * @param {number} player
   * @param {number} duration
   * @return {boolean}
   */
export const _HAS_PLAYER_DAMAGED_ANY_PED_RECENTLY = '0x72ad59f7b7fb6e24';
/**
   * _0x73EB2EF2E92D23BF
   *
  
   * @return {boolean}
   */
export const _0x73EB2EF2E92D23BF = '0x73eb2ef2e92d23bf';
/**
   * _0x747257807B8721CE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x747257807B8721CE = '0x747257807b8721ce';
/**
   * _0x76F7E1BCD623A429
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x76F7E1BCD623A429 = '0x76f7e1bcd623a429';
/**
   * _0x77B0B6D17A3AC9AA
   * nullsub, doesn't do anything
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x77B0B6D17A3AC9AA = '0x77b0b6d17a3ac9aa';
/**
   * _0x77E83C315A3B31CA
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x77E83C315A3B31CA = '0x77e83c315a3b31ca';
/**
   * _0x7AE93C45EC14A166
   * Only used in script function PROCESS_PED_INTERRUPT_DIALOGUE
   * _GET_PLAYER_*
   *
   * @param {number} player
   * @return {[boolean, Ped]}
   */
export const _0x7AE93C45EC14A166 = '0x7ae93c45ec14a166';
/**
   * _0x818241B3EDA84191
   * _SET_PLAYER_DAMAGE_* - _SET_PLAYER_DEFENSE_*
   *
   * @param {number} player
   * @param {boolean} p1
   * @return {void}
   */
export const _0x818241B3EDA84191 = '0x818241b3eda84191';
/**
   * _0x83C989D5B5B5B466
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x83C989D5B5B5B466 = '0x83c989d5b5b5b466';
/**
   * _0x84481018E668E1B8
   *
   * @param {number} player
   * @param {number} ped
   * @param {any} p2
   * @return {void}
   */
export const _0x84481018E668E1B8 = '0x84481018e668e1b8';
/**
   * _0x8591EE69CC3ED257
   * SET_PLAYER_S/T*
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x8591EE69CC3ED257 = '0x8591ee69cc3ed257';
/**
   * _0x8702D9150D9FBB3D
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x8702D9150D9FBB3D = '0x8702d9150d9fbb3d';
/**
   * _0x8F44EBB3BA8F6D44
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8F44EBB3BA8F6D44 = '0x8f44ebb3ba8f6d44';
/**
   * _0x9044835BE9D9DBFE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9044835BE9D9DBFE = '0x9044835be9d9dbfe';
/**
   * _0x9073EC5456651A90
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9073EC5456651A90 = '0x9073ec5456651a90';
/**
   * _0x908D4B72854C8F62
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x908D4B72854C8F62 = '0x908d4b72854c8f62';
/**
   * _0x927861B2C08DBEA5
   * _GET_A* - _GET_C*
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x927861B2C08DBEA5 = '0x927861b2c08dbea5';
/**
   * _0x929DDD5538F3DF1F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x929DDD5538F3DF1F = '0x929ddd5538f3df1f';
/**
   * _0x93624B36E8851B42
   *
   * @param {number} player
   * @return {void}
   */
export const _0x93624B36E8851B42 = '0x93624b36e8851b42';
/**
   * _0x9422743A5BA50E10
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x9422743A5BA50E10 = '0x9422743a5ba50e10';
/**
   * _0x9461A8FAB0378E5B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9461A8FAB0378E5B = '0x9461a8fab0378e5b';
/**
   * _SET_PLAYER_SIT_PROMPT_TEXT
   * Sets the sit prompt for a specific player using a predefined text entry. use game strings like PLAYER_SIT or use custom with
   * AddTextEntry("sit_custom", "Take a seat")
   * this native must be invoked
   * https://imgur.com/gallery/0x988c9045531b9fce-9bTHgkv
   *
   * @param {number} playerId
   * @param {string | number} label
   * @return {void}
   */
export const _SET_PLAYER_SIT_PROMPT_TEXT = '0x988c9045531b9fce';
/**
   * _0x9AFCF9FE1884BF62
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9AFCF9FE1884BF62 = '0x9afcf9fe1884bf62';
/**
   * _0x9FC5A003FB76EDBD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9FC5A003FB76EDBD = '0x9fc5a003fb76edbd';
/**
   * _SET_PLAYER_HAT_ACCESS
   * Sets the player's ability to wear hats based on the specified flag. The flag value determines whether the player can wear all hats or only the ones they own.
   * If the flag is set to 15 and `allow` is true, the player can wear all available hats. However, if you want to restrict the player to wearing only their owned hats (flag 1), you **must first** disable flag 15 by setting it to false, and then set flag 1 to true.
   *
   * @param {number} player
   * @param {number} flag
   * @param {boolean} allow
   * @return {void}
   */
export const _SET_PLAYER_HAT_ACCESS = '0xa0c683284df027c7';
/**
   * _0xA28056CD1B04B250
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @return {void}
   */
export const _0xA28056CD1B04B250 = '0xa28056cd1b04b250';
/**
   * _0xA342495F93B7B838
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA342495F93B7B838 = '0xa342495f93b7b838';
/**
   * _0xA54000D4BFD90BDE
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xA54000D4BFD90BDE = '0xa54000d4bfd90bde';
/**
   * _EAGLE_EYE_ARE_ALL_TRAILS_HIDDEN
   * Retrieves whether all trails are currently hidden during Eagle Eye mode for the specified player.
   *
   * @param {number} player
   * @return {boolean}
   */
export const _EAGLE_EYE_ARE_ALL_TRAILS_HIDDEN = '0xa62bbaae67a05bb0';
/**
   * _0xAAED694CE814817F
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xAAED694CE814817F = '0xaaed694ce814817f';
/**
   * _SET_PLAYER_CAN_PICKUP_HAT
   * Enables or disables the Pick Up prompt for a hat on the ground for the specified player. When set to true, the player will see a prompt to pick up the hat if they are near it.
   *
   * @param {number} player
   * @param {boolean} canPickup
   * @return {void}
   */
export const _SET_PLAYER_CAN_PICKUP_HAT = '0xaca45ddcef6071c4';
/**
   * _0xB15CD2F9932C9AB5
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xB15CD2F9932C9AB5 = '0xb15cd2f9932c9ab5';
/**
   * _0xB331D8A73F9D2BDF
   * _IS_PLAYER_I* - _IS_PLAYER_P*
   *
   * @param {number} player
   * @param {DataView} p1
   * @return {boolean}
   */
export const _0xB331D8A73F9D2BDF = '0xb331d8a73f9d2bdf';
/**
   * _0xBA5CA1FEB5DE0DF6
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0xBA5CA1FEB5DE0DF6 = '0xba5ca1feb5de0df6';
/**
   * _0xBB6EA5D59E926095
   * NPEW__ENUM__EMOTE_CATEGORY_INVALID = -1
   * NPEW__ENUM__EMOTE_CATEGORY_ACTIONS
   * NPEW__ENUM__EMOTE_CATEGORY_ANTAGONIZE
   * NPEW__ENUM__EMOTE_CATEGORY_REACTIONS
   * NPEW__ENUM__EMOTE_CATEGORY_GREET
   * NPEW__ENUM__NUM_EMOTE_CATEGORIES
   * NPEW__ENUM__NUM_DISPLAY_TEXTURES
   *
   * @param {number} category
   * @param {number} emote
   * @return {void}
   */
export const _0xBB6EA5D59E926095 = '0xbb6ea5d59e926095';
/**
   * _SPECIAL_ABILITY_SET_ACTIVATE
   * Activates the special ability for the specified player.
   *
   * @param {number} player
   * @return {void}
   */
export const _SPECIAL_ABILITY_SET_ACTIVATE = '0xbba140062b15a8ac';
/**
   * _EAGLE_EYE_SET_REGISTERED_ENTITY_GLOW
   * Enable/disable a color on the entity in eagle eye mode.
   *
   * @param {number} entity
   * @param {boolean} enable
   * @return {void}
   */
export const _EAGLE_EYE_SET_REGISTERED_ENTITY_GLOW = '0xbc02b3d151d3859f';
/**
   * _0xBD96185264DDAAEA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xBD96185264DDAAEA = '0xbd96185264ddaaea';
/**
   * _0xBEA3A6E5F5F79A6F
   * _GET_PLAYER_I*
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xBEA3A6E5F5F79A6F = '0xbea3a6e5f5f79a6f';
/**
   * _0xBED386157F65942C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xBED386157F65942C = '0xbed386157f65942c';
/**
   * _0xBEFED69CE8317F91
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xBEFED69CE8317F91 = '0xbefed69ce8317f91';
/**
   * _0xC177C827CEFC0AA4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xC177C827CEFC0AA4 = '0xc177c827cefc0aa4';
/**
   * _0xC4873B053054C04B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _0xC4873B053054C04B = '0xc4873b053054c04b';
/**
   * _0xC58CE6824E604DEC
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC58CE6824E604DEC = '0xc58ce6824e604dec';
/**
   * _DISABLE_PLAYER_INTERACTIVE_FOCUS_PRESET
   * Disables the previously set interactive focus mode preset for a given player. see `_SET_PLAYER_INTERACTIVE_FOCUS_PRESET - 0x3C1B1807C7A415D6`
   *
   * @param {number} player
   * @param {string | number} name
   * @return {void}
   */
export const _DISABLE_PLAYER_INTERACTIVE_FOCUS_PRESET = '0xc67a4910425f11f1';
/**
   * _0xC71D07C96946E263
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xC71D07C96946E263 = '0xc71d07c96946e263';
/**
   * _0xC74EB3F2EC169F6B
   * Hardcoded to return zero/false.
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC74EB3F2EC169F6B = '0xc74eb3f2ec169f6b';
/**
   * _0xC900A465364A85D6
   *
   * @param {number} player
   * @return {void}
   */
export const _0xC900A465364A85D6 = '0xc900a465364a85d6';
/**
   * _0xC93A9A45430D484E
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC93A9A45430D484E = '0xc93a9a45430d484e';
/**
   * _0xCA59808E51FD67C4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCA59808E51FD67C4 = '0xca59808e51fd67c4';
/**
   * _0xCB0B9506BC91E441
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCB0B9506BC91E441 = '0xcb0b9506bc91e441';
/**
   * _0xCB61A63AA53D7D22
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCB61A63AA53D7D22 = '0xcb61a63aa53d7d22';
/**
   * _SET_PLAYER_COOPERATE_PROMPT_THIS_FRAME
   * Activates the Surrender prompt for the specified player in the current frame.
   *
   * @param {number} player
   * @param {number} targetPed
   * @param {number} promptOrder
   * @param {boolean} p3
   * @return {void}
   */
export const _SET_PLAYER_COOPERATE_PROMPT_THIS_FRAME = '0xcbb54cc7ffffab86';
/**
   * _0xCD7CA3013FD12749
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCD7CA3013FD12749 = '0xcd7ca3013fd12749';
/**
   * _0xCDDD4B74660E2335
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xCDDD4B74660E2335 = '0xcddd4b74660e2335';
/**
   * _0xCEDC16930526F728
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xCEDC16930526F728 = '0xcedc16930526f728';
/**
   * _0xCFB2EED4FCB7BD77
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xCFB2EED4FCB7BD77 = '0xcfb2eed4fcb7bd77';
/**
   * _SET_PLAYER_AIM_WEAPON
   * Sets the weapon that the specified player will aim with. The weapon must already be assigned to the PED. This also determines the weapon order, specifying which weapon the player will automatically switch to when the current weapon runs out of ammo.
   *
   * @param {number} player
   * @param {number} weapon
   * @param {number} attachSlotId
   * @return {void}
   */
export const _SET_PLAYER_AIM_WEAPON = '0xcffc3eccd7a5cceb';
/**
   * _SET_PLAYER_PICKUP_PROMPT_VISIBLE
   * Shows or hides all Pick Up prompts for the specified player, including the prompt for picking up hats from the ground. When set to true, the player will see Pick Up prompts for all nearby items. If set to false, all Pick Up prompts will be hidden.
   *
   * @param {number} player
   * @param {boolean} enable
   * @return {void}
   */
export const _SET_PLAYER_PICKUP_PROMPT_VISIBLE = '0xd1a70c1e8d1031fe';
/**
   * _0xD1F6B912785BFD35
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xD1F6B912785BFD35 = '0xd1f6b912785bfd35';
/**
   * _0xD288E02E364972D2
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xD288E02E364972D2 = '0xd288e02e364972d2';
/**
   * _ADD_AMBIENT_PLAYER_INTERACTIVE_FOCUS_PRESET_AT_COORDS
   * Adds an interactive focus mode preset between a player and a specific set of coordinates with a target entity.
   * To access all available presets, refer to the file located at:update_1.rpf.common.data.interactive_focus_mode_presets.meta
   * 
   *
   * @param {number} player
   * @param {string | number} preset
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} targetEntity
   * @param {string | number} name
   * @return {Vector3}
   */
export const _ADD_AMBIENT_PLAYER_INTERACTIVE_FOCUS_PRESET_AT_COORDS = '0xd48227263e3d06ae';
/**
   * _0xDA9D7BE231FE865F
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xDA9D7BE231FE865F = '0xda9d7be231fe865f';
/**
   * _0xDAB6A2FC56B7DE65
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xDAB6A2FC56B7DE65 = '0xdab6a2fc56b7de65';
/**
   * _EAGLE_EYE_REMOVE_PARTICLE_EFFECT_FROM_ENTITY
   * Remove yellow particle from the entity when it was set using `0x6ECFC621A168424C` 
   * entity: entity to remove yellow particles
   * entity2: same entity as entity
   * p2: always 0
   *
   * @param {number} entity1
   * @param {number} entity2
   * @param {number} p2
   * @return {void}
   */
export const _EAGLE_EYE_REMOVE_PARTICLE_EFFECT_FROM_ENTITY = '0xdc5e09d012d759c4';
/**
   * _0xDD33A82352C4652F
   *
   * @param {number} player
   * @param {number} ped
   * @param {number} p2
   * @return {void}
   */
export const _0xDD33A82352C4652F = '0xdd33a82352c4652f';
/**
   * _IS_SPECIAL_ABILITY_ENABLED
   * Checks if the player's Deadeye ability is enabled.
   *
   * @param {number} player
   * @return {boolean}
   */
export const _IS_SPECIAL_ABILITY_ENABLED = '0xde6c85975f9d4894';
/**
   * _0xE1D356F5A66D0FFA
   *
   * @param {number} emote
   * @return {boolean}
   */
export const _0xE1D356F5A66D0FFA = '0xe1d356f5a66d0ffa';
/**
   * _0xE50A67C33514A390
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xE50A67C33514A390 = '0xe50a67c33514a390';
/**
   * _EAGLE_EYE_CLEAR_REGISTERED_TRAILS
   * Clears all Eagle Eye trails that were registered for entities associated with the specified player.
   *
   * @param {number} player
   * @return {void}
   */
export const _EAGLE_EYE_CLEAR_REGISTERED_TRAILS = '0xe5d3eb37abc1eb03';
/**
   * _IS_PLAYER_MOUNT_ON_ROAD
   * returns true if the player is on a road while riding a horse but at a certain speed, if you go off road then it returns false or if you go too slow like walking state it also returns false
   *
   * @param {number} player
   * @return {boolean}
   */
export const _IS_PLAYER_MOUNT_ON_ROAD = '0xe631eaf35828fa67';
/**
   * _0xE7F8707269544B29
   * _IS_PLAYER_A* - _IS_PLAYER_BE*
   *
   * @param {number} player
   * @param {number} ped
   * @return {boolean}
   */
export const _0xE7F8707269544B29 = '0xe7f8707269544b29';
/**
   * _RESET_DEADEYE_AURA_EFFECT
   * Resets any aura effects applied to entities for a specific player in Deadeye mode, returning all aura-related visuals to their default state. This function is primarily used to remove any highlighting or aura effects set by `_SET_DEADEYE_ENTITY_AURA_WITH_FLAG - 0x2B12B6FC8B8772AB` and `_SET_DEADEYE_ENTITY_AURA_INTENSITY_WITH_FLAG - 0x131E294EF60160DF`
   *
   * @param {number} player
   * @return {void}
   */
export const _RESET_DEADEYE_AURA_EFFECT = '0xe910932f4b30be23';
/**
   * _GET_DEADEYE_ABILITY_DEPLETION_DELAY
   * Returns the depletion delay value for the Deadeye ability that was previously set using `SetDeadeyeAbilityDepletionDelay - 0x870634493CB4372C`
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_DEADEYE_ABILITY_DEPLETION_DELAY = '0xe92261bd28c0878f';
/**
   * _0xE956C2340A76272E
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xE956C2340A76272E = '0xe956c2340a76272e';
/**
   * _0xEACEBAAE0A33FB3F
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xEACEBAAE0A33FB3F = '0xeacebaae0a33fb3f';
/**
   * _0xEBB6E27AC2FF32DA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0xEBB6E27AC2FF32DA = '0xebb6e27ac2ff32da';
/**
   * _0xEBFF94328FF7A18A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xEBFF94328FF7A18A = '0xebff94328ff7a18a';
/**
   * _0xF21C7A3F3FFBA629
   * _CLEAR_FACIAL_* - _CLEAR_PED_BLOOD*
   *
   * @param {number} player
   * @return {void}
   */
export const _0xF21C7A3F3FFBA629 = '0xf21c7a3f3ffba629';
/**
   * _0xF4CB347D7B5EB0FD
   *
  
   * @return {any}
   */
export const _0xF4CB347D7B5EB0FD = '0xf4cb347d7b5eb0fd';
/**
   * _0xF993373285053D77
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xF993373285053D77 = '0xf993373285053d77';
/**
   * _0xFA437FA0738C370C
   * Params: p1, p2, p3, p4 = 1.f, 0, 0, 0 in R* Scripts
   * _SPECIAL_ABILITY*
   *
   * @param {number} player
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const _0xFA437FA0738C370C = '0xfa437fa0738c370c';
/**
   * _0xFA7DAAE3959E6C7B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xFA7DAAE3959E6C7B = '0xfa7daae3959e6c7b';
/**
   * _ADD_PLAYER_AS_FOLLOW_TARGET
   * Used in script function: NET_AUTO_FOLLOW_UPDATE_LEADER_VALUES
   * followMode:
   * HORSEFOLLOWMODE_AUTO = 0,
   * HORSEFOLLOWMODE_SIDE_ONLY,
   * HORSEFOLLOWMODE_BEHIND_ONLY,
   * HORSEFOLLOWMODE_BEHIND_AND_SIDE,
   * HORSEFOLLOWMODE_BEHIND_CLOSE
   * followPriority:
   * HORSEFOLLOWPRIORITY_STEER_ASSIST = 0,
   * HORSEFOLLOWPRIORITY_AMBIENT,
   * HORSEFOLLOWPRIORITY_NORMAL,
   * HORSEFOLLOWPRIORITY_HIGH
   *
   * @param {number} player
   * @param {number} ped
   * @param {number} p2
   * @param {number} p3
   * @param {number} followMode
   * @param {number} followPriority
   * @param {boolean} p6
   * @return {void}
   */
export const _ADD_PLAYER_AS_FOLLOW_TARGET = '0xac22aa6df4d1c1de';
/**
   * _CLEAR_BOUNTY_TARGET
   *
   * @param {number} player
   * @return {void}
   */
export const _CLEAR_BOUNTY_TARGET = '0x8f2a81c09da9124a';
/**
   * _EAGLE_EYE_DISABLE_TRACKING_TRAIL
   *
   * @param {number} entity
   * @param {string | number} trail
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _EAGLE_EYE_DISABLE_TRACKING_TRAIL = '0x40ab73092c95b5f5';
/**
   * _EAGLE_EYE_SET_COLOR
   * false: default eagleeye color
   * true: green eagleeye color
   *
   * @param {number} player
   * @param {boolean} p1
   * @param {DataView} p2
   * @return {void}
   */
export const _EAGLE_EYE_SET_COLOR = '0x2c41d93f550d5e37';
/**
   * _EAGLE_EYE_SET_CUSTOM_DISTANCE
   *
   * @param {number} entity
   * @param {number} distance
   * @return {void}
   */
export const _EAGLE_EYE_SET_CUSTOM_DISTANCE = '0x907b16b3834c69e2';
/**
   * _EAGLE_EYE_SET_DRAIN_RATE_MODIFIER
   *
   * @param {number} player
   * @param {number} modifier
   * @return {void}
   */
export const _EAGLE_EYE_SET_DRAIN_RATE_MODIFIER = '0xe0d6c2a146a5c993';
/**
   * _EAGLE_EYE_SET_FOCUS_ON_ASSOCIATED_CLUE_TRAIL
   *
   * @param {number} player
   * @param {number} linkedWaypointPed
   * @return {void}
   */
export const _EAGLE_EYE_SET_FOCUS_ON_ASSOCIATED_CLUE_TRAIL = '0x2af423d6ecb2c485';
/**
   * _EAGLEEYE_SET_SPRINT_BEHAVIOR
   * Sets the behavior of sprinting while the Eagleeye feature is active, determining whether sprinting cancels the effect based on the specified parameter.
   *  old name was _EAGLE_EYE_SET_PLUS_FLAG_DISABLED this native can still be used as its declared.
   *
   * @param {number} player
   * @param {boolean} disabled
   * @return {void}
   */
export const _EAGLEEYE_SET_SPRINT_BEHAVIOR = '0xce285a4413b00b7f';
/**
   * _EAGLE_EYE_SET_TRACKING_UPGRADE
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _EAGLE_EYE_SET_TRACKING_UPGRADE = '0xdfc85c5199045026';
/**
   * _EAGLE_EYE_SET_TRACKING_UPGRADE_2
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _EAGLE_EYE_SET_TRACKING_UPGRADE_2 = '0x6fa957d1b55941c1';
/**
   * _ENABLE_CUSTOM_DEADEYE_ABILITY
   *
   * @param {number} player
   * @param {boolean} enable
   * @return {void}
   */
export const _ENABLE_CUSTOM_DEADEYE_ABILITY = '0x95ee1dee1dcd9070';
/**
   * _ENABLE_EAGLEEYE
   * (Un)lock Eagle Eye functionality
   *
   * @param {number} player
   * @param {boolean} enable
   * @return {void}
   */
export const _ENABLE_EAGLEEYE = '0xa63fcad3a6fec6d2';
/**
   * _FORCE_REST_SCENARIO
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _FORCE_REST_SCENARIO = '0xe5a3dd2ff84e1a4b';
/**
   * _FORMAT_PLAYER_NAME_STRING
   *
   * @param {string | number} string
   * @return {string | number}
   */
export const _FORMAT_PLAYER_NAME_STRING = '0x5b6193813e03e4e9';
/**
   * _GET_ACTIVE_HORSE_FOR_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_ACTIVE_HORSE_FOR_PLAYER = '0x46fa0ae18f4c7fa9';
/**
   * _GET_AI_PLAYER_DEFENSE_MODIFIER_AGAINST_AI
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_AI_PLAYER_DEFENSE_MODIFIER_AGAINST_AI = '0x2e78d822208e740a';
/**
   * _GET_CONSTRUCTED_DISCOVERED_CHARACTER_NAME
   * p0: mostly Ped Hashes
   *
   * @param {number} p0
   * @param {boolean} model
   * @param {boolean} outfit
   * @return {number}
   */
export const _GET_CONSTRUCTED_DISCOVERED_CHARACTER_NAME = '0x8e84119a23c16623';
/**
   * _GET_DEADEYE_ABILITY_LEVEL
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_DEADEYE_ABILITY_LEVEL = '0xcce7c695c164c35f';
/**
   * _GET_HAS_PLAYER_DISCOVERED_CHARACTER_NAME_SP
   *
   * @param {number} player
   * @param {number} p1
   * @param {number} discoveryHash
   * @return {boolean}
   */
export const _GET_HAS_PLAYER_DISCOVERED_CHARACTER_NAME_SP = '0x0772f87d7b07719a';
/**
   * _GET_IS_DEADEYE_TAGGING_ENABLED
   *
   * @param {number} player
   * @return {boolean}
   */
export const _GET_IS_DEADEYE_TAGGING_ENABLED = '0x32348719dced2969';
/**
   * _GET_NUM_MARKED_DEADEYE_TARGETS
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_NUM_MARKED_DEADEYE_TARGETS = '0xccd9b77f70d31c9d';
/**
   * _GET_PLAYER_CACHED_DEAD_EYE_AMOUNT
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_CACHED_DEAD_EYE_AMOUNT = '0xdf66a37936d5f3d9';
/**
   * _GET_PLAYER_DEAD_EYE
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_DEAD_EYE = '0xa81d24ae0af99a5e';
/**
   * _GET_PLAYER_DEAD_EYE_METER_LEVEL
   *
   * @param {number} player
   * @param {boolean} p1
   * @return {number}
   */
export const _GET_PLAYER_DEAD_EYE_METER_LEVEL = '0x3a6ae4eee30370fe';
/**
   * _GET_PLAYER_HEALTH
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_HEALTH = '0x0317c947d062854e';
/**
   * _GET_PLAYER_HEALTH_RECHARGE_MULTIPLIER
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_HEALTH_RECHARGE_MULTIPLIER = '0x22cd23bb0c45e0cd';
/**
   * _GET_PLAYER_HUNTING_WAGON
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_HUNTING_WAGON = '0x5ca6bbd4a7d8145e';
/**
   * _GET_PLAYER_MAX_DEAD_EYE
   *
   * @param {number} player
   * @param {any} p1
   * @return {number}
   */
export const _GET_PLAYER_MAX_DEAD_EYE = '0x592f58bc4d2a2cf3';
/**
   * _GET_PLAYER_MOOD
   * See _SET_PLAYER_MOOD
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_MOOD = '0x054473164c012699';
/**
   * _GET_PLAYER_OWNER_OF_MOUNT
   *
   * @param {number} mount
   * @return {number}
   */
export const _GET_PLAYER_OWNER_OF_MOUNT = '0xad03b03737ce6810';
/**
   * _GET_PLAYER_OWNER_OF_VEHICLE
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_PLAYER_OWNER_OF_VEHICLE = '0x7c803bdc8343228d';
/**
   * _GET_PLAYER_PED_2
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_PED_2 = '0x5ebe38a20bc51c27';
/**
   * _GET_PLAYER_REQUIRED_DEAD_EYE_AMOUNT
   * If player has less Dead Eye than required, Dead Eye cant be triggered.
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_REQUIRED_DEAD_EYE_AMOUNT = '0x811a748b1be231ba';
/**
   * _GET_PLAYER_RESET_FLAG
   * playerResetFlag: See 0x9F9A829C6751F3C7
   *
   * @param {number} player
   * @param {number} playerResetFlag
   * @return {boolean}
   */
export const _GET_PLAYER_RESET_FLAG = '0xfe691e89c08937b6';
/**
   * _GET_PLAYER_SPECIAL_ABILITY_MULTIPLIER
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_SPECIAL_ABILITY_MULTIPLIER = '0xab3773e7aa1e9dcc';
/**
   * _GET_PLAYER_STAMINA
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_STAMINA = '0x0ff421e467373fcf';
/**
   * _GET_PLAYER_STAMINA_DEPLETION_MULTIPLIER
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_STAMINA_DEPLETION_MULTIPLIER = '0x68a0389e0718ac8f';
/**
   * _GET_PLAYER_STAMINA_RECHARGE_MULTIPLIER
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_PLAYER_STAMINA_RECHARGE_MULTIPLIER = '0x617d3494ad58200f';
/**
   * _GET_PLAYER_UI_PROMPT_FOR_PED_IS_ENABLED
   * Returns true if PromptType is enabled for ped (mount)
   * Params: See 0x0751D461F06E41CE
   *
   * @param {number} player
   * @param {number} ped
   * @param {number} promptType
   * @param {number} promptMode
   * @return {boolean}
   */
export const _GET_PLAYER_UI_PROMPT_FOR_PED_IS_ENABLED = '0xea8f168a76a0b9bc';
/**
   * _GET_PLAYER_UI_PROMPT_IS_DISABLED
   * Returns false if PromptType is enabled
   * Params: See 0x0751D461F06E41CE
   *
   * @param {number} player
   * @param {number} promptType
   * @param {number} promptMode
   * @return {boolean}
   */
export const _GET_PLAYER_UI_PROMPT_IS_DISABLED = '0x6614f9039bd31931';
/**
   * _GET_PLAYER_WEAPON_DAMAGE
   *
   * @param {number} player
   * @param {number} weaponHash
   * @return {number}
   */
export const _GET_PLAYER_WEAPON_DAMAGE = '0xfe0304050261442c';
/**
   * _GET_SADDLE_HORSE_FOR_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_SADDLE_HORSE_FOR_PLAYER = '0xb48050d326e9a2f3';
/**
   * _GET_TEMP_PLAYER_HORSE
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_TEMP_PLAYER_HORSE = '0xd3f7445cea2e5035';
/**
   * _GET_VEHICLE_OWNED_BY_PLAYER
   *
   * @param {number} player
   * @return {number}
   */
export const _GET_VEHICLE_OWNED_BY_PLAYER = '0xb9050a97594c8832';
/**
   * _GET_WANTED_LEVEL_MULTIPLIER
   * Returns -1.0f if no multiplier has been set
   *
  
   * @return {number}
   */
export const _GET_WANTED_LEVEL_MULTIPLIER = '0xa82964b9d8d6a983';
/**
   * _IS_DEADEYE_ABILITY_LOCKED
   *
   * @param {number} player
   * @param {number} abilityType
   * @return {boolean}
   */
export const _IS_DEADEYE_ABILITY_LOCKED = '0x8a0643b0b4ca276b';
/**
   * _IS_EAGLE_EYE_REGISTERED_FOR_ENTITY
   *
   * @param {number} player
   * @param {number} entity
   * @return {boolean}
   */
export const _IS_EAGLE_EYE_REGISTERED_FOR_ENTITY = '0x0e6846476906c9dd';
/**
   * _IS_PLAYER_FOLLOWING_TARGET
   *
   * @param {number} player
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PLAYER_FOLLOWING_TARGET = '0xe24c64d9aded2ef5';
/**
   * _IS_PLAYER_FREE_FOCUSING
   * Checks if player is focused on any entity
   *
   * @param {number} player
   * @return {boolean}
   */
export const _IS_PLAYER_FREE_FOCUSING = '0x1a51bfe60708e482';
/**
   * _IS_PLAYER_IN_SCOPE
   *
   * @param {number} player
   * @return {boolean}
   */
export const _IS_PLAYER_IN_SCOPE = '0x04d7f33640662fa2';
/**
   * _IS_SECONDARY_SPECIAL_ABILITY_ACTIVE
   *
   * @param {number} player
   * @return {boolean}
   */
export const _IS_SECONDARY_SPECIAL_ABILITY_ACTIVE = '0x45ab66d02b601fa7';
/**
   * _IS_SECONDARY_SPECIAL_ABILITY_ENABLED
   * Returns true if eagle eye is enabled for the player
   *
   * @param {number} player
   * @return {boolean}
   */
export const _IS_SECONDARY_SPECIAL_ABILITY_ENABLED = '0xe022cc1b545f1d9f';
/**
   * _IS_SPECIAL_ABILITY_ACTIVE
   *
   * @param {number} player
   * @return {boolean}
   */
export const _IS_SPECIAL_ABILITY_ACTIVE = '0xb16223cb7da965f0';
/**
   * _MODIFY_INFINITE_TRAIL_VISION
   * Toggle handles wether Deadeye and Eagleeye are infinite or not.
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const _MODIFY_INFINITE_TRAIL_VISION = '0x28a13bf6b05c3d83';
/**
   * _MODIFY_PLAYER_DISCOVERED_CHARACTER_NAME_MP_SET_UNDISCOVERED
   *
   * @param {number} discoveryHash
   * @return {void}
   */
export const _MODIFY_PLAYER_DISCOVERED_CHARACTER_NAME_MP_SET_UNDISCOVERED = '0xfb0e622b401884d3';
/**
   * _MODIFY_PLAYER_UI_PROMPT
   * Params: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptType
   * promptType is mostly 34 (PP_TRACK_ANIMAL), promptMode = 0 (PP_MODE_BLOCK) in R* Scripts
   *
   * @param {number} player
   * @param {number} promptType
   * @param {number} promptMode
   * @param {boolean} disabled
   * @return {void}
   */
export const _MODIFY_PLAYER_UI_PROMPT = '0x0751d461f06e41ce';
/**
   * _MODIFY_PLAYER_UI_PROMPT_FOR_PED
   * Params: See 0x0751D461F06E41CE
   *
   * @param {number} player
   * @param {number} ped
   * @param {number} promptType
   * @param {number} promptMode
   * @param {boolean} enabled
   * @return {void}
   */
export const _MODIFY_PLAYER_UI_PROMPT_FOR_PED = '0xa3db37edf9a74635';
/**
   * _NETWORK_HAS_PLAYER_VALID_PED
   * Returns true if the given player has a valid ped.
   *
   * @param {number} player
   * @return {boolean}
   */
export const _NETWORK_HAS_PLAYER_VALID_PED = '0x0760d6f70ebcc05c';
/**
   * _REGISTER_EAGLE_EYE_FOR_ENTITY
   * Used for setting up eagle eye for entity
   * Params: p2 = re-register or not?
   *
   * @param {number} player
   * @param {number} entity
   * @param {boolean} p2
   * @return {void}
   */
export const _REGISTER_EAGLE_EYE_FOR_ENTITY = '0x543dfe14be720027';
/**
   * _REGISTER_EAGLE_EYE_TRAILS_FOR_ENTITY
   *
   * @param {number} player
   * @param {number} entity
   * @param {any} p2
   * @return {void}
   */
export const _REGISTER_EAGLE_EYE_TRAILS_FOR_ENTITY = '0xac67098a1e54abb0';
/**
   * _REMOVE_PLAYER_AS_FOLLOW_TARGET
   *
   * @param {number} player
   * @param {number} ped
   * @return {void}
   */
export const _REMOVE_PLAYER_AS_FOLLOW_TARGET = '0x0c6b89876262a99d';
/**
   * _SECONDARY_SPECIAL_ABILITY_SET_ACTIVE
   * Activates EagleEye, called together with 0x28A13BF6B05C3D83
   *
   * @param {number} player
   * @return {void}
   */
export const _SECONDARY_SPECIAL_ABILITY_SET_ACTIVE = '0x1710bc33cfb83634';
/**
   * _SECONDARY_SPECIAL_ABILITY_SET_DISABLED
   * Deactivates EagleEye, called together with 0xC0B21F235C02139C
   *
   * @param {number} player
   * @param {boolean} disabled
   * @return {void}
   */
export const _SECONDARY_SPECIAL_ABILITY_SET_DISABLED = '0x64ff4bf9af59e139';
/**
   * _SET_AI_PLAYER_DEFENSE_MODIFIER_AGAINST_AI
   * Sets Player's Defense against AI modifier
   *
   * @param {number} player
   * @param {number} modifier
   * @return {void}
   */
export const _SET_AI_PLAYER_DEFENSE_MODIFIER_AGAINST_AI = '0x914071ff93af2692';
/**
   * _SET_BOUNTY_TARGET
   *
   * @param {number} player
   * @param {number} target
   * @return {void}
   */
export const _SET_BOUNTY_TARGET = '0x6adf821fbf21920e';
/**
   * _SET_BOW_DRAW_REDUCTION_TIME_IN_DEADEYE
   *
   * @param {number} player
   * @param {number} drawReductionTime
   * @return {void}
   */
export const _SET_BOW_DRAW_REDUCTION_TIME_IN_DEADEYE = '0xbe0c524970892d41';
/**
   * _SET_BOW_STAMINA_DRAIN_SPEED
   * Decreases Stamina bar drain speed by % when drawing a bow.
   *
   * @param {number} player
   * @param {number} staminaDrain
   * @return {void}
   */
export const _SET_BOW_STAMINA_DRAIN_SPEED = '0xfe7c9cf376d23342';
/**
   * _SET_DAMAGE_CLOSE_DISTANCE_BONUS
   *
   * @param {number} player
   * @param {number} closeRangeLowerBound
   * @param {number} closeRangeUpperBound
   * @return {void}
   */
export const _SET_DAMAGE_CLOSE_DISTANCE_BONUS = '0x7761a30432c91297';
/**
   * _SET_DAMAGE_CLOSE_DISTANCE_BONUS_TOTAL
   *
   * @param {number} player
   * @param {number} closeDamageBonus
   * @return {void}
   */
export const _SET_DAMAGE_CLOSE_DISTANCE_BONUS_TOTAL = '0x5006c36652d6ec56';
/**
   * _SET_DAMAGE_FAR_DISTANCE_BONUS
   *
   * @param {number} player
   * @param {number} farRangeLowerBound
   * @param {number} farRangeUpperBound
   * @return {void}
   */
export const _SET_DAMAGE_FAR_DISTANCE_BONUS = '0xed591cb17c8ba216';
/**
   * _SET_DAMAGE_FAR_DISTANCE_BONUS_TOTAL
   *
   * @param {number} player
   * @param {number} farDamageBonus
   * @return {void}
   */
export const _SET_DAMAGE_FAR_DISTANCE_BONUS_TOTAL = '0x1f0e3a4434565f8f';
/**
   * _SET_DEADEYE_ABILITY_DEPLETION_DELAY
   * Only used in R* SP Script short_update
   *
   * @param {number} player
   * @param {number} delay
   * @return {void}
   */
export const _SET_DEADEYE_ABILITY_DEPLETION_DELAY = '0x870634493cb4372c';
/**
   * _SET_DEADEYE_ABILITY_LEVEL
   * Max level is 5.
   *
   * @param {number} player
   * @param {number} level
   * @return {void}
   */
export const _SET_DEADEYE_ABILITY_LEVEL = '0xf0fe8e790bfeb5bb';
/**
   * _SET_DEADEYE_ABILITY_LOCKED
   *
   * @param {number} player
   * @param {number} abilityType
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_DEADEYE_ABILITY_LOCKED = '0x2797b8d66dd0ebb8';
/**
   * _SET_DEADEYE_TAGGING_CONFIG
   *
   * @param {number} player
   * @param {number} filter
   * @return {void}
   */
export const _SET_DEADEYE_TAGGING_CONFIG = '0x83fcd6921fc8fd05';
/**
   * _SET_DEADEYE_TAGGING_ENABLED
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_DEADEYE_TAGGING_ENABLED = '0x6b5ddfb967e5073d';
/**
   * _SET_DISABLE_PLAYER_WANTED_LEVEL
   * Disables the players ability to be wanted by lawmen
   *
   * @param {number} player
   * @param {boolean} disable
   * @return {void}
   */
export const _SET_DISABLE_PLAYER_WANTED_LEVEL = '0x8674d138391ffb1b';
/**
   * _SET_LOCAL_PLAYER_PERSONA_ABILITY_FLAG
   * see personaabilities.meta
   * enum ePersonaAbilityFlag
   * {
   *   PERSONA_CAN_AUTOESCAPE_FROM_LASSO,
   *   PERSONA_HAT_BLOCKS_FIRST_HEADSHOT,
   *   PERSONA_FULL_AUTO_FOR_ALL_WEAPONS,
   *   PERSONA_MIGHT_LIVE_AFTER_DEADLY_DAMAGE,
   *   PERSONA_IGNORE_AIM_BEFORE_FIRING_RESTRICTIONS,
   *   PERSONA_DEADEYE_INSTANT_RELOAD,
   *   PERSONA_USE_PHOSPHOROUS_ROUNDS,
   *   PERSONA_CONT_DEADEYE_ON_TAKING_COVER,
   *   PERSONA_CONT_DEADEYE_ON_RELOAD,
   *   PERSONA_CONT_DEADEYE_ON_SHOOTING,
   *   PERSONA_CONT_DEADEYE_ON_EXITING_AIM,
   *   PERSONA_DISABLE_PLAYER_CANCELLING_DEADEYE,
   *   PERSONA_CONT_DEADEYE_ON_RAGDOLL,
   *   PERSONA_USE_EXPLOSIVE_ROUNDS,
   *   PERSONA_EXIT_DEADEYE_ON_TAKING_DAMAGE,
   *   PERSONA_CARRY_TWO_MONEYBAGS,
   *   PERSONA_ABILITY_LONG_PICK_HERBS,
   *   PERSONA_ABILITY_UNBREAKABLE_LASSO,
   *   PERSONA_CONT_DEADEYE_ON_SPRINTING,
   *   PERSONA_CANT_DEAL_HEADSHOTS,
   *   PERSONA_HANGMAN,
   *   PERSONA_ALLOW_DEADEYE_WITH_MELEE_WEAPONS,
   *   PERSONA_ALLOW_DEADEYE_WHILE_UNARMED,
   *   PERSONA_DISABLE_DEADEYE_PERFECT_ACCURACY,
   *   PERSONA_CANT_DEAL_HEADSHOTS_TO_PLAYERS,
   *   PERSONA_CANT_DEAL_CRITICAL_DAMAGE,
   *   PERSONA_CANT_DEAL_CRITICAL_DAMAGE_TO_PLAYERS,
   *   PERSONA_ALLOW_EAGLEEYE_IN_COMBAT,
   *   PERSONA_CONT_EAGLEEYE_ON_SPRINT,
   *   PERSONA_SUPPRESS_LENGENDARY_EAGLEEYE_TRAIL_COLOR
   * };
   *
   * @param {number} flagId
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_LOCAL_PLAYER_PERSONA_ABILITY_FLAG = '0x7146cf430965927c';
/**
   * _SET_LOCKON_FOCUS_FIRE_VFX
   * Focus Fire VFX start for player: p1 = focusfire
   *
   * @param {number} player
   * @param {string | number} p1
   * @return {void}
   */
export const _SET_LOCKON_FOCUS_FIRE_VFX = '0x5f8e0303c229c84b';
/**
   * _SET_MAX_WANTED_LEVEL_2
   *
   * @param {number} maxWantedLevel
   * @return {void}
   */
export const _SET_MAX_WANTED_LEVEL_2 = '0xea6de0cd15aecbe2';
/**
   * _SET_MOUNT_PROMPT_DISABLED
   *
   * @param {boolean} disabled
   * @return {void}
   */
export const _SET_MOUNT_PROMPT_DISABLED = '0x5b9813ecf7633fe8';
/**
   * _SET_PED_ACTIVE_PLAYER_HORSE
   * Seems to work similar to 0xD2CB0FB0FDCB473D
   *
   * @param {number} player
   * @param {number} horse
   * @return {void}
   */
export const _SET_PED_ACTIVE_PLAYER_HORSE = '0x8fbf9edb378ccb8c';
/**
   * _SET_PED_AS_SADDLE_HORSE_FOR_PLAYER
   *
   * @param {number} player
   * @param {number} mount
   * @return {void}
   */
export const _SET_PED_AS_SADDLE_HORSE_FOR_PLAYER = '0xd2cb0fb0fdcb473d';
/**
   * _SET_PLAYER_CAN_MERCY_KILL
   *
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PLAYER_CAN_MERCY_KILL = '0x39363dfd04e91496';
/**
   * _SET_PLAYER_DAMAGE_INFO_OVERRIDE
   * damageInfo: STANDARD_PED_DAMAGE, STANDARD_FEMALE_PED_DAMAGE, STANDARD_PLAYER_PED_DAMAGE_MP, STANDARD_FEMALE_PLAYER_PED_DAMAGE_MP
   *
   * @param {number} player
   * @param {string | number} damageInfo
   * @return {void}
   */
export const _SET_PLAYER_DAMAGE_INFO_OVERRIDE = '0x78b3d19af6391a55';
/**
   * _SET_PLAYER_DEFENSE_MODIFIER
   * Sets stamina core drains peed using ranged damage scale and melee damage scale
   *
   * @param {number} player
   * @param {number} weaponDefenseMod
   * @param {number} meleeDefenseMod
   * @return {void}
   */
export const _SET_PLAYER_DEFENSE_MODIFIER = '0x497a6539bb0e8787';
/**
   * _SET_PLAYER_DEFENSE_TYPE_MODIFIER
   * bullet damage modifier: type = 4
   * explosive damage Defense mod: type = 7
   * fire damage Defense mod: type = 8, 15
   *
   * @param {number} player
   * @param {number} type
   * @param {number} defenseModifier
   * @return {void}
   */
export const _SET_PLAYER_DEFENSE_TYPE_MODIFIER = '0x93f499cae53fcd05';
/**
   * _SET_PLAYER_EXPLOSIVE_WEAPON_DAMAGE_MODIFIER
   *
   * @param {number} player
   * @param {number} modifier
   * @return {void}
   */
export const _SET_PLAYER_EXPLOSIVE_WEAPON_DAMAGE_MODIFIER = '0x2d3ace3de0a2b622';
/**
   * _SET_PLAYER_HAS_DISCOVERED_CHARACTER_NAME_MP
   *
   * @param {number} discoveryHash
   * @return {void}
   */
export const _SET_PLAYER_HAS_DISCOVERED_CHARACTER_NAME_MP = '0x7c32191d9fb2bdea';
/**
   * _SET_PLAYER_HAS_DISCOVERED_CHARACTER_NAME_SP
   *
   * @param {number} player
   * @param {number} p1
   * @param {number} discoveryHash
   * @return {void}
   */
export const _SET_PLAYER_HAS_DISCOVERED_CHARACTER_NAME_SP = '0x946d46cd6dfb9742';
/**
   * _SET_PLAYER_HEALTH_RECHARGE_TIME_MODIFIER
   * Setting player's Health recharge time to zero forces immediate health regen
   *
   * @param {number} player
   * @param {number} modifier
   * @return {void}
   */
export const _SET_PLAYER_HEALTH_RECHARGE_TIME_MODIFIER = '0x535ed4605f89ab6e';
/**
   * _SET_PLAYER_HUNTING_WAGON
   * Only applies to HUNTERCART01
   *
   * @param {number} player
   * @param {number} wagon
   * @return {void}
   */
export const _SET_PLAYER_HUNTING_WAGON = '0x6a4404bdfa62ce2c';
/**
   * _SET_PLAYER_INTERACTION_NEGATIVE_RESPONSE
   *
   * @param {number} player
   * @param {string | number} speech
   * @return {void}
   */
export const _SET_PLAYER_INTERACTION_NEGATIVE_RESPONSE = '0x98cd760de43b612e';
/**
   * _SET_PLAYER_INTERACTION_POSITIVE_RESPONSE
   *
   * @param {number} player
   * @param {string | number} speech
   * @return {void}
   */
export const _SET_PLAYER_INTERACTION_POSITIVE_RESPONSE = '0xc6366a585659d15c';
/**
   * _SET_PLAYER_IN_VEHICLE_TARGETING_MODE
   * Sets your targeting mode for when you're in a vehicle (perhaps a mount/horse).
   * see SET_PLAYER_TARGETING_MODE for eTargetingMode
   *
   * @param {number} targetMode
   * @return {void}
   */
export const _SET_PLAYER_IN_VEHICLE_TARGETING_MODE = '0x19b4f71703902238';
/**
   * _SET_PLAYER_LASSO_DAMAGE_PER_SECOND
   * _SET_PLAYER_A* - _SET_PLAYER_C*
   *
   * @param {number} player
   * @param {number} damage
   * @return {void}
   */
export const _SET_PLAYER_LASSO_DAMAGE_PER_SECOND = '0x43f50a7cd2482156';
/**
   * _SET_PLAYER_LOCAL_ACCURACY_FLOOR_MODIFIER
   *
   * @param {number} player
   * @param {number} accuracy
   * @return {void}
   */
export const _SET_PLAYER_LOCAL_ACCURACY_FLOOR_MODIFIER = '0x4ea69188fbce6a7d';
/**
   * _SET_PLAYER_MANAGE_BUFF_SUPER_JUMP
   *
   * @param {number} player
   * @param {number} p1
   * @return {void}
   */
export const _SET_PLAYER_MANAGE_BUFF_SUPER_JUMP = '0x292f0b6edc82e3a4';
/**
   * _SET_PLAYER_MAX_AMMO_OVERRIDE_FOR_AMMO_TYPE
   *
   * @param {number} player
   * @param {number} ammoType
   * @param {number} amount
   * @return {void}
   */
export const _SET_PLAYER_MAX_AMMO_OVERRIDE_FOR_AMMO_TYPE = '0xe133c1ec5300f740';
/**
   * _SET_PLAYER_MOOD
   * mood: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePedMood
   *
   * @param {number} player
   * @param {number} mood
   * @return {void}
   */
export const _SET_PLAYER_MOOD = '0x39bed552db46ffa9';
/**
   * _SET_PLAYER_MOUNT_STATE_ACTIVE
   * Name could potentially be inaccurate.
   * Used in Script Function HORSE_SETUP_PLAYER_HORSE_ATTRIBUTES (p1 = true)
   * _SET_PLAYER_L* - _SET_PLAYER_M*
   *
   * @param {number} player
   * @param {boolean} active
   * @return {void}
   */
export const _SET_PLAYER_MOUNT_STATE_ACTIVE = '0xdf93973251fb2ca5';
/**
   * _SET_PLAYER_OWNS_MOUNT
   * Seems to enable active horse equipment prompt when being near it and enables the control that opens the inventory as well
   *
   * @param {number} player
   * @param {number} mount
   * @return {void}
   */
export const _SET_PLAYER_OWNS_MOUNT = '0xe6d4e435b56d5bd0';
/**
   * _SET_PLAYER_OWNS_VEHICLE
   *
   * @param {number} player
   * @param {number} vehicle
   * @return {void}
   */
export const _SET_PLAYER_OWNS_VEHICLE = '0xd0e02aa618020d17';
/**
   * _SET_PLAYER_REMOTE_ACCURACY_FLOOR_MODIFIER
   *
   * @param {number} player
   * @param {number} accuracy
   * @return {void}
   */
export const _SET_PLAYER_REMOTE_ACCURACY_FLOOR_MODIFIER = '0xdee80fedfdd43c9b';
/**
   * _SET_PLAYER_RESET_FLAG
   * https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePlayerResetFlags
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/PLAYER_RESET_FLAGS
   *
   * @param {number} player
   * @param {number} playerResetFlag
   * @param {boolean} p2
   * @return {void}
   */
export const _SET_PLAYER_RESET_FLAG = '0x9f9a829c6751f3c7';
/**
   * _SET_PLAYER_STAMINA_SPRINT_DEPLETION_MULTIPLIER
   *
   * @param {number} player
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_PLAYER_STAMINA_SPRINT_DEPLETION_MULTIPLIER = '0xbbadfb5e5e5766fb';
/**
   * _SET_PLAYER_DEAD_EYE_AURA_BY_HASH
   * Sets the aura color for entities that the player can target in Deadeye mode, based on a specific hash value. This Native was previously named `SetPlayerStatFlagHash`, but it has been re-evaluated and renamed to better reflect its function in controlling the Deadeye aura color for targeted entities
   * some colors
   * 0: Default aura
   * 1014693585
   * 1936842089
   * 1979474018
   *
   * @param {number} player
   * @param {number} auraColorHash
   * @return {void}
   */
export const _SET_PLAYER_DEAD_EYE_AURA_BY_HASH = '0x768e81ae285a4b67';
/**
   * _SET_PLAYER_TOTAL_ACCURACY_MODIFIER
   *
   * @param {number} player
   * @param {number} accuracy
   * @return {void}
   */
export const _SET_PLAYER_TOTAL_ACCURACY_MODIFIER = '0x967ff5bc0cfe6d26';
/**
   * _SET_PLAYER_TRAMPLE_DAMAGE_MODIFIER
   *
   * @param {number} player
   * @param {number} modifier
   * @return {void}
   */
export const _SET_PLAYER_TRAMPLE_DAMAGE_MODIFIER = '0xaf341032e97fb061';
/**
   * _SET_PLAYER_WEAPON_GROUP_AS_INSTANT_KILL
   *
   * @param {number} player
   * @param {number} weaponGroup
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PLAYER_WEAPON_GROUP_AS_INSTANT_KILL = '0x59f0aff3e0a1b019';
/**
   * _SET_PLAYER_WEAPON_GROUP_DAMAGE_MODIFIER
   *
   * @param {number} player
   * @param {number} weaponGroup
   * @param {number} modifier
   * @return {void}
   */
export const _SET_PLAYER_WEAPON_GROUP_DAMAGE_MODIFIER = '0xfc79dcc94d0a5897';
/**
   * _SET_RECEIVED_DAMAGE_TAKEN_ON_HORSEBACK_MODIFIER
   * Decreases the damage the player receives while on horseback
   * Previous name: _SET_RECEIVED_HORSEBACK_DAMAGE_DECREASE
   *
   * @param {number} player
   * @param {number} damageDecrease
   * @return {void}
   */
export const _SET_RECEIVED_DAMAGE_TAKEN_ON_HORSEBACK_MODIFIER = '0xb427911ea6dffef3';
/**
   * _SET_SHOW_INFO_CARD
   *
   * @param {number} player
   * @param {boolean} showingInfoCard
   * @return {void}
   */
export const _SET_SHOW_INFO_CARD = '0xdc68829bb3f37023';
/**
   * _SET_SPECIAL_ABILITY_ACTIVATION_COST
   *
   * @param {number} player
   * @param {number} activationCost
   * @param {number} p2
   * @return {void}
   */
export const _SET_SPECIAL_ABILITY_ACTIVATION_COST = '0xae4bcc79c587ebbf';
/**
   * _SET_SPECIAL_ABILITY_DISABLE_TIMER
   * Only used in R* SP Script short_update
   *
   * @param {number} player
   * @param {number} timer
   * @return {void}
   */
export const _SET_SPECIAL_ABILITY_DISABLE_TIMER = '0xc0b1c05b313693d1';
/**
   * _SET_SPECIAL_ABILITY_DURATION_COST
   * durationCost: per second
   *
   * @param {number} player
   * @param {number} durationCost
   * @return {void}
   */
export const _SET_SPECIAL_ABILITY_DURATION_COST = '0xb783f75940b23014';
/**
   * _SET_SPECIAL_ABILITY_MULTIPLIER
   *
   * @param {number} player
   * @param {number} multiplier
   * @return {void}
   */
export const _SET_SPECIAL_ABILITY_MULTIPLIER = '0x5a498fca232f71e1';
/**
   * _SET_SPECIAL_ABILITY_TYPE
   * SPECIAL_ABILITY_NONE = -1,
   * SPECIAL_ABILITY_CAR_SLOWDOWN,
   * SPECIAL_ABILITY_RAGE,
   * SPECIAL_ABILITY_BULLET_TIME,
   * SPECIAL_ABILITY_SNAPSHOT,
   * SPECIAL_ABILITY_INSULT,
   * SPECIAL_ABILITY_DEADEYE,
   * SPECIAL_ABILITY_REVIVE
   *
   * @param {number} player
   * @param {number} type
   * @return {void}
   */
export const _SET_SPECIAL_ABILITY_TYPE = '0x00ba333da05adc23';
/**
   * _SET_USED_ITEM_EFFECT
   *
   * @param {number} health
   * @param {number} stamina
   * @param {number} deadeye
   * @param {number} healthCore
   * @param {number} staminaCore
   * @param {number} deadeyeCore
   * @return {void}
   */
export const _SET_USED_ITEM_EFFECT = '0x0e1db1f8f5b561dc';
/**
   * _SET_WEAPON_DEGRADATION_MODIFIER
   *
   * @param {number} player
   * @param {number} modifier
   * @return {void}
   */
export const _SET_WEAPON_DEGRADATION_MODIFIER = '0x11a7ff918ef6bc66';
/**
   * _SPECIAL_ABILITY_DRAIN_BY_AMOUNT
   * Drains Deadeye by given amount.
   *
   * @param {number} player
   * @param {number} amount
   * @param {any} p2
   * @return {void}
   */
export const _SPECIAL_ABILITY_DRAIN_BY_AMOUNT = '0x200114e99552462b';
/**
   * _SPECIAL_ABILITY_GET_AMOUNT_CACHED
   * Returns Deadeye value from player
   *
   * @param {number} player
   * @return {number}
   */
export const _SPECIAL_ABILITY_GET_AMOUNT_CACHED = '0x029884fb65821b07';
/**
   * _SPECIAL_ABILITY_RESTORE_BY_AMOUNT
   * Restores Deadeye by given amount.
   * Params: p2, p3, p4 = 0, 0, 1 in R* Scripts
   *
   * @param {number} player
   * @param {number} amount
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const _SPECIAL_ABILITY_RESTORE_BY_AMOUNT = '0x51345ae20f22c261';
/**
   * _SPECIAL_ABILITY_RESTORE_OUTER_RING
   * Only used in R* SP Script short_update
   * Restores Deadeye Outer Ring
   *
   * @param {number} player
   * @param {number} amount
   * @return {void}
   */
export const _SPECIAL_ABILITY_RESTORE_OUTER_RING = '0x2498035289b5688f';
/**
   * _SPECIAL_ABILITY_SET_DISABLED
   *
   * @param {number} player
   * @param {boolean} disabled
   * @return {void}
   */
export const _SPECIAL_ABILITY_SET_DISABLED = '0xae637bb8ef017875';
/**
   * _SPECIAL_ABILITY_SET_EAGLE_EYE_DISABLED
   *
   * @param {number} player
   * @return {void}
   */
export const _SPECIAL_ABILITY_SET_EAGLE_EYE_DISABLED = '0xc0b21f235c02139c';
/**
   * _SPECIAL_ABILITY_START_RESTORE
   * Params: p1 = -1 in R* Scripts
   *
   * @param {number} player
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _SPECIAL_ABILITY_START_RESTORE = '0x1d77b47afa584e90';
/**
   * _UNREGISTER_EAGLE_EYE_FOR_ENTITY
   *
   * @param {number} player
   * @param {number} entity
   * @return {void}
   */
export const _UNREGISTER_EAGLE_EYE_FOR_ENTITY = '0x9dae1380cc5c6451';
/**
   * _UNREGISTER_EAGLE_EYE_TRAILS_FOR_ENTITY
   *
   * @param {number} player
   * @param {number} entity
   * @param {any} p2
   * @return {void}
   */
export const _UNREGISTER_EAGLE_EYE_TRAILS_FOR_ENTITY = '0x9a957912ce2eabd1';
/**
   * CLEAR_SPAWNER_INFO_PRIORITY
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const CLEAR_SPAWNER_INFO_PRIORITY = '0x217a54de2d200305';
/**
   * DISABLE_AMBIENT_ROAD_POPULATION
   *
   * @param {boolean} unk
   * @return {void}
   */
export const DISABLE_AMBIENT_ROAD_POPULATION = '0xc6dcc2a3a8825c85';
/**
   * ENABLE_AMBIENT_ROAD_POPULATION
   *
  
   * @return {void}
   */
export const ENABLE_AMBIENT_ROAD_POPULATION = '0xbc90bdf4e5228ea1';
/**
   * GET_NUM_MODELS_IN_POPULATION_SET
   *
   * @param {number} popSetHash
   * @return {number}
   */
export const GET_NUM_MODELS_IN_POPULATION_SET = '0xa1e3171ed0e47564';
/**
   * GET_PED_MODEL_NAME_IN_POPULATION_SET
   *
   * @param {number} popSetHash
   * @param {number} index
   * @return {number}
   */
export const GET_PED_MODEL_NAME_IN_POPULATION_SET = '0x3eafa1c533b7139e';
/**
   * GET_RANDOM_MODEL_FROM_POPULATION_SET
   *
   * @param {number} popSetHash
   * @param {number} flags
   * @param {number} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const GET_RANDOM_MODEL_FROM_POPULATION_SET = '0x6b12ed8c77e8567b';
/**
   * SET_POPZONE_POPULATION_SET
   *
   * @param {number} popZone
   * @param {number} populationSetHash
   * @return {void}
   */
export const SET_POPZONE_POPULATION_SET = '0x3e6a49d9b519e85c';
/**
   * SET_SPAWNER_INFO_PRIORITY
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} priority
   * @return {void}
   */
export const SET_SPAWNER_INFO_PRIORITY = '0x60cde717a6d47769';
/**
   * _0x08892122769770D5
   *
   * @param {number} popZone
   * @param {boolean} p1
   * @return {void}
   */
export const _0x08892122769770D5 = '0x08892122769770d5';
/**
   * _0x0F1861101C9A9944
   *
   * @param {number} popZone
   * @param {boolean} p1
   * @return {void}
   */
export const _0x0F1861101C9A9944 = '0x0f1861101c9a9944';
/**
   * _0x2161278C6322F740
   *
   * @param {number} includeFlags
   * @param {number} excludeFlags
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} volume
   * @return {void}
   */
export const _0x2161278C6322F740 = '0x2161278c6322f740';
/**
   * _0x247F86595D396344
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x247F86595D396344 = '0x247f86595d396344';
/**
   * _0x2660E7720EDC4BD0
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x2660E7720EDC4BD0 = '0x2660e7720edc4bd0';
/**
   * _0x324AB2A68AD8AEE5
   *
  
   * @return {void}
   */
export const _0x324AB2A68AD8AEE5 = '0x324ab2a68ad8aee5';
/**
   * _0x578E2FA64E847C60
   *
   * @param {number} popZone
   * @param {number} p1
   * @return {void}
   */
export const _0x578E2FA64E847C60 = '0x578e2fa64e847c60';
/**
   * _0x638FCFC6042A9473
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x638FCFC6042A9473 = '0x638fcfc6042a9473';
/**
   * _0x7E6BC0B94F5928F0
   *
   * @param {number} popZone
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x7E6BC0B94F5928F0 = '0x7e6bc0b94f5928f0';
/**
   * _0x8EC7CD701F872F87
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0x8EC7CD701F872F87 = '0x8ec7cd701f872f87';
/**
   * _0xC4533E3E87125C9E
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC4533E3E87125C9E = '0xc4533e3e87125c9e';
/**
   * _0xDBBF12EA7C1029B2
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xDBBF12EA7C1029B2 = '0xdbbf12ea7c1029b2';
/**
   * _0xEC116EDB683AD479
   * Only used for Special Event (XMAS).
   * _SET_P*
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0xEC116EDB683AD479 = '0xec116edb683ad479';
/**
   * _0xF45E46DEECF7DF6E
   *
   * @param {number} bitFlag
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0xF45E46DEECF7DF6E = '0xf45e46deecf7df6e';
/**
   * _ADD_AMBIENT_AVOIDANCE_RESTRICTION
   * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PedFilterFlags
   *
   * @param {number} volume
   * @param {number} includeFlags
   * @param {number} excludeFlags
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @return {void}
   */
export const _ADD_AMBIENT_AVOIDANCE_RESTRICTION = '0xb56d41a694e42e86';
/**
   * _ADD_AMBIENT_SPAWN_RESTRICTION
   * flags: see 0xB56D41A694E42E86
   *
   * @param {number} volume
   * @param {number} includeFlags
   * @param {number} excludeFlags
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @return {void}
   */
export const _ADD_AMBIENT_SPAWN_RESTRICTION = '0x18262cafebb5fbe1';
/**
   * _CREATE_POPZONE_FROM_VOLUME
   *
   * @param {number} volume
   * @return {number}
   */
export const _CREATE_POPZONE_FROM_VOLUME = '0x9ac1c64fe46b6d09';
/**
   * _DELETE_SCRIPT_POPZONE
   *
   * @param {number} popZone
   * @return {void}
   */
export const _DELETE_SCRIPT_POPZONE = '0xa6e6a66fc4ca4224';
/**
   * _GET_RANDOM_FISH_TYPE_FOR_LOCATION
   * Returns model hash of the closest fish
   *
  
   * @return {number}
   */
export const _GET_RANDOM_FISH_TYPE_FOR_LOCATION = '0x595478b3bbc3076d';
/**
   * _IS_POPZONE_VALID
   *
   * @param {number} popZone
   * @return {boolean}
   */
export const _IS_POPZONE_VALID = '0xa5bd585005efcad4';
/**
   * _REMOVE_AMBIENT_AVOIDANCE_RESTRICTION
   * flags: see 0xB56D41A694E42E86
   *
   * @param {number} volume
   * @return {void}
   */
export const _REMOVE_AMBIENT_AVOIDANCE_RESTRICTION = '0x74c2b3dc0b294102';
/**
   * _REMOVE_AMBIENT_SPAWN_RESTRICTION
   *
   * @param {number} volume
   * @return {void}
   */
export const _REMOVE_AMBIENT_SPAWN_RESTRICTION = '0xa1cfb35069d23c23';
/**
   * _SET_PED_SHOULD_IGNORE_AVOIDANCE_VOLUMES
   * Params: p1 = 1 & 2 in R* Scripts, 0 = Disable avoidance, 1 = Enabled avoidance, 2 = Enabled avoidance (?)
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _SET_PED_SHOULD_IGNORE_AVOIDANCE_VOLUMES = '0xf74e134f40192884';
/**
   * POSSE_GET_POSSE_MEMBERSHIP_COUNT
   *
  
   * @return {number}
   */
export const POSSE_GET_POSSE_MEMBERSHIP_COUNT = '0xc088ff658b2e51da';
/**
   * _0xC06CFF658B2E51DA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xC06CFF658B2E51DA = '0xc06cff658b2e51da';
/**
   * _0xC07CFF658B2E51DA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xC07CFF658B2E51DA = '0xc07cff658b2e51da';
/**
   * _0xC084FF658B2E52DA
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC084FF658B2E52DA = '0xc084ff658b2e52da';
/**
   * _0xC084FF658B2E53DA
   *
  
   * @return {any}
   */
export const _0xC084FF658B2E53DA = '0xc084ff658b2e53da';
/**
   * _0xC084FF658B2E54DA
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC084FF658B2E54DA = '0xc084ff658b2e54da';
/**
   * _0xC084FF658B2E55DA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xC084FF658B2E55DA = '0xc084ff658b2e55da';
/**
   * _0xC084FF658B2E61DA
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC084FF658B2E61DA = '0xc084ff658b2e61da';
/**
   * _0xC084FF658B2E71DA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xC084FF658B2E71DA = '0xc084ff658b2e71da';
/**
   * _0xC084FF658B2E81DA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xC084FF658B2E81DA = '0xc084ff658b2e81da';
/**
   * _0xC086FF658B2E51DA
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC086FF658B2E51DA = '0xc086ff658b2e51da';
/**
   * _0xC086FF658B2E51DB
   *
  
   * @return {any}
   */
export const _0xC086FF658B2E51DB = '0xc086ff658b2e51db';
/**
   * _0xC087FF658B2E51DA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xC087FF658B2E51DA = '0xc087ff658b2e51da';
/**
   * _0xC089FF658B2E51DA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xC089FF658B2E51DA = '0xc089ff658b2e51da';
/**
   * _0xC08AFF658B2E51DA
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC08AFF658B2E51DA = '0xc08aff658b2e51da';
/**
   * _0xC08AFF658B2E51DB
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC08AFF658B2E51DB = '0xc08aff658b2e51db';
/**
   * _0xC08BFF658B2E51DA
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC08BFF658B2E51DA = '0xc08bff658b2e51da';
/**
   * _0xC08CFF658B2E51DA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xC08CFF658B2E51DA = '0xc08cff658b2e51da';
/**
   * _0xC08DEF658B2E51DA
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC08DEF658B2E51DA = '0xc08def658b2e51da';
/**
   * _0xC08DFF658B2E51DA
   *
  
   * @return {any}
   */
export const _0xC08DFF658B2E51DA = '0xc08dff658b2e51da';
/**
   * _0xC08DFF658B2E51DB
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC08DFF658B2E51DB = '0xc08dff658b2e51db';
/**
   * _0xC08EFF658B2E51DB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xC08EFF658B2E51DB = '0xc08eff658b2e51db';
/**
   * _0xC08FFF658B2E51DA
   *
  
   * @return {any}
   */
export const _0xC08FFF658B2E51DA = '0xc08fff658b2e51da';
/**
   * _0xC08FFF658B2E51DB
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xC08FFF658B2E51DB = '0xc08fff658b2e51db';
/**
   * _0xC09CFF658B2E51DA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xC09CFF658B2E51DA = '0xc09cff658b2e51da';
/**
   * _0xC184FF658B2E55DA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xC184FF658B2E55DA = '0xc184ff658b2e55da';
/**
   * _0xC284FF658B2E55DA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xC284FF658B2E55DA = '0xc284ff658b2e55da';
/**
   * _0xC394FF658B2E55DA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0xC394FF658B2E55DA = '0xc394ff658b2e55da';
/**
   * _0xC484FF658B2E55DA
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC484FF658B2E55DA = '0xc484ff658b2e55da';
/**
   * _0xC584FF658B2E55DA
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC584FF658B2E55DA = '0xc584ff658b2e55da';
/**
   * _0xC684FF658B2E55DA
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC684FF658B2E55DA = '0xc684ff658b2e55da';
/**
   * CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY
   *
   * @param {number} hash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} entity
   * @param {number} p5
   * @param {boolean} p6
   * @param {number} p7
   * @param {boolean} p8
   * @return {number}
   */
export const CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY = '0x9609dbdde18fad8c';
/**
   * DOES_PROP_SET_EXIST
   *
   * @param {number} propSet
   * @return {boolean}
   */
export const DOES_PROP_SET_EXIST = '0x7dddcf815e650ff5';
/**
   * IS_PROP_SET_FULLY_LOADED
   *
   * @param {number} propSet
   * @return {boolean}
   */
export const IS_PROP_SET_FULLY_LOADED = '0xf42db680a8b2a4d9';
/**
   * _0x58E0B01D45CA7357
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x58E0B01D45CA7357 = '0x58e0b01d45ca7357';
/**
   * _MODIFY_PROPSET_COORDS_AND_HEADING
   * Relocates an existing prop set to specified coordinates and adjusts its heading (rotation) without affecting the prop set's internal layout or structure. The `propSet` parameter identifies the prop set to move. The parameters (`coordsX`, `coordsY`, `coordsZ`) set the new central position of the prop set, while `heading` specifies its rotation around the Z-axis (in degrees). When `onGroundProperly` is true, the prop set automatically aligns accurately with the terrain
   *
   * @param {number} propset
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {boolean} onGroundProperly
   * @param {number} heading
   * @return {void}
   */
export const _MODIFY_PROPSET_COORDS_AND_HEADING = '0xc4b67ef3fd65622d';
/**
   * _ADD_ADDITIONAL_PROP_SET_FOR_VEHICLE
   * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_propsets.lua
   *
   * @param {number} vehicle
   * @param {number} propset
   * @return {void}
   */
export const _ADD_ADDITIONAL_PROP_SET_FOR_VEHICLE = '0x75f90e4051cc084c';
/**
   * _ADD_LIGHT_PROP_SET_TO_VEHICLE
   * To remove propsets either parse a zero as hash or call 0xE31C0CB1C3186D40
   * 0xA6A9712955F53D9C returns lightPropset Hashes
   * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_lantern_propsets.lua
   *
   * @param {number} vehicle
   * @param {number} lightPropset
   * @return {void}
   */
export const _ADD_LIGHT_PROP_SET_TO_VEHICLE = '0xc0f0417a90402742';
/**
   * _ADD_PROP_SET_FOR_VEHICLE
   * List of vehicle propsets (wagons & trains): https://pastebin.com/1CsnvGLu / https://pastebin.com/v7TtqTgE
   *
   * @param {number} vehicle
   * @param {number} propset
   * @return {void}
   */
export const _ADD_PROP_SET_FOR_VEHICLE = '0xd80faf919a2e56ea';
/**
   * _CREATE_PROP_SET
   * propsetType: https://github.com/femga/rdr3_discoveries/blob/master/objects/propsets_list.lua
   * placementType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PlacementType
   *
   * @param {number} propsetType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} placementType
   * @param {number} heading
   * @param {number} zProbe
   * @param {boolean} p7
   * @param {boolean} useVegMod
   * @return {number}
   */
export const _CREATE_PROP_SET = '0xe65c5cba95f0e510';
/**
   * _CREATE_PROP_SET_2
   * Same as _CREATE_PROP_SET
   *
   * @param {number} propsetType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} placementType
   * @param {number} heading
   * @param {number} zProbe
   * @param {boolean} p7
   * @param {boolean} useVegMod
   * @return {number}
   */
export const _CREATE_PROP_SET_2 = '0x899c97a1cce7d483';
/**
   * _CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY_2
   * Same as CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY
   *
   * @param {number} hash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} entity
   * @param {number} p5
   * @param {boolean} p6
   * @param {number} p7
   * @param {boolean} p8
   * @return {number}
   */
export const _CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY_2 = '0xaca7fb30269096d4';
/**
   * _DELETE_PROP_SET
   *
   * @param {number} propSet
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _DELETE_PROP_SET = '0x58ac173a55d9d7b4';
/**
   * _DOES_PROP_SET_OF_TYPE_EXIST_NEAR_COORDS
   *
   * @param {number} propsetHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const _DOES_PROP_SET_OF_TYPE_EXIST_NEAR_COORDS = '0x72068021f498e6e3';
/**
   * _DOES_VEHICLE_HAVE_ANY_LIGHT_PROP_SET
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _DOES_VEHICLE_HAVE_ANY_LIGHT_PROP_SET = '0xc9b4b3a36f81fd75';
/**
   * _DOES_VEHICLE_HAVE_ANY_PROP_SET
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _DOES_VEHICLE_HAVE_ANY_PROP_SET = '0x53784cea0159439b';
/**
   * _GET_ENTITIES_FROM_PROP_SET
   *
   * @param {number} propSet
   * @param {number} itemSet
   * @param {number} model
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {number}
   */
export const _GET_ENTITIES_FROM_PROP_SET = '0x738271b660fe0695';
/**
   * _GET_PROP_SET_AT_COORDS
   *
   * @param {number} propsetHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const _GET_PROP_SET_AT_COORDS = '0xc061e50f8d299f95';
/**
   * _GET_PROP_SET_MODEL
   *
   * @param {number} propSet
   * @return {number}
   */
export const _GET_PROP_SET_MODEL = '0xa6a9712955f53d9c';
/**
   * _GET_TRAIN_CARRIAGE_PROP_SET
   * Example before/after deleting a train carriage's propset: https://imgur.com/a/qRNrIrK
   *
   * @param {number} trainCarriage
   * @return {number}
   */
export const _GET_TRAIN_CARRIAGE_PROP_SET = '0xcfc0bd09bb1b73ff';
/**
   * _GET_VEHICLE_LIGHT_PROP_SET
   * Returns PropSet handle to be used with _GET_PROP_SET_MODEL
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_VEHICLE_LIGHT_PROP_SET = '0xa079300af757fb1a';
/**
   * _GET_VEHICLE_PROP_SET
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_VEHICLE_PROP_SET = '0xce2acd6f602803e5';
/**
   * _GET_VEHICLE_PROP_SET_HASH
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_VEHICLE_PROP_SET_HASH = '0x36f69e7a22655653';
/**
   * _HAS_PROP_SET_LOADED
   *
   * @param {number} hash
   * @return {boolean}
   */
export const _HAS_PROP_SET_LOADED = '0x48a88fc684c55fdc';
/**
   * _HAS_PROP_SET_LOADED_2
   * Same as _HAS_PROP_SET_LOADED
   *
   * @param {number} hash
   * @return {boolean}
   */
export const _HAS_PROP_SET_LOADED_2 = '0xd090abef4d6a7d96';
/**
   * _HAS_VEHICLE_TRAILER_PROP_SET_LOADED
   *
   * @param {number} vehicle
   * @param {number} wagonIndex
   * @return {boolean}
   */
export const _HAS_VEHICLE_TRAILER_PROP_SET_LOADED = '0x8f3333f0a6900b3c';
/**
   * _IS_PROP_SET_VISIBLE
   *
   * @param {number} propSet
   * @return {boolean}
   */
export const _IS_PROP_SET_VISIBLE = '0x0ce8aafe9e433a23';
/**
   * _IS_VEHICLE_LIGHT_PROP_SET_LOADED
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _IS_VEHICLE_LIGHT_PROP_SET_LOADED = '0x0790473eee1977d3';
/**
   * _IS_VEHICLE_PROP_SET_LOADED
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _IS_VEHICLE_PROP_SET_LOADED = '0x155b2fbe72d7d1d0';
/**
   * _IS_VEHICLE_PROP_SET_LOADED_ADDITIONAL
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _IS_VEHICLE_PROP_SET_LOADED_ADDITIONAL = '0x7264f9ca87a9830b';
/**
   * _RELEASE_PROP_SET
   *
   * @param {number} hash
   * @return {boolean}
   */
export const _RELEASE_PROP_SET = '0xb1964a83b345b4ab';
/**
   * _REMOVE_VEHICLE_LIGHT_PROP_SETS
   *
   * @param {number} vehicle
   * @return {void}
   */
export const _REMOVE_VEHICLE_LIGHT_PROP_SETS = '0xe31c0cb1c3186d40';
/**
   * _REMOVE_VEHICLE_PROP_SETS
   *
   * @param {number} vehicle
   * @return {void}
   */
export const _REMOVE_VEHICLE_PROP_SETS = '0x3bcf32ff37ea9f1d';
/**
   * _REQUEST_PROP_SET
   *
   * @param {number} hash
   * @return {boolean}
   */
export const _REQUEST_PROP_SET = '0xf3de57a46d5585e9';
/**
   * _REQUEST_PROP_SET_2
   * Same as _REQUEST_PROP_SET
   *
   * @param {number} hash
   * @return {boolean}
   */
export const _REQUEST_PROP_SET_2 = '0xe72f591958f3acab';
/**
   * _SET_PROP_SET_AS_NO_LONGER_NEEDED
   *
   * @param {number} propSet
   * @return {void}
   */
export const _SET_PROP_SET_AS_NO_LONGER_NEEDED = '0x909e3c7fae539fb1';
/**
   * _SET_PROP_SET_FLAG
   *
   * @param {number} propSet
   * @param {number} flag
   * @return {void}
   */
export const _SET_PROP_SET_FLAG = '0xc1ab7eefd3e6ee49';
/**
   * _SET_PROP_SET_VISIBLE
   *
   * @param {number} propSet
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PROP_SET_VISIBLE = '0x9d096a5bd02f953e';
/**
   * _EVENT_QUEUE_IS_EMPTY
   *
   * @param {number} hash
   * @return {boolean}
   */
export const _EVENT_QUEUE_IS_EMPTY = '0x402b5d7d269ff796';
/**
   * _EVENT_QUEUE_POP
   *
   * @param {number} hash
   * @return {void}
   */
export const _EVENT_QUEUE_POP = '0xd87df294b049211d';
/**
   * REPLAY_PREVENT_RECORDING_THIS_FRAME
   * nullsub, doesn't do anything
   * 
   * Old name: _STOP_RECORDING_THIS_FRAME
   *
  
   * @return {void}
   */
export const REPLAY_PREVENT_RECORDING_THIS_FRAME = '0xa8c44c13419634f2';
/**
   * CLOSE_VIDEO_EDITOR
   * Hardcoded to return true.
   *
   * @param {any} p0
   * @return {boolean}
   */
export const CLOSE_VIDEO_EDITOR = '0xceec64bd27a59312';
/**
   * IS_VIDEO_EDITOR_RUNNING
   * Hardcoded to return false.
   *
  
   * @return {boolean}
   */
export const IS_VIDEO_EDITOR_RUNNING = '0x9eeb007317fa3b9c';
/**
   * OPEN_VIDEO_EDITOR
   * Hardcoded to return true.
   *
  
   * @return {boolean}
   */
export const OPEN_VIDEO_EDITOR = '0xb3f2829907403c13';
/**
   * REPLAY_SYSTEM_HAS_REQUESTED_A_SCRIPT_CLEANUP
   * Hardcoded to return false.
   * 
   * Old name: _IS_INTERIOR_RENDERING_DISABLED
   *
  
   * @return {boolean}
   */
export const REPLAY_SYSTEM_HAS_REQUESTED_A_SCRIPT_CLEANUP = '0x0f838d47de58edb2';
/**
   * SET_SCRIPTS_HAVE_CLEANED_UP_FOR_REPLAY_SYSTEM
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const SET_SCRIPTS_HAVE_CLEANED_UP_FOR_REPLAY_SYSTEM = '0x57c6525034e76eb0';
/**
   * SAVEGAME_IS_SAVE_PENDING
   *
  
   * @return {boolean}
   */
export const SAVEGAME_IS_SAVE_PENDING = '0x3cf46f55c6585590';
/**
   * SAVEGAME_SAVE_MP
   * See SAVEGAME_SAVE_SP
   *
   * @param {number} savegameType
   * @return {boolean}
   */
export const SAVEGAME_SAVE_MP = '0x1840f3b30ed0105f';
/**
   * SAVEGAME_SAVE_SP
   * enum eSavegameType : Hash
   * {
   *   SAVEGAMETYPE_AMBIENT = 0x3CA4E1F8,
   *   SAVEGAMETYPE_DEFAULT = 0xCB6ED080,
   *   SAVEGAMETYPE_DELETE_CHAR = 0xCD35F947,
   *   SAVEGAMETYPE_END_CREATE_NEWCHAR = 0x4C50A3CE,
   *   SAVEGAMETYPE_END_MATCH = 0xE470ED50,
   *   SAVEGAMETYPE_END_MISSION = 0x9A444E54,
   *   SAVEGAMETYPE_END_SESSION = 0x6D23956C,
   *   SAVEGAMETYPE_END_SHOPPING = 0xA311A6C4,
   *   SAVEGAMETYPE_RANKUP = 0xE25F8017,
   *   SAVEGAMETYPE_SCRIPT_MP_GLOBALS = 0xAFF30AD4,
   *   SAVEGAMETYPE_SP_AUTOSAVE = 0xF4AE69EC,
   *   SAVEGAMETYPE_SP_DEBUG = 0x6A8122FD,
   *   SAVEGAMETYPE_SP_PROPERTY = 0xAE0AB38E
   * };
   *
   * @param {number} savegameType
   * @return {boolean}
   */
export const SAVEGAME_SAVE_SP = '0x62c9eb51656d68ce';
/**
   * _SAVEGAME_HAS_SAVE_FAILED
   *
  
   * @return {boolean}
   */
export const _SAVEGAME_HAS_SAVE_FAILED = '0x1431540bca1a1bd2';
/**
   * _0x443174C20B8B9E7F
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x443174C20B8B9E7F = '0x443174c20b8b9e7f';
/**
   * _0x4FB5869E2B37FC00
   *
  
   * @return {void}
   */
export const _0x4FB5869E2B37FC00 = '0x4fb5869e2b37fc00';
/**
   * _0x81F4E92BE3958364
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x81F4E92BE3958364 = '0x81f4e92be3958364';
/**
   * _0x8E8FFB9E4AD051D2
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x8E8FFB9E4AD051D2 = '0x8e8ffb9e4ad051d2';
/**
   * _0x9BB83C4DD7BE0802
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x9BB83C4DD7BE0802 = '0x9bb83c4dd7be0802';
/**
   * _0xA7ECEBAFBAF997A5
   *
   * @param {number} savegameType
   * @return {any}
   */
export const _0xA7ECEBAFBAF997A5 = '0xa7ecebafbaf997a5';
/**
   * _0xA844FEB5C22C2C74
   *
  
   * @return {void}
   */
export const _0xA844FEB5C22C2C74 = '0xa844feb5c22c2c74';
/**
   * _0xB00CE33465B5406D
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xB00CE33465B5406D = '0xb00ce33465b5406d';
/**
   * _0xC0ABF784590798A9
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC0ABF784590798A9 = '0xc0abf784590798a9';
/**
   * _0xE0B45E983BFC0768
   *
  
   * @return {void}
   */
export const _0xE0B45E983BFC0768 = '0xe0b45e983bfc0768';
/**
   * _0xE8346E62FD7FB962
   *
  
   * @return {void}
   */
export const _0xE8346E62FD7FB962 = '0xe8346e62fd7fb962';
/**
   * _0xED4B0C1057892B2E
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xED4B0C1057892B2E = '0xed4b0c1057892b2e';
/**
   * _SAVEGAME_GET_BOOL
   * Does the exact same as 0x529B9CCD0972AF4E
   *
   * @param {DataView} p0
   * @param {string | number} variableName
   * @return {void}
   */
export const _SAVEGAME_GET_BOOL = '0xbb7f4273c186bc4b';
/**
   * _SAVEGAME_GET_FLOAT
   *
   * @param {DataView} p0
   * @param {string | number} variableName
   * @return {void}
   */
export const _SAVEGAME_GET_FLOAT = '0x35defecae36d4fae';
/**
   * _SAVEGAME_GET_INT
   *
   * @param {DataView} p0
   * @param {string | number} variableName
   * @return {void}
   */
export const _SAVEGAME_GET_INT = '0x529b9ccd0972af4e';
/**
   * _SAVEGAME_GET_INT_2
   * Does the exact same as 0x529B9CCD0972AF4E
   * Commonly used with time/timestamps
   *
   * @param {DataView} p0
   * @param {string | number} variableName
   * @return {void}
   */
export const _SAVEGAME_GET_INT_2 = '0x529b9ccd0972af4d';
/**
   * _SAVEGAME_GET_INT_3
   * Does the exact same as 0x529B9CCD0972AF4E
   * Commonly used with enums and flags
   *
   * @param {DataView} p0
   * @param {string | number} variableName
   * @return {void}
   */
export const _SAVEGAME_GET_INT_3 = '0xb25b5a375be5be26';
/**
   * _SAVEGAME_GET_TEXT_LABEL_23
   *
   * @param {DataView} p0
   * @param {string | number} variableName
   * @return {void}
   */
export const _SAVEGAME_GET_TEXT_LABEL_23 = '0x5a10d6506b2f2c63';
/**
   * _SAVEGAME_GET_TEXT_LABEL_31
   *
   * @param {DataView} p0
   * @param {string | number} variableName
   * @return {void}
   */
export const _SAVEGAME_GET_TEXT_LABEL_31 = '0x4845e7e7643a908c';
/**
   * _SAVEGAME_GET_TEXT_LABEL_63
   *
   * @param {DataView} p0
   * @param {string | number} variableName
   * @return {void}
   */
export const _SAVEGAME_GET_TEXT_LABEL_63 = '0x186608a2ac6f9e88';
/**
   * AWARDS_GET_RESULT_ITEM
   *
   * @param {DataView} rpcGuid
   * @param {number} awardHash
   * @param {number} itemIndex
   * @param {DataView} outResultItem
   * @return {boolean}
   */
export const AWARDS_GET_RESULT_ITEM = '0xac8fab22a914ae34';
/**
   * BAIL_TO_LANDING_PAGE
   *
   * @param {number} bailCode
   * @return {void}
   */
export const BAIL_TO_LANDING_PAGE = '0xbc2c927f5c264243';
/**
   * BAIL_WITH_PASS_THROUGH_PARAMS
   *
   * @param {string | number} params
   * @return {void}
   */
export const BAIL_WITH_PASS_THROUGH_PARAMS = '0xe98204d3c25ae14c';
/**
   * BG_DOES_LAUNCH_PARAM_EXIST
   *
   * @param {number} scriptIndex
   * @param {string | number} p1
   * @return {boolean}
   */
export const BG_DOES_LAUNCH_PARAM_EXIST = '0x4ae1dff337a86fde';
/**
   * BG_END_CONTEXT
   * Deletes the given context from the background scripts context map.
   *
   * @param {string | number} contextName
   * @return {void}
   */
export const BG_END_CONTEXT = '0x3abf7ba1c3e2c8cf';
/**
   * BG_END_CONTEXT_HASH
   * Hashed version of BG_END_CONTEXT
   *
   * @param {number} contextHash
   * @return {void}
   */
export const BG_END_CONTEXT_HASH = '0x6d1431744182cde8';
/**
   * BG_GET_LAUNCH_PARAM_VALUE
   *
   * @param {number} scriptIndex
   * @param {string | number} p1
   * @return {number}
   */
export const BG_GET_LAUNCH_PARAM_VALUE = '0x55c40b7592bad213';
/**
   * BG_GET_SCRIPT_ID_FROM_NAME_HASH
   *
   * @param {number} p0
   * @return {number}
   */
export const BG_GET_SCRIPT_ID_FROM_NAME_HASH = '0x829cd22e043a2577';
/**
   * BG_IS_EXITFLAG_SET
   * Returns true if GtaThread+0x77C is equal to 1.
   * 
   * Old name: _BG_EXITED_BECAUSE_BACKGROUND_THREAD_STOPPED
   *
  
   * @return {boolean}
   */
export const BG_IS_EXITFLAG_SET = '0x2238ec3ec631ab1f';
/**
   * BG_SET_EXITFLAG_RESPONSE
   * Sets bit 0 in GtaThread+0x784
   *
  
   * @return {void}
   */
export const BG_SET_EXITFLAG_RESPONSE = '0x4858148e3b8a75d0';
/**
   * BG_START_CONTEXT
   * Inserts the given context into the background scripts context map.
   *
   * @param {string | number} contextName
   * @return {void}
   */
export const BG_START_CONTEXT = '0x49ba5678ba040ca7';
/**
   * BG_START_CONTEXT_HASH
   * Hashed version of BG_START_CONTEXT
   *
   * @param {number} contextHash
   * @return {void}
   */
export const BG_START_CONTEXT_HASH = '0x2eb67d564dcc09d5';
/**
   * COUNT_PARTICIPANT_BITS
   *
   * @param {DataView} value
   * @return {number}
   */
export const COUNT_PARTICIPANT_BITS = '0x2f050a3ff8738245';
/**
   * COUNT_PLAYER_BITS
   *
   * @param {DataView} value
   * @return {number}
   */
export const COUNT_PLAYER_BITS = '0x462c687bea254bd9';
/**
   * DOES_SCRIPT_EXIST
   *
   * @param {string | number} scriptName
   * @return {boolean}
   */
export const DOES_SCRIPT_EXIST = '0x552b171e3f69e5ae';
/**
   * DOES_SCRIPT_WITH_NAME_HASH_EXIST
   *
   * @param {number} scriptHash
   * @return {boolean}
   */
export const DOES_SCRIPT_WITH_NAME_HASH_EXIST = '0xa34e89749f628284';
/**
   * DOES_THREAD_EXIST
   *
   * @param {number} threadId
   * @return {boolean}
   */
export const DOES_THREAD_EXIST = '0xff975bc4435a0fa3';
/**
   * GET_BLOCK_OF_PLAYER_BITS
   *
   * @param {DataView} value
   * @param {number} p1
   * @return {number}
   */
export const GET_BLOCK_OF_PLAYER_BITS = '0xfa3b530a5cc693d5';
/**
   * GET_EVENT_AT_INDEX
   * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
   * 
   * Returns event name hash: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
   *
   * @param {number} eventGroup
   * @param {number} eventIndex
   * @return {number}
   */
export const GET_EVENT_AT_INDEX = '0xa85e614430eff816';
/**
   * GET_EVENT_DATA
   * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
   * 
   * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
   * 
   * https://github.com/femga/rdr3_discoveries/tree/master/AI/EVENTS
   *
   * @param {number} eventGroup
   * @param {number} eventIndex
   * @param {DataView} eventData
   * @param {number} eventDataSize
   * @return {boolean}
   */
export const GET_EVENT_DATA = '0x57ec5fa4d4d6afca';
/**
   * GET_EVENT_EXISTS
   * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
   *
   * @param {number} eventGroup
   * @param {number} eventType
   * @return {boolean}
   */
export const GET_EVENT_EXISTS = '0xc9f59c0a710ecd34';
/**
   * GET_HASH_OF_THIS_SCRIPT_NAME
   *
  
   * @return {number}
   */
export const GET_HASH_OF_THIS_SCRIPT_NAME = '0xbc2c927f5c264960';
/**
   * GET_ID_OF_THIS_THREAD
   *
  
   * @return {number}
   */
export const GET_ID_OF_THIS_THREAD = '0x55525c346bef6960';
/**
   * GET_NO_LOADING_SCREEN
   *
  
   * @return {boolean}
   */
export const GET_NO_LOADING_SCREEN = '0x323daf00687e0f28';
/**
   * GET_NUMBER_OF_EVENTS
   * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_ERRORS (CEventGroupScriptErrors)
   *
   * @param {number} eventGroup
   * @return {number}
   */
export const GET_NUMBER_OF_EVENTS = '0x5ce8de5909565748';
/**
   * GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH
   * Gets the number of instances of the specified script is currently running.
   * 
   * Actually returns numRefs - 1.
   * if (program)
   *   v3 = rage::scrProgram::GetNumRefs(program) - 1;
   * return v3;
   * 
   * Old name: _GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH
   *
   * @param {number} scriptHash
   * @return {number}
   */
export const GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH = '0x8e34c953364a76dd';
/**
   * GET_THREAD_EXISTENCE_DETAILS
   *
   * @param {number} threadId
   * @return {[boolean, boolean]}
   */
export const GET_THREAD_EXISTENCE_DETAILS = '0xd92fa81b64920e85';
/**
   * HAS_SCRIPT_LOADED
   * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
   *
   * @param {string | number} scriptName
   * @return {boolean}
   */
export const HAS_SCRIPT_LOADED = '0xe97bd36574f8b0a6';
/**
   * HAS_SCRIPT_WITH_NAME_HASH_LOADED
   *
   * @param {number} scriptHash
   * @return {boolean}
   */
export const HAS_SCRIPT_WITH_NAME_HASH_LOADED = '0xa5d8e0c2f3c7eebc';
/**
   * HAVE_ALL_CHILD_SCRIPTS_TERMINATED
   * Waiting for child scripts to terminate / waiting for collapse of child scripts
   *
   * @param {number} p0
   * @return {boolean}
   */
export const HAVE_ALL_CHILD_SCRIPTS_TERMINATED = '0x380ffa15b72408fb';
/**
   * IS_LOADING_SCREEN_VISIBLE
   * Same as GET_IS_LOADING_SCREEN_ACTIVE
   *
  
   * @return {boolean}
   */
export const IS_LOADING_SCREEN_VISIBLE = '0xb54adbe65d528fcb';
/**
   * IS_THREAD_ACTIVE
   *
   * @param {number} threadId
   * @param {boolean} ignoreKilledState
   * @return {boolean}
   */
export const IS_THREAD_ACTIVE = '0x46e9ae36d8fa6417';
/**
   * IS_THREAD_EXIT_REQUESTED
   *
  
   * @return {boolean}
   */
export const IS_THREAD_EXIT_REQUESTED = '0x9e4ef615e307fbbe';
/**
   * REQUEST_SCRIPT
   *
   * @param {string | number} scriptName
   * @return {void}
   */
export const REQUEST_SCRIPT = '0x46ed607ddd40d7fe';
/**
   * REQUEST_SCRIPT_WITH_NAME_HASH
   *
   * @param {number} scriptHash
   * @return {void}
   */
export const REQUEST_SCRIPT_WITH_NAME_HASH = '0xf6b9ce3f8d5b9b74';
/**
   * SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID
   * If the function returns 0, the end of the iteration has been reached.
   *
  
   * @return {number}
   */
export const SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID = '0x3ce3fb167e837d7c';
/**
   * SCRIPT_THREAD_ITERATOR_RESET
   * Starts a new iteration of the current threads.
   * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
   *
  
   * @return {void}
   */
export const SCRIPT_THREAD_ITERATOR_RESET = '0x39382eb8dcd8684d';
/**
   * SET_BLOCK_OF_PLAYER_BITS
   *
   * @param {DataView} value
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const SET_BLOCK_OF_PLAYER_BITS = '0xc6dfb8c04c86d5a5';
/**
   * SET_EVENT_FLAG_FOR_DELETION
   *
   * @param {number} eventGroup
   * @param {number} eventIndex
   * @param {boolean} p2
   * @return {void}
   */
export const SET_EVENT_FLAG_FOR_DELETION = '0x4768d5252eaeb76f';
/**
   * SET_NO_LOADING_SCREEN
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_NO_LOADING_SCREEN = '0x5cb83156aa038f95';
/**
   * SET_SCRIPT_AS_NO_LONGER_NEEDED
   *
   * @param {string | number} scriptName
   * @return {void}
   */
export const SET_SCRIPT_AS_NO_LONGER_NEEDED = '0x0086d3067e1cfd1c';
/**
   * SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED
   *
   * @param {number} scriptHash
   * @return {void}
   */
export const SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED = '0x50723a1567c8361e';
/**
   * SHUTDOWN_LOADING_SCREEN
   *
  
   * @return {void}
   */
export const SHUTDOWN_LOADING_SCREEN = '0xfc179d7e8886dadf';
/**
   * START_NEW_SCRIPT
   *
   * @param {string | number} scriptName
   * @param {number} stackSize
   * @return {number}
   */
export const START_NEW_SCRIPT = '0xe81651ad79516e48';
/**
   * START_NEW_SCRIPT_WITH_ARGS
   * return : script thread id, 0 if failed
   * Pass pointer to struct of args in p1, size of struct goes into p2
   *
   * @param {string | number} scriptName
   * @param {DataView} args
   * @param {number} argCount
   * @param {number} stackSize
   * @return {number}
   */
export const START_NEW_SCRIPT_WITH_ARGS = '0xb8ba7f44df1575e1';
/**
   * START_NEW_SCRIPT_WITH_NAME_HASH
   *
   * @param {number} scriptHash
   * @param {number} stackSize
   * @return {number}
   */
export const START_NEW_SCRIPT_WITH_NAME_HASH = '0xeb1c67c3a5333a92';
/**
   * START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS
   *
   * @param {number} scriptHash
   * @param {DataView} args
   * @param {number} argCount
   * @param {number} stackSize
   * @return {number}
   */
export const START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS = '0xc4bb298bd441be78';
/**
   * STOP_DISPLAYING_MP_TRANSITION_LOADING_SCREENS
   *
   * @param {any} p0
   * @return {void}
   */
export const STOP_DISPLAYING_MP_TRANSITION_LOADING_SCREENS = '0x778d4733e0f2f265';
/**
   * TERMINATE_THIS_THREAD
   *
  
   * @return {void}
   */
export const TERMINATE_THIS_THREAD = '0x5e8b6d17ff91cd59';
/**
   * TERMINATE_THREAD
   *
   * @param {number} threadId
   * @return {void}
   */
export const TERMINATE_THREAD = '0x87ed52ae40ea1a52';
/**
   * TRIGGER_SCRIPT_EVENT
   * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
   * 
   * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
   * 
   * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
   *
   * @param {number} eventGroup
   * @param {DataView} eventData
   * @param {number} eventDataSize
   * @param {number} scriptMetadataIndex
   * @return {number}
   */
export const TRIGGER_SCRIPT_EVENT = '0x5ae99c571d5bbe5d';
/**
   * _0x0A79C81C418F5D38
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x0A79C81C418F5D38 = '0x0a79c81c418f5d38';
/**
   * _0x11B0A0B282FA9B10
   * Used in Script Function DISABLE_REGISTERED_WORLD_BRAINS
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x11B0A0B282FA9B10 = '0x11b0a0b282fa9b10';
/**
   * _0x1BDB5A07307F6929
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x1BDB5A07307F6929 = '0x1bdb5a07307f6929';
/**
   * _0x1C5EB3C27F7508CB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x1C5EB3C27F7508CB = '0x1c5eb3c27f7508cb';
/**
   * _0x29FB4CE89472C3CB
   *
   * @param {any} p0
   * @param {any} p1
   * @param {number} p2
   * @param {number} p3
   * @param {string | number} p4
   * @param {string | number} p5
   * @param {string | number} p6
   * @param {number} p7
   * @return {void}
   */
export const _0x29FB4CE89472C3CB = '0x29fb4ce89472c3cb';
/**
   * _0x42A429CDFED6D99D
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x42A429CDFED6D99D = '0x42a429cdfed6d99d';
/**
   * _0x5827BE85A87B073D
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x5827BE85A87B073D = '0x5827be85a87b073d';
/**
   * _0x64F765D9A1F8F02C
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {DataView} p2
   * @return {void}
   */
export const _0x64F765D9A1F8F02C = '0x64f765d9a1f8f02c';
/**
   * _0x6F700A4BF7C3331B
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x6F700A4BF7C3331B = '0x6f700a4bf7c3331b';
/**
   * _0x76CBCD9EADC00955
   *
  
   * @return {void}
   */
export const _0x76CBCD9EADC00955 = '0x76cbcd9eadc00955';
/**
   * _0xA88E1D7FA1E20080
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xA88E1D7FA1E20080 = '0xa88e1d7fa1e20080';
/**
   * _0xE4ABE20DCE7C7CFE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xE4ABE20DCE7C7CFE = '0xe4abe20dce7c7cfe';
/**
   * _0xE7282390542F570D
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xE7282390542F570D = '0xe7282390542f570d';
/**
   * _0xF9E951A1E5517C06
   *
  
   * @return {void}
   */
export const _0xF9E951A1E5517C06 = '0xf9e951a1e5517c06';
/**
   * _0xFFDDF802279BE128
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xFFDDF802279BE128 = '0xffddf802279be128';
/**
   * _ACTIVATE_GOAL_CONTEXT
   * goalContext: see <availableContexts> in common/data/stats_and_challenges/goals_*.meta
   *
   * @param {number} goalContext
   * @return {void}
   */
export const _ACTIVATE_GOAL_CONTEXT = '0x7d654266025e921b';
/**
   * _AWARDS_GET_UNLOCK_CLAIM_DATA
   *
   * @param {DataView} rpcGuid
   * @param {number} awardHash
   * @param {number} dataIndex
   * @param {DataView} outUnlockData
   * @return {boolean}
   */
export const _AWARDS_GET_UNLOCK_CLAIM_DATA = '0xb9467e41dab1cf2c';
/**
   * _BG_RELOAD_ALL_BACKGROUND_SCRIPTS
   *
  
   * @return {void}
   */
export const _BG_RELOAD_ALL_BACKGROUND_SCRIPTS = '0xbe7d814cfa181b56';
/**
   * _CLEAR_ALL_PLAYER_BITS
   *
   * @param {DataView} value
   * @return {void}
   */
export const _CLEAR_ALL_PLAYER_BITS = '0xde544b7ec0c187cc';
/**
   * _CLEAR_PLAYER_BIT_AT_INDEX
   *
   * @param {DataView} value
   * @param {number} bitIndex
   * @return {void}
   */
export const _CLEAR_PLAYER_BIT_AT_INDEX = '0xd426e2e3288469d6';
/**
   * _DEACTIVATE_GOAL_CONTEXT
   * goalContext: see _ACTIVATE_GOAL_CONTEXT
   *
   * @param {number} goalContext
   * @return {void}
   */
export const _DEACTIVATE_GOAL_CONTEXT = '0x50b72a754ee64a71';
/**
   * _DISPLAY_LOADING_SCREENS
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {string | number} gamemodeName
   * @param {string | number} title
   * @param {string | number} subtitle
   * @return {void}
   */
export const _DISPLAY_LOADING_SCREENS = '0x1e5b70e53db661e5';
/**
   * _DOES_COMPRESSED_GLOBAL_BLOCK_BUFFER_EXIST
   *
   * @param {number} index
   * @return {boolean}
   */
export const _DOES_COMPRESSED_GLOBAL_BLOCK_BUFFER_EXIST = '0x66ee5b93c308f734';
/**
   * _GET_GLOBAL_BLOCK_CAN_BE_ACCESSED
   *
   * @param {number} index
   * @return {boolean}
   */
export const _GET_GLOBAL_BLOCK_CAN_BE_ACCESSED = '0x42a7eb5c814c2de0';
/**
   * _GET_HASH_OF_THREAD
   *
   * @param {number} threadId
   * @return {number}
   */
export const _GET_HASH_OF_THREAD = '0x724cb89d35b283d0';
/**
   * _GET_THREAD_EXIT_REASON
   * enum eThreadExitReason
   * {
   *   THREAD_EXIT_REASON_NONE,
   *   THREAD_EXIT_REASON_BACKGROUND_THREAD_STOPPED,
   *   THREAD_EXIT_REASON_SESSION_MERGE,
   *   THREAD_EXIT_REASON_SCENARIO_OUT_OF_SCOPE,
   *   THREAD_EXIT_REASON_REQUESTED_BY_SCRIPT
   * };
   *
  
   * @return {number}
   */
export const _GET_THREAD_EXIT_REASON = '0x54ae4fdeefeab77e';
/**
   * _IS_ANY_PLAYER_BIT_SET
   *
  
   * @return {[boolean, number]}
   */
export const _IS_ANY_PLAYER_BIT_SET = '0x179a6f0ee2e79026';
/**
   * _IS_BACKGROUND_SCRIPT
   *
   * @param {number} threadId
   * @return {boolean}
   */
export const _IS_BACKGROUND_SCRIPT = '0x20b7f69b40c6b755';
/**
   * _IS_GOAL_CONTEXT_ACTIVE
   * goalContext: see _ACTIVATE_GOAL_CONTEXT
   *
   * @param {number} goalContext
   * @return {boolean}
   */
export const _IS_GOAL_CONTEXT_ACTIVE = '0x7409669c5ed50144';
/**
   * _IS_PLAYER_BIT_SET_AT_INDEX
   *
   * @param {DataView} value
   * @param {number} bitIndex
   * @return {boolean}
   */
export const _IS_PLAYER_BIT_SET_AT_INDEX = '0x72b2e00c9bac6789';
/**
   * _IS_THREAD_EXIT_REQUESTED_FOR_THREAD_WITH_THIS_ID
   *
   * @param {number} threadId
   * @return {boolean}
   */
export const _IS_THREAD_EXIT_REQUESTED_FOR_THREAD_WITH_THIS_ID = '0x30bed53646c86d11';
/**
   * _LOOT_GET_LOOT_CLAIM_DATA
   *
   * @param {DataView} rpcGuid
   * @param {number} dataIndex
   * @param {DataView} outLootData
   * @return {boolean}
   */
export const _LOOT_GET_LOOT_CLAIM_DATA = '0xf1e9045f5aa9e428';
/**
   * _LOOT_GET_RESULT_ITEM
   *
   * @param {DataView} rpcGuid
   * @param {number} itemIndex
   * @param {DataView} outResultItem
   * @return {boolean}
   */
export const _LOOT_GET_RESULT_ITEM = '0x4293b44a855f82cc';
/**
   * _NET_RPC_GUID_TO_STRING
   * Returns "INVALID_NET_RPC_GUID" if netRpcGuid is invalid.
   *
   * @param {DataView} netRpcGuid
   * @return {string | number}
   */
export const _NET_RPC_GUID_TO_STRING = '0xac9ff854bd4ba9b5';
/**
   * _REQUEST_THREAD_EXIT
   *
   * @param {number} threadId
   * @return {void}
   */
export const _REQUEST_THREAD_EXIT = '0x7de4643157ad646c';
/**
   * _REQUEST_THREAD_EXIT_FOR_ALL_THREADS_WITH_THIS_NAME
   *
   * @param {number} nameHash
   * @return {void}
   */
export const _REQUEST_THREAD_EXIT_FOR_ALL_THREADS_WITH_THIS_NAME = '0x7423f7835770f619';
/**
   * _RESTORE_GLOBAL_BLOCK
   *
   * @param {number} index
   * @return {boolean}
   */
export const _RESTORE_GLOBAL_BLOCK = '0xdc3914a99b4a5fdf';
/**
   * _SET_ALL_GLOBAL_BLOCKS_HAVE_BEEN_LOADED
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_ALL_GLOBAL_BLOCKS_HAVE_BEEN_LOADED = '0x11986b05885564d2';
/**
   * _SET_ALL_PLAYER_BITS
   *
   * @param {DataView} value
   * @return {void}
   */
export const _SET_ALL_PLAYER_BITS = '0x20f4cb76689acdbc';
/**
   * _SET_GLOBAL_BLOCK_CAN_BE_ACCESSED
   *
   * @param {number} index
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_GLOBAL_BLOCK_CAN_BE_ACCESSED = '0xe66f392bfce734af';
/**
   * _SET_PLAYER_BIT_AT_INDEX
   *
   * @param {DataView} value
   * @param {number} bitIndex
   * @return {void}
   */
export const _SET_PLAYER_BIT_AT_INDEX = '0x31010318ba9897ac';
/**
   * _STORE_GLOBAL_BLOCK
   *
   * @param {number} index
   * @return {boolean}
   */
export const _STORE_GLOBAL_BLOCK = '0xb952a3ac41d58f2f';
/**
   * _TRIGGER_SCRIPT_EVENT_2
   *
   * @param {DataView} eventData
   * @param {number} eventDataSize
   * @param {number} scriptMetadataIndex
   * @param {number} threadId
   * @return {void}
   */
export const _TRIGGER_SCRIPT_EVENT_2 = '0x8b61c950a148ffa2';
/**
   * GET_SHAPE_TEST_RESULT
   * Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.
   * 
   * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
   * 
   * enum eShapeTestStatus
   * {
   *   SHAPETEST_STATUS_NONEXISTENT,
   *   SHAPETEST_STATUS_RESULTS_NOTREADY,
   *   SHAPETEST_STATUS_RESULTS_READY
   * };
   *
   * @param {number} shapeTestHandle
   * @param {number} entityHit
   * @return {[number, boolean, Vector3, Vector3]}
   */
export const GET_SHAPE_TEST_RESULT = '0xede8ac7c5108fb1d';
/**
   * START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE
   * Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} flags
   * @param {number} entityToIgnore
   * @param {number} p8
   * @return {number}
   */
export const START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE = '0x377906d8a31e5586';
/**
   * START_SHAPE_TEST_BOX
   *
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} dimensionsX
   * @param {number} dimensionsY
   * @param {number} dimensionsZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} rotationOrder
   * @param {number} flags
   * @param {number} entityToIgnore
   * @param {number} options
   * @return {number}
   */
export const START_SHAPE_TEST_BOX = '0xfe466162c4401d18';
/**
   * START_SHAPE_TEST_CAPSULE
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} radius
   * @param {number} flags
   * @param {number} entityToIgnore
   * @param {number} p9
   * @return {number}
   */
export const START_SHAPE_TEST_CAPSULE = '0x28579d1b8f8aac80';
/**
   * START_SHAPE_TEST_LOS_PROBE
   * Asynchronously starts a line-of-sight (raycast) world probe shape test.
   * 
   * Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.
   * 
   * p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used. flags used are mostly 83 and 3167 
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} flags
   * @param {number} entity
   * @param {number} p8
   * @return {number}
   */
export const START_SHAPE_TEST_LOS_PROBE = '0x7ee9f5d83dd4f90e';
/**
   * START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE
   * Old name: _START_SHAPE_TEST_SURROUNDING_COORDS
   *
   * @param {number} flag
   * @param {number} entity
   * @param {number} flag2
   * @return {[ScrHandle, Vector3, Vector3]}
   */
export const START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE = '0x9839013d8b6014f1';
/**
   * START_SHAPE_TEST_SWEPT_SPHERE
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} radius
   * @param {number} flags
   * @param {number} entity
   * @param {any} p9
   * @return {number}
   */
export const START_SHAPE_TEST_SWEPT_SPHERE = '0xaa5b7c8309f73230';
/**
   * _0x04AA59CA40571C2E
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x04AA59CA40571C2E = '0x04aa59ca40571c2e';
/**
   * SC_COMMUNITY_EVENT_GET_DISPLAY_NAME
   *
   * @param {string | number} p0
   * @return {boolean}
   */
export const SC_COMMUNITY_EVENT_GET_DISPLAY_NAME = '0x89d9bde7334b110f';
/**
   * SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_BY_ID
   *
   * @param {number} p0
   * @param {string | number} p1
   * @return {boolean}
   */
export const SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_BY_ID = '0x11ea52cad1b55910';
/**
   * SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_FOR_TYPE
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @return {boolean}
   */
export const SC_COMMUNITY_EVENT_GET_DISPLAY_NAME_FOR_TYPE = '0x85ea0bec7b1f7622';
/**
   * SC_COMMUNITY_EVENT_GET_EVENT_ID
   *
  
   * @return {number}
   */
export const SC_COMMUNITY_EVENT_GET_EVENT_ID = '0xd635df6baa5a6017';
/**
   * SC_COMMUNITY_EVENT_GET_EVENT_ID_FOR_TYPE
   *
   * @param {string | number} p0
   * @return {number}
   */
export const SC_COMMUNITY_EVENT_GET_EVENT_ID_FOR_TYPE = '0x03c03abbabbef752';
/**
   * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT
   *
   * @param {string | number} p0
   * @return {[boolean, number]}
   */
export const SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT = '0x060bbad634c2b44b';
/**
   * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_BY_ID
   *
   * @param {number} p0
   * @param {string | number} p1
   * @return {[boolean, number]}
   */
export const SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_BY_ID = '0x91c9e2a0f9dd6dd4';
/**
   * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_FOR_TYPE
   *
   * @param {string | number} p0
   * @param {string | number} p2
   * @return {[boolean, number]}
   */
export const SC_COMMUNITY_EVENT_GET_EXTRA_DATA_FLOAT_FOR_TYPE = '0x1bdb56db258f052d';
/**
   * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT
   *
   * @param {string | number} p0
   * @return {[boolean, number]}
   */
export const SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT = '0xb4411d4d6b81438e';
/**
   * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_BY_ID
   *
   * @param {number} p0
   * @param {string | number} p1
   * @return {[boolean, number]}
   */
export const SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_BY_ID = '0x7c981de05a7403a0';
/**
   * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_FOR_TYPE
   *
   * @param {string | number} p0
   * @param {string | number} p2
   * @return {[boolean, number]}
   */
export const SC_COMMUNITY_EVENT_GET_EXTRA_DATA_INT_FOR_TYPE = '0x3519cc3525319a96';
/**
   * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @return {boolean}
   */
export const SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING = '0x9f6dcd0c939c71e9';
/**
   * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_BY_ID
   *
   * @param {number} p0
   * @param {string | number} p1
   * @param {string | number} p2
   * @return {boolean}
   */
export const SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_BY_ID = '0x049d2196d9d11184';
/**
   * SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_FOR_TYPE
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @param {string | number} p2
   * @return {boolean}
   */
export const SC_COMMUNITY_EVENT_GET_EXTRA_DATA_STRING_FOR_TYPE = '0xc8fc3b2432e8229d';
/**
   * SC_COMMUNITY_EVENT_IS_ACTIVE
   *
  
   * @return {boolean}
   */
export const SC_COMMUNITY_EVENT_IS_ACTIVE = '0xcbf743c984695cf3';
/**
   * SC_COMMUNITY_EVENT_IS_ACTIVE_BY_ID
   *
   * @param {number} p0
   * @return {boolean}
   */
export const SC_COMMUNITY_EVENT_IS_ACTIVE_BY_ID = '0x62b384fefde06817';
/**
   * SC_COMMUNITY_EVENT_IS_ACTIVE_FOR_TYPE
   *
   * @param {string | number} p0
   * @return {boolean}
   */
export const SC_COMMUNITY_EVENT_IS_ACTIVE_FOR_TYPE = '0x09937eb0cebc2f9f';
/**
   * SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX
   *
   * @param {number} msgIndex
   * @return {boolean}
   */
export const SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX = '0x74cf39e030a382c4';
/**
   * SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX
   *
   * @param {number} msgIndex
   * @return {number}
   */
export const SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX = '0xff92537c4ddc1241';
/**
   * SC_INBOX_GET_TOTAL_NUM_MESSAGES
   *
  
   * @return {number}
   */
export const SC_INBOX_GET_TOTAL_NUM_MESSAGES = '0x8ef0f633280c0663';
/**
   * SC_INBOX_MESSAGE_GET_DATA_INT
   *
   * @param {number} p0
   * @param {string | number} context
   * @return {[boolean, number]}
   */
export const SC_INBOX_MESSAGE_GET_DATA_INT = '0x95bb39c4da99f348';
/**
   * SC_INBOX_MESSAGE_GET_DATA_STRING
   *
   * @param {number} p0
   * @param {string | number} context
   * @param {string | number} out
   * @return {boolean}
   */
export const SC_INBOX_MESSAGE_GET_DATA_STRING = '0x66f77fd58506ff6b';
/**
   * SC_INBOX_MESSAGE_GET_RAW_TYPE_AT_INDEX
   *
   * @param {number} p0
   * @return {string | number}
   */
export const SC_INBOX_MESSAGE_GET_RAW_TYPE_AT_INDEX = '0x176d077685cd83e4';
/**
   * SC_INBOX_SET_MESSAGE_AS_READ_AT_INDEX
   *
   * @param {number} msgIndex
   * @return {boolean}
   */
export const SC_INBOX_SET_MESSAGE_AS_READ_AT_INDEX = '0x63cac501fff66dc4';
/**
   * SC_PRESENCE_ATTR_SET_FLOAT
   *
   * @param {number} attrHash
   * @param {number} value
   * @return {boolean}
   */
export const SC_PRESENCE_ATTR_SET_FLOAT = '0xa31dafcdc33775e9';
/**
   * SC_PRESENCE_ATTR_SET_FLOAT_EX
   *
   * @param {string | number} attrName
   * @param {number} value
   * @param {boolean} p2
   * @return {boolean}
   */
export const SC_PRESENCE_ATTR_SET_FLOAT_EX = '0x00000000467f4caa';
/**
   * SC_PRESENCE_ATTR_SET_INT_EX
   *
   * @param {string | number} attrName
   * @param {number} value
   * @param {boolean} p2
   * @return {boolean}
   */
export const SC_PRESENCE_ATTR_SET_INT_EX = '0x0000000085488c49';
/**
   * SC_PRESENCE_ATTR_SET_STRING_EX
   *
   * @param {string | number} attrName
   * @param {string | number} value
   * @param {boolean} p2
   * @return {boolean}
   */
export const SC_PRESENCE_ATTR_SET_STRING_EX = '0x00000000eb2d93b3';
/**
   * SC_PROFANITY_CHECK_STRING
   * Starts a task to check an entered string for profanity on the ROS/Social Club services.
   *
   * @param {string | number} string
   * @return {[boolean, number]}
   */
export const SC_PROFANITY_CHECK_STRING = '0x9c74ac9d87b3fff4';
/**
   * SC_PROFANITY_GET_CHECK_IS_PENDING
   *
   * @param {number} token
   * @return {boolean}
   */
export const SC_PROFANITY_GET_CHECK_IS_PENDING = '0x3a10bcd0c8aa0b82';
/**
   * SC_PROFANITY_GET_CHECK_IS_VALID
   *
   * @param {number} token
   * @return {boolean}
   */
export const SC_PROFANITY_GET_CHECK_IS_VALID = '0x08c8052af40c4247';
/**
   * SC_PROFANITY_GET_STRING_PASSED
   *
   * @param {number} token
   * @return {boolean}
   */
export const SC_PROFANITY_GET_STRING_PASSED = '0xf302973bb8be70e6';
/**
   * SC_PROFANITY_GET_STRING_STATUS
   *
   * @param {number} token
   * @return {number}
   */
export const SC_PROFANITY_GET_STRING_STATUS = '0x0cf3bfb99ebbe5b1';
/**
   * SC_FEED_HUB_HAS_NEW_DATA
   *
  
   * @return {boolean}
   */
export const SC_FEED_HUB_HAS_NEW_DATA = '0x068332d20cb6f897';
/**
   * _SC_FEED_SUBMIT_PRESET_MESSAGE
   *
   * @param {number} type
   * @param {number} subType
   * @return {number}
   */
export const _SC_FEED_SUBMIT_PRESET_MESSAGE = '0xefb64240f6b17817';
/**
   * _SPACTIONPROXY_GET_NEXT_PENDING_BUY_ACTION
   *
   * @param {DataView} data
   * @return {boolean}
   */
export const _SPACTIONPROXY_GET_NEXT_PENDING_BUY_ACTION = '0x1f471b79acc98bef';
/**
   * _SPACTIONPROXY_GET_NEXT_PENDING_CRAFTING_ACTION
   *
   * @param {DataView} data
   * @return {boolean}
   */
export const _SPACTIONPROXY_GET_NEXT_PENDING_CRAFTING_ACTION = '0x1f471b79acc97bef';
/**
   * _SPACTIONPROXY_MANAGER_IS_FAILED
   *
  
   * @return {boolean}
   */
export const _SPACTIONPROXY_MANAGER_IS_FAILED = '0x1f471b79acc91bec';
/**
   * _SPACTIONPROXY_MANAGER_IS_READY
   *
  
   * @return {boolean}
   */
export const _SPACTIONPROXY_MANAGER_IS_READY = '0x1f471b79acc91bed';
/**
   * _SPACTIONPROXY_PROCESS_ACTION
   *
   * @param {any} p0
   * @param {boolean} p1
   * @return {boolean}
   */
export const _SPACTIONPROXY_PROCESS_ACTION = '0x1f471b79acc94bef';
/**
   * _SPACTIONPROXY_START_MANAGER
   *
  
   * @return {boolean}
   */
export const _SPACTIONPROXY_START_MANAGER = '0x1f471b79acc91bee';
/**
   * CHAL_ACHIEVEMENT_GET_PROGRESS_INT
   *
   * @param {number} p0
   * @param {number} p1
   * @return {number}
   */
export const CHAL_ACHIEVEMENT_GET_PROGRESS_INT = '0x808712e428f697b8';
/**
   * CHAL_ACHIEVEMENT_IS_COMPLETE
   *
   * @param {number} p0
   * @param {number} p1
   * @return {boolean}
   */
export const CHAL_ACHIEVEMENT_IS_COMPLETE = '0x77b97a827739d434';
/**
   * CHAL_ADD_GOAL_PROGRESS_FLOAT
   *
   * @param {number} chalHash
   * @param {number} goalHash
   * @param {number} value
   * @return {void}
   */
export const CHAL_ADD_GOAL_PROGRESS_FLOAT = '0x86922d8c02fb7703';
/**
   * CHAL_ADD_GOAL_PROGRESS_FLOAT_BY_SCORE_ID
   *
   * @param {number} p0
   * @param {number} value
   * @return {void}
   */
export const CHAL_ADD_GOAL_PROGRESS_FLOAT_BY_SCORE_ID = '0x86922d8c02fb7705';
/**
   * CHAL_ADD_GOAL_PROGRESS_INT
   *
   * @param {number} chalHash
   * @param {number} goalHash
   * @param {number} value
   * @return {void}
   */
export const CHAL_ADD_GOAL_PROGRESS_INT = '0xddbd560745b1ee9a';
/**
   * CHAL_ADD_GOAL_PROGRESS_INT_BY_SCORE_ID
   *
   * @param {number} p0
   * @param {number} value
   * @return {void}
   */
export const CHAL_ADD_GOAL_PROGRESS_INT_BY_SCORE_ID = '0xddbd560745b1ee9c';
/**
   * CHAL_GET_MAX_RANKS
   *
   * @param {number} chalHash
   * @return {number}
   */
export const CHAL_GET_MAX_RANKS = '0x58cb53db63f84dea';
/**
   * CHAL_GET_NUM_RANKS_COMPLETED
   *
   * @param {number} chalHash
   * @return {number}
   */
export const CHAL_GET_NUM_RANKS_COMPLETED = '0x58cb53db63f84de9';
/**
   * CHAL_IS_GOAL_ACTIVE
   * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/challenge_goals.lua
   *
   * @param {number} chalHash
   * @param {number} goalHash
   * @return {boolean}
   */
export const CHAL_IS_GOAL_ACTIVE = '0x04dac3929796eb87';
/**
   * CHAL_MISSION_ADD_GOAL_PROGRESS_INT
   *
   * @param {number} missionHash
   * @param {number} goalHash
   * @param {number} value
   * @return {void}
   */
export const CHAL_MISSION_ADD_GOAL_PROGRESS_INT = '0x97e18e7c098626de';
/**
   * CHAL_MISSION_GET_NUM_GOALS
   *
   * @param {number} missionHash
   * @return {number}
   */
export const CHAL_MISSION_GET_NUM_GOALS = '0x0b0576dd3a75e58d';
/**
   * CHAL_MISSION_GET_NUM_GOALS_COMPLETE
   *
   * @param {number} missionHash
   * @return {number}
   */
export const CHAL_MISSION_GET_NUM_GOALS_COMPLETE = '0xa785a52b59b7e7b2';
/**
   * CHAL_MISSION_IS_GOAL_COMPLETE
   *
   * @param {number} missionHash
   * @param {number} goalHash
   * @return {boolean}
   */
export const CHAL_MISSION_IS_GOAL_COMPLETE = '0xc0bb774787bbf301';
/**
   * CHAL_NET_START_CHAL
   *
   * @param {number} chalHash
   * @return {void}
   */
export const CHAL_NET_START_CHAL = '0x4abf7e4db6279e8f';
/**
   * CHAL_NET_START_GOAL
   *
   * @param {number} chalHash
   * @param {number} goalHash
   * @return {void}
   */
export const CHAL_NET_START_GOAL = '0xc3fcb47344dcb638';
/**
   * CHAL_NET_STOP_CHAL
   *
   * @param {number} chalHash
   * @return {void}
   */
export const CHAL_NET_STOP_CHAL = '0x43b0163154a50c86';
/**
   * CHAL_NET_STOP_GOAL
   *
   * @param {number} chalHash
   * @param {number} goalHash
   * @return {void}
   */
export const CHAL_NET_STOP_GOAL = '0x00ce6a93324a590b';
/**
   * CHAL_SET_GOAL_DISABLED
   *
   * @param {number} chalHash
   * @param {number} goalHash
   * @param {boolean} disabled
   * @return {void}
   */
export const CHAL_SET_GOAL_DISABLED = '0xf63df9ee16393343';
/**
   * CHAL_SET_GOAL_PROGRESS_INT
   *
   * @param {number} chalHash
   * @param {number} goalHash
   * @param {number} value
   * @return {void}
   */
export const CHAL_SET_GOAL_PROGRESS_INT = '0xddbd560745b1ee9b';
/**
   * STATSTRACKER_DEED_STARTED
   *
   * @param {number} p0
   * @param {any} p1
   * @return {void}
   */
export const STATSTRACKER_DEED_STARTED = '0xb2a38826e5886e83';
/**
   * STATSTRACKER_IS_INITIALIZED
   *
   * @param {number} p0
   * @return {boolean}
   */
export const STATSTRACKER_IS_INITIALIZED = '0x01f4d242765c6b24';
/**
   * STAT_ADD_BOUNTY_TARGET
   *
   * @param {number} unlockHash
   * @param {number} ped
   * @return {void}
   */
export const STAT_ADD_BOUNTY_TARGET = '0x6b1044fdc2b09101';
/**
   * STAT_BOUNTY_CAPTURED
   *
   * @param {number} entity
   * @return {void}
   */
export const STAT_BOUNTY_CAPTURED = '0x262ef7cf49cf1eb9';
/**
   * STAT_BOUNTY_ESCAPED
   *
   * @param {number} ped
   * @return {void}
   */
export const STAT_BOUNTY_ESCAPED = '0xb22f05732f72f70c';
/**
   * STAT_ID_GET_BOOL
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @return {[boolean, boolean]}
   */
export const STAT_ID_GET_BOOL = '0x11b5e6d2ae73f48f';
/**
   * STAT_ID_GET_DATE
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {DataView} date
   * @return {boolean}
   */
export const STAT_ID_GET_DATE = '0x8b0facefc36c824c';
/**
   * STAT_ID_GET_FLOAT
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @return {[boolean, number]}
   */
export const STAT_ID_GET_FLOAT = '0xd7ae6c9c9c6ac54d';
/**
   * STAT_ID_GET_INT
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @return {[boolean, number]}
   */
export const STAT_ID_GET_INT = '0x767fbc2ac802ef3e';
/**
   * STAT_ID_IS_VALID
   * struct StatId
   * {
   *   alignas(8) Hash BaseId;
   *   alignas(8) Hash PermutationId;
   * }
   *
   * @param {DataView} statId
   * @return {boolean}
   */
export const STAT_ID_IS_VALID = '0xc48fe1971c9743ff';
/**
   * STAT_ID_SET_BOOL
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {boolean} value
   * @param {boolean} p2
   * @return {boolean}
   */
export const STAT_ID_SET_BOOL = '0x3b5107353267d7a1';
/**
   * STAT_ID_SET_DATE
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {DataView} date
   * @param {boolean} p2
   * @return {boolean}
   */
export const STAT_ID_SET_DATE = '0x1fae9b2faa2dfe06';
/**
   * STAT_ID_SET_FLOAT
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {number} value
   * @param {boolean} p2
   * @return {boolean}
   */
export const STAT_ID_SET_FLOAT = '0x481bdf6a10c5ef68';
/**
   * STAT_ID_SET_GXT_LABEL
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {string | number} label
   * @param {boolean} p2
   * @return {boolean}
   */
export const STAT_ID_SET_GXT_LABEL = '0x05060a54834f2382';
/**
   * STAT_ID_SET_INT
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {number} value
   * @param {boolean} p2
   * @return {boolean}
   */
export const STAT_ID_SET_INT = '0xa4ddf5df95e65eee';
/**
   * STAT_ID_SET_TO_POSSE_ID
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @return {void}
   */
export const STAT_ID_SET_TO_POSSE_ID = '0x34b22de38477edb4';
/**
   * STAT_PHOTOGRAPH_TAKEN
   *
   * @param {number} itemset
   * @return {void}
   */
export const STAT_PHOTOGRAPH_TAKEN = '0x4d31051a4ca83787';
/**
   * STAT_REGISTER_LEGENDARY_ANIMAL_DEED
   *
   * @param {number} deedHash
   * @return {void}
   */
export const STAT_REGISTER_LEGENDARY_ANIMAL_DEED = '0xcd0d69c65bb0e8b9';
/**
   * WEEKLY_COLLECTIBLE_GET_ITEM_IN_SET
   *
   * @param {number} chalHash
   * @param {number} setIndex
   * @param {number} itemIndex
   * @return {[boolean, number, number]}
   */
export const WEEKLY_COLLECTIBLE_GET_ITEM_IN_SET = '0xba61ba6205a3f5a8';
/**
   * WEEKLY_COLLECTIBLE_GET_ITEM_SET_BUY_AWARD
   *
   * @param {number} chalHash
   * @param {number} index
   * @return {number}
   */
export const WEEKLY_COLLECTIBLE_GET_ITEM_SET_BUY_AWARD = '0x610783f646894d25';
/**
   * WEEKLY_COLLECTIBLE_GET_ITEM_SET_LABEL
   *
   * @param {number} chalHash
   * @param {number} index
   * @return {number}
   */
export const WEEKLY_COLLECTIBLE_GET_ITEM_SET_LABEL = '0xbffa88522ff0f730';
/**
   * WEEKLY_COLLECTIBLE_GET_NUM_ITEMS_IN_SET
   *
   * @param {number} chalHash
   * @param {number} index
   * @return {number}
   */
export const WEEKLY_COLLECTIBLE_GET_NUM_ITEMS_IN_SET = '0x7d675c9dddb365be';
/**
   * WEEKLY_COLLECTIBLE_GET_NUM_SETS
   *
   * @param {number} chalHash
   * @return {number}
   */
export const WEEKLY_COLLECTIBLE_GET_NUM_SETS = '0x8f5317729f791d10';
/**
   * _0x025E98E317652CDD
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x025E98E317652CDD = '0x025e98e317652cdd';
/**
   * _0x0FEE2561120F3333
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @return {void}
   */
export const _0x0FEE2561120F3333 = '0x0fee2561120f3333';
/**
   * _0x218F7710A139D012
   *
  
   * @return {void}
   */
export const _0x218F7710A139D012 = '0x218f7710a139d012';
/**
   * _0x302E71C1D9EE75B9
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {number} p1
   * @return {[boolean, number]}
   */
export const _0x302E71C1D9EE75B9 = '0x302e71c1d9ee75b9';
/**
   * _0x378D3B1B11D9385B
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x378D3B1B11D9385B = '0x378d3b1b11d9385b';
/**
   * _0x3AEABAE3F3C7600C
   *
  
   * @return {boolean}
   */
export const _0x3AEABAE3F3C7600C = '0x3aeabae3f3c7600c';
/**
   * _0x3EB2791A1FBC8A42
   *
   * @param {number} statItem
   * @param {number} p1
   * @return {void}
   */
export const _0x3EB2791A1FBC8A42 = '0x3eb2791a1fbc8a42';
/**
   * _0x3F6FD87D2030ADC6
   *
  
   * @return {string | number}
   */
export const _0x3F6FD87D2030ADC6 = '0x3f6fd87d2030adc6';
/**
   * _0x4DAC398297981B87
   * Only used in R* SP Scripts
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0x4DAC398297981B87 = '0x4dac398297981b87';
/**
   * _0x4E463A3CDEFFFE96
   * Only used in R* Script net_char_creator
   *
  
   * @return {void}
   */
export const _0x4E463A3CDEFFFE96 = '0x4e463a3cdefffe96';
/**
   * _0x4F2D5FA23DB992DE
   * Only used in R* Script net_char_creator
   *
  
   * @return {void}
   */
export const _0x4F2D5FA23DB992DE = '0x4f2d5fa23db992de';
/**
   * _0x4FCBCC0584CD08E9
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x4FCBCC0584CD08E9 = '0x4fcbcc0584cd08e9';
/**
   * _0x6123E2832C34243D
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x6123E2832C34243D = '0x6123e2832c34243d';
/**
   * _0x8312F09C56149A8A
   * Only used in R* SP Scripts
   *
   * @param {number} animalType
   * @return {void}
   */
export const _0x8312F09C56149A8A = '0x8312f09c56149a8a';
/**
   * _0x8BA3D7B1E83EF803
   *
   * @param {number} p0
   * @return {number}
   */
export const _0x8BA3D7B1E83EF803 = '0x8ba3d7b1e83ef803';
/**
   * _0x8C889E4CBB4B2356
   *
   * @param {any} p0
   * @param {number} ped
   * @return {void}
   */
export const _0x8C889E4CBB4B2356 = '0x8c889e4cbb4b2356';
/**
   * _0x91A4F58E01ED5E4C
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {number} value
   * @return {void}
   */
export const _0x91A4F58E01ED5E4C = '0x91a4f58e01ed5e4c';
/**
   * _0x99230691875FC218
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _0x99230691875FC218 = '0x99230691875fc218';
/**
   * _0x9D0F5D2E1951CD84
   *
  
   * @return {number}
   */
export const _0x9D0F5D2E1951CD84 = '0x9d0f5d2e1951cd84';
/**
   * _0xA2E2BEA4E83F6270
   *
   * @param {number} p0
   * @return {any}
   */
export const _0xA2E2BEA4E83F6270 = '0xa2e2bea4e83f6270';
/**
   * _0xA59590050F80FF2E
   * Only used in R* SP Scripts
   *
   * @param {any} p0
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {void}
   */
export const _0xA59590050F80FF2E = '0xa59590050f80ff2e';
/**
   * _0xA596890CF55B5095
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0xA596890CF55B5095 = '0xa596890cf55b5095';
/**
   * _0xB112B9262EC29C20
   *
   * @param {number} p0
   * @param {number} p1
   * @return {string | number}
   */
export const _0xB112B9262EC29C20 = '0xb112b9262ec29c20';
/**
   * _0xB5E2EDA2135E0FA1
   *
   * @param {number} p0
   * @param {number} p1
   * @return {[boolean, number]}
   */
export const _0xB5E2EDA2135E0FA1 = '0xb5e2eda2135e0fa1';
/**
   * _0xBE66B26B6529E943
   *
   * @param {number} unlockHash
   * @param {number} ped
   * @param {number} animalType
   * @return {void}
   */
export const _0xBE66B26B6529E943 = '0xbe66b26b6529e943';
/**
   * _0xCA1F0B5103936891
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _0xCA1F0B5103936891 = '0xca1f0b5103936891';
/**
   * _0xCA41E86545413B5B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _0xCA41E86545413B5B = '0xca41e86545413b5b';
/**
   * _0xD64DBC8B0424135F
   *
   * @param {number} ped
   * @param {number} animalType
   * @return {void}
   */
export const _0xD64DBC8B0424135F = '0xd64dbc8b0424135f';
/**
   * _0xDA26263C07CCE9C2
   *
   * @param {number} p0
   * @return {void}
   */
export const _0xDA26263C07CCE9C2 = '0xda26263c07cce9c2';
/**
   * _0xDDBD560745B1EE98
   *
   * @param {number} chalHash
   * @param {number} goalHash
   * @param {number} player
   * @return {number}
   */
export const _0xDDBD560745B1EE98 = '0xddbd560745b1ee98';
/**
   * _0xDF95DF488A645CE7
   *
  
   * @return {void}
   */
export const _0xDF95DF488A645CE7 = '0xdf95df488a645ce7';
/**
   * _0xE141F6B40B1E3683
   * statId: see STAT_ID_IS_VALID
   * Only used in R* SP Scripts
   * _STAT_ID_SET_*
   *
   * @param {DataView} statId
   * @param {number} value
   * @return {void}
   */
export const _0xE141F6B40B1E3683 = '0xe141f6b40b1e3683';
/**
   * _0xE5A680A5D8B1F687
   *
   * @param {number} p0
   * @return {void}
   */
export const _0xE5A680A5D8B1F687 = '0xe5a680a5d8b1f687';
/**
   * _0xF21A5D66874FCEDD
   *
   * @param {any} p0
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0xF21A5D66874FCEDD = '0xf21a5d66874fcedd';
/**
   * _0xF2B5ABDE09958689
   *
   * @param {number} unlockHash
   * @param {number} ped1
   * @param {number} ped2
   * @return {void}
   */
export const _0xF2B5ABDE09958689 = '0xf2b5abde09958689';
/**
   * _0xF8181B5EF156862C
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xF8181B5EF156862C = '0xf8181b5ef156862c';
/**
   * _STATSTRACKER_DEED_STATUS
   *
   * @param {number} deedType
   * @param {number} deedHash
   * @param {number} missionStatus
   * @param {DataView} data
   * @return {void}
   */
export const _STATSTRACKER_DEED_STATUS = '0xd5910ecf81a2278c';
/**
   * _STAT_ADD_ANIMAL_SAMPLE_TARGET
   * Related to animal tagging
   *
   * @param {number} animalType
   * @return {void}
   */
export const _STAT_ADD_ANIMAL_SAMPLE_TARGET = '0x90e9a5dadbabc918';
/**
   * _STAT_CALCULATE_COOLDOWN
   * Calculation: (value / 1000) / 60 % 60
   *
   * @param {number} value
   * @return {number}
   */
export const _STAT_CALCULATE_COOLDOWN = '0x1e7384ab5d4f4581';
/**
   * _STAT_CARRIED_SATCHEL_ITEM_FROM_PED
   *
   * @param {number} ped
   * @return {void}
   */
export const _STAT_CARRIED_SATCHEL_ITEM_FROM_PED = '0x831bf01c56149a8a';
/**
   * _STAT_DONATE_INCREMENT_ITEM
   *
   * @param {number} item
   * @param {number} slot
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _STAT_DONATE_INCREMENT_ITEM = '0x7c2abf6e556b21fc';
/**
   * _STAT_ID_DECREMENT_INT
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {number} value
   * @return {void}
   */
export const _STAT_ID_DECREMENT_INT = '0xbd861ae8a5181ed7';
/**
   * _STAT_ID_INCREMENT_FLOAT
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {number} value
   * @return {void}
   */
export const _STAT_ID_INCREMENT_FLOAT = '0x4a47e38ea3d60939';
/**
   * _STAT_ID_INCREMENT_INT
   * statId: see STAT_ID_IS_VALID
   *
   * @param {DataView} statId
   * @param {number} value
   * @return {void}
   */
export const _STAT_ID_INCREMENT_INT = '0x6a0184e904cdf25e';
/**
   * _STAT_ITEM_FISH_CAUGHT
   *
   * @param {number} fish
   * @param {number} weight
   * @param {number} category
   * @param {number} subcategory
   * @return {void}
   */
export const _STAT_ITEM_FISH_CAUGHT = '0xda26263c87cce9c1';
/**
   * _STAT_PHEROMONE_COOLDOWN_LEGENDARY_ANIMAL
   * statId: see STAT_ID_IS_VALID
   *
   * @param {number} entity
   * @param {DataView} statId
   * @return {boolean}
   */
export const _STAT_PHEROMONE_COOLDOWN_LEGENDARY_ANIMAL = '0x5420d398a42917fc';
/**
   * BEGIN_SRL
   *
  
   * @return {void}
   */
export const BEGIN_SRL = '0x0360710033be60d9';
/**
   * CLEAR_FOCUS
   *
  
   * @return {void}
   */
export const CLEAR_FOCUS = '0x86ccaf7ce493efbe';
/**
   * CLEAR_HD_AREA
   *
  
   * @return {void}
   */
export const CLEAR_HD_AREA = '0xd83b22434e52728d';
/**
   * DOES_ANIM_DICT_EXIST
   *
   * @param {string | number} animDict
   * @return {boolean}
   */
export const DOES_ANIM_DICT_EXIST = '0x537f44cb0d7f150d';
/**
   * END_SRL
   *
  
   * @return {void}
   */
export const END_SRL = '0x1ce71fb33ca079fe';
/**
   * GET_NUMBER_OF_STREAMING_REQUESTS
   *
  
   * @return {number}
   */
export const GET_NUMBER_OF_STREAMING_REQUESTS = '0x30cccc4d88e654ca';
/**
   * GET_POPULATION_BUDGET_MULTIPLIER
   *
  
   * @return {number}
   */
export const GET_POPULATION_BUDGET_MULTIPLIER = '0x8a3945405b31048f';
/**
   * HAS_ANIM_DICT_LOADED
   *
   * @param {string | number} animDict
   * @return {boolean}
   */
export const HAS_ANIM_DICT_LOADED = '0x27ff6fe8009b40ca';
/**
   * HAS_CLIP_SET_LOADED
   * Alias for HAS_ANIM_SET_LOADED.
   *
   * @param {string | number} clipSet
   * @return {boolean}
   */
export const HAS_CLIP_SET_LOADED = '0x1f23d6b6da1cc3b2';
/**
   * HAS_COLLISION_FOR_MODEL_LOADED
   *
   * @param {number} model
   * @return {boolean}
   */
export const HAS_COLLISION_FOR_MODEL_LOADED = '0x210a79c9ec89778f';
/**
   * HAS_MODEL_LOADED
   * Checks if the specified model has loaded into memory.
   *
   * @param {number} model
   * @return {boolean}
   */
export const HAS_MODEL_LOADED = '0x1283b8b89dd5d1b6';
/**
   * HAS_MOVE_NETWORK_DEF_LOADED
   *
   * @param {string | number} name
   * @return {boolean}
   */
export const HAS_MOVE_NETWORK_DEF_LOADED = '0x2c04d89a0fb4e244';
/**
   * HAS_NAMED_PTFX_ASSET_LOADED
   *
   * @param {number} fxNameHash
   * @return {boolean}
   */
export const HAS_NAMED_PTFX_ASSET_LOADED = '0x65bb72f29138f5d6';
/**
   * HAS_PTFX_ASSET_LOADED
   *
  
   * @return {boolean}
   */
export const HAS_PTFX_ASSET_LOADED = '0x13a3f30a9ed0bc31';
/**
   * IPL_GROUP_SWAP_CANCEL
   *
  
   * @return {void}
   */
export const IPL_GROUP_SWAP_CANCEL = '0x31108bb5715d035f';
/**
   * IPL_GROUP_SWAP_FINISH
   *
  
   * @return {void}
   */
export const IPL_GROUP_SWAP_FINISH = '0x040ee319efd1d3b5';
/**
   * IPL_GROUP_SWAP_IS_ACTIVE
   *
  
   * @return {boolean}
   */
export const IPL_GROUP_SWAP_IS_ACTIVE = '0xfc464598f6ee97b0';
/**
   * IPL_GROUP_SWAP_IS_READY
   *
  
   * @return {boolean}
   */
export const IPL_GROUP_SWAP_IS_READY = '0xc2c05defe85a0b64';
/**
   * IPL_GROUP_SWAP_START
   *
   * @param {string | number} iplName1
   * @param {string | number} iplName2
   * @return {void}
   */
export const IPL_GROUP_SWAP_START = '0x20d504994fdc4412';
/**
   * IS_ENTITY_FOCUS
   *
   * @param {number} entity
   * @return {boolean}
   */
export const IS_ENTITY_FOCUS = '0xf87de697e9a06ec6';
/**
   * IS_IPL_ACTIVE_BY_HASH
   * Old name: _IS_IMAP_ACTIVE_2
   *
   * @param {number} iplHash
   * @return {boolean}
   */
export const IS_IPL_ACTIVE_BY_HASH = '0x93ac1b91cb6d9913';
/**
   * IS_IPL_ACTIVE_HASH
   * Old name: _IS_IMAP_ACTIVE
   *
   * @param {number} iplHash
   * @return {boolean}
   */
export const IS_IPL_ACTIVE_HASH = '0xd779b9b910bd3b7c';
/**
   * IS_LOAD_SCENE_ACTIVE
   *
  
   * @return {boolean}
   */
export const IS_LOAD_SCENE_ACTIVE = '0xcf45df50c7775f2a';
/**
   * IS_LOAD_SCENE_LOADED
   *
  
   * @return {boolean}
   */
export const IS_LOAD_SCENE_LOADED = '0x0909f71b5c070797';
/**
   * IS_MODEL_A_PED
   *
   * @param {number} model
   * @return {boolean}
   */
export const IS_MODEL_A_PED = '0xc3f09de9d6d17dda';
/**
   * IS_MODEL_A_VEHICLE
   * Returns whether the specified model represents a vehicle.
   *
   * @param {number} model
   * @return {boolean}
   */
export const IS_MODEL_A_VEHICLE = '0x354f62672de7db0a';
/**
   * IS_MODEL_IN_CDIMAGE
   * Returns whether the specified model exists in the game.
   *
   * @param {number} model
   * @return {boolean}
   */
export const IS_MODEL_IN_CDIMAGE = '0xd6f3b6d7716cff8e';
/**
   * IS_MODEL_VALID
   * Returns whether the specified model is valid
   *
   * @param {number} model
   * @return {boolean}
   */
export const IS_MODEL_VALID = '0x392c8d8e07b70efc';
/**
   * IS_PLAYER_SWITCH_IN_PROGRESS
   *
  
   * @return {boolean}
   */
export const IS_PLAYER_SWITCH_IN_PROGRESS = '0xed20cb1f5297791d';
/**
   * IS_RENDERED_SCENE_LOADED
   *
  
   * @return {boolean}
   */
export const IS_RENDERED_SCENE_LOADED = '0x45bf3a6239a576b7';
/**
   * IS_SRL_LOADED
   *
  
   * @return {boolean}
   */
export const IS_SRL_LOADED = '0x5c2c88512cf6dafb';
/**
   * LOAD_SCENE_START
   *
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {number} radius
   * @param {number} controlFlags
   * @return {boolean}
   */
export const LOAD_SCENE_START = '0x387ad749e3b69b70';
/**
   * LOAD_SCENE_START_SPHERE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} controlFlags
   * @return {boolean}
   */
export const LOAD_SCENE_START_SPHERE = '0x513f8aa5bf2f17cf';
/**
   * LOAD_SCENE_STOP
   *
  
   * @return {void}
   */
export const LOAD_SCENE_STOP = '0x5a8b01199c3e79c3';
/**
   * PREFETCH_SRL
   *
   * @param {string | number} srl
   * @return {void}
   */
export const PREFETCH_SRL = '0x354837e5a5baa5af';
/**
   * REMOVE_ANIM_DICT
   *
   * @param {string | number} animDict
   * @return {void}
   */
export const REMOVE_ANIM_DICT = '0x4763145053a33d46';
/**
   * REMOVE_CLIP_SET
   * Alias for REMOVE_ANIM_SET.
   *
   * @param {string | number} clipSet
   * @return {void}
   */
export const REMOVE_CLIP_SET = '0x817fa1b1ee7cd6f0';
/**
   * REMOVE_IPL_BY_HASH
   * Old name: _REMOVE_IMAP_2
   *
   * @param {number} iplHash
   * @return {void}
   */
export const REMOVE_IPL_BY_HASH = '0x431e3ab760629b34';
/**
   * REMOVE_IPL_HASH
   * Old name: _REMOVE_IMAP
   *
   * @param {number} iplHash
   * @return {void}
   */
export const REMOVE_IPL_HASH = '0x5a3e5cf7b4014b96';
/**
   * REMOVE_MOVE_NETWORK_DEF
   *
   * @param {string | number} name
   * @return {void}
   */
export const REMOVE_MOVE_NETWORK_DEF = '0x57a197ad83f66bbf';
/**
   * REMOVE_NAMED_PTFX_ASSET
   *
   * @param {number} fxNameHash
   * @return {void}
   */
export const REMOVE_NAMED_PTFX_ASSET = '0xf20866829e1c81a2';
/**
   * REMOVE_PTFX_ASSET
   *
  
   * @return {void}
   */
export const REMOVE_PTFX_ASSET = '0x042f9049ea419e86';
/**
   * REQUEST_ADDITIONAL_COLLISION_AT_COORD
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const REQUEST_ADDITIONAL_COLLISION_AT_COORD = '0x83a8d71650d1894f';
/**
   * REQUEST_ANIM_DICT
   *
   * @param {string | number} animDict
   * @return {void}
   */
export const REQUEST_ANIM_DICT = '0xa862a2ad321f94b4';
/**
   * REQUEST_CLIP_SET
   *
   * @param {string | number} clipSet
   * @return {void}
   */
export const REQUEST_CLIP_SET = '0xef7611b57a820126';
/**
   * REQUEST_COLLISION_AT_COORD
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const REQUEST_COLLISION_AT_COORD = '0x0a3720f162a033c9';
/**
   * REQUEST_COLLISION_FOR_MODEL
   *
   * @param {number} model
   * @return {void}
   */
export const REQUEST_COLLISION_FOR_MODEL = '0xf1767be37f661551';
/**
   * REQUEST_IPL_BY_HASH
   * Old name: _REQUEST_IMAP_2
   *
   * @param {number} iplHash
   * @return {void}
   */
export const REQUEST_IPL_BY_HASH = '0x9e211a378f95c97c';
/**
   * REQUEST_IPL_HASH
   * Old name: _REQUEST_IMAP
   *
   * @param {number} iplHash
   * @return {void}
   */
export const REQUEST_IPL_HASH = '0x59767c5a7a9ae6da';
/**
   * REQUEST_MODEL
   * Request a model to be loaded into memory.
   *
   * @param {number} model
   * @param {boolean} p1
   * @return {void}
   */
export const REQUEST_MODEL = '0xfa28fe3a6246fc30';
/**
   * REQUEST_MOVE_NETWORK_DEF
   *
   * @param {string | number} name
   * @return {void}
   */
export const REQUEST_MOVE_NETWORK_DEF = '0x2b6529c54d29037a';
/**
   * REQUEST_NAMED_PTFX_ASSET
   *
   * @param {number} fxNameHash
   * @return {void}
   */
export const REQUEST_NAMED_PTFX_ASSET = '0xf2b2353bbc0d4e8f';
/**
   * REQUEST_PTFX_ASSET
   *
  
   * @return {void}
   */
export const REQUEST_PTFX_ASSET = '0x001ff43843028e0c';
/**
   * SET_ALL_MAPDATA_CULLED
   * nullsub, doesn't do anything
   *
   * @param {any} p0
   * @return {void}
   */
export const SET_ALL_MAPDATA_CULLED = '0x19abcc581d28e6f9';
/**
   * SET_FOCUS_ENTITY
   * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
   *
   * @param {number} entity
   * @return {void}
   */
export const SET_FOCUS_ENTITY = '0x955aedd58f4bd309';
/**
   * SET_FOCUS_POS_AND_VEL
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @return {void}
   */
export const SET_FOCUS_POS_AND_VEL = '0x25f6ef88664540e2';
/**
   * SET_GAME_PAUSES_FOR_STREAMING
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_GAME_PAUSES_FOR_STREAMING = '0xb3bc8250f4fe8b63';
/**
   * SET_HD_AREA
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {void}
   */
export const SET_HD_AREA = '0xb88b905afa35cb4d';
/**
   * SET_MAPDATACULLBOX_ENABLED
   *
   * @param {string | number} name
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_MAPDATACULLBOX_ENABLED = '0x3cacc83f6fed837c';
/**
   * SET_MODEL_AS_NO_LONGER_NEEDED
   * Marks the model as no longer needed.
   *
   * @param {number} model
   * @return {void}
   */
export const SET_MODEL_AS_NO_LONGER_NEEDED = '0x4ad96ef928bd4f9a';
/**
   * SET_POPULATION_BUDGET_MULTIPLIER
   *
   * @param {number} fBudgetMultiplier
   * @return {void}
   */
export const SET_POPULATION_BUDGET_MULTIPLIER = '0x2f9ac754fe179d58';
/**
   * SET_SCENE_STREAMING_TRACKS_CAM_POS_THIS_FRAME
   *
  
   * @return {void}
   */
export const SET_SCENE_STREAMING_TRACKS_CAM_POS_THIS_FRAME = '0xa03a6812529ad9c8';
/**
   * SET_SRL_LONG_JUMP_MODE
   *
   * @param {boolean} p0
   * @return {void}
   */
export const SET_SRL_LONG_JUMP_MODE = '0x7c907e8a725e5fd2';
/**
   * SET_SRL_READAHEAD_TIMES
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const SET_SRL_READAHEAD_TIMES = '0xd346248c1dce0d76';
/**
   * SET_SRL_TIME
   *
   * @param {number} p0
   * @return {void}
   */
export const SET_SRL_TIME = '0x18231aef458bcff2';
/**
   * _0x032A14D082A9B269
   * _SET_E* or _SET_F*
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x032A14D082A9B269 = '0x032a14d082a9b269';
/**
   * _0x03DDBF2D73799F9E
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x03DDBF2D73799F9E = '0x03ddbf2d73799f9e';
/**
   * _0x05DD384F39DE1C8C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x05DD384F39DE1C8C = '0x05dd384f39de1c8c';
/**
   * _0x071769BCB24379E5
   *
  
   * @return {any}
   */
export const _0x071769BCB24379E5 = '0x071769bcb24379e5';
/**
   * _0x07559B29950301FF
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x07559B29950301FF = '0x07559b29950301ff';
/**
   * _0x09FBF15D73EFC900
   *
  
   * @return {void}
   */
export const _0x09FBF15D73EFC900 = '0x09fbf15d73efc900';
/**
   * _0x198B85CC3C7A4593
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x198B85CC3C7A4593 = '0x198b85cc3c7a4593';
/**
   * _0x27AF48C62B281341
   *
  
   * @return {any}
   */
export const _0x27AF48C62B281341 = '0x27af48c62b281341';
/**
   * _0x2A6D1DAAB9EBB262
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x2A6D1DAAB9EBB262 = '0x2a6d1daab9ebb262';
/**
   * _0x2E24C27B112B5B12
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x2E24C27B112B5B12 = '0x2e24c27b112b5b12';
/**
   * _0x2F4D53023F826FF0
   *
  
   * @return {any}
   */
export const _0x2F4D53023F826FF0 = '0x2f4d53023f826ff0';
/**
   * _0x5288B7F0690F7C1F
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x5288B7F0690F7C1F = '0x5288b7f0690f7c1f';
/**
   * _0x53764309C4618087
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x53764309C4618087 = '0x53764309c4618087';
/**
   * _0x5D5E2102B174B8D2
   *
  
   * @return {any}
   */
export const _0x5D5E2102B174B8D2 = '0x5d5e2102b174b8d2';
/**
   * _0x62D5F0588915B277
   *
  
   * @return {void}
   */
export const _0x62D5F0588915B277 = '0x62d5f0588915b277';
/**
   * _0x66BC28E50E85270E
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x66BC28E50E85270E = '0x66bc28e50e85270e';
/**
   * _0x6A6E79FBE8678C98
   *
  
   * @return {void}
   */
export const _0x6A6E79FBE8678C98 = '0x6a6e79fbe8678c98';
/**
   * _0x7B8C2B846C05E5AD
   *
  
   * @return {any}
   */
export const _0x7B8C2B846C05E5AD = '0x7b8c2b846c05e5ad';
/**
   * _0x80B3E0597366ADF1
   *
  
   * @return {void}
   */
export const _0x80B3E0597366ADF1 = '0x80b3e0597366adf1';
/**
   * _0x85B8F04555AB49B8
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x85B8F04555AB49B8 = '0x85b8f04555ab49b8';
/**
   * _0x8D56BDA343D9519F
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x8D56BDA343D9519F = '0x8d56bda343d9519f';
/**
   * _0x99F92061EFE908BA
   *
  
   * @return {any}
   */
export const _0x99F92061EFE908BA = '0x99f92061efe908ba';
/**
   * _0x9F348DE670423460
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9F348DE670423460 = '0x9f348de670423460';
/**
   * _0xA0AE7653E8181725
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xA0AE7653E8181725 = '0xa0ae7653e8181725';
/**
   * _0xAE00387E53B1E9FC
   *
  
   * @return {void}
   */
export const _0xAE00387E53B1E9FC = '0xae00387e53b1e9fc';
/**
   * _0xAFA87A7D41EE346A
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xAFA87A7D41EE346A = '0xafa87a7d41ee346a';
/**
   * _0xB223249B7798EEED
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0xB223249B7798EEED = '0xb223249b7798eeed';
/**
   * _0xB9B9E47EDB9D63DB
   * Sorts some unknown data.
   * 
   * Likely SORT_*
   *
  
   * @return {void}
   */
export const _0xB9B9E47EDB9D63DB = '0xb9b9e47edb9d63db';
/**
   * _0xBE8DAA9D8D01DA6A
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xBE8DAA9D8D01DA6A = '0xbe8daa9d8d01da6a';
/**
   * _0xCC61D8D6C19D9F14
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xCC61D8D6C19D9F14 = '0xcc61d8d6c19d9f14';
/**
   * _0xD6E39DC5D46DF4AB
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xD6E39DC5D46DF4AB = '0xd6e39dc5d46df4ab';
/**
   * _0xD840C130D7AACFA5
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xD840C130D7AACFA5 = '0xd840c130d7aacfa5';
/**
   * _0xD9F2FF4AF394D926
   *
  
   * @return {void}
   */
export const _0xD9F2FF4AF394D926 = '0xd9f2ff4af394d926';
/**
   * _0xDA7FDEFF4DE86839
   *
  
   * @return {any}
   */
export const _0xDA7FDEFF4DE86839 = '0xda7fdeff4de86839';
/**
   * _0xDABFE48BA0D457AA
   *
  
   * @return {any}
   */
export const _0xDABFE48BA0D457AA = '0xdabfe48ba0d457aa';
/**
   * _0xDEEE1F265B7ECEF5
   *
  
   * @return {void}
   */
export const _0xDEEE1F265B7ECEF5 = '0xdeee1f265b7ecef5';
/**
   * _0xE5B76E5B56CD77DD
   *
  
   * @return {any}
   */
export const _0xE5B76E5B56CD77DD = '0xe5b76e5b56cd77dd';
/**
   * _0xEF1A8A484118735E
   *
  
   * @return {void}
   */
export const _0xEF1A8A484118735E = '0xef1a8a484118735e';
/**
   * _0xF01D21DF39554115
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xF01D21DF39554115 = '0xf01d21df39554115';
/**
   * _0xF11D7CB962FCD747
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xF11D7CB962FCD747 = '0xf11d7cb962fcd747';
/**
   * _GET_IPL_BOUNDING_SPHERE
   * Outputs IPL position and radius (previously wrongly named heading)
   * https://github.com/femga/rdr3_discoveries/blob/master/imaps/imaps_with_coords_and_heading.lua
   *
   * @param {number} iplHash
   * @return {[boolean, Vector3, number]}
   */
export const _GET_IPL_BOUNDING_SPHERE = '0x9c77964b0e07b633';
/**
   * _HAS_COLLISION_LOADED_AT_COORD
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const _HAS_COLLISION_LOADED_AT_COORD = '0xda8b2eaf29e872e2';
/**
   * _HAS_SCENARIO_TYPE_LOADED
   *
   * @param {number} scenarioType
   * @param {boolean} p1
   * @return {boolean}
   */
export const _HAS_SCENARIO_TYPE_LOADED = '0x9427c94d2e4094a4';
/**
   * _IS_MODEL_AN_OBJECT
   *
   * @param {number} model
   * @return {boolean}
   */
export const _IS_MODEL_AN_OBJECT = '0x274ee1b90cfa669e';
/**
   * _IS_POSITION_INSIDE_IPL_STREAMING_EXTENTS
   * Returns true if IPL is streamed in (?)
   *
   * @param {number} iplHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const _IS_POSITION_INSIDE_IPL_STREAMING_EXTENTS = '0x73b40d97d7baad77';
/**
   * _REMOVE_SCENARIO_ASSET
   *
   * @param {number} scenarioType
   * @return {any}
   */
export const _REMOVE_SCENARIO_ASSET = '0x4eddd9e9ca5af985';
/**
   * _REQUEST_CLIP_SET_BY_HASH
   *
   * @param {number} clipSetHash
   * @return {void}
   */
export const _REQUEST_CLIP_SET_BY_HASH = '0xac37644a538f7524';
/**
   * _REQUEST_METADATA_AT_COORD
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _REQUEST_METADATA_AT_COORD = '0xa8432a14d4dc2101';
/**
   * _REQUEST_SCENARIO_TYPE
   * p1 seems to be some kind of flag? p2 can be 0 or entity model accepts hash joaat("a_c_bear_01") or with GetEntityModel(entity) p3 can be 0 or pass the conditional anim or using _GET_ACTIVE_DYNAMIC_SCENARIO
   *
   * @param {number} scenarioType
   * @param {number} p1
   * @param {number} entityModel
   * @param {number} conditionalAnim
   * @return {number}
   */
export const _REQUEST_SCENARIO_TYPE = '0x19a6be7d9c6884d3';
/**
   * _SET_GUARMA_WORLDHORIZON_ACTIVE
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_GUARMA_WORLDHORIZON_ACTIVE = '0x74e2261d2a66849a';
/**
   * ADD_COVER_BLOCKING_AREA
   *
   * @param {number} playerX
   * @param {number} playerY
   * @param {number} playerZ
   * @param {number} radiusX
   * @param {number} radiusY
   * @param {number} radiusZ
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {boolean} p9
   * @return {void}
   */
export const ADD_COVER_BLOCKING_AREA = '0x45c597097dd7cb81';
/**
   * ADD_COVER_POINT
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {boolean} p7
   * @return {number}
   */
export const ADD_COVER_POINT = '0xd5c12a75c7b9497f';
/**
   * ADD_FLEE_TARGET_PED
   * Params: p2 is always -1.f in R* Scripts
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} p2
   * @return {void}
   */
export const ADD_FLEE_TARGET_PED = '0x3923ec958249657d';
/**
   * ADD_PATROL_ROUTE_LINK
   *
   * @param {number} node1
   * @param {number} node2
   * @return {void}
   */
export const ADD_PATROL_ROUTE_LINK = '0x23083260dec3a551';
/**
   * ADD_PATROL_ROUTE_NODE
   *
   * @param {number} nodeId
   * @param {string | number} scenarioName
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} lookPosX
   * @param {number} lookPosY
   * @param {number} lookPosZ
   * @param {number} duration
   * @param {boolean} p9
   * @return {void}
   */
export const ADD_PATROL_ROUTE_NODE = '0x8edf950167586b7c';
/**
   * ARE_COMPOSITE_LOOTABLE_ENTITY_DEF_ASSETS_LOADED
   * Returns true when requested asset is loaded
   *
   * @param {number} asset
   * @return {boolean}
   */
export const ARE_COMPOSITE_LOOTABLE_ENTITY_DEF_ASSETS_LOADED = '0x5e5d96be25e9df68';
/**
   * ASSISTED_MOVEMENT_IS_ROUTE_LOADED
   *
   * @param {string | number} route
   * @return {boolean}
   */
export const ASSISTED_MOVEMENT_IS_ROUTE_LOADED = '0x60f9a4393a21f741';
/**
   * ASSISTED_MOVEMENT_REMOVE_ROUTE
   *
   * @param {string | number} route
   * @return {void}
   */
export const ASSISTED_MOVEMENT_REMOVE_ROUTE = '0x3548536485dd792b';
/**
   * ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES
   *
   * @param {string | number} route
   * @param {number} props
   * @return {void}
   */
export const ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES = '0xd5002d78b7162e1b';
/**
   * CAN_START_ITEM_INTERACTION
   *
   * @param {number} ped
   * @param {number} itemHash
   * @param {number} interactionAnimHash
   * @param {number} p3
   * @return {boolean}
   */
export const CAN_START_ITEM_INTERACTION = '0x2d19bc4df626cbe7';
/**
   * CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK
   *
   * @param {number} ped
   * @return {void}
   */
export const CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK = '0xc35b5cdb2824cf69';
/**
   * CLEAR_PED_SECONDARY_TASK
   *
   * @param {number} ped
   * @return {void}
   */
export const CLEAR_PED_SECONDARY_TASK = '0x176cecf6f920d707';
/**
   * CLEAR_PED_TASKS
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const CLEAR_PED_TASKS = '0xe1ef3c1216aff2cd';
/**
   * CLEAR_PED_TASKS_IMMEDIATELY
   * Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
   * 
   * resetCrouch TRUE = ped will stand up if crouching, FALSE = ped will remain crouching if crouched
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} resetCrouch
   * @return {void}
   */
export const CLEAR_PED_TASKS_IMMEDIATELY = '0xaaa34f8a7cb32098';
/**
   * CLEAR_SEQUENCE_TASK
   *
  
   * @return {number}
   */
export const CLEAR_SEQUENCE_TASK = '0x3841422e9c488d8c';
/**
   * CLOSE_PATROL_ROUTE
   *
  
   * @return {void}
   */
export const CLOSE_PATROL_ROUTE = '0xb043eca801b8cbc1';
/**
   * CLOSE_SEQUENCE_TASK
   *
   * @param {number} taskSequenceId
   * @return {void}
   */
export const CLOSE_SEQUENCE_TASK = '0x39e72bc99e6360cb';
/**
   * CREATE_PATROL_ROUTE
   *
  
   * @return {void}
   */
export const CREATE_PATROL_ROUTE = '0xaf8a443ccc8018dc';
/**
   * CREATE_SCENARIO_POINT_HASH
   * Returns scenario
   *
   * @param {number} scenarioHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {any} p5
   * @param {any} p6
   * @param {boolean} p7
   * @return {number}
   */
export const CREATE_SCENARIO_POINT_HASH = '0x94b745ce41db58a1';
/**
   * CREATE_SCENARIO_POINT_HASH_ATTACHED_TO_ENTITY
   * Returns scenario
   *
   * @param {number} entity
   * @param {number} scenarioHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {any} p6
   * @param {any} p7
   * @param {boolean} p8
   * @return {number}
   */
export const CREATE_SCENARIO_POINT_HASH_ATTACHED_TO_ENTITY = '0x794ab1379a74064d';
/**
   * DELETE_PATROL_ROUTE
   *
   * @param {string | number} patrolRoute
   * @return {void}
   */
export const DELETE_PATROL_ROUTE = '0x7767dd9d65e91319';
/**
   * DOES_SCENARIO_EXIST_IN_AREA
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {boolean} p4
   * @param {any} p5
   * @param {boolean} p6
   * @return {boolean}
   */
export const DOES_SCENARIO_EXIST_IN_AREA = '0x5a59271ffadd33c1';
/**
   * DOES_SCENARIO_GROUP_EXIST
   *
   * @param {string | number} scenarioGroup
   * @return {boolean}
   */
export const DOES_SCENARIO_GROUP_EXIST = '0xf9034c136c9e00d3';
/**
   * DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA_HASH
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} typeHash
   * @param {number} radius
   * @param {boolean} p5
   * @return {boolean}
   */
export const DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA_HASH = '0x6eead6af637da752';
/**
   * DOES_SCENARIO_POINT_EXIST
   *
   * @param {number} scenario
   * @return {boolean}
   */
export const DOES_SCENARIO_POINT_EXIST = '0x841475ac96e794d1';
/**
   * DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS
   * Checks if there is a cover point at position
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {boolean}
   */
export const DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS = '0xa98b8e3c088e5a31';
/**
   * END_DUEL
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {number} p2
   * @return {void}
   */
export const END_DUEL = '0xeed08a3a98b847e2';
/**
   * FIND_SCENARIO_OF_TYPE_HASH
   *
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} scenarioType
   * @param {number} distance
   * @param {any} p5
   * @param {boolean} p6
   * @return {number}
   */
export const FIND_SCENARIO_OF_TYPE_HASH = '0xf533d68ff970d190';
/**
   * FORCE_SCENARIO_GROUP_PRIORITY
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const FORCE_SCENARIO_GROUP_PRIORITY = '0x444c910a5058e568';
/**
   * GET_ACTIVE_VEHICLE_MISSION_TYPE
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_ACTIVE_VEHICLE_MISSION_TYPE = '0x534aeba6e5ed4cab';
/**
   * GET_IS_CARRIABLE_ENTITY
   *
   * @param {number} entity
   * @return {boolean}
   */
export const GET_IS_CARRIABLE_ENTITY = '0x0ccfe72b43c9cf96';
/**
   * GET_IS_PED_AIMING_IN_THE_AIR
   *
   * @param {number} ped
   * @return {boolean}
   */
export const GET_IS_PED_AIMING_IN_THE_AIR = '0x8785e6e40c7a8819';
/**
   * GET_IS_TASK_ACTIVE
   *
   * @param {number} ped
   * @param {number} taskIndex
   * @return {boolean}
   */
export const GET_IS_TASK_ACTIVE = '0xb0760331c7aa4155';
/**
   * GET_IS_WAYPOINT_RECORDING_LOADED
   *
   * @param {string | number} waypointRecording
   * @return {boolean}
   */
export const GET_IS_WAYPOINT_RECORDING_LOADED = '0xcb4e8be8a0063c5d';
/**
   * GET_ITEM_INTERACTION_ITEM_ID
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_ITEM_INTERACTION_ITEM_ID = '0x804425c4bbd00883';
/**
   * GET_ITEM_INTERACTION_PROMPT_PROGRESS
   *
   * @param {number} ped
   * @param {number} inputContext
   * @return {number}
   */
export const GET_ITEM_INTERACTION_PROMPT_PROGRESS = '0xbc864a70ad55e0c1';
/**
   * GET_ITEM_INTERACTION_STATE
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_ITEM_INTERACTION_STATE = '0x6aa3dca2c6f5eb6d';
/**
   * GET_PED_DESIRED_MOVE_BLEND_RATIO
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_DESIRED_MOVE_BLEND_RATIO = '0x8517d4a6ca8513ed';
/**
   * GET_PED_WAYPOINT_DISTANCE
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_WAYPOINT_DISTANCE = '0xe6a877c64caf1bc5';
/**
   * GET_PED_WAYPOINT_OVERRIDE_SPEED
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_WAYPOINT_OVERRIDE_SPEED = '0xd39a2f3e7fcaff08';
/**
   * GET_PED_WAYPOINT_PROGRESS
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_PED_WAYPOINT_PROGRESS = '0x2720aaa75001e094';
/**
   * GET_PROP_FOR_SCENARIO_POINT
   * Old name: _GET_SCENARIO_POINT_ENTITY
   *
   * @param {number} scenarioPoint
   * @param {string | number} name
   * @return {number}
   */
export const GET_PROP_FOR_SCENARIO_POINT = '0x295514f198efd0ca';
/**
   * GET_RANSACK_SCENARIO_POINT_PED_IS_USING
   *
   * @param {number} ped
   * @return {any}
   */
export const GET_RANSACK_SCENARIO_POINT_PED_IS_USING = '0xd04241bbf6d03a5e';
/**
   * GET_SCENARIO_POINTS_IN_AREA
   * Note: scenariosInRadius is an array, and its size and values should be aligned to 8 bytes.
   *
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} radius
   * @param {any} scenariosInRadius
   * @param {number} size
   * @return {number}
   */
export const GET_SCENARIO_POINTS_IN_AREA = '0x345ec3b7ebde1cb5';
/**
   * GET_SCRIPTED_COVER_POINT_COORDS
   *
   * @param {number} coverpoint
   * @return {Vector3}
   */
export const GET_SCRIPTED_COVER_POINT_COORDS = '0x594a1028fc2a3e85';
/**
   * GET_SCRIPT_TASK_STATUS
   * Gets the status of a script-assigned task, and returns an int between 0-8
   * taskHash: https://alloc8or.re/rdr3/doc/enums/eScriptTaskHash.txt 
   * 
   * WAITING_TO_START_TASK = 0,
   * PERFORMING_TASK
   * DORMANT_TASK
   * VACANT_STAGE
   * GROUP_TASK_STAGE
   * ATTRACTOR_SCRIPT_TASK_STAGE
   * SECONDARY_TASK_STAGE
   * TASK_NOT_FOUND
   * FINISHED_TASK
   *
   * @param {number} ped
   * @param {number} taskHash
   * @param {boolean} p2
   * @return {number}
   */
export const GET_SCRIPT_TASK_STATUS = '0x77f1beb8863288d5';
/**
   * GET_SEQUENCE_PROGRESS
   * returned values:
   * 0 to 7 = task that's currently in progress, 0 meaning the first one.
   * -1 no task sequence in progress.
   *
   * @param {number} ped
   * @return {number}
   */
export const GET_SEQUENCE_PROGRESS = '0x00a9010cfe1e3533';
/**
   * GET_TASK_MOVE_NETWORK_EVENT
   *
   * @param {number} ped
   * @param {string | number} eventName
   * @return {boolean}
   */
export const GET_TASK_MOVE_NETWORK_EVENT = '0xb4f47213df45a64c';
/**
   * GET_TASK_MOVE_NETWORK_STATE
   *
   * @param {number} ped
   * @return {string | number}
   */
export const GET_TASK_MOVE_NETWORK_STATE = '0x717e4d1f2048376d';
/**
   * GET_VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED
   *
   * @param {any} p0
   * @return {any}
   */
export const GET_VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED = '0x3dc971eb22f73447';
/**
   * GET_VEHICLE_WAYPOINT_PROGRESS
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_VEHICLE_WAYPOINT_PROGRESS = '0x9824cff8fc66e159';
/**
   * GET_VEHICLE_WAYPOINT_TARGET_POINT
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_VEHICLE_WAYPOINT_TARGET_POINT = '0x416b62ac8b9e5bbd';
/**
   * GET_WAYPOINT_DISTANCE_ALONG_ROUTE
   *
   * @param {string | number} waypointRecording
   * @param {number} p1
   * @return {number}
   */
export const GET_WAYPOINT_DISTANCE_ALONG_ROUTE = '0xa5b769058763e497';
/**
   * IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK = '0x8785e6e40c7a8818';
/**
   * IS_EMOTE_TASK_RUNNING
   *
   * @param {number} ped
   * @param {any} p1
   * @return {boolean}
   */
export const IS_EMOTE_TASK_RUNNING = '0xcf9b71c0af824036';
/**
   * IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK = '0xa320ef046186fa3b';
/**
   * IS_MOVE_BLEND_RATIO_RUNNING
   *
   * @param {number} moveBlendRatio
   * @return {boolean}
   */
export const IS_MOVE_BLEND_RATIO_RUNNING = '0xd4d8636c0199a939';
/**
   * IS_MOVE_BLEND_RATIO_SPRINTING
   *
   * @param {number} moveBlendRatio
   * @return {boolean}
   */
export const IS_MOVE_BLEND_RATIO_SPRINTING = '0x24a2ad74fa9814e2';
/**
   * IS_MOVE_BLEND_RATIO_STILL
   *
   * @param {number} moveBlendRatio
   * @return {boolean}
   */
export const IS_MOVE_BLEND_RATIO_STILL = '0x349ce7b56dafd95c';
/**
   * IS_MOVE_BLEND_RATIO_WALKING
   *
   * @param {number} moveBlendRatio
   * @return {boolean}
   */
export const IS_MOVE_BLEND_RATIO_WALKING = '0xf133bbbe91e1691f';
/**
   * IS_PED_ACTIVE_IN_SCENARIO
   *
   * @param {number} ped
   * @param {number} scenario
   * @return {boolean}
   */
export const IS_PED_ACTIVE_IN_SCENARIO = '0xaa135f9482c82cc3';
/**
   * IS_PED_BEING_ARRESTED
   * This function is hard-coded to always return false.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_BEING_ARRESTED = '0x90a09f3a45fed688';
/**
   * IS_PED_CUFFED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_CUFFED = '0x74e559b3bc910685';
/**
   * IS_PED_EXITING_SCENARIO
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {boolean}
   */
export const IS_PED_EXITING_SCENARIO = '0x0c3cb2e600c8977d';
/**
   * IS_PED_GETTING_UP
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_GETTING_UP = '0x2a74e1d5f2f00eec';
/**
   * IS_PED_IN_HIT_REACT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_HIT_REACT = '0xf330a5c062b29bed';
/**
   * IS_PED_IN_WRITHE
   * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_IN_WRITHE = '0xdeb6d52126e7d640';
/**
   * IS_PED_RUNNING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_RUNNING = '0xc5286ffc176f28a2';
/**
   * IS_PED_RUNNING_INSPECTION_TASK
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_RUNNING_INSPECTION_TASK = '0x038b1f1674f0e242';
/**
   * IS_PED_RUNNING_TASK_ITEM_INTERACTION
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_RUNNING_TASK_ITEM_INTERACTION = '0xec7e480ff8bd0bed';
/**
   * IS_PED_SCENARIO_REACT_LOOKING
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {boolean}
   */
export const IS_PED_SCENARIO_REACT_LOOKING = '0x916b8e075abc8b4e';
/**
   * IS_PED_SPRINTING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_SPRINTING = '0x57e457cd2c0fc168';
/**
   * IS_PED_STILL
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_STILL = '0xac29253eef8f0180';
/**
   * IS_PED_WALKING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_WALKING = '0xde4c184b2b9b071a';
/**
   * IS_SCENARIO_GROUP_ENABLED
   *
   * @param {string | number} scenarioGroup
   * @return {boolean}
   */
export const IS_SCENARIO_GROUP_ENABLED = '0x367a09ded4e05b99';
/**
   * IS_SCENARIO_OCCUPIED
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {boolean} p4
   * @return {boolean}
   */
export const IS_SCENARIO_OCCUPIED = '0x788756d73ac2e07c';
/**
   * IS_SCENARIO_TYPE_ENABLED
   *
   * @param {string | number} scenarioType
   * @return {boolean}
   */
export const IS_SCENARIO_TYPE_ENABLED = '0x3a815db3ea088722';
/**
   * IS_TASK_MOVE_NETWORK_ACTIVE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_TASK_MOVE_NETWORK_ACTIVE = '0x921ce12c489c4c41';
/**
   * IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION = '0x30ed88d5e0c56a37';
/**
   * IS_TEAM_CARRIABLE_ENTITY
   *
   * @param {any} p0
   * @param {any} p1
   * @return {boolean}
   */
export const IS_TEAM_CARRIABLE_ENTITY = '0x559a6f8c5133b4ee';
/**
   * IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED
   *
   * @param {number} ped
   * @param {string | number} waypointRecording
   * @return {boolean}
   */
export const IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED = '0xe03b3f2d3dc59b64';
/**
   * IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {boolean}
   */
export const IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE = '0xf5134943ea29868c';
/**
   * MAKE_OBJECT_NOT_CARRIABLE
   *
   * @param {number} object
   * @return {void}
   */
export const MAKE_OBJECT_NOT_CARRIABLE = '0x67bfced22909834d';
/**
   * OPEN_PATROL_ROUTE
   * Note: patrolRoute must be prefixed with 'miss_' for it to be valid
   *
   * @param {string | number} patrolRoute
   * @return {void}
   */
export const OPEN_PATROL_ROUTE = '0xa36bfb5ee89f3d82';
/**
   * OPEN_SEQUENCE_TASK
   *
  
   * @return {number}
   */
export const OPEN_SEQUENCE_TASK = '0xe8854a4326b9e12b';
/**
   * PED_HAS_USE_SCENARIO_TASK
   *
   * @param {number} ped
   * @return {boolean}
   */
export const PED_HAS_USE_SCENARIO_TASK = '0x295e3ccec879ccd7';
/**
   * PLAY_ANIM_ON_RUNNING_SCENARIO
   *
   * @param {number} ped
   * @param {string | number} animDict
   * @param {string | number} animName
   * @return {void}
   */
export const PLAY_ANIM_ON_RUNNING_SCENARIO = '0x748040460f8df5dc';
/**
   * PLAY_ENTITY_SCRIPTED_ANIM
   *
   * @param {number} entity
   * @param {any} args
   * @return {void}
   */
export const PLAY_ENTITY_SCRIPTED_ANIM = '0x77a1eec547e7fcf1';
/**
   * REACT_LOOK_AT
   * lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
   * 
   * exitAnimation: LOOK_RETURN_GENERIC = 1,
   * LOOK_RETURN_DISMISSIVE = 2,
   * LOOK_RETURN_RELIEVED = 3
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} lookIntensity
   * @param {number} exitAnimation
   * @param {number} duration
   * @param {number} p5
   * @param {number} targetPed2
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const REACT_LOOK_AT = '0xe7fa07624574b79a';
/**
   * REACT_LOOK_AT_END
   *
   * @param {number} ped
   * @param {number} exitAnimation
   * @param {boolean} p2
   * @return {void}
   */
export const REACT_LOOK_AT_END = '0x541e5b41dca45828';
/**
   * REMOVE_ALL_COVER_BLOCKING_AREAS
   *
  
   * @return {void}
   */
export const REMOVE_ALL_COVER_BLOCKING_AREAS = '0xdb6708c0b46f56d8';
/**
   * REMOVE_COVER_POINT
   *
   * @param {number} coverpoint
   * @return {void}
   */
export const REMOVE_COVER_POINT = '0xae287c923d891715';
/**
   * REMOVE_WAYPOINT_RECORDING
   *
   * @param {string | number} waypointRecording
   * @return {void}
   */
export const REMOVE_WAYPOINT_RECORDING = '0xff1b8b4aa1c25dc8';
/**
   * REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION
   *
   * @param {number} ped
   * @param {string | number} name
   * @return {void}
   */
export const REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION = '0xd01015c7316ae176';
/**
   * REQUEST_WAYPOINT_RECORDING
   *
   * @param {string | number} waypointRecording
   * @return {void}
   */
export const REQUEST_WAYPOINT_RECORDING = '0x9eefb62eb27b5792';
/**
   * RESET_SCENARIO_GROUPS_ENABLED
   *
  
   * @return {void}
   */
export const RESET_SCENARIO_GROUPS_ENABLED = '0xdd902d0349afad3a';
/**
   * RESET_SCENARIO_TYPES_ENABLED
   *
  
   * @return {void}
   */
export const RESET_SCENARIO_TYPES_ENABLED = '0x0d40ee2a7f2b2d6d';
/**
   * SET_ANIM_FILTER
   *
   * @param {number} entity
   * @param {string | number} filterName
   * @param {number} priority
   * @param {boolean} secondary
   * @return {void}
   */
export const SET_ANIM_FILTER = '0x87b66d77d545db66';
/**
   * SET_ANIM_RATE
   *
   * @param {any} p0
   * @param {number} p1
   * @param {any} p2
   * @param {boolean} p3
   * @return {void}
   */
export const SET_ANIM_RATE = '0x032d49c5e359c847';
/**
   * SET_DRIVEBY_TASK_TARGET
   *
   * @param {number} shootingPed
   * @param {number} targetPed
   * @param {number} targetVehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const SET_DRIVEBY_TASK_TARGET = '0xe5b302114d8162ee';
/**
   * SET_DRIVE_TASK_CRUISE_SPEED
   *
   * @param {number} driver
   * @param {number} cruiseSpeed
   * @return {void}
   */
export const SET_DRIVE_TASK_CRUISE_SPEED = '0x5c9b84bd7d31d908';
/**
   * SET_DRIVE_TASK_MAX_CRUISE_SPEED
   * Not implemented.
   *
   * @param {number} ped
   * @param {number} maxCruiseSpeed
   * @return {void}
   */
export const SET_DRIVE_TASK_MAX_CRUISE_SPEED = '0x404a5aa9b9f0b746';
/**
   * SET_ENABLE_SPEED_RESTRAIN_FOR_WAYPOINT_RECORDING_LEADER
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const SET_ENABLE_SPEED_RESTRAIN_FOR_WAYPOINT_RECORDING_LEADER = '0x295f03dc97beebc1';
/**
   * SET_ENHANCED_BREAK_FREE
   * clipset: CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@GROUND, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@SHOULDER, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@MOUNT
   * clipset can also be 0
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {string | number} clipset
   * @return {boolean}
   */
export const SET_ENHANCED_BREAK_FREE = '0x1bf9d36a5eaffbae';
/**
   * SET_HIGH_FALL_TASK
   * Makes the ped ragdoll like when falling from a great height
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const SET_HIGH_FALL_TASK = '0x8c825bdc7741d37c';
/**
   * SET_PED_DESIRED_MOVE_BLEND_RATIO
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const SET_PED_DESIRED_MOVE_BLEND_RATIO = '0x1e982ac8716912c5';
/**
   * SET_PED_PATH_AVOID_FIRE
   *
   * @param {number} ped
   * @param {boolean} avoidFire
   * @return {void}
   */
export const SET_PED_PATH_AVOID_FIRE = '0x4455517b28441e60';
/**
   * SET_PED_PATH_CAN_DROP_FROM_HEIGHT
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_PATH_CAN_DROP_FROM_HEIGHT = '0xe361c5c71c431a4f';
/**
   * SET_PED_PATH_CAN_USE_CLIMBOVERS
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_PATH_CAN_USE_CLIMBOVERS = '0x8e06a6fe76c9eff4';
/**
   * SET_PED_PATH_CAN_USE_LADDERS
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_PATH_CAN_USE_LADDERS = '0x77a5b103c87f476e';
/**
   * SET_PED_PATH_CLIMB_COST_MODIFIER
   *
   * @param {number} ped
   * @param {number} modifier
   * @return {void}
   */
export const SET_PED_PATH_CLIMB_COST_MODIFIER = '0x88e32db8c1a4aa4b';
/**
   * SET_PED_PATH_DEEP_SNOW_COST_MODIFIER
   *
   * @param {number} ped
   * @param {number} modifier
   * @return {void}
   */
export const SET_PED_PATH_DEEP_SNOW_COST_MODIFIER = '0xe8c296b75eacc357';
/**
   * SET_PED_PATH_FOLIAGE_COST_MODIFIER
   *
   * @param {number} ped
   * @param {number} modifier
   * @return {void}
   */
export const SET_PED_PATH_FOLIAGE_COST_MODIFIER = '0x3ad8eff9703be657';
/**
   * SET_PED_PATH_MAY_ENTER_WATER
   *
   * @param {number} ped
   * @param {boolean} mayEnterWater
   * @return {void}
   */
export const SET_PED_PATH_MAY_ENTER_WATER = '0xf35425a4204367ec';
/**
   * SET_PED_PATH_PREFER_TO_AVOID_WATER
   *
   * @param {number} ped
   * @param {boolean} avoidWater
   * @param {number} p2
   * @return {void}
   */
export const SET_PED_PATH_PREFER_TO_AVOID_WATER = '0x38fe1ec73743793c';
/**
   * SET_PED_WAYPOINT_ROUTE_OFFSET
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {any}
   */
export const SET_PED_WAYPOINT_ROUTE_OFFSET = '0xed98e10b0afce4b4';
/**
   * SET_SCENARIO_GROUP_ENABLED
   *
   * @param {string | number} scenarioGroup
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_SCENARIO_GROUP_ENABLED = '0x02c8e5b49848664e';
/**
   * SET_SCENARIO_TYPE_ENABLED
   *
   * @param {string | number} scenarioType
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_SCENARIO_TYPE_ENABLED = '0xeb47ec4e34fb7ee1';
/**
   * SET_SEQUENCE_TO_REPEAT
   * repeatMode: 0 = REPEAT_NOT; 1 = REPEAT_FOREVER
   *
   * @param {number} taskSequenceId
   * @param {number} repeatMode
   * @return {void}
   */
export const SET_SEQUENCE_TO_REPEAT = '0x58c70cf3a41e4ae7';
/**
   * SET_TASK_MOVE_NETWORK_SIGNAL_BOOL
   *
   * @param {number} ped
   * @param {string | number} signalName
   * @param {boolean} value
   * @return {void}
   */
export const SET_TASK_MOVE_NETWORK_SIGNAL_BOOL = '0xb0a6cfd2c69c1088';
/**
   * SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT
   *
   * @param {number} ped
   * @param {string | number} signalName
   * @param {number} value
   * @return {void}
   */
export const SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT = '0xd5bb4025ae449a4e';
/**
   * SET_TEAM_CARRIABLE_ENTITY
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const SET_TEAM_CARRIABLE_ENTITY = '0x545bf19f86e80f11';
/**
   * SET_UP_SPEED_RESTRAIN_INFORMATION_FOR_PLAYER_FOLLOWER
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const SET_UP_SPEED_RESTRAIN_INFORMATION_FOR_PLAYER_FOLLOWER = '0xb5c51dd544f14f58';
/**
   * START_TASK_ITEM_INTERACTION
   * Params: p3 = 0, 1; p5 = 0.0f, -1.0f
   * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
   *
   * @param {number} ped
   * @param {number} itemHash
   * @param {number} interactionAnimHash
   * @param {number} p3
   * @param {number} flag
   * @param {number} p5
   * @return {void}
   */
export const START_TASK_ITEM_INTERACTION = '0xae72e7df013aaa61';
/**
   * STOP_ANIM_PLAYBACK
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const STOP_ANIM_PLAYBACK = '0xee08c992d238c5d1';
/**
   * STOP_ANIM_TASK
   *
   * @param {number} ped
   * @param {string | number} animDictionary
   * @param {string | number} animationName
   * @param {number} p3
   * @return {void}
   */
export const STOP_ANIM_TASK = '0x97ff36a1d40ea00a';
/**
   * TASK_ACHIEVE_HEADING
   * Makes the specified ped achieve the specified heading.
   * 
   * pedHandle: The handle of the ped to assign the task to.
   * heading: The desired heading.
   * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is canceled, and the ped will stay at the heading it managed to reach in the time.
   *
   * @param {number} ped
   * @param {number} heading
   * @param {number} timeout
   * @return {void}
   */
export const TASK_ACHIEVE_HEADING = '0x93b93a37987f1f3d';
/**
   * TASK_AIM_AT_COORD
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const TASK_AIM_AT_COORD = '0x4af1d73861212f52';
/**
   * TASK_AIM_AT_ENTITY
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const TASK_AIM_AT_ENTITY = '0xcf7569bd0fb480a0';
/**
   * TASK_AIM_GUN_AT_COORD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} time
   * @param {boolean} p5
   * @param {boolean} p6
   * @return {void}
   */
export const TASK_AIM_GUN_AT_COORD = '0x6671f3eec681bda1';
/**
   * TASK_AIM_GUN_AT_ENTITY
   * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
   *
   * @param {number} ped
   * @param {number} targetEntity
   * @param {number} duration
   * @param {boolean} p3
   * @param {number} p4
   * @return {void}
   */
export const TASK_AIM_GUN_AT_ENTITY = '0x9b53bb6e8943af53';
/**
   * TASK_AMBIENT_ANIMAL_HUNT
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const TASK_AMBIENT_ANIMAL_HUNT = '0x4b39d8f9d0fe7749';
/**
   * TASK_AMBIENT_ANIMAL_STALK
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const TASK_AMBIENT_ANIMAL_STALK = '0x37c13863aba1b4a3';
/**
   * TASK_ANIMAL_ALERTED
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const TASK_ANIMAL_ALERTED = '0x979d93372fc8c565';
/**
   * TASK_ANIMAL_FLEE
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {any} p2
   * @return {void}
   */
export const TASK_ANIMAL_FLEE = '0xa899b61c66f09134';
/**
   * TASK_ANIMAL_INTERACTION
   * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ANIMAL_INTERACTION
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} interactionType
   * @param {number} interactionModel
   * @param {boolean} skipIdleAnimationClip
   * @return {void}
   */
export const TASK_ANIMAL_INTERACTION = '0xcd181a959cfdd7f4';
/**
   * TASK_ANIMAL_UNALERTED
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const TASK_ANIMAL_UNALERTED = '0x21fdf9a25cfe1ce5';
/**
   * TASK_ANIMAL_WRITHE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const TASK_ANIMAL_WRITHE = '0x8c038a39c4a4b6d6';
/**
   * TASK_ARREST_PED
   *
   * @param {number} ped
   * @param {number} target
   * @return {void}
   */
export const TASK_ARREST_PED = '0xf3b9a78a178572b1';
/**
   * TASK_BARK
   *
   * @param {number} ped
   * @param {number} barkAtTarget
   * @param {number} mood
   * @return {void}
   */
export const TASK_BARK = '0x83bfc1f836b2f3f2';
/**
   * TASK_BOAT_MISSION
   *
   * @param {number} pedDriver
   * @param {number} boat
   * @param {any} p2
   * @param {any} p3
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {any} p7
   * @param {number} maxSpeed
   * @param {number} drivingStyle
   * @param {number} p10
   * @param {any} p11
   * @return {void}
   */
export const TASK_BOAT_MISSION = '0x15c86013127ce63f';
/**
   * TASK_BREAK_VEHICLE_DOOR_LOCK
   *
   * @param {number} ped
   * @param {number} vehicle
   * @return {void}
   */
export const TASK_BREAK_VEHICLE_DOOR_LOCK = '0xbb28d1bc9ea8a6a5';
/**
   * TASK_CARRIABLE
   * carriableSlot:
   *  7 > Back of a horse
   *  6 > Right side of a horse
   *  5 > Left side of a horse
   * flags:
   *  512: enables the prompt being the name of the item when using a generic item
   *
   * @param {number} entity
   * @param {number} carryConfig
   * @param {number} carrier
   * @param {number} carriableSlot
   * @param {number} flags
   * @return {void}
   */
export const TASK_CARRIABLE = '0xf0b4f759f35cc7f5';
/**
   * TASK_CLEAR_DEFENSIVE_AREA
   *
   * @param {number} ped
   * @return {void}
   */
export const TASK_CLEAR_DEFENSIVE_AREA = '0x95a6c46a31d1917d';
/**
   * TASK_CLEAR_LOOK_AT
   *
   * @param {number} ped
   * @return {void}
   */
export const TASK_CLEAR_LOOK_AT = '0x0f804f1db19b9689';
/**
   * TASK_CLIMB
   * Climbs or vaults the nearest thing.
   *
   * @param {number} ped
   * @param {boolean} unused
   * @return {void}
   */
export const TASK_CLIMB = '0x89d9fcc2435112f1';
/**
   * TASK_CLIMB_LADDER
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {void}
   */
export const TASK_CLIMB_LADDER = '0xb6c987f9285a3814';
/**
   * TASK_COMBAT_ANIMAL_CHARGE_PED
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {boolean} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const TASK_COMBAT_ANIMAL_CHARGE_PED = '0xee3aa414cf99f368';
/**
   * TASK_COMBAT_ANIMAL_WARN
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const TASK_COMBAT_ANIMAL_WARN = '0xf960f3d57b660e96';
/**
   * TASK_COMBAT_HATED_TARGETS
   *
   * @param {number} ped
   * @param {number} radius
   * @return {void}
   */
export const TASK_COMBAT_HATED_TARGETS = '0x8182b561a29bd597';
/**
   * TASK_COMBAT_HATED_TARGETS_AROUND_PED
   * Despite its name, it only attacks ONE hated target. The one closest hated target.
   *
   * @param {number} ped
   * @param {number} radius
   * @param {number} flags
   * @param {any} p3
   * @return {void}
   */
export const TASK_COMBAT_HATED_TARGETS_AROUND_PED = '0x7bf835bb9e2698c8';
/**
   * TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED
   *
   * @param {number} ped
   * @param {number} radius
   * @param {number} time
   * @param {number} flags
   * @return {void}
   */
export const TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED = '0x2bba30b854534a0c';
/**
   * TASK_COMBAT_HATED_TARGETS_IN_AREA
   * Despite its name, it only attacks ONE hated target. The one closest to the specified position.
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} flags
   * @param {any} p6
   * @return {void}
   */
export const TASK_COMBAT_HATED_TARGETS_IN_AREA = '0x4cf5f55dac3280a0';
/**
   * TASK_COMBAT_HATED_TARGETS_NO_LOS_TEST
   *
   * @param {number} ped
   * @param {number} radius
   * @return {void}
   */
export const TASK_COMBAT_HATED_TARGETS_NO_LOS_TEST = '0xb5bc69d9c4060bc3';
/**
   * TASK_COMBAT_PED
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const TASK_COMBAT_PED = '0xf166e48407bac484';
/**
   * TASK_COMBAT_PED_TIMED
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} p2
   * @param {any} p3
   * @return {void}
   */
export const TASK_COMBAT_PED_TIMED = '0x944f30dcb7096bde';
/**
   * TASK_COMPANION_AMBIENT
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const TASK_COMPANION_AMBIENT = '0xe017cf6e2527fe4f';
/**
   * TASK_CONFRONT
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} p2
   * @return {boolean}
   */
export const TASK_CONFRONT = '0x3a2a2071df5cc569';
/**
   * TASK_COWER
   *
   * @param {number} ped
   * @param {number} duration
   * @param {number} pedToCowerFrom
   * @param {string | number} p3
   * @return {void}
   */
export const TASK_COWER = '0x3eb1fe9e8e908e15';
/**
   * TASK_DISEMBARK_NEAREST_TRAIN_CARRIAGE
   * flags: See TASK_ENTER_VEHICLE
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} flags
   * @return {void}
   */
export const TASK_DISEMBARK_NEAREST_TRAIN_CARRIAGE = '0x0a11f3bdec03ed5f';
/**
   * TASK_DISMOUNT_ANIMAL
   * Dismounts the ped from the animal it's mounted on. taskFlag affects what side the rider gets off. p2-p5 are almost always 0.
   * flags: See TASK_ENTER_VEHICLE
   *
   * @param {number} rider
   * @param {number} taskFlag
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {number} targetPed
   * @return {void}
   */
export const TASK_DISMOUNT_ANIMAL = '0x48e92d3dde23c23a';
/**
   * TASK_DRIVE_BY
   *
   * @param {number} driverPed
   * @param {number} targetPed
   * @param {number} targetVehicle
   * @param {number} targetX
   * @param {number} targetY
   * @param {number} targetZ
   * @param {number} distanceToShoot
   * @param {number} pedAccuracy
   * @param {boolean} p8
   * @param {number} firingPattern
   * @return {void}
   */
export const TASK_DRIVE_BY = '0x2f8af0e82773a171';
/**
   * TASK_DUCK
   *
   * @param {number} ped
   * @param {number} time
   * @return {void}
   */
export const TASK_DUCK = '0xa14b5fbf986bac23';
/**
   * TASK_DUEL
   * Params: p4 either 0.2f, 0.25f, 0.31f, 0.4f
   *
   * @param {number} ped
   * @param {any} p1
   * @param {number} p2
   * @param {number} entity
   * @param {number} p4
   * @param {number} p5
   * @param {number} vPosOpponentX
   * @param {number} vPosOpponentY
   * @param {number} vPosOpponentZ
   * @param {number} fOpponentHead
   * @param {number} p10
   * @return {void}
   */
export const TASK_DUEL = '0x5d5b0d5bc3626e5a';
/**
   * TASK_DUMP_CARRIABLE_FROM_PARENT
   *
   * @param {number} ped
   * @param {number} ped2
   * @param {number} entity
   * @return {void}
   */
export const TASK_DUMP_CARRIABLE_FROM_PARENT = '0x17ca98707b15926a';
/**
   * TASK_EAT
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const TASK_EAT = '0xbd7949bd07299672';
/**
   * TASK_ENTER_ANIM_SCENE
   * flags:
   * MOVE_WHILST_WAITING_FOR_PATH = (1 << 0),
   * DO_NOT_STAND_STILL_AT_END_OF_PATH = (1 << 1),
   * SKIP_NAVIGATION = (1 << 2),
   * TEASF_AUTO_START_ANIM_SCENE = (1 << 3),
   * FORCE_STAND_STILL_AT_END_OF_PATH = (1 << 6),
   * ENTER_ANIM_SCENE_DONT_FOLLOW_NAVMESH = (1 << 7)
   *
   * @param {number} ped
   * @param {number} animScene
   * @param {string | number} entityName
   * @param {string | number} playbackListName
   * @param {number} enterSpeed
   * @param {boolean} bAutoStart
   * @param {number} flag
   * @param {number} p7
   * @param {number} p8
   * @return {void}
   */
export const TASK_ENTER_ANIM_SCENE = '0xc2329b0206426644';
/**
   * TASK_ENTER_VEHICLE
   * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEnterExitVehicleFlags
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} timeout
   * @param {number} seat
   * @param {number} speed
   * @param {number} flag
   * @param {any} p6
   * @return {void}
   */
export const TASK_ENTER_VEHICLE = '0xc20e50aa46d09ca8';
/**
   * TASK_EVASIVE_ANIM
   * Params: p2 is returned by BUILTIN::SHIFT_LEFT
   *
   * @param {number} ped1
   * @param {number} ped2
   * @param {number} p2
   * @return {void}
   */
export const TASK_EVASIVE_ANIM = '0x5f22926e1bce9b08';
/**
   * TASK_EVERYONE_LEAVE_VEHICLE_IN_ORDER
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const TASK_EVERYONE_LEAVE_VEHICLE_IN_ORDER = '0x6f1c49f275bd25b3';
/**
   * TASK_EXTEND_ROUTE
   * Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
   * 
   * A maximum of 8 points can be added.
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const TASK_EXTEND_ROUTE = '0x1e7889778264843a';
/**
   * TASK_FLEE_COORD
   * Params: p5 = some flag?, p6 = -1.0f, p8 = 0 in R* Scripts
   * fleeStyle: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eFleeStyle
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} fleeStyle
   * @param {number} p5
   * @param {number} p6
   * @param {number} duration
   * @param {number} p8
   * @return {void}
   */
export const TASK_FLEE_COORD = '0x58428248bf4b64e4';
/**
   * TASK_FLEE_COORD_VIA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @return {void}
   */
export const TASK_FLEE_COORD_VIA = '0x390e0b697d25eaf5';
/**
   * TASK_FLEE_PED
   * Params: p4 = -1.0f, p5 = -1, p6 = 0 in R* Scripts
   * fleeStyle: see TASK_FLEE_COORD
   *
   * @param {number} ped
   * @param {number} fleeFromTarget
   * @param {number} fleeStyle
   * @param {number} flag
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @return {void}
   */
export const TASK_FLEE_PED = '0xfd45175a6dfd7ce9';
/**
   * TASK_FLEE_PED_VIA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @return {void}
   */
export const TASK_FLEE_PED_VIA = '0x5802e0f910e4cf1d';
/**
   * TASK_FLUSH_ROUTE
   * Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
   *
  
   * @return {void}
   */
export const TASK_FLUSH_ROUTE = '0x841142a1376e9006';
/**
   * TASK_FLYING_CIRCLE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const TASK_FLYING_CIRCLE = '0x72997893bfb8eccc';
/**
   * TASK_FLY_AWAY
   *
   * @param {number} ped
   * @param {number} fleeFromTarget
   * @return {void}
   */
export const TASK_FLY_AWAY = '0xe86a537b5a3c297c';
/**
   * TASK_FLY_TO_COORD
   *
   * @param {number} ped
   * @param {number} travelMbr
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} p5
   * @param {boolean} p6
   * @return {void}
   */
export const TASK_FLY_TO_COORD = '0xd6cfc2d59da72042';
/**
   * TASK_FOLLOW_AND_CONVERSE_WITH_PED
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {any} p2
   * @param {any} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {any} p7
   * @param {any} p8
   * @param {number} p9
   * @param {number} p10
   * @return {void}
   */
export const TASK_FOLLOW_AND_CONVERSE_WITH_PED = '0x489ffccce7392b55';
/**
   * TASK_FOLLOW_ENTITY_ALONG_WAYPOINT_RECORDING_AT_OFFSET
   *
   * @param {number} ped0
   * @param {number} ped1
   * @param {string | number} waypointRecording
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {boolean} p8
   * @return {void}
   */
export const TASK_FOLLOW_ENTITY_ALONG_WAYPOINT_RECORDING_AT_OFFSET = '0x4d2b787bae9ab760';
/**
   * TASK_FOLLOW_ENTITY_WHILE_AIMING_AT_ENTITY
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const TASK_FOLLOW_ENTITY_WHILE_AIMING_AT_ENTITY = '0x2d532eaa142cf83f';
/**
   * TASK_FOLLOW_NAV_MESH_TO_COORD
   * If no timeout, set timeout to -1.
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} speedMultiplier
   * @param {number} timeout
   * @param {number} stoppingRange
   * @param {number} flags
   * @param {number} heading
   * @return {void}
   */
export const TASK_FOLLOW_NAV_MESH_TO_COORD = '0x15d3a79d4e44b913';
/**
   * TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} speedMultiplier
   * @param {number} timeout
   * @param {number} stoppingRange
   * @param {number} flags
   * @param {number} p8
   * @param {number} p9
   * @param {number} p10
   * @param {number} entity
   * @param {number} unk
   * @return {void}
   */
export const TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED = '0x17f58b88d085dbac';
/**
   * TASK_FOLLOW_PAVEMENT_TO_COORD
   *
   * @param {number} ped
   * @param {any} args
   * @return {void}
   */
export const TASK_FOLLOW_PAVEMENT_TO_COORD = '0x1b1475414e70dd8e';
/**
   * TASK_FOLLOW_POINT_ROUTE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const TASK_FOLLOW_POINT_ROUTE = '0x0e14c5550dc3cd1d';
/**
   * TASK_FOLLOW_TO_OFFSET_OF_COORD
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @param {any} p13
   * @param {any} p14
   * @return {void}
   */
export const TASK_FOLLOW_TO_OFFSET_OF_COORD = '0x2e3676282c18a692';
/**
   * TASK_FOLLOW_TO_OFFSET_OF_ENTITY
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} offsetX
   * @param {number} offsetY
   * @param {number} offsetZ
   * @param {number} movementSpeed
   * @param {number} timeout
   * @param {number} stoppingRange
   * @param {boolean} persistFollowing
   * @param {boolean} p9
   * @param {boolean} walkOnly
   * @param {boolean} p11
   * @param {boolean} p12
   * @param {boolean} p13
   * @return {void}
   */
export const TASK_FOLLOW_TO_OFFSET_OF_ENTITY = '0x304ae42e357b8c7e';
/**
   * TASK_FOLLOW_WAYPOINT_RECORDING
   *
   * @param {number} ped
   * @param {string | number} waypointRecording
   * @param {number} p2
   * @param {number} flag
   * @param {number} p4
   * @param {boolean} p5
   * @param {any} p6
   * @param {number} p7
   * @return {void}
   */
export const TASK_FOLLOW_WAYPOINT_RECORDING = '0x0759591819534f7b';
/**
   * TASK_FOLLOW_WAYPOINT_RECORDING_ADVANCED
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const TASK_FOLLOW_WAYPOINT_RECORDING_ADVANCED = '0x0cfc13ebc19bca52';
/**
   * TASK_FOLLOW_WAYPOINT_RECORDING_AT_OFFSET
   *
   * @param {number} ped
   * @param {string | number} waypointRecording
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {boolean} p6
   * @return {void}
   */
export const TASK_FOLLOW_WAYPOINT_RECORDING_AT_OFFSET = '0xbe9b0520bd7c445b';
/**
   * TASK_FORCE_MOTION_STATE
   * motionStateHash: see FORCE_PED_MOTION_STATE
   *
   * @param {number} ped
   * @param {number} motionStateHash
   * @param {boolean} p2
   * @return {void}
   */
export const TASK_FORCE_MOTION_STATE = '0x4f056e1affef17ab';
/**
   * TASK_GOTO_ENTITY_AIMING
   * ped = Ped you want to perform this task.
   * target = the Entity they should aim at.
   * distanceToStopAt = distance from the target, where the ped should stop to aim.
   * StartAimingDist = distance where the ped should start to aim.
   *
   * @param {number} ped
   * @param {number} target
   * @param {number} distanceToStopAt
   * @param {number} startAimingDist
   * @return {void}
   */
export const TASK_GOTO_ENTITY_AIMING = '0xa9da48fab8a76c12';
/**
   * TASK_GOTO_ENTITY_OFFSET
   *
   * @param {number} ped
   * @param {number} entity
   * @param {any} p2
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} duration
   * @return {void}
   */
export const TASK_GOTO_ENTITY_OFFSET = '0xe39b4ff4fdebde27';
/**
   * TASK_GOTO_ENTITY_OFFSET_XY
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} duration
   * @param {number} targetRadius
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} moveBlendRatio
   * @param {number} offsetFlags
   * @return {void}
   */
export const TASK_GOTO_ENTITY_OFFSET_XY = '0x338e7ef52b6095a9';
/**
   * TASK_GOTO_ENTITY_OFFSET_XYZ
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const TASK_GOTO_ENTITY_OFFSET_XYZ = '0xfa6da9d151769392';
/**
   * TASK_GOTO_ENTITY_OFFSET_XYZ_AIMING
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @return {void}
   */
export const TASK_GOTO_ENTITY_OFFSET_XYZ_AIMING = '0x41b0832ca96b5351';
/**
   * TASK_GOTO_ENTITY_OFFSET_XY_AIMING
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const TASK_GOTO_ENTITY_OFFSET_XY_AIMING = '0x901bd69984400f62';
/**
   * TASK_GO_STRAIGHT_TO_COORD
   * Tells the ped to go to a coord, without using the navemesh. if timeBeforeTeleport is -1 the ped will never warp, p8 is always 0 or 1 still unknown
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} moveBlendRatio
   * @param {number} timeBeforeTeleport
   * @param {number} finalHeading
   * @param {number} targetRadius
   * @param {number} p8
   * @return {void}
   */
export const TASK_GO_STRAIGHT_TO_COORD = '0xd76b57b44f1e6f8b';
/**
   * TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY
   * Tells the ped to go to an offset coord from an entity, without using the navmesh. if timeBeforeTeleport is -1 the ped will never warp, p7 is 1 or 0 still unknown param 
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} xOffset
   * @param {number} yoffset
   * @param {number} zOffset
   * @param {number} moveBlendRatio
   * @param {number} timeBeforeTeleport
   * @param {number} p7
   * @return {void}
   */
export const TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY = '0x61e360b7e040d12e';
/**
   * TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD
   *
   * @param {number} ped
   * @param {number} goToLocationX
   * @param {number} goToLocationY
   * @param {number} goToLocationZ
   * @param {number} focusLocationX
   * @param {number} focusLocationY
   * @param {number} focusLocationZ
   * @param {number} speed
   * @param {boolean} shootAtEnemies
   * @param {number} distanceToStopAt
   * @param {number} noRoadsDistance
   * @param {boolean} unkTrue
   * @param {number} unkFlag
   * @param {number} aimingFlag
   * @param {number} firingPattern
   * @return {void}
   */
export const TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD = '0xa55547801eb331fc';
/**
   * TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD_USING_COMBAT_STYLE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @param {any} p13
   * @param {any} p14
   * @return {void}
   */
export const TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD_USING_COMBAT_STYLE = '0x87bd711fc31ea273';
/**
   * TASK_GO_TO_COORD_ANY_MEANS
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} speed
   * @param {number} entity
   * @param {boolean} p6
   * @param {number} walkingStyle
   * @param {number} p8
   * @return {void}
   */
export const TASK_GO_TO_COORD_ANY_MEANS = '0x5bc448cb78fa3e88';
/**
   * TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} speed
   * @param {any} p5
   * @param {boolean} p6
   * @param {number} walkingStyle
   * @param {number} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @return {void}
   */
export const TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS = '0x1dd45f9ecfdb1bc9';
/**
   * TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED
   * This native allows to control the cruise speed of where you want the ped to go
   * 3rd param might be the entity ped is in? like boat or wagon, 12th param might be the cruiseSpeed of the entity ped is in?
   * EXAMPLE: TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(PlayerPedId(), vector3(x, y, z), 3.0, entity, 1, 0, -1082130432, 0, 101004800, 520, 3.0, 1082130432, 0)
   *
   * @param {number} ped
   * @param {number} cruiseSpeed
   * @param {number} entity
   * @param {number} p4
   * @param {number} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {number} cruiseSpeed_2
   * @param {any} p13
   * @param {any} p14
   * @return {Vector3}
   */
export const TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED = '0xb8ecd61f531a7b02';
/**
   * TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @param {any} p13
   * @param {any} p14
   * @param {any} p15
   * @return {void}
   */
export const TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD = '0x11315ab3385b8ac0';
/**
   * TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD_USING_COMBAT_STYLE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @param {any} p13
   * @param {any} p14
   * @param {any} p15
   * @return {void}
   */
export const TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD_USING_COMBAT_STYLE = '0x639c0425a0b4e77e';
/**
   * TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY
   *
   * @param {number} ped1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} ped2
   * @param {number} p5
   * @param {any} p6
   * @param {number} p7
   * @param {number} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {number} firingPattern
   * @param {number} p13
   * @param {any} p14
   * @return {void}
   */
export const TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY = '0xb2a16444ead9ae47';
/**
   * TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY_USING_COMBAT_STYLE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @param {any} p13
   * @param {any} p14
   * @return {void}
   */
export const TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY_USING_COMBAT_STYLE = '0x78426d0982d083c9';
/**
   * TASK_GO_TO_ENTITY
   *
   * @param {number} ped
   * @param {number} target
   * @param {number} duration
   * @param {number} distance
   * @param {number} speed
   * @param {number} p5
   * @param {number} p6
   * @return {void}
   */
export const TASK_GO_TO_ENTITY = '0x6a071245eb0d1882';
/**
   * TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY
   * shootatEntity:
   * If true, peds will shoot at Entity till it is dead.
   * If false, peds will just walk till they reach the entity and will cease shooting.
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @return {void}
   */
export const TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY = '0x97465886d35210e9';
/**
   * TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY_USING_COMBAT_STYLE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @return {void}
   */
export const TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY_USING_COMBAT_STYLE = '0xcef0117c233026ad';
/**
   * TASK_GO_TO_WHISTLE
   * enum eWhistleType
   * {
   *   WHISTLE_MAIN,
   *   WHISTLE_SECONDARY,
   *   WHISTLE_DOUBLE,
   *   WHISTLE_URGENT,
   *   WHISTLE_LONG
   * };
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} whistleType
   * @return {void}
   */
export const TASK_GO_TO_WHISTLE = '0xbad6545608ceca6e';
/**
   * TASK_GRAPPLE
   * grappleStyle: AR_GRAPPLE_MOUNT_STANDING_FROM_FRONT, AR_GRAPPLE_MOUNT_STANDING_FROM_RIGHT, AR_GRAPPLE_MOUNT_STANDING_FROM_BACK, AR_GRAPPLE_MOUNT_STANDING_FROM_LEFT, AR_GRAPPLE_MOUNT_FROM_FRONT, AR_WOLF_EXECUTION_ENTER_FROM_BACK, AR_GRAPPLE_DRAG_FRONT_ON_ASS, AR_GRAPPLE_FRONT_FROM_LEFT_FAR, AR_BEAR_CHALLENGE_FRONT, AR_GRAPPLE_FRONT_FROM_FRONT, AR_GRAPPLE_MOUNT_FACEUP_FROM_FRONT
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} grappleStyle
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @return {boolean}
   */
export const TASK_GRAPPLE = '0x779a2ffacefaea7b';
/**
   * TASK_GUARD
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const TASK_GUARD = '0xb9fb242eaccaf30f';
/**
   * TASK_GUARD_ASSIGNED_DEFENSIVE_AREA
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {any} p6
   * @return {void}
   */
export const TASK_GUARD_ASSIGNED_DEFENSIVE_AREA = '0xd2a207eebdf9889b';
/**
   * TASK_GUARD_CURRENT_POSITION
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {boolean} p3
   * @return {void}
   */
export const TASK_GUARD_CURRENT_POSITION = '0x4a58a47a72e3fcb4';
/**
   * TASK_HANDS_UP
   * flags: 0 = HANDS_UP_NOTHING; 1 = HANDS_UP_STRAIGHT_TO_LOOP
   *
   * @param {number} ped
   * @param {number} duration
   * @param {number} facingPed
   * @param {number} timeToFacePed
   * @param {number} flags
   * @return {void}
   */
export const TASK_HANDS_UP = '0xf2eab31979a7f910';
/**
   * TASK_HITCH_ANIMAL
   *
   * @param {number} ped
   * @param {number} scenarioPoint
   * @param {number} flag
   * @return {void}
   */
export const TASK_HITCH_ANIMAL = '0x9030ad4b6207bfe8';
/**
   * TASK_HOGTIEABLE
   *
   * @param {number} ped
   * @return {void}
   */
export const TASK_HOGTIEABLE = '0x6afd8fe0d723328f';
/**
   * TASK_HOGTIE_TARGET_PED
   *
   * @param {number} ped
   * @param {number} targetPed
   * @return {void}
   */
export const TASK_HOGTIE_TARGET_PED = '0x27829afd3e03ac1a';
/**
   * TASK_HORSE_ACTION
   * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_HORSE_ACTION
   * Params: p2, p3 are set to 0 in R* Scripts
   *
   * @param {number} ped
   * @param {number} action
   * @param {number} targetPed
   * @param {any} p3
   * @return {void}
   */
export const TASK_HORSE_ACTION = '0xa09cfd29100f06c3';
/**
   * TASK_INVESTIGATE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const TASK_INVESTIGATE = '0x5c8514540d27fbfb';
/**
   * TASK_JUMP
   *
   * @param {number} ped
   * @param {boolean} unused
   * @return {void}
   */
export const TASK_JUMP = '0x0ae4086104e067b1';
/**
   * TASK_KNOCKED_OUT
   *
   * @param {number} ped
   * @param {number} p1
   * @param {boolean} permanently
   * @return {void}
   */
export const TASK_KNOCKED_OUT = '0xf90427f00a495a28';
/**
   * TASK_KNOCKED_OUT_AND_HOGTIED
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const TASK_KNOCKED_OUT_AND_HOGTIED = '0x42ac6401abb8c7e5';
/**
   * TASK_LASSO_PED
   *
   * @param {number} ped
   * @param {number} targetPed
   * @return {void}
   */
export const TASK_LASSO_PED = '0xc716eb2bd16370a3';
/**
   * TASK_LEAD_AND_CONVERSE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const TASK_LEAD_AND_CONVERSE = '0xaa19711d33c6708c';
/**
   * TASK_LEAD_HORSE
   *
   * @param {number} ped
   * @param {number} horse
   * @return {void}
   */
export const TASK_LEAD_HORSE = '0x9a7a4a54596fe09d';
/**
   * TASK_LEAVE_ANY_VEHICLE
   * flags: See TASK_ENTER_VEHICLE
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} taskFlag
   * @return {void}
   */
export const TASK_LEAVE_ANY_VEHICLE = '0x504d54df3f6f2247';
/**
   * TASK_LEAVE_VEHICLE
   * flags: See TASK_ENTER_VEHICLE
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} flags
   * @param {number} unkPed
   * @return {void}
   */
export const TASK_LEAVE_VEHICLE = '0xd3dbce61a490be02';
/**
   * TASK_LOOK_AT_COORD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} duration
   * @param {number} flags
   * @param {number} p6
   * @param {boolean} p7
   * @return {void}
   */
export const TASK_LOOK_AT_COORD = '0x6fa46612594f7973';
/**
   * TASK_LOOK_AT_ENTITY
   * param3: duration in ms, use -1 to look forever
   * param4: using 2048 is fine
   * param5: using 3 is fine
   *
   * @param {number} ped
   * @param {number} lookAtTarget
   * @param {number} duration
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @return {void}
   */
export const TASK_LOOK_AT_ENTITY = '0x69f4be8c8cc4796c';
/**
   * TASK_LOOT_ENTITY
   *
   * @param {number} ped
   * @param {number} entity
   * @return {void}
   */
export const TASK_LOOT_ENTITY = '0x48fae038401a2888';
/**
   * TASK_LOOT_NEAREST_ENTITY
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @param {number} p5
   * @return {void}
   */
export const TASK_LOOT_NEAREST_ENTITY = '0xcf1501cbc4059412';
/**
   * TASK_MELEE
   * Params: p2: AR_TAKEDOWN_FRONT, AR_EXECUTION_FRONT, 0 in R* Scripts
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} p2
   * @param {any} p3
   * @param {any} p4
   * @param {number} p5
   * @param {any} p6
   * @param {number} p7
   * @return {boolean}
   */
export const TASK_MELEE = '0x482c99d0b38d1b0a';
/**
   * TASK_MOUNT_ANIMAL
   * timer: in ms, if it reaches 0 it will auto warp the ped on the horse
   * mountStyle: See TASK_ENTER_VEHICLE
   * Flags will still apply to mountStyle
   *
   * @param {number} ped
   * @param {number} mount
   * @param {number} timer
   * @param {number} seatIndex
   * @param {number} pedSpeed
   * @param {number} mountStyle
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const TASK_MOUNT_ANIMAL = '0x92db0739813c5186';
/**
   * TASK_MOVE_BE_IN_FORMATION
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const TASK_MOVE_BE_IN_FORMATION = '0x4aa5aa97c65e4a2f';
/**
   * TASK_MOVE_FOLLOW_ROAD_USING_NAVMESH
   * Params: moveBlendRatio commonly 1.25f, p5 is always 0 in R* Scripts
   *
   * @param {number} ped
   * @param {number} moveBlendRatio
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {any} p5
   * @return {void}
   */
export const TASK_MOVE_FOLLOW_ROAD_USING_NAVMESH = '0x79482c12482a860d';
/**
   * TASK_MOVE_IN_TRAFFIC
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const TASK_MOVE_IN_TRAFFIC = '0x8aa1593aec087a29';
/**
   * TASK_MOVE_IN_TRAFFIC_AWAY_FROM_ENTITY
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const TASK_MOVE_IN_TRAFFIC_AWAY_FROM_ENTITY = '0x13ded0bc45600fe1';
/**
   * TASK_MOVE_IN_TRAFFIC_TO_DESTINATION
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const TASK_MOVE_IN_TRAFFIC_TO_DESTINATION = '0xdca3a13f7a45338b';
/**
   * TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS
   *
   * @param {number} ped
   * @param {string | number} moveNetworkDefName
   * @param {any} taskData
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {number} xRot
   * @param {number} yRot
   * @param {number} zRot
   * @param {number} p9
   * @param {number} p10
   * @param {number} p11
   * @param {number} p12
   * @param {number} flag
   * @param {number} p14
   * @return {void}
   */
export const TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS = '0x7b6a04f98bbafb2c';
/**
   * TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS_ATTACHED
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @param {any} p13
   * @param {any} p14
   * @param {any} p15
   * @param {any} p16
   * @param {any} p17
   * @return {void}
   */
export const TASK_MOVE_NETWORK_ADVANCED_BY_NAME_WITH_INIT_PARAMS_ATTACHED = '0xf92171093bcabed4';
/**
   * TASK_MOVE_NETWORK_BY_NAME
   *
   * @param {number} ped
   * @param {string | number} task
   * @param {number} multiplier
   * @param {boolean} p3
   * @param {string | number} animDict
   * @param {number} flags
   * @return {void}
   */
export const TASK_MOVE_NETWORK_BY_NAME = '0x2d537ba194896636';
/**
   * TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS
   *
   * @param {number} ped
   * @param {string | number} moveNetworkDefName
   * @param {DataView} taskData
   * @param {number} p3
   * @param {boolean} p4
   * @param {string | number} animDict
   * @param {number} flags
   * @return {void}
   */
export const TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS = '0x139805c2a67c4795';
/**
   * TASK_PATROL
   *
   * @param {number} ped
   * @param {string | number} patrolRoute
   * @param {any} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const TASK_PATROL = '0xbda5df49d080fe4e';
/**
   * TASK_PAUSE
   * This tasks the ped to do nothing for the specified amount of milliseconds.
   * This is useful if you want to add a delay between tasks when using a sequence task.
   *
   * @param {number} ped
   * @param {number} ms
   * @return {void}
   */
export const TASK_PAUSE = '0xe73a266db0ca9042';
/**
   * TASK_PED_SLIDE_TO_COORD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {number} p5
   * @return {void}
   */
export const TASK_PED_SLIDE_TO_COORD = '0xd04fe6765d990a06';
/**
   * TASK_PERFORM_SEQUENCE
   *
   * @param {number} ped
   * @param {number} taskSequenceId
   * @return {void}
   */
export const TASK_PERFORM_SEQUENCE = '0x5aba3986d90d8a3b';
/**
   * TASK_PERFORM_SEQUENCE_FROM_PROGRESS
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const TASK_PERFORM_SEQUENCE_FROM_PROGRESS = '0x89221b16730234f0';
/**
   * TASK_PERSISTENT_CHARACTER
   *
   * @param {number} ped
   * @return {void}
   */
export const TASK_PERSISTENT_CHARACTER = '0x4391700cbd89c3d8';
/**
   * TASK_PICKUP_CARRIABLE_ENTITY
   *
   * @param {number} ped
   * @param {number} entity
   * @return {void}
   */
export const TASK_PICKUP_CARRIABLE_ENTITY = '0x502ec17b1bed4bfa';
/**
   * TASK_PICK_UP_WEAPON
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const TASK_PICK_UP_WEAPON = '0x55b0ecfd98596624';
/**
   * TASK_PLACE_CARRIED_ENTITY_AT_COORD
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p5
   * @param {number} flags
   * @return {void}
   */
export const TASK_PLACE_CARRIED_ENTITY_AT_COORD = '0xc7f0b43dcdc57e3d';
/**
   * TASK_PLACE_CARRIED_ENTITY_ON_MOUNT
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} mount
   * @param {number} p3
   * @return {void}
   */
export const TASK_PLACE_CARRIED_ENTITY_ON_MOUNT = '0x6d3d87c57b3d52c7';
/**
   * TASK_PLANT_BOMB
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @return {void}
   */
export const TASK_PLANT_BOMB = '0x965fec691d55e9bf';
/**
   * TASK_PLAY_ANIM
   * https://github.com/femga/rdr3_discoveries/tree/master/animations
   * flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScriptedAnimFlags
   * ikFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eIkControlFlags 
   *
   * @param {number} ped
   * @param {string | number} animDict
   * @param {string | number} animName
   * @param {number} speed
   * @param {number} speedMultiplier
   * @param {number} duration
   * @param {number} flags
   * @param {number} playbackRate
   * @param {boolean} p8
   * @param {number} ikFlags
   * @param {boolean} p10
   * @param {string | number} taskFilter
   * @param {boolean} p12
   * @return {void}
   */
export const TASK_PLAY_ANIM = '0xea47fe3719165b94';
/**
   * TASK_PLAY_ANIM_ADVANCED
   * flags: see TASK_PLAY_ANIM
   * ikFlags: see TASK_PLAY_ANIM
   *
   * @param {number} ped
   * @param {string | number} animDict
   * @param {string | number} animName
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} speed
   * @param {number} speedMultiplier
   * @param {number} duration
   * @param {number} flags
   * @param {number} p13
   * @param {number} p14
   * @param {number} p15
   * @param {number} p16
   * @return {void}
   */
export const TASK_PLAY_ANIM_ADVANCED = '0x83cdb10ea29b370b';
/**
   * TASK_PLAY_EMOTE_WITH_HASH
   * https://github.com/femga/rdr3_discoveries/blob/master/animations/kit_emotes_list.lua
   * emote: https://alloc8or.re/rdr3/doc/enums/eEmote.txt
   * 
   * enum eEmoteType
   * {
   *   EMOTE_TYPE_INVALID = -1,
   *   EMOTE_TYPE_REACT,
   *   EMOTE_TYPE_ACTION,
   *   EMOTE_TYPE_TAUNT,
   *   EMOTE_TYPE_GREET,
   *   EMOTE_TYPE_TWIRL_GUN,
   *   EMOTE_TYPE_DANCE_FLOOR
   * };
   * 
   * enum eEmotePlaybackMode
   * {
   *   EMOTE_PM_INVALID = -1,
   *   EMOTE_PM_UPPERBODY,
   *   EMOTE_PM_UPPERBODY_LOOP,
   *   EMOTE_PM_FULLBODY,
   * };
   *
   * @param {number} ped
   * @param {number} emoteType
   * @param {number} playbackMode
   * @param {number} emote
   * @param {boolean} isSecondaryTask
   * @param {boolean} canBreakOut
   * @param {boolean} disableEarlyOutAnimTag
   * @param {boolean} ignoreInvalidMainTask
   * @param {boolean} destroyProps
   * @return {void}
   */
export const TASK_PLAY_EMOTE_WITH_HASH = '0xb31a277c1ac7b7ff';
/**
   * TASK_PLAY_UPPER_ANIM_FACING_ENTITY
   *
   * @param {number} ped
   * @param {string | number} animDict
   * @param {string | number} animName
   * @param {number} entity
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {boolean} p9
   * @param {boolean} p10
   * @param {number} p11
   * @param {string | number} p12
   * @param {number} p13
   * @param {number} p14
   * @return {void}
   */
export const TASK_PLAY_UPPER_ANIM_FACING_ENTITY = '0xad67214236ab1cfe';
/**
   * TASK_POLICE
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {boolean}
   */
export const TASK_POLICE = '0x87be56724650408e';
/**
   * TASK_PUT_PED_DIRECTLY_INTO_COVER
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} timeout
   * @param {boolean} p5
   * @param {number} p6
   * @param {any} p7
   * @param {any} p8
   * @param {number} coverpoint
   * @param {boolean} p10
   * @param {boolean} p11
   * @param {any} p12
   * @return {void}
   */
export const TASK_PUT_PED_DIRECTLY_INTO_COVER = '0x4172393e6be1fece';
/**
   * TASK_PUT_PED_DIRECTLY_INTO_GRAPPLE
   * grappleStyle: AR_GRAPPLE_STRUGGLE, AR_ALLIGATOR_LEG_GRAB_CHALLENGE_FAIL, AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_BACK_DEFEND, AR_GRAPPLE_FRONT_FROM_FRONT
   *
   * @param {number} ped
   * @param {number} grappleTarget
   * @param {number} grappleStyle
   * @param {number} p3
   * @param {number} p4
   * @param {boolean} p5
   * @param {number} p6
   * @return {void}
   */
export const TASK_PUT_PED_DIRECTLY_INTO_GRAPPLE = '0xa05f3f20889d7a5b';
/**
   * TASK_PUT_PED_DIRECTLY_INTO_MELEE
   * meleeStyles: AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_MOUNT_FACEDOWN_FROM_FRONT, AR_ALLIGATOR_LEAPKILL, AR_ALLIGATOR_WAIST_AUTOKILL_FRONT
   *
   * @param {number} ped
   * @param {number} meleeTarget
   * @param {number} meleeStyle
   * @param {number} p3
   * @param {number} animBlendRatio
   * @param {boolean} p5
   * @param {number} p6
   * @return {void}
   */
export const TASK_PUT_PED_DIRECTLY_INTO_MELEE = '0x1c6cd14a876ffe39';
/**
   * TASK_REACT
   * Makes a ped react to an entity.
   * Params: reactingTo Entity can be 0, p8 is always 4
   *
   * @param {number} ped
   * @param {number} reactingTo
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {string | number} reactionName
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @return {void}
   */
export const TASK_REACT = '0xc4c32c31920e1b70';
/**
   * TASK_RELOAD_WEAPON
   *
   * @param {number} ped
   * @param {boolean} unused
   * @return {void}
   */
export const TASK_RELOAD_WEAPON = '0x62d2916f56b9cd2d';
/**
   * TASK_REVIVE_TARGET
   *
   * @param {number} ped
   * @param {number} reviver
   * @param {number} tool
   * @return {void}
   */
export const TASK_REVIVE_TARGET = '0x356088527d9ebaad';
/**
   * TASK_RIDE_TRAIN
   *
   * @param {number} ped
   * @param {number} train
   * @param {number} scenarioPoint
   * @param {number} scenarioHash
   * @return {void}
   */
export const TASK_RIDE_TRAIN = '0x37fb1c870e2ec2c6';
/**
   * TASK_ROB_PED
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const TASK_ROB_PED = '0x7bb967f85d8ccbdb';
/**
   * TASK_SCRIPTED_ANIMATION
   *
   * @param {number} ped
   * @param {DataView} args
   * @return {void}
   */
export const TASK_SCRIPTED_ANIMATION = '0x126ef75f1e17abe5';
/**
   * TASK_SEEK_CLEAR_LOS_TO_ENTITY
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const TASK_SEEK_CLEAR_LOS_TO_ENTITY = '0x8d7f2a63688c20a4';
/**
   * TASK_SEEK_COVER_FROM_PED
   *
   * @param {number} ped
   * @param {number} fromPed
   * @param {number} duration
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const TASK_SEEK_COVER_FROM_PED = '0x84d32b3bec531324';
/**
   * TASK_SEEK_COVER_FROM_POS
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} duration
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const TASK_SEEK_COVER_FROM_POS = '0x75ac2b60386d89f2';
/**
   * TASK_SEEK_COVER_TO_COORDS
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @return {void}
   */
export const TASK_SEEK_COVER_TO_COORDS = '0x39246a6958ef072c';
/**
   * TASK_SEEK_COVER_TO_COVER_POINT
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const TASK_SEEK_COVER_TO_COVER_POINT = '0xd43d95c7a869447f';
/**
   * TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS = '0x90d2156198831d69';
/**
   * TASK_SET_CROUCH_MOVEMENT
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {any} p2
   * @param {boolean} p3
   * @return {void}
   */
export const TASK_SET_CROUCH_MOVEMENT = '0x17293c633c8ac019';
/**
   * TASK_SET_SPHERE_DEFENSIVE_AREA
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const TASK_SET_SPHERE_DEFENSIVE_AREA = '0x933c06518b52a9a4';
/**
   * TASK_SET_STEALTH_MOVEMENT
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {any} p2
   * @param {boolean} p3
   * @return {void}
   */
export const TASK_SET_STEALTH_MOVEMENT = '0x4c3fa937b44a90fa';
/**
   * TASK_SHOCKING_EVENT_REACT
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const TASK_SHOCKING_EVENT_REACT = '0x452419cbd838065b';
/**
   * TASK_SHOOT_AT_COORD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} duration
   * @param {number} firingPattern
   * @param {any} p6
   * @return {void}
   */
export const TASK_SHOOT_AT_COORD = '0x46a6cc01e0826106';
/**
   * TASK_SHOOT_AT_ENTITY
   *
   * @param {number} entity
   * @param {number} targetEntity
   * @param {number} duration
   * @param {number} firingPattern
   * @param {boolean} affectCockedState
   * @return {void}
   */
export const TASK_SHOOT_AT_ENTITY = '0x08da95e8298ae772';
/**
   * TASK_SHOOT_WITH_WEAPON
   *
   * @param {number} ped
   * @param {DataView} args
   * @return {void}
   */
export const TASK_SHOOT_WITH_WEAPON = '0x08aa95e8298ae772';
/**
   * TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT
   * Makes the specified ped shuffle to the next vehicle seat.
   * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
   *
   * @param {number} ped
   * @param {number} vehicle
   * @return {void}
   */
export const TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT = '0x7aa80209bda643eb';
/**
   * TASK_SMART_FLEE_COORD
   * Makes the specified ped flee the specified distance from the specified position.
   * fleeType: see TASK_FLEE_COORD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} distance
   * @param {number} time
   * @param {number} fleeType
   * @param {number} fleeSpeed
   * @return {void}
   */
export const TASK_SMART_FLEE_COORD = '0x94587f17e9c365d5';
/**
   * TASK_SMART_FLEE_PED
   * Makes a ped run away from another ped (fleeFromTarget)
   * 
   * fleeDistance = ped will flee this distance
   * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
   * fleeType = see TASK_FLEE_COORD, can be 0, R* Scripts: fm_mission/race_controller: 66048; fme_escaped_convicts: 2260992, 2523136, 2359296; la_alligator/fox: 2097152; net_fetch: 17301536; net_stable_mount: 540928
   * fleeSpeed = mostly 3f, rarely 1f in R* Scripts
   *
   * @param {number} ped
   * @param {number} fleeFromTarget
   * @param {number} fleeDistance
   * @param {number} fleeTime
   * @param {number} fleeType
   * @param {number} fleeSpeed
   * @param {number} targetPed
   * @return {void}
   */
export const TASK_SMART_FLEE_PED = '0x22b0d0e37ccb840d';
/**
   * TASK_STAND_GUARD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {string | number} scenarioName
   * @return {void}
   */
export const TASK_STAND_GUARD = '0xae032f8bba959e90';
/**
   * TASK_STAND_STILL
   * Makes the specified ped stand still for (time) milliseconds.
   *
   * @param {number} ped
   * @param {number} time
   * @return {void}
   */
export const TASK_STAND_STILL = '0x919be13eed931959';
/**
   * TASK_START_SCENARIO_AT_POSITION
   *
   * @param {number} ped
   * @param {number} scenarioHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {number} duration
   * @param {boolean} sittingScenario
   * @param {boolean} teleport
   * @param {string | number} p9
   * @param {number} p10
   * @param {boolean} p11
   * @return {void}
   */
export const TASK_START_SCENARIO_AT_POSITION = '0x4d1f61fc34af3cd1';
/**
   * TASK_START_SCENARIO_IN_PLACE_HASH
   * https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
   * Params: duration in milliseconds
   * 
   * conditionalHash (optionally):
   * 0 = play random conditional anim.
   * Every conditional anim has requirements to play it.
   * If requirements are not met, ped plays random allowed conditional anim or can be stuck.
   * For example, this scenario type has possible conditional anim WORLD_HUMAN_LEAN_BACK_WALL_SMOKING_MALE_D, but it can not be played by player, because condition is set to NOT be CAIConditionIsPlayer (check file amb_rest.meta and amb_rest_CA.meta with OPENIV to clarify requirements).
   *
   * @param {number} ped
   * @param {number} scenarioHash
   * @param {number} duration
   * @param {boolean} playEnterAnim
   * @param {number} conditionalHash
   * @param {number} heading
   * @param {boolean} p6
   * @return {void}
   */
export const TASK_START_SCENARIO_IN_PLACE_HASH = '0x524b54361229154f';
/**
   * TASK_STAY_IN_COVER
   * Makes the ped run to take cover
   *
   * @param {number} ped
   * @return {void}
   */
export const TASK_STAY_IN_COVER = '0xe5da8615a6180789';
/**
   * TASK_STOP_LEADING_HORSE
   *
   * @param {number} ped
   * @return {void}
   */
export const TASK_STOP_LEADING_HORSE = '0xed27560703f37258';
/**
   * TASK_SWAP_FISHING_BAIT
   * Baits: see 0x9B0C7FA063E67629
   *
   * @param {number} ped
   * @param {string | number} bait
   * @param {boolean} withoutBuoy
   * @return {void}
   */
export const TASK_SWAP_FISHING_BAIT = '0x2c28ac30a72722da';
/**
   * TASK_SWAP_WEAPON
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const TASK_SWAP_WEAPON = '0xa21c51255b205245';
/**
   * TASK_THROW_PROJECTILE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const TASK_THROW_PROJECTILE = '0x7285951dbf6b5a51';
/**
   * TASK_TURN_PED_TO_FACE_COORD
   * duration in milliseconds
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} duration
   * @return {void}
   */
export const TASK_TURN_PED_TO_FACE_COORD = '0x1dda930a0ac38571';
/**
   * TASK_TURN_PED_TO_FACE_ENTITY
   * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
   *
   * @param {number} ped
   * @param {number} targetEntity
   * @param {number} duration
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @return {void}
   */
export const TASK_TURN_PED_TO_FACE_ENTITY = '0x5ad23d40115353ac';
/**
   * TASK_TURN_TO_FACE_CLOSEST_PED
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const TASK_TURN_TO_FACE_CLOSEST_PED = '0x84179419dbdd36f2';
/**
   * TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} distance
   * @param {boolean} p5
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {boolean} p8
   * @return {void}
   */
export const TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD = '0x9fda1b3d7e7028b3';
/**
   * TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} distance
   * @param {boolean} p5
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {boolean} p8
   * @return {void}
   */
export const TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP = '0x97a28e63f0ba5631';
/**
   * TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} distance
   * @param {number} duration
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {boolean} p9
   * @return {void}
   */
export const TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP = '0x58e2e0f23f6b76c3';
/**
   * TASK_USE_NEAREST_TRAIN_SCENARIO_TO_COORD_WARP
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} distance
   * @return {void}
   */
export const TASK_USE_NEAREST_TRAIN_SCENARIO_TO_COORD_WARP = '0x3774b03456dd6106';
/**
   * TASK_USE_RANDOM_SCENARIO_IN_GROUP
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const TASK_USE_RANDOM_SCENARIO_IN_GROUP = '0x14747f4a5971de4e';
/**
   * TASK_USE_SCENARIO_POINT
   *
   * @param {number} ped
   * @param {number} scenario
   * @param {string | number} conditionalAnim
   * @param {number} p3
   * @param {boolean} p4
   * @param {boolean} p5
   * @param {number} p6
   * @param {boolean} p7
   * @param {number} p8
   * @param {boolean} p9
   * @return {void}
   */
export const TASK_USE_SCENARIO_POINT = '0xccdae6324b6a821c';
/**
   * TASK_VEHICLE_AIM_AT_COORD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const TASK_VEHICLE_AIM_AT_COORD = '0x447c1e9ef844bc0f';
/**
   * TASK_VEHICLE_AIM_AT_PED
   *
   * @param {number} ped
   * @param {number} target
   * @return {void}
   */
export const TASK_VEHICLE_AIM_AT_PED = '0xe41885592b08b097';
/**
   * TASK_VEHICLE_DRIVE_STRAIGHT_TO_POINT
   * Old name: _TASK_VEHICLE_DRIVE_TO_POINT
   * flag: 524419 and 0 in shop_horse_shop R* Script
   *
   * @param {number} driver
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p5
   * @param {number} p6
   * @param {number} flag
   * @return {void}
   */
export const TASK_VEHICLE_DRIVE_STRAIGHT_TO_POINT = '0x089ff2fb965f0a29';
/**
   * TASK_VEHICLE_DRIVE_TO_COORD
   * stopRange: how close vehicle will get to destination before stopping, default 4.0
   * straightLineDist: distance at which AI switches to heading for target directly instead of following nodes, default -1
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} speed
   * @param {any} style
   * @param {number} vehicleModel
   * @param {number} drivingMode
   * @param {number} stopRange
   * @param {number} straightLineDist
   * @return {void}
   */
export const TASK_VEHICLE_DRIVE_TO_COORD = '0xe2a2aa2f659d77a7';
/**
   * TASK_VEHICLE_DRIVE_TO_DESTINATION
   * flags: 67108864, 2097152, 524564, 524675 (eDrivingFlags)
   * p7 = 6 or 3
   * p8 = x coordinate
   * p9 - 8.f
   * p10 = false
   *
   * @param {number} driver
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} speed
   * @param {number} drivingFlags
   * @param {number} p7
   * @param {number} stoppingRange1
   * @param {number} stoppingRange2
   * @param {boolean} p10
   * @return {void}
   */
export const TASK_VEHICLE_DRIVE_TO_DESTINATION = '0x7f241a0d14354583';
/**
   * TASK_VEHICLE_DRIVE_WANDER
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} speed
   * @param {number} drivingStyle
   * @return {void}
   */
export const TASK_VEHICLE_DRIVE_WANDER = '0x480142959d337d00';
/**
   * TASK_VEHICLE_ESCORT
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} targetVehicle
   * @param {number} mode
   * @param {number} speed
   * @param {number} drivingStyle
   * @param {number} minDistance
   * @param {number} p7
   * @param {number} noRoadsDistance
   * @return {void}
   */
export const TASK_VEHICLE_ESCORT = '0x0fa6e4b75f302400';
/**
   * TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {string | number} waypointRecording
   * @param {number} drivingMode
   * @param {any} p4
   * @param {number} eWaypoint
   * @param {number} flag
   * @param {number} p7
   * @param {boolean} p8
   * @param {number} stoppingDist
   * @param {any} p10
   * @return {void}
   */
export const TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING = '0x3123faa6db1cf7ed';
/**
   * TASK_VEHICLE_GOTO_NAVMESH
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} speed
   * @param {number} behaviorFlag
   * @param {number} stoppingRange
   * @return {void}
   */
export const TASK_VEHICLE_GOTO_NAVMESH = '0x195aeeb13cefe2ee';
/**
   * TASK_VEHICLE_MISSION
   *
   * @param {number} driver
   * @param {number} vehicle
   * @param {number} vehicleTarget
   * @param {number} missionType
   * @param {number} p4
   * @param {any} p5
   * @param {number} p6
   * @param {number} p7
   * @param {boolean} driveAgainstTraffic
   * @return {void}
   */
export const TASK_VEHICLE_MISSION = '0x659427e0ef36bcde';
/**
   * TASK_VEHICLE_MISSION_PED_TARGET
   * See TASK_VEHICLE_MISSION
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} pedTarget
   * @param {number} mode
   * @param {number} maxSpeed
   * @param {number} drivingStyle
   * @param {number} minDistance
   * @param {number} p7
   * @param {boolean} driveAgainstTraffic
   * @return {void}
   */
export const TASK_VEHICLE_MISSION_PED_TARGET = '0x9454528df15d657a';
/**
   * TASK_VEHICLE_SHOOT_AT_COORD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @return {void}
   */
export const TASK_VEHICLE_SHOOT_AT_COORD = '0x5190796ed39c9b6d';
/**
   * TASK_VEHICLE_SHOOT_AT_PED
   *
   * @param {number} ped
   * @param {number} target
   * @param {number} p2
   * @return {void}
   */
export const TASK_VEHICLE_SHOOT_AT_PED = '0x10ab107b887214d8';
/**
   * TASK_VEHICLE_TEMP_ACTION
   * Documentation from GTA V, might be the same in RDR:
   * 
   * '1 - brake
   * '3 - brake + reverse
   * '4 - turn left 90 + braking
   * '5 - turn right 90 + braking
   * '6 - brake strong (handbrake?) until time ends
   * '7 - turn left + accelerate
   * '7 - turn right + accelerate
   * '9 - weak acceleration
   * '10 - turn left + restore wheel pos to center in the end
   * '11 - turn right + restore wheel pos to center in the end
   * '13 - turn left + go reverse
   * '14 - turn left + go reverse
   * '16 - crash the game after like 2 seconds :)
   * '17 - keep actual state, game crashed after few tries
   * '18 - game crash
   * '19 - strong brake + turn left/right
   * '20 - weak brake + turn left then turn right
   * '21 - weak brake + turn right then turn left
   * '22 - brake + reverse
   * '23 - accelerate fast
   * '24 - brake
   * '25 - brake turning left then when almost stopping it turns left more
   * '26 - brake turning right then when almost stopping it turns right more
   * '27 - brake until car stop or until time ends
   * '28 - brake + strong reverse acceleration
   * '30 - performs a burnout (brake until stop + brake and accelerate)
   * '31 - accelerate + handbrake
   * '32 - accelerate very strong
   * 
   * Seems to be this:
   * Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
   *
   * @param {number} driver
   * @param {number} vehicle
   * @param {number} action
   * @param {number} time
   * @return {void}
   */
export const TASK_VEHICLE_TEMP_ACTION = '0xc429dceeb339e129';
/**
   * TASK_WALK_AWAY
   *
   * @param {number} ped
   * @param {number} entity
   * @return {void}
   */
export const TASK_WALK_AWAY = '0x04acfac71e6858f9';
/**
   * TASK_WANDER_AND_CONVERSE_WITH_PED
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const TASK_WANDER_AND_CONVERSE_WITH_PED = '0x8ac76d1408731732';
/**
   * TASK_WANDER_IN_AREA
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @return {void}
   */
export const TASK_WANDER_IN_AREA = '0xe054346ca3a0f315';
/**
   * TASK_WANDER_IN_VOLUME
   *
   * @param {number} ped
   * @param {number} volume
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @return {void}
   */
export const TASK_WANDER_IN_VOLUME = '0x9fda168777b28424';
/**
   * TASK_WANDER_STANDARD
   * Makes ped walk around the area the params p1 p2 seems to not affect anything but p2 is either 0 or 1 and p1 is mostly 1.0 or ped heading
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const TASK_WANDER_STANDARD = '0xbb9ce077274f6a1b';
/**
   * TASK_WANDER_SWIM
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const TASK_WANDER_SWIM = '0x527ea3db8bc7f03b';
/**
   * TASK_WARP_PED_INTO_VEHICLE
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} seat
   * @return {void}
   */
export const TASK_WARP_PED_INTO_VEHICLE = '0x9a7d091411c5f684';
/**
   * TASK_WEAPON
   *
   * @param {number} ped
   * @return {void}
   */
export const TASK_WEAPON = '0x7157b82d60e4bc46';
/**
   * TASK_WHISTLE_ANIM
   * https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/aud_ped_whistle_types.lua
   * p2: UNSPECIFIED
   *
   * @param {number} ped
   * @param {number} audPedWhistleType
   * @param {number} p2
   * @return {void}
   */
export const TASK_WHISTLE_ANIM = '0xd6401a1b2f63bed6';
/**
   * UNCUFF_PED
   *
   * @param {number} ped
   * @return {void}
   */
export const UNCUFF_PED = '0x67406f2c8f87fc4f';
/**
   * UNHOGTIE_PED
   * getupSetHash: see nm_blend_out_sets.meta
   *
   * @param {number} ped
   * @param {number} flags
   * @param {number} getupSetHash
   * @param {string | number} p3
   * @param {string | number} p4
   * @param {number} p5
   * @return {void}
   */
export const UNHOGTIE_PED = '0x79559bad83ccd038';
/**
   * UPDATE_TASK_HANDS_UP_DURATION
   *
   * @param {number} ped
   * @param {number} duration
   * @return {void}
   */
export const UPDATE_TASK_HANDS_UP_DURATION = '0xa98fcafd7893c834';
/**
   * USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE
   *
   * @param {string | number} waypointRecording
   * @param {boolean} p1
   * @param {number} p2
   * @param {number} p3
   * @param {boolean} p4
   * @return {void}
   */
export const USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE = '0x5a353b8e6b1095b5';
/**
   * VEHICLE_WAYPOINT_PLAYBACK_GET_IS_PAUSED
   *
   * @param {any} p0
   * @return {any}
   */
export const VEHICLE_WAYPOINT_PLAYBACK_GET_IS_PAUSED = '0x4d6d30ab18b0b089';
/**
   * VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED
   *
   * @param {number} vehicle
   * @param {number} speed
   * @return {void}
   */
export const VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED = '0x121f0593e0a431d7';
/**
   * VEHICLE_WAYPOINT_PLAYBACK_PAUSE
   *
   * @param {number} vehicle
   * @return {void}
   */
export const VEHICLE_WAYPOINT_PLAYBACK_PAUSE = '0x8a4e6ac373666bc5';
/**
   * VEHICLE_WAYPOINT_PLAYBACK_RESUME
   *
   * @param {number} vehicle
   * @return {void}
   */
export const VEHICLE_WAYPOINT_PLAYBACK_RESUME = '0xdc04fcaa7839d492';
/**
   * VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
   *
   * @param {number} vehicle
   * @return {void}
   */
export const VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED = '0x5ceb25a7d2848963';
/**
   * WAYPOINT_PLAYBACK_GET_IS_AIMING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const WAYPOINT_PLAYBACK_GET_IS_AIMING = '0xd73a5d1f0325c71c';
/**
   * WAYPOINT_PLAYBACK_GET_IS_PAUSED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const WAYPOINT_PLAYBACK_GET_IS_PAUSED = '0x701375a7d43f01cb';
/**
   * WAYPOINT_PLAYBACK_GET_IS_SHOOTING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const WAYPOINT_PLAYBACK_GET_IS_SHOOTING = '0xa5b94df8af058f46';
/**
   * WAYPOINT_PLAYBACK_OVERRIDE_SPEED
   *
   * @param {number} ped
   * @param {number} speed
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_OVERRIDE_SPEED = '0x7d7d2b47fa788e85';
/**
   * WAYPOINT_PLAYBACK_PAUSE
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_PAUSE = '0x0f342546aa06fed5';
/**
   * WAYPOINT_PLAYBACK_RESUME
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {number} p2
   * @param {number} p3
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_RESUME = '0x244f70c84c547d2d';
/**
   * WAYPOINT_PLAYBACK_START_AIMING_AT_COORD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_START_AIMING_AT_COORD = '0x8968400d900ed8b3';
/**
   * WAYPOINT_PLAYBACK_START_AIMING_AT_ENTITY
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_START_AIMING_AT_ENTITY = '0x4f158205e0c74385';
/**
   * WAYPOINT_PLAYBACK_START_AIMING_AT_PED
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_START_AIMING_AT_PED = '0x20e330937c399d29';
/**
   * WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD = '0x057a25cfcc9db671';
/**
   * WAYPOINT_PLAYBACK_START_SHOOTING_AT_ENTITY
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_START_SHOOTING_AT_ENTITY = '0x4af458f71c1196d2';
/**
   * WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED = '0xe70ba7b90f8390dc';
/**
   * WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING
   *
   * @param {any} p0
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING = '0x47efa040ebb8e2ea';
/**
   * WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
   *
   * @param {number} ped
   * @return {void}
   */
export const WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED = '0x6599d834b12d0800';
/**
   * WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT
   *
   * @param {string | number} waypointRecording
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} point
   * @return {boolean}
   */
export const WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT = '0xb629a298081f876f';
/**
   * WAYPOINT_RECORDING_GET_COORD
   *
   * @param {string | number} waypointRecording
   * @param {number} point
   * @return {[boolean, Vector3]}
   */
export const WAYPOINT_RECORDING_GET_COORD = '0x2fb897405c90b361';
/**
   * WAYPOINT_RECORDING_GET_NUM_POINTS
   *
   * @param {string | number} waypointRecording
   * @param {number} points
   * @return {boolean}
   */
export const WAYPOINT_RECORDING_GET_NUM_POINTS = '0x5343532c01a07234';
/**
   * WAYPOINT_RECORDING_GET_SPEED_AT_POINT
   *
   * @param {string | number} waypointRecording
   * @param {number} point
   * @return {number}
   */
export const WAYPOINT_RECORDING_GET_SPEED_AT_POINT = '0x005622aebc33aca9';
/**
   * _0x0000A8ACDC2E1B6A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0000A8ACDC2E1B6A = '0x0000a8acdc2e1b6a';
/**
   * _0x00FFE0F85253C572
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x00FFE0F85253C572 = '0x00ffe0f85253c572';
/**
   * _0x01AF8A3729231A43
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x01AF8A3729231A43 = '0x01af8a3729231a43';
/**
   * _0x0365000D8BF86531
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x0365000D8BF86531 = '0x0365000d8bf86531';
/**
   * _0x03D741CB4052E26C
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x03D741CB4052E26C = '0x03d741cb4052e26c';
/**
   * _SET_PED_PATH_MAY_USE_SLIDING_SURFACES
   *
   * @param {number} ped
   * @param {boolean} useSlidingSurfaces
   * @return {void}
   */
export const _SET_PED_PATH_MAY_USE_SLIDING_SURFACES = '0x06ecf3925bc2abae';
/**
   * _0x098036CAB8373D36
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x098036CAB8373D36 = '0x098036cab8373d36';
/**
   * _0x098CAA6DBE7D8D82
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x098CAA6DBE7D8D82 = '0x098caa6dbe7d8d82';
/**
   * _0x0A98A362C5A19A43
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x0A98A362C5A19A43 = '0x0a98a362c5a19a43';
/**
   * _0x0D322AEF8878B8FE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0D322AEF8878B8FE = '0x0d322aef8878b8fe';
/**
   * _0x0E184495B27BB57D
   *
  
   * @return {void}
   */
export const _0x0E184495B27BB57D = '0x0e184495b27bb57d';
/**
   * _0x0F4F6C4CE471259D
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0F4F6C4CE471259D = '0x0f4f6c4ce471259d';
/**
   * _0x0FE797DD9F70DFA6
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x0FE797DD9F70DFA6 = '0x0fe797dd9f70dfa6';
/**
   * _0x10ADFDF07B7DFFBA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x10ADFDF07B7DFFBA = '0x10adfdf07b7dffba';
/**
   * _0x10C44F633E2D6D9E
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x10C44F633E2D6D9E = '0x10c44f633e2d6d9e';
/**
   * _0x11C7CE1AE38911B5
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x11C7CE1AE38911B5 = '0x11c7ce1ae38911b5';
/**
   * _SET_PED_PATH_PREFER_TO_AVOID_FOLIAGE
   *
   * @param {number} ped
   * @param {boolean} preferAvoidFoliage
   * @param {number} p2
   * @return {void}
   */
export const _SET_PED_PATH_PREFER_TO_AVOID_FOLIAGE = '0x12990818c1d35886';
/**
   * _0x141BC64C8D7C5529
   *
   * @param {number} vehicle
   * @return {void}
   */
export const _0x141BC64C8D7C5529 = '0x141bc64c8d7c5529';
/**
   * _0x152664AA3188B193
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {any}
   */
export const _0x152664AA3188B193 = '0x152664aa3188b193';
/**
   * _0x1632EB9386CDBE64
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x1632EB9386CDBE64 = '0x1632eb9386cdbe64';
/**
   * _0x19BC99C678FBA139
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x19BC99C678FBA139 = '0x19bc99c678fba139';
/**
   * _0x1A7D63CB1B0BB223
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x1A7D63CB1B0BB223 = '0x1a7d63cb1b0bb223';
/**
   * _0x1AC5A8AB50CFAA33
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x1AC5A8AB50CFAA33 = '0x1ac5a8ab50cfaa33';
/**
   * _IS_SCENARIO_IN_USE
   * Checks whether a specified scenario is currently being used (actively played) by any entity (player or ped). Returns true if the scenario is already occupied, otherwise false.
   *
   * @param {number} scenarioHash
   * @return {boolean}
   */
export const _IS_SCENARIO_IN_USE = '0x1acbc313966c21f3';
/**
   * _0x1D125814EBC517EB
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x1D125814EBC517EB = '0x1d125814ebc517eb';
/**
   * _0x1ECF56C040FD839C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x1ECF56C040FD839C = '0x1ecf56c040fd839c';
/**
   * _0x1F298C7BD30D1240
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x1F298C7BD30D1240 = '0x1f298c7bd30d1240';
/**
   * _0x1F7A9A9C38C13A56
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x1F7A9A9C38C13A56 = '0x1f7a9a9c38c13a56';
/**
   * _0x2064B33F6E6B92D4
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x2064B33F6E6B92D4 = '0x2064b33f6e6b92d4';
/**
   * _SET_PED_PATH_PREFER_HORSE_WALKABLE
   *
   * @param {number} ped
   * @param {boolean} preferHorseWalkable
   * @param {number} p2
   * @return {void}
   */
export const _SET_PED_PATH_PREFER_HORSE_WALKABLE = '0x216343750545a486';
/**
   * _0x22CD2C33ED4467A1
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x22CD2C33ED4467A1 = '0x22cd2c33ed4467a1';
/**
   * _0x22CDBF317C40A122
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x22CDBF317C40A122 = '0x22cdbf317c40a122';
/**
   * _0x23767D80C7EED7C6
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x23767D80C7EED7C6 = '0x23767d80c7eed7c6';
/**
   * _0x2416EC2F31F75266
   *
   * @param {number} entity
   * @param {number} targetEntity
   * @param {number} duration
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x2416EC2F31F75266 = '0x2416ec2f31f75266';
/**
   * _0x244430C13BA5258E
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0x244430C13BA5258E = '0x244430c13ba5258e';
/**
   * _0x28EF780BDEA8A639
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x28EF780BDEA8A639 = '0x28ef780bdea8a639';
/**
   * _0x2948235DB2058E99
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x2948235DB2058E99 = '0x2948235db2058e99';
/**
   * _0x2A10538D0A005E81
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x2A10538D0A005E81 = '0x2a10538d0a005e81';
/**
   * _0x2B8AF29A78024BD3
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x2B8AF29A78024BD3 = '0x2b8af29a78024bd3';
/**
   * _0x2C497BDEF897C6DF
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x2C497BDEF897C6DF = '0x2c497bdef897c6df';
/**
   * _0x2D657B10F211C572
   *
   * @param {number} ped
   * @param {number} p1
   * @return {any}
   */
export const _0x2D657B10F211C572 = '0x2d657b10f211c572';
/**
   * _0x2E1D6D87346BB7D2
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x2E1D6D87346BB7D2 = '0x2e1d6d87346bb7d2';
/**
   * _0x2EB977293923C723
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x2EB977293923C723 = '0x2eb977293923c723';
/**
   * _0x30146C25686B7836
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x30146C25686B7836 = '0x30146c25686b7836';
/**
   * _0x30B391915538EBE2
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x30B391915538EBE2 = '0x30b391915538ebe2';
/**
   * _0x31BB338F64D5C861
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {void}
   */
export const _0x31BB338F64D5C861 = '0x31bb338f64d5c861';
/**
   * _0x351F74ED6177EBE7
   *
  
   * @return {any}
   */
export const _0x351F74ED6177EBE7 = '0x351f74ed6177ebe7';
/**
   * _0x358A1A751B335A11
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x358A1A751B335A11 = '0x358a1a751b335a11';
/**
   * _0x370F57C47F68EBCA
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x370F57C47F68EBCA = '0x370f57c47f68ebca';
/**
   * _0x3ACC128510142B9D
   *
   * @param {string | number} waypointRecording
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const _0x3ACC128510142B9D = '0x3acc128510142b9d';
/**
   * _0x3BBEECC5B8F35318
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3BBEECC5B8F35318 = '0x3bbeecc5b8f35318';
/**
   * _0x3F8387DB1B9F31B7
   * Used for HORSE_REVIVE
   *
   * @param {DataView} scriptStruct
   * @param {boolean} p1
   * @return {boolean}
   */
export const _0x3F8387DB1B9F31B7 = '0x3f8387db1b9f31b7';
/**
   * _0x3FEB770D8ED9047A
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x3FEB770D8ED9047A = '0x3feb770d8ed9047a';
/**
   * _0x3FFCD7BBA074CC80
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const _0x3FFCD7BBA074CC80 = '0x3ffcd7bba074cc80';
/**
   * _0x41323F4E0C4AE94B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _0x41323F4E0C4AE94B = '0x41323f4e0c4ae94b';
/**
   * _0x4161648394262FDF
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x4161648394262FDF = '0x4161648394262fdf';
/**
   * _0x41D1331AFAD5A091
   * _SET_PED_*
   *
   * @param {number} ped
   * @param {number} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x41D1331AFAD5A091 = '0x41d1331afad5a091';
/**
   * _SET_PED_PATH_NEVER_USE_INTERIORS
   *
   * @param {number} ped
   * @param {boolean} neverUseInteriors
   * @return {void}
   */
export const _SET_PED_PATH_NEVER_USE_INTERIORS = '0x42cfd8fd8cc8dc69';
/**
   * _0x450080DDEDB91258
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x450080DDEDB91258 = '0x450080ddedb91258';
/**
   * _0x4A7D73989F52EB37
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x4A7D73989F52EB37 = '0x4a7d73989f52eb37';
/**
   * _0x4BA972D0E5AD8122
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x4BA972D0E5AD8122 = '0x4ba972d0e5ad8122';
/**
   * _0x4E806A395D43A458
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x4E806A395D43A458 = '0x4e806a395d43a458';
/**
   * _0x4F57397388E1DFF8
   *
  
   * @return {void}
   */
export const _0x4F57397388E1DFF8 = '0x4f57397388e1dff8';
/**
   * _0x508F5053E3F6F0C4
   * Only used in R* SP Scripts
   * Params: p4 = 1.0f - 30.0f
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @return {boolean}
   */
export const _0x508F5053E3F6F0C4 = '0x508f5053e3f6f0c4';
/**
   * _0x50AA09A0DA64E73C
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _0x50AA09A0DA64E73C = '0x50aa09a0da64e73c';
/**
   * _0x517D01BF27B682D1
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @return {void}
   */
export const _0x517D01BF27B682D1 = '0x517d01bf27b682d1';
/**
   * _0x5217B7B6DB78E1F3
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x5217B7B6DB78E1F3 = '0x5217b7b6db78e1f3';
/**
   * _0x583AE9AF9CEE0958
   *
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const _0x583AE9AF9CEE0958 = '0x583ae9af9cee0958';
/**
   * _0x5952DFA38FA529FE
   *
  
   * @return {any}
   */
export const _0x5952DFA38FA529FE = '0x5952dfa38fa529fe';
/**
   * _GET_COVERPOINT_FROM_ENTITY_WITH_OFFSET
   * Returns the entity coverpoint with offset.
   *
   * @param {number} entity
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {number} heading
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @return {number}
   */
export const _GET_COVERPOINT_FROM_ENTITY_WITH_OFFSET = '0x59872ea4cbd11c56';
/**
   * _0x59AE5CA4FFB4E378
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x59AE5CA4FFB4E378 = '0x59ae5ca4ffb4e378';
/**
   * _0x59AEA4DC640814B9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x59AEA4DC640814B9 = '0x59aea4dc640814b9';
/**
   * _0x5B68D0007D9C92EB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x5B68D0007D9C92EB = '0x5b68d0007d9c92eb';
/**
   * _0x5D9B0BAAF04CF65B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x5D9B0BAAF04CF65B = '0x5d9b0baaf04cf65b';
/**
   * _0x5EA655F01D93667A
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x5EA655F01D93667A = '0x5ea655f01d93667a';
/**
   * _0x615DC4A82E90BB48
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x615DC4A82E90BB48 = '0x615dc4a82e90bb48';
/**
   * _0x640A602946A8C972
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x640A602946A8C972 = '0x640a602946a8c972';
/**
   * _0x643FD1556F621772
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x643FD1556F621772 = '0x643fd1556f621772';
/**
   * _0x651F0530083C0E5A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x651F0530083C0E5A = '0x651f0530083c0e5a';
/**
   * _0x65D281985F2BDFC2
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x65D281985F2BDFC2 = '0x65d281985f2bdfc2';
/**
   * _0x673A8779D229BA5A
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0x673A8779D229BA5A = '0x673a8779d229ba5a';
/**
   * _0x678D3226CF70B9C8
   * Only used in R* SP Script beat_washed_ashore
   * Returns Object prop for TASK::_TASK_ITEM_INTERACTION_2
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {number}
   */
export const _0x678D3226CF70B9C8 = '0x678d3226cf70b9c8';
/**
   * _0x6A1AF481407BF6E9
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6A1AF481407BF6E9 = '0x6a1af481407bf6e9';
/**
   * _0x6AFD84AEAA3EA538
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x6AFD84AEAA3EA538 = '0x6afd84aeaa3ea538';
/**
   * _0x6AFDA2264925BD11
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6AFDA2264925BD11 = '0x6afda2264925bd11';
/**
   * _0x6BA606AB3A83BC4D
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x6BA606AB3A83BC4D = '0x6ba606ab3a83bc4d';
/**
   * _0x6C269F673C47031E
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x6C269F673C47031E = '0x6c269f673c47031e';
/**
   * _IS_ENTITY_REVIVABLE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_ENTITY_REVIVABLE = '0x6c50b9dccca70023';
/**
   * _0x6DAC799857EF3F11
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x6DAC799857EF3F11 = '0x6dac799857ef3f11';
/**
   * _0x722D6A49200174FE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x722D6A49200174FE = '0x722d6a49200174fe';
/**
   * _0x748D5E0D2A1A4C61
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x748D5E0D2A1A4C61 = '0x748d5e0d2a1a4c61';
/**
   * _0x74F0209674864CBD
   *
  
   * @return {any}
   */
export const _0x74F0209674864CBD = '0x74f0209674864cbd';
/**
   * _0x756C7B4C43DF0422
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x756C7B4C43DF0422 = '0x756c7b4c43df0422';
/**
   * _0x764DB5A48390FBAD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x764DB5A48390FBAD = '0x764db5a48390fbad';
/**
   * _0x76610D12A838EBDE
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x76610D12A838EBDE = '0x76610d12a838ebde';
/**
   * _0x78D8C1D4EB80C588
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x78D8C1D4EB80C588 = '0x78d8c1d4eb80c588';
/**
   * _0x79197F7D2BB5E73A
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {any}
   */
export const _0x79197F7D2BB5E73A = '0x79197f7d2bb5e73a';
/**
   * _SET_PED_PATH_AVOID_TRAFFIC
   *
   * @param {number} ped
   * @param {boolean} avoidTraffic
   * @return {void}
   */
export const _SET_PED_PATH_AVOID_TRAFFIC = '0x7c015d8bcec72cf4';
/**
   * _0x7CB99FADDE73CD1B
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x7CB99FADDE73CD1B = '0x7cb99fadde73cd1b';
/**
   * _0x7FB78B2199C10E92
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x7FB78B2199C10E92 = '0x7fb78b2199c10e92';
/**
   * _0x801BD27403F3CBA0
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x801BD27403F3CBA0 = '0x801bd27403f3cba0';
/**
   * _0x816A3ACD265E2297
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x816A3ACD265E2297 = '0x816a3acd265e2297';
/**
   * _0x827A58CED9D4D5B4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x827A58CED9D4D5B4 = '0x827a58ced9d4d5b4';
/**
   * _0x82ED59F095056550
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x82ED59F095056550 = '0x82ed59f095056550';
/**
   * _0x849791EBBDBA0362
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x849791EBBDBA0362 = '0x849791ebbdba0362';
/**
   * _0x865732725536EE39
   *
   * @param {any} p0
   * @return {Vector3}
   */
export const _0x865732725536EE39 = '0x865732725536ee39';
/**
   * _0x8798CF6815B8FE0F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8798CF6815B8FE0F = '0x8798cf6815b8fe0f';
/**
   * _0x885D19AC2B6FBFF4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x885D19AC2B6FBFF4 = '0x885d19ac2b6fbff4';
/**
   * _0x88FD60D846D9CD63
   *
   * @param {number} ped
   * @return {void}
   */
export const _0x88FD60D846D9CD63 = '0x88fd60d846d9cd63';
/**
   * _0x8B1FDF63C3193EDA
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x8B1FDF63C3193EDA = '0x8b1fdf63c3193eda';
/**
   * _SET_PED_PATH_PREFER_TO_AVOID_MUD
   *
   * @param {number} ped
   * @param {boolean} preferAvoidMud
   * @param {number} p2
   * @return {void}
   */
export const _SET_PED_PATH_PREFER_TO_AVOID_MUD = '0x8bb283a7888ad1ad';
/**
   * _0x8E1DDE26D270CC5E
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8E1DDE26D270CC5E = '0x8e1dde26d270cc5e';
/**
   * _0x8F8C84363810691A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8F8C84363810691A = '0x8f8c84363810691a';
/**
   * _0x9050DF2C53801208
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x9050DF2C53801208 = '0x9050df2c53801208';
/**
   * _0x90703A8F75EE4ABD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x90703A8F75EE4ABD = '0x90703a8f75ee4abd';
/**
   * _0x908BB14BCE85C80E
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x908BB14BCE85C80E = '0x908bb14bce85c80e';
/**
   * _0x91CB5E431F579BA1
   *
   * @param {any} p0
   * @return {Vector3}
   */
export const _0x91CB5E431F579BA1 = '0x91cb5e431f579ba1';
/**
   * _0x920684BE432875B1
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x920684BE432875B1 = '0x920684be432875b1';
/**
   * _0x9420FB11B8D77948
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x9420FB11B8D77948 = '0x9420fb11b8d77948';
/**
   * _0x954451EA2D2120FB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x954451EA2D2120FB = '0x954451ea2d2120fb';
/**
   * _0x9585FF23C4B8EDE0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9585FF23C4B8EDE0 = '0x9585ff23c4b8ede0';
/**
   * _0x9667CCE29BFA0780
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9667CCE29BFA0780 = '0x9667cce29bfa0780';
/**
   * _0x974DA3408DEC4E79
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x974DA3408DEC4E79 = '0x974da3408dec4e79';
/**
   * _0x9ADDBB9242179D56
   *
   * @param {number} object
   * @param {number} ped
   * @return {void}
   */
export const _0x9ADDBB9242179D56 = '0x9addbb9242179d56';
/**
   * _0x9B6A58FDB0024F12
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x9B6A58FDB0024F12 = '0x9b6a58fdb0024f12';
/**
   * _0x9C8F42A5D1859DC1
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9C8F42A5D1859DC1 = '0x9c8f42a5d1859dc1';
/**
   * _0x9EBD34958AB6F824
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9EBD34958AB6F824 = '0x9ebd34958ab6f824';
/**
   * _0x9FF5F9B24E870748
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x9FF5F9B24E870748 = '0x9ff5f9b24e870748';
/**
   * _0xA052608A12559BBB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA052608A12559BBB = '0xa052608a12559bbb';
/**
   * _0xA21AA2F0C2180125
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA21AA2F0C2180125 = '0xa21aa2f0c2180125';
/**
   * _0xA263ADBBC8056214
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA263ADBBC8056214 = '0xa263adbbc8056214';
/**
   * _0xA42DC7919159CCCF
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xA42DC7919159CCCF = '0xa42dc7919159cccf';
/**
   * _0xA6A76D666A281F2D
   *
   * @param {any} p0
   * @param {number} item
   * @return {void}
   */
export const _0xA6A76D666A281F2D = '0xa6a76d666a281f2d';
/**
   * _0xA7479FB665361EDB
   * _SET_SCENARIO_*
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA7479FB665361EDB = '0xa7479fb665361edb';
/**
   * _0xA9E7672F8C6C6F74
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xA9E7672F8C6C6F74 = '0xa9e7672f8c6c6f74';
/**
   * _0xAC5045AB7F1A34FD
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xAC5045AB7F1A34FD = '0xac5045ab7f1a34fd';
/**
   * _0xADC45010BC17AF0E
   * _SET_SCENARIO_POINT_*
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xADC45010BC17AF0E = '0xadc45010bc17af0e';
/**
   * _0xAF2EF28CE3084505
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xAF2EF28CE3084505 = '0xaf2ef28ce3084505';
/**
   * _0xB2D15D3551FE4FAE
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xB2D15D3551FE4FAE = '0xb2d15d3551fe4fae';
/**
   * _0xB2F47A1AFDFCC595
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xB2F47A1AFDFCC595 = '0xb2f47a1afdfcc595';
/**
   * _SET_ITEM_INTERACTION_STATE
   * All Interaction states
   * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION#-4-item_interaction_state_name--item_interaction_propid--1
   *
   * @param {number} ped
   * @param {number} itemInteractionState
   * @param {number} p2
   * @return {void}
   */
export const _SET_ITEM_INTERACTION_STATE = '0xb35370d5353995cb';
/**
   * _0xB520DBDA7FCF573F
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xB520DBDA7FCF573F = '0xb520dbda7fcf573f';
/**
   * _0xB79817DB31FF72B9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xB79817DB31FF72B9 = '0xb79817db31ff72b9';
/**
   * _0xB8E213D02F37947D
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _0xB8E213D02F37947D = '0xb8e213d02f37947d';
/**
   * _0xB8E3486D107F4194
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xB8E3486D107F4194 = '0xb8e3486d107f4194';
/**
   * _HAS_CARRIABLE_CONFIG_HASH_LOADED
   * list of carriable configs  https://gist.github.com/WesternGamer/95a1f8daf02520cad2bf96af6d957e70
   *
   * @param {number} hash
   * @return {boolean}
   */
export const _HAS_CARRIABLE_CONFIG_HASH_LOADED = '0xb8f52a3f84a7cc59';
/**
   * _0xBAAB791AA72C2821
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xBAAB791AA72C2821 = '0xbaab791aa72c2821';
/**
   * _0xBC3F847AE2C3DC65
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xBC3F847AE2C3DC65 = '0xbc3f847ae2c3dc65';
/**
   * _0xBD1C3C0F271C39D3
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xBD1C3C0F271C39D3 = '0xbd1c3c0f271c39d3';
/**
   * _0xBD70108D01875299
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xBD70108D01875299 = '0xbd70108d01875299';
/**
   * _0xBEDBE39B5FD98FD6
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0xBEDBE39B5FD98FD6 = '0xbedbe39b5fd98fd6';
/**
   * _0xBEEFBB608D2AA68A
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xBEEFBB608D2AA68A = '0xbeefbb608d2aa68a';
/**
   * _SET_PED_PATH_PREFER_STAY_IN_WATER
   *
   * @param {number} ped
   * @param {boolean} preferStayInWater
   * @param {number} p2
   * @return {void}
   */
export const _SET_PED_PATH_PREFER_STAY_IN_WATER = '0xc6170856e54557b2';
/**
   * _0xCE4E669400E5F8AA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xCE4E669400E5F8AA = '0xce4e669400e5f8aa';
/**
   * _0xD0ABC4EA3B5E21A0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xD0ABC4EA3B5E21A0 = '0xd0abc4ea3b5e21a0';
/**
   * _0xD508FA229F1C4900
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {any}
   */
export const _0xD508FA229F1C4900 = '0xd508fa229f1c4900';
/**
   * _0xD999E379265A4501
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xD999E379265A4501 = '0xd999e379265a4501';
/**
   * _0xDE0C8B145EA466FF
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0xDE0C8B145EA466FF = '0xde0c8b145ea466ff';
/**
   * _0xDF56A2B50C04DEA4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xDF56A2B50C04DEA4 = '0xdf56a2b50c04dea4';
/**
   * _0xDF94844D474F31E5
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xDF94844D474F31E5 = '0xdf94844d474f31e5';
/**
   * _0xE01C8DC8EDD28D31
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE01C8DC8EDD28D31 = '0xe01c8dc8edd28d31';
/**
   * _0xE01F55B2896F6B37
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE01F55B2896F6B37 = '0xe01f55b2896f6b37';
/**
   * _0xE05A5D39BE6E93AF
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE05A5D39BE6E93AF = '0xe05a5d39be6e93af';
/**
   * _0xE116F6F2DA2D777E
   *
   * @param {any} p0
   * @return {Vector3}
   */
export const _0xE116F6F2DA2D777E = '0xe116f6f2da2d777e';
/**
   * _0xE1C105E6BBA48270
   *
  
   * @return {any}
   */
export const _0xE1C105E6BBA48270 = '0xe1c105e6bba48270';
/**
   * _0xE2CF104ADD49D4BF
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE2CF104ADD49D4BF = '0xe2cf104add49d4bf';
/**
   * _0xE55478C5EDF70AC2
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xE55478C5EDF70AC2 = '0xe55478c5edf70ac2';
/**
   * _0xE5831AA1E2FD147C
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE5831AA1E2FD147C = '0xe5831aa1e2fd147c';
/**
   * _0xE62754D09354F6CF
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xE62754D09354F6CF = '0xe62754d09354f6cf';
/**
   * _0xE69FDA40AAC3EFC0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE69FDA40AAC3EFC0 = '0xe69fda40aac3efc0';
/**
   * _0xE6A151364C600B24
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xE6A151364C600B24 = '0xe6a151364c600b24';
/**
   * _0xE7BBC4E56B989449
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xE7BBC4E56B989449 = '0xe7bbc4e56b989449';
/**
   * _0xE9225354FB7437A7
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xE9225354FB7437A7 = '0xe9225354fb7437a7';
/**
   * _0xE9A6400D1A0E7A55
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xE9A6400D1A0E7A55 = '0xe9a6400d1a0e7a55';
/**
   * _0xEAF87DA2BE78A15B
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xEAF87DA2BE78A15B = '0xeaf87da2be78a15b';
/**
   * _0xEB67D4E056C85A81
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xEB67D4E056C85A81 = '0xeb67d4e056c85a81';
/**
   * _0xEBA2081E0A5F4D17
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xEBA2081E0A5F4D17 = '0xeba2081e0a5f4d17';
/**
   * _0xEC516FE805D2CB2D
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xEC516FE805D2CB2D = '0xec516fe805d2cb2d';
/**
   * _0xEFD875C2791EBEFD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0xEFD875C2791EBEFD = '0xefd875c2791ebefd';
/**
   * _0xF3C3503276F4A034
   *
   * @param {number} entity
   * @param {any} p1
   * @return {void}
   */
export const _0xF3C3503276F4A034 = '0xf3c3503276f4a034';
/**
   * _0xF40A109B4B79A848
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xF40A109B4B79A848 = '0xf40a109b4b79a848';
/**
   * _0xF718931A82EEB898
   *
  
   * @return {void}
   */
export const _0xF718931A82EEB898 = '0xf718931a82eeb898';
/**
   * _0xF948F4356F010F11
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xF948F4356F010F11 = '0xf948f4356f010f11';
/**
   * _0xF97F462779B31786
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xF97F462779B31786 = '0xf97f462779b31786';
/**
   * _0xFA30E2254461ADEB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xFA30E2254461ADEB = '0xfa30e2254461adeb';
/**
   * _0xFC7F71CF49F70B6B
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xFC7F71CF49F70B6B = '0xfc7f71cf49f70b6b';
/**
   * _0xFDECCA06E8B81346
   *
   * @param {number} ped
   * @return {any}
   */
export const _0xFDECCA06E8B81346 = '0xfdecca06e8b81346';
/**
   * _0xFE5D28B9B7837CC1
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0xFE5D28B9B7837CC1 = '0xfe5d28b9b7837cc1';
/**
   * _LOAD_CARRIABLE_CONFIG_HASH
   * https://gist.github.com/WesternGamer/95a1f8daf02520cad2bf96af6d957e70 carriable config list 
   *
   * @param {number} hash
   * @return {void}
   */
export const _LOAD_CARRIABLE_CONFIG_HASH = '0xff745b0346e19e2c';
/**
   * _0xFF8AFCA532B500D4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xFF8AFCA532B500D4 = '0xff8afca532b500d4';
/**
   * _0xFFB520A3E16F7B7B
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0xFFB520A3E16F7B7B = '0xffb520a3e16f7b7b';
/**
   * _ADD_COVER_BLOCKING_VOLUME
   *
   * @param {number} volume
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const _ADD_COVER_BLOCKING_VOLUME = '0xeb2ed1dc3aec0654';
/**
   * _ADD_FLEE_TARGET_COORDS
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @return {void}
   */
export const _ADD_FLEE_TARGET_COORDS = '0xe8f1a5b4ced3725a';
/**
   * _ASSOCIATE_PROP_WITH_SCENARIO
   *
   * @param {number} scenario
   * @param {number} entity
   * @param {string | number} propName
   * @param {boolean} p3
   * @return {boolean}
   */
export const _ASSOCIATE_PROP_WITH_SCENARIO = '0x8360c47380b6f351';
/**
   * _CREATE_HERB_COMPOSITES
   * groundSetting: 0: spawn on ground, 2 (1?): do not spawn on ground
   * p7: -1 in R* Scripts
   * Returns compositeId
   *
   * @param {number} asset
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {number} groundSetting
   * @param {any} p6
   * @param {number} p7
   * @return {number}
   */
export const _CREATE_HERB_COMPOSITES = '0x5b4bbe80ad5972dc';
/**
   * _CREATE_WAYPOINT_PATH
   *
   * @param {string | number} pathName
   * @param {any} p1
   * @param {number} nodes
   * @param {number} p3
   * @return {boolean}
   */
export const _CREATE_WAYPOINT_PATH = '0x5c885e0978b6ad60';
/**
   * _CUFF_PED
   *
   * @param {number} ped
   * @return {void}
   */
export const _CUFF_PED = '0x7981037a96e7d174';
/**
   * _DELETE_PATCH_OBJECTS_FROM_HERB_COMPOSITES
   * Params: p1 is always false except in script nb_egg_protector
   *
   * @param {number} compositeId
   * @param {boolean} p1
   * @return {void}
   */
export const _DELETE_PATCH_OBJECTS_FROM_HERB_COMPOSITES = '0x5758b1ee0c3fd4ac';
/**
   * _DELETE_SCENARIO_POINT
   *
   * @param {number} scenario
   * @return {void}
   */
export const _DELETE_SCENARIO_POINT = '0x81948dfe4f5a0283';
/**
   * _DETACH_CARRIABLE_PED
   *
   * @param {number} ped
   * @return {void}
   */
export const _DETACH_CARRIABLE_PED = '0x36d188aecb26094b';
/**
   * _DISASSOCIATE_PROP_FROM_SCENARIO
   *
   * @param {number} scenario
   * @param {string | number} propName
   * @return {boolean}
   */
export const _DISASSOCIATE_PROP_FROM_SCENARIO = '0x6ef4e31b4d5d2da0';
/**
   * _DOES_SCENARIO_GROUP_EXIST_HASH
   *
   * @param {number} scenarioGroup
   * @return {boolean}
   */
export const _DOES_SCENARIO_GROUP_EXIST_HASH = '0x76e98b52369a289c';
/**
   * _DOES_SCENARIO_POINT_HAVE_PROPS
   *
   * @param {number} scenario
   * @return {boolean}
   */
export const _DOES_SCENARIO_POINT_HAVE_PROPS = '0xea31f199a73801d3';
/**
   * _FIND_MODEL_FOR_ITEM
   *
   * @param {number} item
   * @return {number}
   */
export const _FIND_MODEL_FOR_ITEM = '0xe47dd64b9f02677d';
/**
   * _GET_HERB_COMPOSITE_NUM_ENTITIES
   * Flowers, Stalks or whatever the composite has
   *
   * @param {number} compositeId
   * @param {DataView} outEntities
   * @return {number}
   */
export const _GET_HERB_COMPOSITE_NUM_ENTITIES = '0x96c6ed22fb742c3e';
/**
   * _GET_HOGTIE_ESCAPE_TIMER
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_HOGTIE_ESCAPE_TIMER = '0x4687e69d258bbe41';
/**
   * _GET_ITEM_INTERACTION_ENTITY_FROM_PED
   * item hashes: PRIMARYITEM, P_MUGCOFFEE01X_PH_R_HAND, P_BOTTLEBEER01X_PH_R_HAND
   * http://prntscr.com/1qtp3bz
   * https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
   *
   * @param {number} ped
   * @param {number} item
   * @return {number}
   */
export const _GET_ITEM_INTERACTION_ENTITY_FROM_PED = '0x05a0100ea714db68';
/**
   * _GET_LED_HORSE_FROM_PED
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_LED_HORSE_FROM_PED = '0xed1f514af4732258';
/**
   * _GET_PED_IS_IGNORING_DEAD_BODIES
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _GET_PED_IS_IGNORING_DEAD_BODIES = '0x1948bbe561a2375a';
/**
   * _GET_PED_USING_SCENARIO_POINT
   *
   * @param {number} scenario
   * @return {number}
   */
export const _GET_PED_USING_SCENARIO_POINT = '0x5ba659955369b0e2';
/**
   * _GET_SCENARIO_CONTAINER_OPENING_STATE
   * Returns m_eContainerState
   *
   * @param {number} entity
   * @return {boolean}
   */
export const _GET_SCENARIO_CONTAINER_OPENING_STATE = '0xb219612b5568e9ec';
/**
   * _GET_SCENARIO_POINT_COORDS
   * Params: p1 is always true in R* Scripts
   *
   * @param {number} scenario
   * @param {boolean} p1
   * @return {Vector3}
   */
export const _GET_SCENARIO_POINT_COORDS = '0xa8452dd321607029';
/**
   * _GET_SCENARIO_POINT_ENTITY
   * Note: The current name for this native is the old name of 0x295514F198EFD0CA
   * Old name for this native: _GET_ENTITY_SCENARIO_POINT_IS_ATTACHED_TO
   *
   * @param {number} scenario
   * @return {number}
   */
export const _GET_SCENARIO_POINT_ENTITY = '0x7467165ee97d3c68';
/**
   * _GET_SCENARIO_POINT_HEADING
   * Params: p1 is always true in R* Scripts
   *
   * @param {number} scenario
   * @param {boolean} p1
   * @return {number}
   */
export const _GET_SCENARIO_POINT_HEADING = '0xb93ea7184baa85c3';
/**
   * _GET_SCENARIO_POINT_PED_IS_USING
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {number}
   */
export const _GET_SCENARIO_POINT_PED_IS_USING = '0xdf7993356f52359a';
/**
   * _GET_SCENARIO_POINT_RADIUS
   *
   * @param {number} scenario
   * @return {number}
   */
export const _GET_SCENARIO_POINT_RADIUS = '0x6718f40313a2b5a6';
/**
   * _GET_SCENARIO_POINT_TYPE
   *
   * @param {number} scenario
   * @return {number}
   */
export const _GET_SCENARIO_POINT_TYPE = '0xa92450b5ae687aaf';
/**
   * _GET_SCENARIO_POINT_TYPE_PED_IS_USING
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_SCENARIO_POINT_TYPE_PED_IS_USING = '0x2d0571bb55879da2';
/**
   * _GET_SCRIPT_TASK_ACTION_TIME
   *
   * @param {number} ped
   * @param {number} task
   * @return {number}
   */
export const _GET_SCRIPT_TASK_ACTION_TIME = '0xa710dc5d25f8b942';
/**
   * _GET_TASK_FISHING
   * Fishing Research: https://pastebin.com/NmK5ZLVs
   * Only used in R* Scripts fishing_core and av_fishing_river
   *
   * @param {number} ped
   * @param {DataView} p1
   * @return {boolean}
   */
export const _GET_TASK_FISHING = '0xf3735acd11acd500';
/**
   * _GET_TASK_MOVE_NETWORK_ID
   * Returns hash of the underlying move network def, see move_networks.xml
   * https://alloc8or.re/rdr3/doc/misc/move_networks.txt
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_TASK_MOVE_NETWORK_ID = '0xcacc2f9d994504b7';
/**
   * _GET_TASK_MOVE_NETWORK_PHASE_FLOAT
   *
   * @param {number} ped
   * @param {string | number} phaseName
   * @return {number}
   */
export const _GET_TASK_MOVE_NETWORK_PHASE_FLOAT = '0x844ceee428ea35b0';
/**
   * _IS_HAT_BEING_PICKED_UP
   * Returns true while a hat is being picked up
   * _IS_A* - _IS_D*
   *
   * @param {number} hatObject
   * @return {boolean}
   */
export const _IS_HAT_BEING_PICKED_UP = '0x11cd066f54da0133';
/**
   * _IS_HAT_BEING_PICKED_UP_2
   * Returns true while a hat is being picked up. Similar to 0x11CD066F54DA0133
   * _IS_A* - _IS_D*
   *
   * @param {number} hatObject
   * @return {boolean}
   */
export const _IS_HAT_BEING_PICKED_UP_2 = '0x4eccc2815ca79ae2';
/**
   * _IS_PED_ARRESTING_ANY_PED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_ARRESTING_ANY_PED = '0xa9cc7856d52dbd25';
/**
   * _IS_PED_DUELLING
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_DUELLING = '0xc8b29d18022ea2b7';
/**
   * _IS_PED_LEADING_HORSE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_LEADING_HORSE = '0xefc4303ddc6e60d3';
/**
   * _IS_SCENARIO_GROUP_ENABLED_HASH
   *
   * @param {number} scenarioGroup
   * @return {boolean}
   */
export const _IS_SCENARIO_GROUP_ENABLED_HASH = '0xdcc374913de6aaa6';
/**
   * _IS_SCENARIO_POINT_ACTIVE
   *
   * @param {number} scenario
   * @return {boolean}
   */
export const _IS_SCENARIO_POINT_ACTIVE = '0x0cc36d4156006509';
/**
   * _IS_SCENARIO_POINT_FLAG_SET
   *
   * @param {number} scenario
   * @param {number} flag
   * @return {boolean}
   */
export const _IS_SCENARIO_POINT_FLAG_SET = '0x8569c38d2fb80650';
/**
   * _MAKE_OBJECT_CARRIABLE
   *
   * @param {number} object
   * @return {void}
   */
export const _MAKE_OBJECT_CARRIABLE = '0x78b4567e18b54480';
/**
   * _PED_FISHINGROD_HOOK_ENTITY
   *
   * @param {number} ped
   * @param {number} entity
   * @return {void}
   */
export const _PED_FISHINGROD_HOOK_ENTITY = '0x1a52076d26e09004';
/**
   * _PED_FISHINGROD_HOOK_OBJECT
   * Used with 'P_BODYPARTARMFLOAT02X' model in fishing_core.c
   *
   * @param {number} ped
   * @param {number} object
   * @return {void}
   */
export const _PED_FISHINGROD_HOOK_OBJECT = '0xce71c2f9baa3f975';
/**
   * _PED_IS_IN_SCENARIO_BASE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _PED_IS_IN_SCENARIO_BASE = '0x02ebbb3989b7e695';
/**
   * _REQUEST_HERB_COMPOSITE_ASSET
   * https://github.com/femga/rdr3_discoveries/tree/master/objects/composites
   *
   * @param {number} asset
   * @return {boolean}
   */
export const _REQUEST_HERB_COMPOSITE_ASSET = '0x73f0d0327bfa0812';
/**
   * _RESET_SCENARIO_FOR_ENTITY
   *
   * @param {number} scenario
   * @param {number} entity
   * @return {void}
   */
export const _RESET_SCENARIO_FOR_ENTITY = '0x2e20878fd208a68e';
/**
   * _RESET_SCENARIO_SCRIPT
   *
   * @param {number} scenario
   * @return {void}
   */
export const _RESET_SCENARIO_SCRIPT = '0x5a40040bb5ae3ea2';
/**
   * _SET_FISHING_BAIT
   * Baits: p_fishHook02x, p_baitBread01x, p_baitCorn01x, p_baitCheese01x, p_baitWorm01x, p_baitCricket01x, p_crawdad01x, p_finisheDragonfly01x, p_finisdFishlure01x, p_finishdCrawd01x, p_finisheDragonflyLegendary01x, p_finisdFishlureLegendary01x, p_finishdCrawdLegendary01x, p_lgoc_spinner_v4
   *
   * @param {number} ped
   * @param {string | number} bait
   * @param {boolean} withoutBuoy
   * @param {boolean} instantly
   * @return {void}
   */
export const _SET_FISHING_BAIT = '0x9b0c7fa063e67629';
/**
   * _SET_HOGTIE_ESCAPE_TIMER
   * Sets the time it takes for a hogtied ped to escape
   * -1.0f for ped to never escape
   *
   * @param {number} ped
   * @param {number} time
   * @return {void}
   */
export const _SET_HOGTIE_ESCAPE_TIMER = '0xab591ae6b48b913e';
/**
   * _SET_PED_CLEAR_AIMING_IN_THE_AIR
   *
   * @param {number} ped
   * @param {any} p1
   * @return {void}
   */
export const _SET_PED_CLEAR_AIMING_IN_THE_AIR = '0x34c0010188d7c54a';
/**
   * _SET_PED_IGNORE_DEAD_BODIES
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PED_IGNORE_DEAD_BODIES = '0x013a7ba5015c1372';
/**
   * _SET_PED_PATH_LADDER_COST_MODIFIER
   * _SET_PED_PATH_P*
   *
   * @param {number} ped
   * @param {number} modifier
   * @return {void}
   */
export const _SET_PED_PATH_LADDER_COST_MODIFIER = '0x70f7a1eab1ae3aa8';
/**
   * _SET_PED_PATH_MAY_ENTER_DEEP_WATER
   *
   * @param {number} ped
   * @param {boolean} mayEnterDeepWater
   * @return {void}
   */
export const _SET_PED_PATH_MAY_ENTER_DEEP_WATER = '0x9de63896b176ea94';
/**
   * _SET_SCENARIO_CONTAINER_OPENING_STATE
   * Opens/closes containers: ChestDugUp
   *
   * @param {number} entity
   * @param {boolean} open
   * @return {void}
   */
export const _SET_SCENARIO_CONTAINER_OPENING_STATE = '0x188f8071f244b9b8';
/**
   * _SET_SCENARIO_GROUP_ENABLED_HASH
   *
   * @param {number} scenarioGroup
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_SCENARIO_GROUP_ENABLED_HASH = '0x9925eddb6eab88cd';
/**
   * _SET_SCENARIO_POINT_ACTIVE
   *
   * @param {number} scenario
   * @param {boolean} active
   * @return {void}
   */
export const _SET_SCENARIO_POINT_ACTIVE = '0xeee4829304f93eee';
/**
   * _SET_SCENARIO_POINT_COORDS
   *
   * @param {number} scenario
   * @param {number} xPos
   * @param {number} yPos
   * @param {number} zPos
   * @param {boolean} p4
   * @return {void}
   */
export const _SET_SCENARIO_POINT_COORDS = '0x2056ab38df06825c';
/**
   * _SET_SCENARIO_POINT_FLAG
   * flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CScenarioPointFlags__Flags
   *
   * @param {number} scenario
   * @param {number} flag
   * @param {boolean} value
   * @return {void}
   */
export const _SET_SCENARIO_POINT_FLAG = '0x5af19b6cc2115d34';
/**
   * _SET_SCENARIO_POINT_HEADING
   *
   * @param {number} scenario
   * @param {number} heading
   * @param {boolean} p2
   * @return {void}
   */
export const _SET_SCENARIO_POINT_HEADING = '0xd3a0da8f91612c6e';
/**
   * _SET_SCENARIO_POINT_RADIUS
   *
   * @param {number} scenario
   * @param {number} radius
   * @return {void}
   */
export const _SET_SCENARIO_POINT_RADIUS = '0xc47d9080a9a8856a';
/**
   * _SET_SCENARIO_TYPE_ENABLED_HASH
   *
   * @param {number} scenarioType
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_SCENARIO_TYPE_ENABLED_HASH = '0xd00e50e673802d71';
/**
   * _SET_TASK_FISHING
   * Only used in R* Scripts fishing_core and av_fishing_river
   *
   * @param {number} ped
   * @param {any} p1
   * @return {boolean}
   */
export const _SET_TASK_FISHING = '0xf3735acd11acd501';
/**
   * _SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_2
   *
   * @param {number} ped
   * @param {string | number} signalName
   * @param {number} value
   * @return {void}
   */
export const _SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_2 = '0x099d4a855d53b03b';
/**
   * _SET_TASK_MOVE_NETWORK_SIGNAL_VECTOR
   *
   * @param {number} ped
   * @param {string | number} signalName
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _SET_TASK_MOVE_NETWORK_SIGNAL_VECTOR = '0x4662bfe01938d98d';
/**
   * _TASK_ANIMAL_BLEED_OUT
   *
   * @param {number} ped
   * @param {number} killer
   * @param {boolean} p2
   * @param {number} weaponHash
   * @param {number} p4
   * @param {number} p5
   * @return {void}
   */
export const _TASK_ANIMAL_BLEED_OUT = '0x30a768c30d385ec5';
/**
   * _TASK_BOARD_VEHICLE
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _TASK_BOARD_VEHICLE = '0xe53d17ad837cbf7c';
/**
   * _TASK_BOARD_VEHICLE_2
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {number} p3
   * @param {number} flags
   * @return {void}
   */
export const _TASK_BOARD_VEHICLE_2 = '0xe41a09c8ddff7aa4';
/**
   * _TASK_CLIMB_2
   *
   * @param {number} ped
   * @param {number} heading
   * @return {void}
   */
export const _TASK_CLIMB_2 = '0xdf1d85bcaf60d537';
/**
   * _TASK_COMBAT_PED_AT_COORDS
   * Coords: volume coords used in R* Script smuggler2
   * p4/p5 = 0 in R* Scripts previous name TASK_COMBAT_PED_3
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @param {number} p5
   * @return {void}
   */
export const _TASK_COMBAT_PED_AT_COORDS = '0xc624414fa748b9ba';
/**
   * _TASK_CUT_FREE_HOGTIED_TARGET_PED
   *
   * @param {number} ped
   * @param {number} targetPed
   * @return {void}
   */
export const _TASK_CUT_FREE_HOGTIED_TARGET_PED = '0x81d16c4ff3a77adf';
/**
   * _TASK_CUT_FREE_HOGTIED_TARGET_PED_2
   *
   * @param {number} ped
   * @param {number} targetPed
   * @param {number} p2
   * @return {void}
   */
export const _TASK_CUT_FREE_HOGTIED_TARGET_PED_2 = '0x525421a507216084';
/**
   * _TASK_DISEMBARK_VEHICLE
   *
   * @param {any} p0
   * @param {number} vehicle
   * @param {number} p2
   * @param {any} p3
   * @param {number} p4
   * @param {any} p5
   * @return {void}
   */
export const _TASK_DISEMBARK_VEHICLE = '0xa7c6854bb5a4192a';
/**
   * _TASK_EMOTE_OUTRO
   *
   * @param {number} ped
   * @return {void}
   */
export const _TASK_EMOTE_OUTRO = '0xbdfeeb7600bcd938';
/**
   * _TASK_EQUIP_HAT
   * _A*
   *
   * @param {number} hatObject
   * @param {number} ped
   * @return {void}
   */
export const _TASK_EQUIP_HAT = '0xaa0af6025160243a';
/**
   * _TASK_FLEE_FROM_COORD
   * fleeType: see TASK_FLEE_COORD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @return {void}
   */
export const _TASK_FLEE_FROM_COORD = '0x6879ff208ed87f2a';
/**
   * _TASK_FLEE_FROM_PED
   * fleeType: see TASK_FLEE_COORD
   *
   * @param {number} ped
   * @param {number} fleeFromTarget
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} distance
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {number} targetPed
   * @return {void}
   */
export const _TASK_FLEE_FROM_PED = '0x7b74d8eede9b5727';
/**
   * _TASK_GUARD_ASSIGNED_DEFENSIVE_AREA_2
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _TASK_GUARD_ASSIGNED_DEFENSIVE_AREA_2 = '0x1fc9b33976bacd6c';
/**
   * _TASK_INTIMIDATED
   *
   * @param {any} p0
   * @param {number} ped
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {boolean}
   */
export const _TASK_INTIMIDATED = '0x648b75d44930d6bd';
/**
   * _TASK_INTIMIDATED_2
   *
   * @param {number} victim
   * @param {number} attacker
   * @param {number} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @param {boolean} everyFrame
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {number} flag
   * @return {boolean}
   */
export const _TASK_INTIMIDATED_2 = '0x933acc1a1771a288';
/**
   * _TASK_ITEM_INTERACTION_2
   *
   * @param {number} ped
   * @param {number} propNameGxt
   * @param {number} prop
   * @param {number} propId
   * @param {number} itemInteractionState
   * @param {number} p5
   * @param {any} p6
   * @param {number} p7
   * @return {void}
   */
export const _TASK_ITEM_INTERACTION_2 = '0x72f52aa2d2b172cc';
/**
   * _TASK_ITEM_INTERACTION_3
   * Params: p3, p4, p5, p6: 0, 0, 0, -1.0f in R* Scripts
   *
   * @param {number} ped
   * @param {number} item
   * @param {DataView} guid
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {number} p6
   * @return {void}
   */
export const _TASK_ITEM_INTERACTION_3 = '0xd61d5e1ad9876deb';
/**
   * _TASK_JUMP_2
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} entity
   * @return {void}
   */
export const _TASK_JUMP_2 = '0x91083103137d7254';
/**
   * _TASK_PATROL_2
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _TASK_PATROL_2 = '0x964b06c88e4c86db';
/**
   * TASK_PERFORM_SEQUENCE_LOCALLY
   * Old name: _TASK_PERFORM_SEQUENCE_2
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const TASK_PERFORM_SEQUENCE_LOCALLY = '0x4fc0af869d6e309d';
/**
   * _TASK_PLAY_EMOTE
   * Similar to 0xB31A277C1AC7B7FF but checks if the ped's inventory contains the specified emote kit.
   *
   * @param {number} ped
   * @param {number} emoteType
   * @param {number} playbackMode
   * @param {number} emote
   * @param {boolean} isSecondaryTask
   * @param {boolean} canBreakOut
   * @param {boolean} disableEarlyOutAnimTag
   * @param {boolean} ignoreInvalidMainTask
   * @param {boolean} destroyProps
   * @return {void}
   */
export const _TASK_PLAY_EMOTE = '0x884e3436cc1f41dd';
/**
   * _TASK_PUT_PED_DIRECTLY_INTO_COVER_FROM_COORDS
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} fromX
   * @param {number} fromY
   * @param {number} fromZ
   * @param {number} timeout
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @param {any} p13
   * @param {any} p14
   * @param {any} p15
   * @param {any} p16
   * @param {any} p17
   * @return {void}
   */
export const _TASK_PUT_PED_DIRECTLY_INTO_COVER_FROM_COORDS = '0xdf8a5855b9f9a97b';
/**
   * _TASK_START_SCENARIO_IN_PLACE_2
   * Takes scenario point handle instead of hash
   *
   * @param {number} ped
   * @param {any} p1
   * @param {string | number} p2
   * @param {number} p3
   * @param {boolean} p4
   * @param {number} p5
   * @param {boolean} p6
   * @return {void}
   */
export const _TASK_START_SCENARIO_IN_PLACE_2 = '0xa917e39f2cefd215';
/**
   * _TASK_THROW_PROJECTILE_2
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TASK_THROW_PROJECTILE_2 = '0x7282356dff6b5a51';
/**
   * _TASK_USE_NEAREST_SCENARIO_TO_COORD
   *
   * @param {number} ped
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} distance
   * @param {number} duration
   * @param {boolean} p6
   * @param {boolean} p7
   * @param {boolean} p8
   * @param {boolean} p9
   * @return {void}
   */
export const _TASK_USE_NEAREST_SCENARIO_TO_COORD = '0x322bfdea666e2b0e';
/**
   * _TASK_USE_SCENARIO_POINT_2
   *
   * @param {number} ped
   * @param {number} ped2
   * @param {any} p2
   * @param {string | number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {boolean} p7
   * @return {void}
   */
export const _TASK_USE_SCENARIO_POINT_2 = '0x0f6641449dd86fbe';
/**
   * _TASK_VEHICLE_DRIVE_TO_COORD_2
   *
   * @param {number} ped
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const _TASK_VEHICLE_DRIVE_TO_COORD_2 = '0xf0108f01fb105da2';
/**
   * _TASK_VEHICLE_DRIVE_TO_DESTINATION_2
   * Tasks vehicle towards owner
   *
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} speed
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @return {void}
   */
export const _TASK_VEHICLE_DRIVE_TO_DESTINATION_2 = '0x391073b9d3cce2ba';
/**
   * _TASK_VEHICLE_DRIVE_TO_POINT_2
   * Params: p4 = 3.f or 8.f, p5 = 0.25f, p6 = 0 in R* Scripts
   *
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p4
   * @param {number} p5
   * @param {any} p6
   * @return {void}
   */
export const _TASK_VEHICLE_DRIVE_TO_POINT_2 = '0x6524a8981e8be7c9';
/**
   * _TASK_VEHICLE_FLEE_ON_CLEANUP
   * Vehicle Auto Drive (?)
   * p1/p2/p3: usually 1f, 1f, 0f or 0f, 0f, 0f
   * Speed: usually 8f
   * Types: 1148979456 (task with flee), 1148979587 (dismissing the vehicle)
   *
   * @param {number} vehicle
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} speed
   * @param {number} type
   * @return {void}
   */
export const _TASK_VEHICLE_FLEE_ON_CLEANUP = '0x55cd5fddd4335c1e';
/**
   * _TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING_2
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @return {void}
   */
export const _TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING_2 = '0x041d17a9e221ae30';
/**
   * ANALYTICS_PLAYTIME_FREEMODE_END
   *
  
   * @return {void}
   */
export const ANALYTICS_PLAYTIME_FREEMODE_END = '0x3180e991d4b8f248';
/**
   * ANALYTICS_PLAYTIME_FREEMODE_START
   *
  
   * @return {void}
   */
export const ANALYTICS_PLAYTIME_FREEMODE_START = '0xe9f24081d84931b8';
/**
   * TELEMETRY_CAMP_DONATE
   *
   * @param {any} transactionId
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {number} slotId
   * @param {number} p6
   * @param {any} p7
   * @param {boolean} p8
   * @return {void}
   */
export const TELEMETRY_CAMP_DONATE = '0xdf516e598d966d06';
/**
   * TELEMETRY_PERSONAL_VEHICLE_MOUNT
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const TELEMETRY_PERSONAL_VEHICLE_MOUNT = '0xff9052bc7a3b7d33';
/**
   * TELEMETRY_PLAYER_MENU_PIN
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const TELEMETRY_PLAYER_MENU_PIN = '0x076c5843371eb889';
/**
   * _0x6F5BC5C4EAB42B15
   * Note: this native was added in build 1491.50
   *
   * @param {number} linkId
   * @param {number} type
   * @param {string | number} contentId
   * @return {void}
   */
export const _0x6F5BC5C4EAB42B15 = '0x6f5bc5c4eab42b15';
/**
   * _0xEC0BD8736DCAF841
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _0xEC0BD8736DCAF841 = '0xec0bd8736dcaf841';
/**
   * _CLEAR_TELEMETRY_SHOP_UI
   *
  
   * @return {void}
   */
export const _CLEAR_TELEMETRY_SHOP_UI = '0x32d5898c4898cd95';
/**
   * _TELEMETRY_AMBIENT_VIGNETTE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _TELEMETRY_AMBIENT_VIGNETTE = '0x3145044f3990d321';
/**
   * _TELEMETRY_ANIMAL_SKINNED
   *
   * @param {number} type
   * @param {DataView} items
   * @return {void}
   */
export const _TELEMETRY_ANIMAL_SKINNED = '0x7581972adf5d699a';
/**
   * _TELEMETRY_BOUNTY_TARGET
   *
   * @param {DataView} data
   * @return {void}
   */
export const _TELEMETRY_BOUNTY_TARGET = '0x52fa31db8f3ad25d';
/**
   * _TELEMETRY_CAMP_CREATED
   *
   * @param {any} p0
   * @return {void}
   */
export const _TELEMETRY_CAMP_CREATED = '0x565eaa726b2ce3b7';
/**
   * _TELEMETRY_CAMP_SUPPLIES
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _TELEMETRY_CAMP_SUPPLIES = '0x217f47761376e16e';
/**
   * _TELEMETRY_CHAR_CREATOR
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _TELEMETRY_CHAR_CREATOR = '0x7207ad471bc9278c';
/**
   * _TELEMETRY_COLLECT
   *
   * @param {any} transactionId
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _TELEMETRY_COLLECT = '0xd6cb05ddaee43afd';
/**
   * _TELEMETRY_COUPON
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _TELEMETRY_COUPON = '0x621d719c4836292b';
/**
   * _TELEMETRY_CRAFT_ITEM
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} quantity
   * @return {void}
   */
export const _TELEMETRY_CRAFT_ITEM = '0x78c2e029db205a3a';
/**
   * _TELEMETRY_CREATE_UUID
   * Works in MP only.
   *
   * @param {DataView} uuid
   * @return {boolean}
   */
export const _TELEMETRY_CREATE_UUID = '0xe692d336f8a2a97f';
/**
   * _TELEMETRY_CUSTOM
   *
   * @param {DataView} args
   * @return {void}
   */
export const _TELEMETRY_CUSTOM = '0x40914ccf2a1ab531';
/**
   * _TELEMETRY_DEFENSIVE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _TELEMETRY_DEFENSIVE = '0xe57529d23541d2dd';
/**
   * _TELEMETRY_DISCOVERABLE
   *
   * @param {any} p0
   * @return {void}
   */
export const _TELEMETRY_DISCOVERABLE = '0xf5ead898ef387e73';
/**
   * _TELEMETRY_EMOTE_ADD_CATEGORY_TO_SAVE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {number} emote
   * @return {void}
   */
export const _TELEMETRY_EMOTE_ADD_CATEGORY_TO_SAVE = '0x2c24af8eeeef8a55';
/**
   * _TELEMETRY_FAST_TRAVEL
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _TELEMETRY_FAST_TRAVEL = '0x7cef4ac79f7e7fad';
/**
   * _TELEMETRY_FAVOR_EMOTE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _TELEMETRY_FAVOR_EMOTE = '0x16b23d4f7a1f50d9';
/**
   * _TELEMETRY_GAME_PROGRESS
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _TELEMETRY_GAME_PROGRESS = '0x51ec204a6e5b5a1a';
/**
   * _TELEMETRY_GANG_SHARES
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_GANG_SHARES = '0xe6dc9b21ac7a8729';
/**
   * _TELEMETRY_GOLD_STORE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_GOLD_STORE = '0x536b6025e94ac48f';
/**
   * _TELEMETRY_GUN_LOCKER
   *
  
   * @return {void}
   */
export const _TELEMETRY_GUN_LOCKER = '0x415fe28ed44bff14';
/**
   * _TELEMETRY_GUN_LOCKER_WEAPON_REMOVED
   *
   * @param {number} p0
   * @return {void}
   */
export const _TELEMETRY_GUN_LOCKER_WEAPON_REMOVED = '0x317d9c9560529cc2';
/**
   * _TELEMETRY_GUN_LOCKER_WEAPON_STORED
   *
   * @param {number} p0
   * @return {void}
   */
export const _TELEMETRY_GUN_LOCKER_WEAPON_STORED = '0xc3adf4880784fa9c';
/**
   * _TELEMETRY_HERB_PICKED
   *
   * @param {number} herbType
   * @return {void}
   */
export const _TELEMETRY_HERB_PICKED = '0xae693ec3a178f6c2';
/**
   * _TELEMETRY_HONOR
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _TELEMETRY_HONOR = '0xe6b763c7f4902201';
/**
   * _TELEMETRY_HUB_NAVIGATION
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_HUB_NAVIGATION = '0x25cc50ec1a6f3a96';
/**
   * _TELEMETRY_HUB_OFFERS
   *
   * @param {any} couponItem
   * @param {any} p1
   * @return {void}
   */
export const _TELEMETRY_HUB_OFFERS = '0x37aa282163b0d2c4';
/**
   * _TELEMETRY_INTRO_SKIP
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _TELEMETRY_INTRO_SKIP = '0x1b554723799245f4';
/**
   * _TELEMETRY_LOBBY_PROGRESSION
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_LOBBY_PROGRESSION = '0xecd67e9fa677cccf';
/**
   * _TELEMETRY_LOOT
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_LOOT = '0xcf63ef77b0df0397';
/**
   * _TELEMETRY_MATCH_NOMINATION
   *
   * @param {DataView} args
   * @return {void}
   */
export const _TELEMETRY_MATCH_NOMINATION = '0x330029e121380ceb';
/**
   * _TELEMETRY_MATCH_OVER
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _TELEMETRY_MATCH_OVER = '0xa2058154357726bb';
/**
   * _TELEMETRY_MATCH_QUEUE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _TELEMETRY_MATCH_QUEUE = '0x4c08d2b6d8be17e4';
/**
   * _TELEMETRY_MATCH_STARTED
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @return {void}
   */
export const _TELEMETRY_MATCH_STARTED = '0xf620f47b4f4a78c4';
/**
   * _TELEMETRY_MATCH_VOTE
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @return {void}
   */
export const _TELEMETRY_MATCH_VOTE = '0xef3c68f56bad7b69';
/**
   * _TELEMETRY_MENU_NAVIGATION
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_MENU_NAVIGATION = '0x3255d4d2082c6339';
/**
   * _TELEMETRY_MISSION_CHECKPOINT
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _TELEMETRY_MISSION_CHECKPOINT = '0x8ec7890d446bd9c1';
/**
   * _TELEMETRY_MISSION_FAILED_TO_LAUNCH
   * _TELEMETRY_C* - _TELEMETRY_G*
   *
   * @param {any} p0
   * @param {any} p1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} reason
   * @return {void}
   */
export const _TELEMETRY_MISSION_FAILED_TO_LAUNCH = '0x6571e4327390ec0b';
/**
   * _TELEMETRY_MISSION_ILO_OPTION
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _TELEMETRY_MISSION_ILO_OPTION = '0xea323f5e1a4da2f1';
/**
   * _TELEMETRY_MISSION_OVER
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _TELEMETRY_MISSION_OVER = '0xd894437e12c17aec';
/**
   * _TELEMETRY_MISSION_STARTED
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_MISSION_STARTED = '0x15b0cc1b36f1de29';
/**
   * _TELEMETRY_MOONSHINE_BREW
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @return {void}
   */
export const _TELEMETRY_MOONSHINE_BREW = '0xb5013efbb5516867';
/**
   * _TELEMETRY_NET_CAMP
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _TELEMETRY_NET_CAMP = '0xa72773c3134f9a57';
/**
   * _TELEMETRY_NOTORIETY
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_NOTORIETY = '0xe26970a7ae0f28e9';
/**
   * _TELEMETRY_PARLEY_FEUD
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _TELEMETRY_PARLEY_FEUD = '0xf37a2149bc9a8a27';
/**
   * _TELEMETRY_PERSONAL_VEHICLE_WAGON
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _TELEMETRY_PERSONAL_VEHICLE_WAGON = '0xe67af24c5a3b6058';
/**
   * _TELEMETRY_PHOTO
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_PHOTO = '0xed22be4c5a399e63';
/**
   * _TELEMETRY_PHOTO_CAM
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @return {void}
   */
export const _TELEMETRY_PHOTO_CAM = '0x0777d65ee8a17517';
/**
   * _TELEMETRY_PLAYER_SPAWNED
   *
   * @param {number} ped
   * @return {void}
   */
export const _TELEMETRY_PLAYER_SPAWNED = '0x5da4718df897eb25';
/**
   * _TELEMETRY_POKER_OVER
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @return {void}
   */
export const _TELEMETRY_POKER_OVER = '0x8127c5aa05c5a210';
/**
   * _TELEMETRY_PRISON
   *
   * @param {any} transactionId
   * @param {any} bountyAmount
   * @param {number} ped
   * @param {any} completionType
   * @param {any} jailTimeServed
   * @param {any} jailTimeLeft
   * @param {any} posseRole
   * @return {void}
   */
export const _TELEMETRY_PRISON = '0xb204bf9f30298d77';
/**
   * _TELEMETRY_REGION
   *
   * @param {number} regionHash
   * @return {void}
   */
export const _TELEMETRY_REGION = '0xcd6f8a0335d821f9';
/**
   * _TELEMETRY_ROLE_BOUNTY
   *
   * @param {any} p0
   * @return {void}
   */
export const _TELEMETRY_ROLE_BOUNTY = '0xab43d1c80b5e9500';
/**
   * _TELEMETRY_ROLE_COLLECTOR
   *
   * @param {any} transactionId
   * @param {any} collectible
   * @param {any} category
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _TELEMETRY_ROLE_COLLECTOR = '0x4ac38dfd286dad14';
/**
   * _TELEMETRY_ROLE_MOONSHINER
   *
   * @param {any} p0
   * @param {any} transactionId
   * @return {void}
   */
export const _TELEMETRY_ROLE_MOONSHINER = '0x99d40c5d74bc88e9';
/**
   * _TELEMETRY_ROLE_NATURALIST
   *
   * @param {any} transactionId
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @return {void}
   */
export const _TELEMETRY_ROLE_NATURALIST = '0x6fb9ea308f302922';
/**
   * _TELEMETRY_ROLE_TOKEN_TRANSACTION
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _TELEMETRY_ROLE_TOKEN_TRANSACTION = '0x32c2939564d74bff';
/**
   * _TELEMETRY_ROLE_TRADER
   *
   * @param {any} p0
   * @param {any} transactionId
   * @return {void}
   */
export const _TELEMETRY_ROLE_TRADER = '0x476038b5a0734c10';
/**
   * _TELEMETRY_RPG_GLOBAL_CALCULATE_ATTRIBUTE_CORE_DELTA
   * Creation of the metric is related to attribute filling, i. e. at camp fires, when the ped is resting.
   * _TELEMETRY_C* - _TELEMETRY_P*
   *
  
   * @return {void}
   */
export const _TELEMETRY_RPG_GLOBAL_CALCULATE_ATTRIBUTE_CORE_DELTA = '0x7e002a36aefcfb55';
/**
   * _TELEMETRY_SAMPLE
   *
   * @param {any} transactionId
   * @param {any} animal
   * @param {any} p2
   * @param {any} bSampled
   * @param {boolean} bTranq
   * @return {void}
   */
export const _TELEMETRY_SAMPLE = '0x61559675d23d8bd1';
/**
   * _TELEMETRY_SET_IS_FLOW
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const _TELEMETRY_SET_IS_FLOW = '0x9bee018a63fffad9';
/**
   * _TELEMETRY_SET_SHOP_FOR_TRANSACTION
   *
   * @param {number} transactionId
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _TELEMETRY_SET_SHOP_FOR_TRANSACTION = '0xca9e42f437625a85';
/**
   * _TELEMETRY_SHOP_CUTSCENE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _TELEMETRY_SHOP_CUTSCENE = '0xb0b19b56697836f5';
/**
   * _TELEMETRY_SHOP_ENTRY
   *
   * @param {any} shopType
   * @param {any} shopRegion
   * @param {any} region
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _TELEMETRY_SHOP_ENTRY = '0x775b2ed944e44973';
/**
   * _TELEMETRY_SHOP_EXIT
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _TELEMETRY_SHOP_EXIT = '0xf78e669fdc202e73';
/**
   * _TELEMETRY_SHOP_PURCHASE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _TELEMETRY_SHOP_PURCHASE = '0x2a374e6f0075ee81';
/**
   * _TELEMETRY_SHOP_SELL
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {number} centSalePrice
   * @return {void}
   */
export const _TELEMETRY_SHOP_SELL = '0x9bd8a9d0a774a6f8';
/**
   * _TELEMETRY_SLEEP
   *
   * @param {any} p0
   * @return {void}
   */
export const _TELEMETRY_SLEEP = '0xf9f14080d80937bd';
/**
   * _TELEMETRY_START_GUN_LOCKER_INTERACTION
   *
  
   * @return {void}
   */
export const _TELEMETRY_START_GUN_LOCKER_INTERACTION = '0xf0d54e0651dd7e07';
/**
   * _TELEMETRY_TRIGGER_TRANSACTION_REQUEST
   * Returns false when transaction request is failing
   *
   * @param {DataView} requestId
   * @param {DataView} transactionId
   * @return {boolean}
   */
export const _TELEMETRY_TRIGGER_TRANSACTION_REQUEST = '0x80a02d9f948a8bca';
/**
   * _TRY_GET_TELEMETRY_ID_FROM_TRANSACTION_ID
   *
   * @param {DataView} transactionId
   * @param {DataView} requestId
   * @return {boolean}
   */
export const _TRY_GET_TELEMETRY_ID_FROM_TRANSACTION_ID = '0xf184b3ece36219cf';
/**
   * DOES_STREAMED_TEXTURE_DICT_EXIST
   *
   * @param {string | number} textureDict
   * @return {boolean}
   */
export const DOES_STREAMED_TEXTURE_DICT_EXIST = '0x7332461fc59eb7ec';
/**
   * DOES_STREAMED_TXD_EXIST
   *
   * @param {number} txdHash
   * @return {boolean}
   */
export const DOES_STREAMED_TXD_EXIST = '0xba0163b277c2d2d0';
/**
   * HAS_STREAMED_TEXTURE_DICT_LOADED
   *
   * @param {string | number} textureDict
   * @return {boolean}
   */
export const HAS_STREAMED_TEXTURE_DICT_LOADED = '0x54d6900929ccf162';
/**
   * HAS_STREAMED_TXD_LOADED
   *
   * @param {number} txdHash
   * @return {boolean}
   */
export const HAS_STREAMED_TXD_LOADED = '0xbe72591d1509ffe4';
/**
   * REQUEST_STREAMED_TEXTURE_DICT
   *
   * @param {string | number} textureDict
   * @param {boolean} p1
   * @return {void}
   */
export const REQUEST_STREAMED_TEXTURE_DICT = '0xc1ba29df5631b0f8';
/**
   * REQUEST_STREAMED_TXD
   *
   * @param {number} txdHash
   * @param {boolean} p1
   * @return {void}
   */
export const REQUEST_STREAMED_TXD = '0xdb1bd07fb464584d';
/**
   * SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED
   *
   * @param {string | number} textureDict
   * @return {void}
   */
export const SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED = '0x4aca10a91f66f1e2';
/**
   * SET_STREAMED_TXD_AS_NO_LONGER_NEEDED
   *
   * @param {number} txdHash
   * @return {void}
   */
export const SET_STREAMED_TXD_AS_NO_LONGER_NEEDED = '0x8232f37df762acb2';
/**
   * CAN_LAUNCH_UIAPP_BY_HASH
   *
   * @param {number} appNameHash
   * @return {boolean}
   */
export const CAN_LAUNCH_UIAPP_BY_HASH = '0xe555ec27d65ede80';
/**
   * CAN_LAUNCH_UIAPP_BY_HASH_WITH_ENTRY
   *
   * @param {number} appNameHash
   * @param {number} entryHash
   * @return {boolean}
   */
export const CAN_LAUNCH_UIAPP_BY_HASH_WITH_ENTRY = '0x16f47d434b6086bf';
/**
   * IS_ANY_UIAPP_ACTIVE
   *
  
   * @return {boolean}
   */
export const IS_ANY_UIAPP_ACTIVE = '0xac959ab99aaf3d9f';
/**
   * IS_ANY_UIAPP_RUNNING
   *
  
   * @return {boolean}
   */
export const IS_ANY_UIAPP_RUNNING = '0xdb30bec7a7a5cbd3';
/**
   * IS_UIAPP_ACTIVE_BY_HASH
   *
   * @param {number} appNameHash
   * @return {boolean}
   */
export const IS_UIAPP_ACTIVE_BY_HASH = '0x25b7a0206bdfac76';
/**
   * IS_UIAPP_RUNNING
   *
   * @param {string | number} appName
   * @return {boolean}
   */
export const IS_UIAPP_RUNNING = '0xde4a9b35d028979f';
/**
   * IS_UIAPP_RUNNING_BY_HASH
   *
   * @param {number} appNameHash
   * @return {boolean}
   */
export const IS_UIAPP_RUNNING_BY_HASH = '0x4e511d093a86ad49';
/**
   * IS_UIAPP_TRANSITIONING_BY_HASH
   *
   * @param {number} appNameHash
   * @return {boolean}
   */
export const IS_UIAPP_TRANSITIONING_BY_HASH = '0x42095b886d30de66';
/**
   * LAUNCH_UIAPP_BY_HASH
   *
   * @param {number} appNameHash
   * @return {number}
   */
export const LAUNCH_UIAPP_BY_HASH = '0xc8fc7f4e4cf4f581';
/**
   * LAUNCH_UIAPP_BY_HASH_WITH_ENTRY
   *
   * @param {number} appNameHash
   * @param {number} entryHash
   * @return {number}
   */
export const LAUNCH_UIAPP_BY_HASH_WITH_ENTRY = '0xc1bcf31e975b3195';
/**
   * LAUNCH_UIAPP_WITH_ENTRY
   *
   * @param {string | number} appName
   * @param {string | number} entry
   * @return {number}
   */
export const LAUNCH_UIAPP_WITH_ENTRY = '0x7b2027bac5c8ec89';
/**
   * REQUEST_UIAPP_TRANSITION_BY_HASH
   *
   * @param {number} appNameHash
   * @param {number} transitionHash
   * @return {boolean}
   */
export const REQUEST_UIAPP_TRANSITION_BY_HASH = '0x7689cd255655bfd7';
/**
   * _CLOSE_ALL_UIAPPS
   *
  
   * @return {void}
   */
export const _CLOSE_ALL_UIAPPS = '0xad7b70f7230c5a12';
/**
   * _CLOSE_ALL_UIAPPS_IMMEDIATE
   *
  
   * @return {void}
   */
export const _CLOSE_ALL_UIAPPS_IMMEDIATE = '0x12769eeb8dbd7a7b';
/**
   * _CLOSE_UIAPP
   *
   * @param {string | number} appName
   * @return {void}
   */
export const _CLOSE_UIAPP = '0x818c6ca9b659e8ec';
/**
   * _CLOSE_UIAPP_BY_HASH
   *
   * @param {number} appNameHash
   * @return {void}
   */
export const _CLOSE_UIAPP_BY_HASH = '0x2ff10c9c3f92277e';
/**
   * _CLOSE_UIAPP_BY_HASH_IMMEDIATE
   *
   * @param {number} appNameHash
   * @return {void}
   */
export const _CLOSE_UIAPP_BY_HASH_IMMEDIATE = '0x04428420a248a354';
/**
   * _CLOSE_UIAPP_IMMEDIATE
   *
   * @param {string | number} appName
   * @return {void}
   */
export const _CLOSE_UIAPP_IMMEDIATE = '0x3015635426d1b17c';
/**
   * _GET_UIAPP_CURRENT_ACTIVITY_BY_HASH
   *
   * @param {number} appNameHash
   * @return {number}
   */
export const _GET_UIAPP_CURRENT_ACTIVITY_BY_HASH = '0x96fd694fe5be55dc';
/**
   * _BG_DISPLAY_TEXT
   * Note: you must use VAR_STRING
   *
   * @param {string | number} text
   * @param {number} x
   * @param {number} y
   * @return {void}
   */
export const _BG_DISPLAY_TEXT = '0x16794e044c9efb58';
/**
   * _BG_SET_TEXT_COLOR
   * https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/colours
   *
   * @param {number} red
   * @param {number} green
   * @param {number} blue
   * @param {number} alpha
   * @return {void}
   */
export const _BG_SET_TEXT_COLOR = '0x16fa5ce47f184f1e';
/**
   * _BG_SET_TEXT_SCALE
   *
   * @param {number} scaleX
   * @param {number} scaleY
   * @return {void}
   */
export const _BG_SET_TEXT_SCALE = '0xa1253a3c870b6843';
/**
   * EVENTS_UI_GET_MESSAGE
   * eventData:
   * struct UI_SCRIPT_EVENT
   * {
   *   alignas(8) eUIScriptEventType eventType; // https://alloc8or.re/rdr3/doc/enums/eUIScriptEventType.txt
   *   alignas(8) int intParam;
   *   alignas(8) Hash hashParam;
   *   alignas(8) Hash datastoreParam;
   * };
   * 
   * Old name: _EVENT_MANAGER_GET_EVENT
   *
   * @param {number} hash
   * @param {DataView} eventData
   * @return {boolean}
   */
export const EVENTS_UI_GET_MESSAGE = '0xe24e957294241444';
/**
   * EVENTS_UI_IS_PENDING
   * Old name: _EVENT_MANAGER_IS_EVENT_PENDING
   *
   * @param {number} hash
   * @return {boolean}
   */
export const EVENTS_UI_IS_PENDING = '0x67ed5a7963f2f722';
/**
   * EVENTS_UI_PEEK_MESSAGE
   * eventData: see EVENTS_UI_GET_MESSAGE
   * 
   * Old name: _EVENT_MANAGER_PEEK_EVENT
   *
   * @param {number} hash
   * @param {DataView} eventData
   * @return {boolean}
   */
export const EVENTS_UI_PEEK_MESSAGE = '0x90237103f27f7937';
/**
   * EVENTS_UI_POP_MESSAGE
   * Old name: _EVENT_MANAGER_POP_EVENT
   *
   * @param {number} hash
   * @return {void}
   */
export const EVENTS_UI_POP_MESSAGE = '0x8e8a2369f48ec839';
/**
   * UI_FEED_CLEAR_CHANNEL
   * feedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIFeedChannel
   *
   * @param {number} feedChannel
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const UI_FEED_CLEAR_CHANNEL = '0xdd1232b332cbb9e7';
/**
   * UI_FEED_GET_CURRENT_MESSAGE
   * feedChannel: see UI_FEED_CLEAR_CHANNEL
   * Returns feedMessage
   *
   * @param {number} feedChannel
   * @return {number}
   */
export const UI_FEED_GET_CURRENT_MESSAGE = '0xc17f69e1418cd11f';
/**
   * _0x0FD07141AD048AAE
   * Only used in R* SP Script beat_animal_attack
   * Returns feedMessage
   *
   * @param {DataView} p0
   * @param {boolean} p1
   * @return {number}
   */
export const _0x0FD07141AD048AAE = '0x0fd07141ad048aae';
/**
   * _0x18D6869FBFFEC0F8
   * Only used in R* SP Scripts
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {number}
   */
export const _0x18D6869FBFFEC0F8 = '0x18d6869fbffec0f8';
/**
   * _0x4E88A65968A55C78
   * Returns feedMessage
   *
   * @param {DataView} p0
   * @param {boolean} p1
   * @return {number}
   */
export const _0x4E88A65968A55C78 = '0x4e88a65968a55c78';
/**
   * _0x6D85126F6CCF02C9
   *
   * @param {number} feedChannel
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0x6D85126F6CCF02C9 = '0x6d85126f6ccf02c9';
/**
   * _0xAFF5BE9BA496CE40
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {number} collectableCategory
   * @return {number}
   */
export const _0xAFF5BE9BA496CE40 = '0xaff5be9ba496ce40';
/**
   * _0xB7223B91CD6B7E07
   *
   * @param {number} feedChannel
   * @return {boolean}
   */
export const _0xB7223B91CD6B7E07 = '0xb7223b91cd6b7e07';
/**
   * _UI_FEED_CLEAR_ALL_CHANNELS
   * Hides Toast Notifications
   *
  
   * @return {void}
   */
export const _UI_FEED_CLEAR_ALL_CHANNELS = '0x6035e8fbca32ac5e';
/**
   * _UI_FEED_CLEAR_HELP_TEXT_FEED
   * Clears help text
   *
   * @param {number} feedMessage
   * @param {boolean} p1
   * @return {void}
   */
export const _UI_FEED_CLEAR_HELP_TEXT_FEED = '0x2f901291ef177b02';
/**
   * _UI_FEED_GET_MESSAGE_STATE
   * Returns messageState, see https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIMessageState
   *
   * @param {number} feedMessage
   * @return {number}
   */
export const _UI_FEED_GET_MESSAGE_STATE = '0x59fa676177dbe4c9';
/**
   * _UI_FEED_POST_FEED_TICKER
   * Display text on right of the screen, Example : https://pastebin.com/n1YmNe25
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_FEED_POST_FEED_TICKER = '0xb2920b9760f0f36b';
/**
   * _UI_FEED_POST_GAME_UPDATE_SHARD
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_FEED_POST_GAME_UPDATE_SHARD = '0x8d1249bd28791878';
/**
   * _UI_FEED_POST_HELP_TEXT
   * Example : https://pastebin.com/GvdBp8Dh
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_FEED_POST_HELP_TEXT = '0x049d5c615bd38bad';
/**
   * _UI_FEED_POST_LOCATION_SHARD
   * Example : https://pastebin.com/h1YzycuR
   *
   * @param {DataView} duration
   * @param {DataView} data
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {number}
   */
export const _UI_FEED_POST_LOCATION_SHARD = '0xd05590c1ab38f068';
/**
   * _UI_FEED_POST_MISSION_NAME
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_FEED_POST_MISSION_NAME = '0x2024f4f333095fb1';
/**
   * _UI_FEED_POST_OBJECTIVE
   * Example : https://pastebin.com/13tuRa63
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_FEED_POST_OBJECTIVE = '0xcedbf17efcc0e4a4';
/**
   * _UI_FEED_POST_ONE_TEXT_SHARD
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_FEED_POST_ONE_TEXT_SHARD = '0x860ddfe97cc94df0';
/**
   * _UI_FEED_POST_RANKUP_TOAST
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {number} p2
   * @param {number} p3
   * @return {number}
   */
export const _UI_FEED_POST_RANKUP_TOAST = '0x3f9fddba79117c69';
/**
   * _UI_FEED_POST_RETICLE_MESSAGE
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_FEED_POST_RETICLE_MESSAGE = '0x893128cdb4b81fbb';
/**
   * _UI_FEED_POST_SAMPLE_NOTIFICATION
   * Example : https://pastebin.com/kAtEMQTD
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {number} p2
   * @param {number} p3
   * @return {number}
   */
export const _UI_FEED_POST_SAMPLE_NOTIFICATION = '0xc927890aa64e9661';
/**
   * _UI_FEED_POST_SAMPLE_TOAST
   * Example : https://pastebin.com/YZMBkAmW
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {number}
   */
export const _UI_FEED_POST_SAMPLE_TOAST = '0x26e87218390e6729';
/**
   * _UI_FEED_POST_SAMPLE_TOAST_RIGHT
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_FEED_POST_SAMPLE_TOAST_RIGHT = '0xb249ebcb30dd88e0';
/**
   * _UI_FEED_POST_SAMPLE_TOAST_WITH_APP_LINK
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {number}
   */
export const _UI_FEED_POST_SAMPLE_TOAST_WITH_APP_LINK = '0x38838a646fb30aae';
/**
   * _UI_FEED_POST_THREE_TEXT_SHARD
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {number}
   */
export const _UI_FEED_POST_THREE_TEXT_SHARD = '0x02bcc0fe9eba3529';
/**
   * _UI_FEED_POST_TWO_TEXT_SHARD
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {number}
   */
export const _UI_FEED_POST_TWO_TEXT_SHARD = '0xa6f4216ab10eb08e';
/**
   * _UI_FEED_POST_VOICE_CHAT_FEED
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_FEED_POST_VOICE_CHAT_FEED = '0xc48152bc6b3e821c';
/**
   * _0x2A4765812202E671
   *
  
   * @return {any}
   */
export const _0x2A4765812202E671 = '0x2a4765812202e671';
/**
   * _0x763637F9B838B0A7
   *
   * @param {number} p0
   * @param {number} p1
   * @param {string | number} p2
   * @return {void}
   */
export const _0x763637F9B838B0A7 = '0x763637f9b838b0a7';
/**
   * _0xA20398536B7F1134
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const _0xA20398536B7F1134 = '0xa20398536b7f1134';
/**
   * _0xA49D6D503E3EA847
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0xA49D6D503E3EA847 = '0xa49d6d503e3ea847';
/**
   * _0xDA0A30153FCC0FFD
   *
  
   * @return {void}
   */
export const _0xDA0A30153FCC0FFD = '0xda0a30153fcc0ffd';
/**
   * _UILOG_ADD_ENTRY_HASH
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} p5
   * @param {number} p6
   * @param {any} p7
   * @return {void}
   */
export const _UILOG_ADD_ENTRY_HASH = '0x69d5479982355d8f';
/**
   * _UILOG_ADD_ITEM_TO_TASK_LIST
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @return {void}
   */
export const _UILOG_ADD_ITEM_TO_TASK_LIST = '0x49c63fdf69744a27';
/**
   * _UILOG_ADD_OR_UPDATE_OBJECTIVE
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {string | number} p3
   * @param {boolean} p4
   * @param {boolean} p5
   * @param {boolean} p6
   * @return {void}
   */
export const _UILOG_ADD_OR_UPDATE_OBJECTIVE = '0xb43163388484cc87';
/**
   * _UILOG_ADD_TOTAL_TAKE_ENTRY
   *
   * @param {number} p0
   * @param {number} p1
   * @param {string | number} p2
   * @param {string | number} p3
   * @param {number} p4
   * @return {void}
   */
export const _UILOG_ADD_TOTAL_TAKE_ENTRY = '0x60c59968e8e87e6b';
/**
   * _UILOG_CLEAR_ALL_ENTRIES
   *
  
   * @return {void}
   */
export const _UILOG_CLEAR_ALL_ENTRIES = '0xb95b4ea6b1edf035';
/**
   * _UILOG_CLEAR_CACHED_OBJECTIVE
   *
  
   * @return {void}
   */
export const _UILOG_CLEAR_CACHED_OBJECTIVE = '0xdff0d417277b41f8';
/**
   * _UILOG_CLEAR_HAS_DISPLAYED_CACHED_OBJECTIVE
   *
  
   * @return {void}
   */
export const _UILOG_CLEAR_HAS_DISPLAYED_CACHED_OBJECTIVE = '0xa3108d6981a5cadb';
/**
   * _UILOG_GET_CACHED_OBJECTIVE
   *
  
   * @return {string | number}
   */
export const _UILOG_GET_CACHED_OBJECTIVE = '0x15a4461beb788096';
/**
   * _UILOG_HAS_DISPLAYED_CACHED_OBJECTIVE
   *
  
   * @return {boolean}
   */
export const _UILOG_HAS_DISPLAYED_CACHED_OBJECTIVE = '0xcc48ffbb45b54f71';
/**
   * _UILOG_IS_ENTRY_REGISTERED
   *
   * @param {number} p0
   * @param {number} p1
   * @return {boolean}
   */
export const _UILOG_IS_ENTRY_REGISTERED = '0xb8188ccf52202475';
/**
   * _UILOG_MARK_ALL_ENTRIES_AVAILABILITY
   *
   * @param {number} p0
   * @param {string | number} p1
   * @return {void}
   */
export const _UILOG_MARK_ALL_ENTRIES_AVAILABILITY = '0x3920574cf0a2b7b6';
/**
   * _UILOG_MARK_ENTRY_AVAILABILITY
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} p2
   * @param {string | number} p3
   * @return {void}
   */
export const _UILOG_MARK_ENTRY_AVAILABILITY = '0x13e8d7dd08543482';
/**
   * _UILOG_MARK_MISSION_COMPLETED
   *
   * @param {number} p0
   * @return {void}
   */
export const _UILOG_MARK_MISSION_COMPLETED = '0xde31d66d1e54c471';
/**
   * _UILOG_POST_NOTIFICATION
   *
   * @param {DataView} data
   * @return {number}
   */
export const _UILOG_POST_NOTIFICATION = '0x49e58fe6ef40b987';
/**
   * _UILOG_PRINT_CACHED_OBJECTIVE
   *
  
   * @return {void}
   */
export const _UILOG_PRINT_CACHED_OBJECTIVE = '0xe9990552dec71600';
/**
   * _UILOG_REMOVE_ENTRY
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const _UILOG_REMOVE_ENTRY = '0xd594a19be09a75c6';
/**
   * _UILOG_SET_CACHED_OBJECTIVE
   *
   * @param {string | number} p0
   * @return {void}
   */
export const _UILOG_SET_CACHED_OBJECTIVE = '0xfa233f8fe190514c';
/**
   * _UILOG_SET_DISPLAY_COMPLETION_RATING
   *
   * @param {number} logEntryType
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _UILOG_SET_DISPLAY_COMPLETION_RATING = '0xa31013798fadcadc';
/**
   * _UILOG_SET_ENTRY_BRIEF_TEXTURE
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} texture
   * @param {number} textureDictionary
   * @return {void}
   */
export const _UILOG_SET_ENTRY_BRIEF_TEXTURE = '0x69684d9936958d8f';
/**
   * _UILOG_SET_ENTRY_ICON_TEXTURE
   *
   * @param {number} p0
   * @param {number} p1
   * @param {number} icon
   * @param {number} iconDictionary
   * @return {void}
   */
export const _UILOG_SET_ENTRY_ICON_TEXTURE = '0x6965469934958d8f';
/**
   * _UILOG_SET_ENTRY_PINNED
   *
   * @param {number} p0
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _UILOG_SET_ENTRY_PINNED = '0x72a5cd214b342568';
/**
   * _UILOG_SET_HAS_DISPLAYED_CACHED_OBJECTIVE
   *
  
   * @return {void}
   */
export const _UILOG_SET_HAS_DISPLAYED_CACHED_OBJECTIVE = '0xa3108d6981a5cadc';
/**
   * _UILOG_SET_PENDING_DETAILS_ID
   *
   * @param {number} p0
   * @param {number} p1
   * @return {any}
   */
export const _UILOG_SET_PENDING_DETAILS_ID = '0x136a027cf37b0a4f';
/**
   * _UILOG_SET_TOTAL_TAKE_SUMMARY
   *
   * @param {string | number} p0
   * @param {string | number} p1
   * @return {void}
   */
export const _UILOG_SET_TOTAL_TAKE_SUMMARY = '0xd106b211ef1b8f04';
/**
   * _UILOG_UPDATE_ENTRY_SUBHEADER
   *
   * @param {number} p0
   * @param {number} p1
   * @param {string | number} p2
   * @return {void}
   */
export const _UILOG_UPDATE_ENTRY_SUBHEADER = '0x80d6524190258c3e';
/**
   * _UIPINNING_GET_TOOLTIP_TEXT
   *
   * @param {number} hash
   * @return {string | number}
   */
export const _UIPINNING_GET_TOOLTIP_TEXT = '0x3138582e0a13bfab';
/**
   * UI_STATE_MACHINE_CAN_REQUEST_TRANSITION
   *
   * @param {any} p0
   * @return {any}
   */
export const UI_STATE_MACHINE_CAN_REQUEST_TRANSITION = '0xf7c180f57f85d0b8';
/**
   * UI_STATE_MACHINE_CREATE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const UI_STATE_MACHINE_CREATE = '0x4c6f2c4b7a03a266';
/**
   * UI_STATE_MACHINE_DESTROY
   *
   * @param {any} p0
   * @return {void}
   */
export const UI_STATE_MACHINE_DESTROY = '0x4eb122210a90e2d8';
/**
   * UI_STATE_MACHINE_DESTROY_AND_CLEAR
   *
   * @param {DataView} p0
   * @return {void}
   */
export const UI_STATE_MACHINE_DESTROY_AND_CLEAR = '0x2738d68d2b4e09e7';
/**
   * UI_STATE_MACHINE_EXISTS
   *
   * @param {any} p0
   * @return {any}
   */
export const UI_STATE_MACHINE_EXISTS = '0x5d15569c0febf757';
/**
   * UI_STATE_MACHINE_REQUEST_EXIT
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const UI_STATE_MACHINE_REQUEST_EXIT = '0x6b9fe4f0ba521a19';
/**
   * UI_STATE_MACHINE_REQUEST_TRANSITION
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const UI_STATE_MACHINE_REQUEST_TRANSITION = '0x7ea9c3547e80350e';
/**
   * _UIFLOWBLOCK_ENTER
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _UIFLOWBLOCK_ENTER = '0x3b7519720c9dcb45';
/**
   * _UIFLOWBLOCK_IS_LOADED
   *
   * @param {any} p0
   * @return {any}
   */
export const _UIFLOWBLOCK_IS_LOADED = '0x10a93c057b6bd944';
/**
   * _UIFLOWBLOCK_RELEASE
   *
   * @param {any} p0
   * @return {void}
   */
export const _UIFLOWBLOCK_RELEASE = '0xf320a77dd5f781df';
/**
   * _UIFLOWBLOCK_REQUEST
   *
   * @param {any} p0
   * @return {any}
   */
export const _UIFLOWBLOCK_REQUEST = '0xc0081b34e395ce48';
/**
   * _UI_STATE_MACHINE_IS_EXITED
   *
   * @param {number} p0
   * @return {boolean}
   */
export const _UI_STATE_MACHINE_IS_EXITED = '0x11e73195e735b25b';
/**
   * _UI_STICKY_FEED_CLEAR_MESSAGE
   *
   * @param {number} msgId
   * @return {void}
   */
export const _UI_STICKY_FEED_CLEAR_MESSAGE = '0x00a15b94cba4f76f';
/**
   * _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE
   * Example: https://pastebin.com/JygJShNU
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE = '0x815c4065ae6e6071';
/**
   * _UI_STICKY_FEED_CREATE_ERROR_MESSAGE
   * Example: https://pastebin.com/EJD7ytnz
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_STICKY_FEED_CREATE_ERROR_MESSAGE = '0x9f2cc2439a04e7ba';
/**
   * _UI_STICKY_FEED_CREATE_WARNING_MESSAGE
   * Example: https://pastebin.com/6mLtee2S
   *
   * @param {DataView} p0
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {number}
   */
export const _UI_STICKY_FEED_CREATE_WARNING_MESSAGE = '0x339e16b41780fc35';
/**
   * _UI_STICKY_FEED_GET_MESSAGE_STATE
   * Returns state of sticky feed message, see 0x59FA676177DBE4C9
   *
   * @param {number} msgId
   * @return {number}
   */
export const _UI_STICKY_FEED_GET_MESSAGE_STATE = '0x07954320d77f6a3d';
/**
   * _UI_STICKY_FEED_IS_ALERT_SCREEN_ACTIVE
   *
  
   * @return {boolean}
   */
export const _UI_STICKY_FEED_IS_ALERT_SCREEN_ACTIVE = '0xf8806ec3ff840fdc';
/**
   * _UI_STICKY_FEED_IS_CHANNEL_ACTIVE
   * stickyFeedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIStickyFeedChannel
   *
   * @param {number} stickyFeedChannel
   * @return {boolean}
   */
export const _UI_STICKY_FEED_IS_CHANNEL_ACTIVE = '0xc5c395c60b542a3c';
/**
   * _UI_STICKY_FEED_UPDATE_MESSAGE
   * Seems to only update _UI_STICKY_FEED_CREATE_ERROR_MESSAGE(0x9F2CC2439A04E7BA) and _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE(0x815C4065AE6E6071) message.
   * Example: https://pastebin.com/nDrJyWq2
   *
   * @param {number} msgId
   * @param {DataView} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _UI_STICKY_FEED_UPDATE_MESSAGE = '0xbc6f454e310124da';
/**
   * _UITUTORIAL_GET_IS_THREAT_INDICATOR_CAPABLE_RADAR_SHOWN
   *
  
   * @return {boolean}
   */
export const _UITUTORIAL_GET_IS_THREAT_INDICATOR_CAPABLE_RADAR_SHOWN = '0x2cc24a2a7a1489c4';
/**
   * _UITUTORIAL_GET_IS_THREAT_INDICATOR_ON
   *
  
   * @return {boolean}
   */
export const _UITUTORIAL_GET_IS_THREAT_INDICATOR_ON = '0xfc2e0a5e9ed4e1b4';
/**
   * _UITUTORIAL_SET_RPG_ICON_VISIBILITY
   * enum eRpgIcons
   * {
   *   ICON_STAMINA,
   *   ICON_STAMINA_CORE,
   *   ICON_DEADEYE,
   *   ICON_DEADEYE_CORE,
   *   ICON_HEALTH,
   *   ICON_HEALTH_CORE,
   *   ICON_HORSE_HEALTH,
   *   ICON_HORSE_HEALTH_CORE,
   *   ICON_HORSE_STAMINA,
   *   ICON_HORSE_STAMINA_CORE,
   *   ICON_HORSE_COURAGE,
   *   ICON_HORSE_COURAGE_CORE
   * };
   * 
   * enum eRpgIconVisibility
   * {
   *   ICON_VISIBILITY_WAIT_TO_HIDE,
   *   ICON_VISIBILITY_ALWAYS_SHOW,
   *   ICON_VISIBILITY_ALWAYS_HIDE,
   *   ICON_VISIBILITY_ALWAYS_BLINK
   * };
   *
   * @param {number} rpgIcon
   * @param {number} visibility
   * @return {void}
   */
export const _UITUTORIAL_SET_RPG_ICON_VISIBILITY = '0xc116e6df68dce667';
/**
   * UNLOCK_IS_UNLOCKED
   *
   * @param {number} unlockHash
   * @return {boolean}
   */
export const UNLOCK_IS_UNLOCKED = '0xc4b660c7b6040e75';
/**
   * UNLOCK_IS_VISIBLE
   *
   * @param {number} unlockHash
   * @return {boolean}
   */
export const UNLOCK_IS_VISIBLE = '0x8588a14b75af096b';
/**
   * UNLOCK_SET_UNLOCKED
   *
   * @param {number} unlockHash
   * @param {boolean} toggle
   * @return {void}
   */
export const UNLOCK_SET_UNLOCKED = '0x1b7c5ada8a6910a0';
/**
   * UNLOCK_SET_VISIBLE
   *
   * @param {number} unlockHash
   * @param {boolean} toggle
   * @return {void}
   */
export const UNLOCK_SET_VISIBLE = '0x46b901a8ecdb5a61';
/**
   * _UNLOCK_GET_ITEM_ROLE_UNLOCK_INFO
   *
   * @param {number} unlockHash
   * @param {DataView} outData
   * @return {void}
   */
export const _UNLOCK_GET_ITEM_ROLE_UNLOCK_INFO = '0x7c1c2062cfad06fe';
/**
   * _UNLOCK_IS_LOOTABLE
   *
   * @param {number} unlockHash
   * @return {boolean}
   */
export const _UNLOCK_IS_LOOTABLE = '0x66bf197e066050de';
/**
   * _UNLOCK_IS_NEW
   *
   * @param {number} unlockHash
   * @return {boolean}
   */
export const _UNLOCK_IS_NEW = '0x644166ba7aa49dea';
/**
   * _UNLOCK_IS_UNLOCK_FLAG_SET
   *
   * @param {number} unlockHash
   * @param {number} flag
   * @return {boolean}
   */
export const _UNLOCK_IS_UNLOCK_FLAG_SET = '0x6b6369647f26f09f';
/**
   * _UNLOCK_SET_NEW
   *
   * @param {number} unlockHash
   * @param {boolean} toggle
   * @return {void}
   */
export const _UNLOCK_SET_NEW = '0xa6d79c7aef870a99';
/**
   * ADD_ROAD_NODE_SPEED_ZONE
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @return {number}
   */
export const ADD_ROAD_NODE_SPEED_ZONE = '0x4c221bac54d735c3';
/**
   * ARE_ANY_VEHICLE_SEATS_FREE
   * Returns false if every seat is occupied.
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const ARE_ANY_VEHICLE_SEATS_FREE = '0xa0a424505a1b6429';
/**
   * BRING_VEHICLE_TO_HALT
   * This native makes the vehicle stop immediately
   * 
   * distance defines how far it will travel until stopping.
   *
   * @param {number} vehicle
   * @param {number} distance
   * @param {number} duration
   * @param {boolean} unknown
   * @return {void}
   */
export const BRING_VEHICLE_TO_HALT = '0x260be8f09e326a20';
/**
   * CAN_ANCHOR_BOAT_HERE
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const CAN_ANCHOR_BOAT_HERE = '0xc075176cfb8b4128';
/**
   * CAN_SHUFFLE_SEAT
   * seatIndex: see CREATE_PED_INSIDE_VEHICLE
   *
   * @param {number} vehicle
   * @param {number} seatIndex
   * @return {boolean}
   */
export const CAN_SHUFFLE_SEAT = '0xf8b2d32a2231fd24';
/**
   * CLEAR_LAST_DRIVEN_VEHICLE
   *
  
   * @return {void}
   */
export const CLEAR_LAST_DRIVEN_VEHICLE = '0x0efc5dc62e67609b';
/**
   * COPY_VEHICLE_DAMAGES
   * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
   *
   * @param {number} sourceVehicle
   * @param {number} targetVehicle
   * @return {void}
   */
export const COPY_VEHICLE_DAMAGES = '0xdbc28a8c683cd80b';
/**
   * CREATE_VEHICLE
   *
   * @param {number} modelHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {boolean} isNetwork
   * @param {boolean} bScriptHostVeh
   * @param {boolean} bDontAutoCreateDraftAnimals
   * @param {boolean} p8
   * @return {number}
   */
export const CREATE_VEHICLE = '0xaf35d0d2583051b0';
/**
   * DELETE_ALL_TRAINS
   *
  
   * @return {void}
   */
export const DELETE_ALL_TRAINS = '0xa3120a1385f17ff7';
/**
   * DELETE_MISSION_TRAIN
   *
  
   * @return {number}
   */
export const DELETE_MISSION_TRAIN = '0x0d3630fb07e8b570';
/**
   * DELETE_VEHICLE
   * Deletes a vehicle.
   * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
   * 
   * eg how to use:
   * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
   * DELETE_VEHICLE(&vehicle);
   * 
   * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
   *
  
   * @return {number}
   */
export const DELETE_VEHICLE = '0xe20a909d8c4a70f8';
/**
   * DISABLE_VEHICLE_WEAPON
   *
   * @param {boolean} disabled
   * @param {number} weaponHash
   * @param {number} vehicle
   * @param {number} owner
   * @return {void}
   */
export const DISABLE_VEHICLE_WEAPON = '0x94b1e71b144356a5';
/**
   * DOES_EXTRA_EXIST
   *
   * @param {number} vehicle
   * @param {number} extraId
   * @return {boolean}
   */
export const DOES_EXTRA_EXIST = '0xaf5e7e9a7620ffb5';
/**
   * EXPLODE_VEHICLE
   * Explodes a selected vehicle.
   * 
   * Vehicle vehicle = Vehicle you want to explode.
   * BOOL isAudible = If explosion makes a sound.
   * BOOL isInvisible = If the explosion is invisible or not.
   * 
   * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
   *
   * @param {number} vehicle
   * @param {boolean} isAudible
   * @param {boolean} isInvisible
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const EXPLODE_VEHICLE = '0x75dced9eec5769d7';
/**
   * FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE
   * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE = '0x59eca796021b0539';
/**
   * GET_CLOSEST_VEHICLE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} modelHash
   * @param {number} flags
   * @return {number}
   */
export const GET_CLOSEST_VEHICLE = '0x52f45d033645181b';
/**
   * GET_CURRENT_STATION_FOR_TRAIN
   * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
   *
   * @param {number} train
   * @return {number}
   */
export const GET_CURRENT_STATION_FOR_TRAIN = '0x86fa6d8b48667d75';
/**
   * GET_DRAFT_ANIMAL_COUNT
   *
   * @param {number} vehicle
   * @return {[boolean, number, number]}
   */
export const GET_DRAFT_ANIMAL_COUNT = '0xa19447d83294e29f';
/**
   * GET_DRIVER_OF_VEHICLE
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_DRIVER_OF_VEHICLE = '0x2963b5c1637e8a27';
/**
   * GET_LAST_DRIVEN_VEHICLE
   *
  
   * @return {number}
   */
export const GET_LAST_DRIVEN_VEHICLE = '0xa94f3e0ab9695e19';
/**
   * GET_LAST_PED_IN_VEHICLE_SEAT
   * seatIndex: see CREATE_PED_INSIDE_VEHICLE
   *
   * @param {number} vehicle
   * @param {number} seatIndex
   * @return {number}
   */
export const GET_LAST_PED_IN_VEHICLE_SEAT = '0x74583b19feeafda7';
/**
   * GET_PED_IN_VEHICLE_SEAT
   * seatIndex: see CREATE_PED_INSIDE_VEHICLE
   *
   * @param {number} vehicle
   * @param {number} seatIndex
   * @return {number}
   */
export const GET_PED_IN_VEHICLE_SEAT = '0xbb40dd2270b65366';
/**
   * GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME
   * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
   * 
   * See REQUEST_VEHICLE_RECORDING
   *
   * @param {number} recording
   * @param {number} time
   * @param {string | number} script
   * @return {Vector3}
   */
export const GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME = '0x1a00961a1be94e5e';
/**
   * GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME
   * This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.
   * 
   * See REQUEST_VEHICLE_RECORDING
   *
   * @param {number} recording
   * @param {number} time
   * @param {string | number} script
   * @return {Vector3}
   */
export const GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME = '0x61787dd28b8cc0d5';
/**
   * GET_TIME_POSITION_IN_RECORDING
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_TIME_POSITION_IN_RECORDING = '0x233b51c7913fa031';
/**
   * GET_TRACK_INDEX_OF_TRAIN
   *
   * @param {number} train
   * @return {number}
   */
export const GET_TRACK_INDEX_OF_TRAIN = '0x865fec2fa899f29c';
/**
   * GET_TRAIN_CARRIAGE
   *
   * @param {number} train
   * @param {number} trailerNumber
   * @return {number}
   */
export const GET_TRAIN_CARRIAGE = '0xd0fb093a4cdb932c';
/**
   * GET_VEHICLE_BODY_HEALTH
   * Seems related to vehicle health, like the one in IV.
   * Max 1000, min 0.
   * Vehicle does not necessarily explode or become undrivable at 0.
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_VEHICLE_BODY_HEALTH = '0x42113b857e33c16e';
/**
   * GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER
   *
   * @param {number} vehicle
   * @param {number} player
   * @return {boolean}
   */
export const GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER = '0xfa2cddfeb8bc898b';
/**
   * GET_VEHICLE_DOOR_LOCK_STATUS
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_VEHICLE_DOOR_LOCK_STATUS = '0xc867fd144f2469d3';
/**
   * GET_VEHICLE_ENGINE_HEALTH
   * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
   * 
   * Minimum: -4000
   * Maximum: 1000
   * 
   * -4000: Engine is destroyed
   * 0 and below: Engine catches fire and health rapidly declines
   * 300: Engine is smoking and losing functionality
   * 1000: Engine is perfect
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_VEHICLE_ENGINE_HEALTH = '0x90dbffac43b22081';
/**
   * GET_VEHICLE_ESTIMATED_MAX_SPEED
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_VEHICLE_ESTIMATED_MAX_SPEED = '0xfe52f34491529f0b';
/**
   * GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS = '0xa9c55f1c15e62e06';
/**
   * GET_VEHICLE_MODEL_NUMBER_OF_SEATS
   *
   * @param {number} modelHash
   * @return {number}
   */
export const GET_VEHICLE_MODEL_NUMBER_OF_SEATS = '0x9a578736ff3a17c3';
/**
   * GET_VEHICLE_NUMBER_OF_PASSENGERS
   * Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_VEHICLE_NUMBER_OF_PASSENGERS = '0x59f3f16577cd79b2';
/**
   * GET_VEHICLE_PETROL_TANK_HEALTH
   * 1000 is max health
   *
   * @param {number} vehicle
   * @return {number}
   */
export const GET_VEHICLE_PETROL_TANK_HEALTH = '0x1e5a9b356d5098be';
/**
   * GET_VEHICLE_TRAILER_VEHICLE
   * Gets the trailer of a vehicle and puts it into the trailer parameter.
   *
   * @param {number} vehicle
   * @return {[boolean, Vehicle]}
   */
export const GET_VEHICLE_TRAILER_VEHICLE = '0xcf867a239ec30741';
/**
   * HAS_INSTANT_FILL_VEHICLE_POPULATION_FINISHED
   *
  
   * @return {boolean}
   */
export const HAS_INSTANT_FILL_VEHICLE_POPULATION_FINISHED = '0x2701d01d5e18fc31';
/**
   * HAS_VEHICLE_ASSET_LOADED
   *
   * @param {number} vehicleAsset
   * @return {boolean}
   */
export const HAS_VEHICLE_ASSET_LOADED = '0xb935f3154bc913c8';
/**
   * HAS_VEHICLE_RECORDING_BEEN_LOADED
   * See REQUEST_VEHICLE_RECORDING
   *
   * @param {number} recording
   * @param {string | number} script
   * @return {boolean}
   */
export const HAS_VEHICLE_RECORDING_BEEN_LOADED = '0xba9325be372ab6ea';
/**
   * INSTANTLY_FILL_VEHICLE_POPULATION
   *
  
   * @return {void}
   */
export const INSTANTLY_FILL_VEHICLE_POPULATION = '0x1ff00db43026b12f';
/**
   * IS_ANY_VEHICLE_NEAR_POINT
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @return {boolean}
   */
export const IS_ANY_VEHICLE_NEAR_POINT = '0x5698ba4fd04d39c4';
/**
   * IS_DRAFT_VEHICLE
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_DRAFT_VEHICLE = '0xea44e97849e9f3dd';
/**
   * IS_ENTRY_POINT_FOR_SEAT_CLEAR
   *
   * @param {number} ped
   * @param {number} vehicle
   * @param {number} seatIndex
   * @param {boolean} side
   * @param {boolean} onEnter
   * @return {boolean}
   */
export const IS_ENTRY_POINT_FOR_SEAT_CLEAR = '0x80ddccb2f4a3eb57';
/**
   * IS_PLAYBACK_GOING_ON_FOR_VEHICLE
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_PLAYBACK_GOING_ON_FOR_VEHICLE = '0x02774b3a9034278f';
/**
   * IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE = '0x5a7472606ec5b7c1';
/**
   * IS_SEAT_WARP_ONLY
   * seatIndex: see CREATE_PED_INSIDE_VEHICLE
   *
   * @param {number} vehicle
   * @param {number} seatIndex
   * @return {boolean}
   */
export const IS_SEAT_WARP_ONLY = '0x7892685bf6d9775e';
/**
   * IS_THIS_MODEL_A_BOAT
   *
   * @param {number} model
   * @return {boolean}
   */
export const IS_THIS_MODEL_A_BOAT = '0x799cfc7c5b743b15';
/**
   * IS_THIS_MODEL_A_TRAIN
   *
   * @param {number} model
   * @return {boolean}
   */
export const IS_THIS_MODEL_A_TRAIN = '0xfc08c8f8c1edf174';
/**
   * IS_TRAIN_WAITING_AT_STATION
   *
   * @param {number} train
   * @return {boolean}
   */
export const IS_TRAIN_WAITING_AT_STATION = '0xe887bd31d97793f6';
/**
   * IS_VEHICLE_DOOR_FULLY_OPEN
   * doorId: see SET_VEHICLE_DOOR_SHUT
   *
   * @param {number} vehicle
   * @param {number} doorId
   * @return {boolean}
   */
export const IS_VEHICLE_DOOR_FULLY_OPEN = '0x7ae191143c7a9107';
/**
   * IS_VEHICLE_DRIVEABLE
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {boolean}
   */
export const IS_VEHICLE_DRIVEABLE = '0xb86d29b10f627379';
/**
   * IS_VEHICLE_EXTRA_TURNED_ON
   *
   * @param {number} vehicle
   * @param {number} extraId
   * @return {boolean}
   */
export const IS_VEHICLE_EXTRA_TURNED_ON = '0xfa9a55d9c4351625';
/**
   * IS_VEHICLE_IN_BURNOUT
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_VEHICLE_IN_BURNOUT = '0x3f5029a8fc060c48';
/**
   * IS_VEHICLE_MODEL
   *
   * @param {number} vehicle
   * @param {number} model
   * @return {boolean}
   */
export const IS_VEHICLE_MODEL = '0x0045a54ec7a22455';
/**
   * IS_VEHICLE_ON_ALL_WHEELS
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_VEHICLE_ON_ALL_WHEELS = '0x0d5d119529654ee0';
/**
   * IS_VEHICLE_SEAT_FREE
   * seatIndex: see CREATE_PED_INSIDE_VEHICLE
   * Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
   *
   * @param {number} vehicle
   * @param {number} seatIndex
   * @return {boolean}
   */
export const IS_VEHICLE_SEAT_FREE = '0xe052c1b1caa4ece4';
/**
   * IS_VEHICLE_STOPPED
   * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
   * 
   * For some vehicles it returns true if the current speed is <= 0.00039999999.
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_VEHICLE_STOPPED = '0x78c3311a73135241';
/**
   * IS_VEHICLE_STUCK_TIMER_UP
   * VEH_STUCK_ON_ROOF = 0,
   * VEH_STUCK_ON_SIDE,
   * VEH_STUCK_HUNG_UP,
   * VEH_STUCK_JAMMED
   *
   * @param {number} vehicle
   * @param {number} stuckType
   * @param {number} ms
   * @return {boolean}
   */
export const IS_VEHICLE_STUCK_TIMER_UP = '0x1aba9753939503c5';
/**
   * IS_VEHICLE_VISIBLE
   * Requires a visibility tracker on the vehicle (TRACK_VEHICLE_VISIBILITY)
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_VEHICLE_VISIBLE = '0x424910cd5de8c246';
/**
   * IS_VEHICLE_WINDOW_INTACT
   *
   * @param {number} vehicle
   * @param {number} windowIndex
   * @return {boolean}
   */
export const IS_VEHICLE_WINDOW_INTACT = '0x0e7910a63e05b12c';
/**
   * IS_VEHICLE_WRECKED
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const IS_VEHICLE_WRECKED = '0xddbea5506c848227';
/**
   * LOCK_DOORS_WHEN_NO_LONGER_NEEDED
   *
   * @param {number} vehicle
   * @return {void}
   */
export const LOCK_DOORS_WHEN_NO_LONGER_NEEDED = '0x1ef36558fbde2daa';
/**
   * MODIFY_VEHICLE_TOP_SPEED
   *
   * @param {number} vehicle
   * @param {number} value
   * @return {void}
   */
export const MODIFY_VEHICLE_TOP_SPEED = '0x35ad938c74cacd6a';
/**
   * REMOVE_ROAD_NODE_SPEED_ZONE
   *
   * @param {number} speedzone
   * @return {boolean}
   */
export const REMOVE_ROAD_NODE_SPEED_ZONE = '0xfe9ab3354ace6c9c';
/**
   * REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA = '0xc619a44639bc0cb4';
/**
   * REMOVE_VEHICLE_ASSET
   *
   * @param {number} vehicleAsset
   * @return {void}
   */
export const REMOVE_VEHICLE_ASSET = '0x888a4e675b38f5ad';
/**
   * REMOVE_VEHICLE_RECORDING
   * See REQUEST_VEHICLE_RECORDING
   *
   * @param {any} p0
   * @param {DataView} p1
   * @return {void}
   */
export const REMOVE_VEHICLE_RECORDING = '0x139e35755418f6aa';
/**
   * REMOVE_VEHICLE_WINDOW
   * windowIndex:
   * 0 = Front Right Window
   * 1 = Front Left Window
   * 2 = Back Right Window
   * 3 = Back Left Window
   *
   * @param {number} vehicle
   * @param {number} windowIndex
   * @return {void}
   */
export const REMOVE_VEHICLE_WINDOW = '0x745f15a215f2ddf1';
/**
   * REQUEST_VEHICLE_ASSET
   *
   * @param {number} vehicleHash
   * @param {number} vehicleAsset
   * @return {void}
   */
export const REQUEST_VEHICLE_ASSET = '0x81a15811460fab3a';
/**
   * REQUEST_VEHICLE_HIGH_DETAIL_MODEL
   *
   * @param {number} vehicle
   * @return {void}
   */
export const REQUEST_VEHICLE_HIGH_DETAIL_MODEL = '0x84b81ef78bd22357';
/**
   * REQUEST_VEHICLE_RECORDING
   * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
   * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" corresponds to a unique identifier within the recording streaming module.
   * (GTA) Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
   *
   * @param {number} recording
   * @param {string | number} script
   * @return {void}
   */
export const REQUEST_VEHICLE_RECORDING = '0xc474cf16eda45dc9';
/**
   * RESET_VEHICLE_STUCK_TIMER
   *
   * @param {number} vehicle
   * @param {number} nullAttributes
   * @return {void}
   */
export const RESET_VEHICLE_STUCK_TIMER = '0x23298b468f7d88b6';
/**
   * SET_ALLOW_VEHICLE_EXPLODES_ON_CONTACT
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_ALLOW_VEHICLE_EXPLODES_ON_CONTACT = '0x8d3230a0ed7de39f';
/**
   * SET_ALL_VEHICLE_GENERATORS_ACTIVE
   *
  
   * @return {void}
   */
export const SET_ALL_VEHICLE_GENERATORS_ACTIVE = '0x3d596e6e88a02c24';
/**
   * SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {boolean} p6
   * @param {boolean} p7
   * @return {void}
   */
export const SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA = '0xbbb134fb9d50c0cc';
/**
   * SET_BOAT_ANCHOR
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_BOAT_ANCHOR = '0xaeab044f05b92659';
/**
   * SET_BOAT_LOW_LOD_ANCHOR_DISTANCE
   * Value: mostly 99999.9f
   * 
   * Old name: _SET_BOAT_MOVEMENT_RESISTANCE
   *
   * @param {number} vehicle
   * @param {number} value
   * @return {void}
   */
export const SET_BOAT_LOW_LOD_ANCHOR_DISTANCE = '0xe3261532550d6a9f';
/**
   * SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER
   * Old name: _SET_BOAT_FROZEN_WHEN_ANCHORED
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER = '0x286771f3059a37a7';
/**
   * SET_BOAT_SINKS_WHEN_WRECKED
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_BOAT_SINKS_WHEN_WRECKED = '0x62a6d317a011ea1d';
/**
   * SET_BREAKABLE_VEHICLE_LOCKS_UNBREAKABLE
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_BREAKABLE_VEHICLE_LOCKS_UNBREAKABLE = '0xbc4735f48cd983ef';
/**
   * SET_DISABLE_RANDOM_TRAINS_THIS_FRAME
   * nullsub, doesn't do anything
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_DISABLE_RANDOM_TRAINS_THIS_FRAME = '0xd4288603e8766ff7';
/**
   * SET_DISABLE_SUPERDUMMY
   * Old name: _SET_DISABLE_SUPERDUMMY_MODE
   *
   * @param {number} vehicle
   * @param {boolean} disable
   * @return {void}
   */
export const SET_DISABLE_SUPERDUMMY = '0x1716d787d9b94202';
/**
   * SET_DISABLE_VEHICLE_ENGINE_FIRES
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_DISABLE_VEHICLE_ENGINE_FIRES = '0xd146ee5f2b06b95e';
/**
   * SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE = '0x5795fbe7a2001c14';
/**
   * SET_DISABLE_VEHICLE_PETROL_TANK_FIRES
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_DISABLE_VEHICLE_PETROL_TANK_FIRES = '0xb70986ab19b04aff';
/**
   * SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_DONT_ALLOW_PLAYER_TO_ENTER_VEHICLE_IF_LOCKED_FOR_PLAYER = '0x63dc1f22c903b709';
/**
   * SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF
   * doorId: see SET_VEHICLE_DOOR_SHUT
   * 
   * Old name: _SET_VEHICLE_DOOR_CAN_BREAK
   *
   * @param {number} vehicle
   * @param {number} doorId
   * @param {boolean} isBreakable
   * @return {void}
   */
export const SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF = '0x081fb9d6422f804c';
/**
   * SET_ENABLE_VEHICLE_SLIPSTREAMING
   *
   * @param {boolean} p0
   * @return {void}
   */
export const SET_ENABLE_VEHICLE_SLIPSTREAMING = '0x73f1e4f6df26fe30';
/**
   * SET_FORCE_HD_VEHICLE
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_FORCE_HD_VEHICLE = '0x373cb1283308bd7b';
/**
   * SET_FORCE_LOW_LOD_ANCHOR_MODE
   * Sets boat to be anchored on spawn, called together with SET_BOAT_ANCHOR and _SET_BOAT_ANCHOR_BUOYANCY_COEFFICIENT
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_FORCE_LOW_LOD_ANCHOR_MODE = '0x75b49acd73617437';
/**
   * SET_FORCE_VEHICLE_ENGINE_DAMAGE_BY_BULLET
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_FORCE_VEHICLE_ENGINE_DAMAGE_BY_BULLET = '0x7f8e2b131e1dca6c';
/**
   * SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED
   * flags = 0: DEFAULT; 1: KEEP_OLD_SPEED
   *
   * @param {number} flags
   * @return {number}
   */
export const SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED = '0xbbe7648349b49be8';
/**
   * SET_MISSION_TRAIN_COORDS
   *
   * @param {number} train
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const SET_MISSION_TRAIN_COORDS = '0x7632755962ab9922';
/**
   * SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME = '0xfedfa97638d61d4a';
/**
   * SET_PED_OWNS_VEHICLE
   *
   * @param {number} ped
   * @param {number} vehicle
   * @return {void}
   */
export const SET_PED_OWNS_VEHICLE = '0x838c216c2b05a009';
/**
   * SET_PLAYBACK_SPEED
   *
   * @param {number} vehicle
   * @param {number} speed
   * @return {void}
   */
export const SET_PLAYBACK_SPEED = '0xd78084eed4cd94c6';
/**
   * SET_RANDOM_BOATS
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_RANDOM_BOATS = '0xf44d446d4e36db87';
/**
   * SET_RANDOM_TRAINS
   *
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_RANDOM_TRAINS = '0x1156c6ee7e82a98a';
/**
   * SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME = '0x1f91d44490e1ea0c';
/**
   * SET_TRAIN_CRUISE_SPEED
   *
   * @param {number} train
   * @param {number} speed
   * @return {void}
   */
export const SET_TRAIN_CRUISE_SPEED = '0x01021eb2e96b793c';
/**
   * SET_TRAIN_OFFSET_FROM_STATION
   *
   * @param {number} train
   * @param {number} offset
   * @return {void}
   */
export const SET_TRAIN_OFFSET_FROM_STATION = '0x8ec47dd4300bf063';
/**
   * SET_TRAIN_SPEED
   *
   * @param {number} train
   * @param {number} speed
   * @return {void}
   */
export const SET_TRAIN_SPEED = '0xdfba6bbff7ccafbb';
/**
   * SET_VEHICLE_AI_CAN_USE_EXCLUSIVE_SEATS
   * Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_AI_CAN_USE_EXCLUSIVE_SEATS = '0x0893dafbfa67110e';
/**
   * SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON = '0x1240e8596a8308b9';
/**
   * SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON
   * Makes the vehicle accept no passengers.
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON = '0xecb9e9bc887e8060';
/**
   * SET_VEHICLE_AUTOMATICALLY_ATTACHES
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @param {any} p2
   * @return {any}
   */
export const SET_VEHICLE_AUTOMATICALLY_ATTACHES = '0x501354951cd942de';
/**
   * SET_VEHICLE_BODY_HEALTH
   *
   * @param {number} vehicle
   * @param {number} value
   * @return {void}
   */
export const SET_VEHICLE_BODY_HEALTH = '0x55ccaae4f28c67a0';
/**
   * SET_VEHICLE_BROKEN_PARTS_DONT_AFFECT_AI_HANDLING
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_VEHICLE_BROKEN_PARTS_DONT_AFFECT_AI_HANDLING = '0xcec4ca2cab8fa98c';
/**
   * SET_VEHICLE_CAN_BE_TARGETTED
   *
   * @param {number} vehicle
   * @param {boolean} state
   * @return {void}
   */
export const SET_VEHICLE_CAN_BE_TARGETTED = '0x05254ba0b44adc16';
/**
   * SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS = '0xe42952510f84afdb';
/**
   * SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED
   *
   * @param {number} vehicle
   * @param {boolean} state
   * @return {void}
   */
export const SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED = '0x4bf8131ae811541c';
/**
   * SET_VEHICLE_CAN_BREAK
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_CAN_BREAK = '0xc5ed9d59b4646611';
/**
   * SET_VEHICLE_CAN_EJECT_PASSENGERS_IF_LOCKED
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_VEHICLE_CAN_EJECT_PASSENGERS_IF_LOCKED = '0x065d03a9d6b2c6b5';
/**
   * SET_VEHICLE_DAMAGE
   * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
   * 
   * Radius of effect damage applied in a sphere at impact location
   *
   * @param {number} vehicle
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {number} damage
   * @param {number} radius
   * @param {boolean} p6
   * @return {void}
   */
export const SET_VEHICLE_DAMAGE = '0x1d7678f81452bb41';
/**
   * SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
   *
   * @param {number} multiplier
   * @return {void}
   */
export const SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME = '0x606374ebfc27b133';
/**
   * SET_VEHICLE_DIRT_LEVEL
   *
   * @param {number} vehicle
   * @param {number} dirtLevel
   * @return {void}
   */
export const SET_VEHICLE_DIRT_LEVEL = '0x758c3460ee915d0a';
/**
   * SET_VEHICLE_DOORS_LOCKED
   *
   * @param {number} vehicle
   * @param {number} doorLockStatus
   * @return {void}
   */
export const SET_VEHICLE_DOORS_LOCKED = '0x96f78a6a075d55d9';
/**
   * SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS = '0x2381977da948f8dc';
/**
   * SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER
   *
   * @param {number} vehicle
   * @param {number} player
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER = '0x359a8ea1fb8d6f0f';
/**
   * SET_VEHICLE_DOORS_LOCKED_FOR_TEAM
   *
   * @param {number} vehicle
   * @param {number} team
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_DOORS_LOCKED_FOR_TEAM = '0xe712bc978770f105';
/**
   * SET_VEHICLE_DOORS_SHUT
   * Closes all doors of a vehicle:
   *
   * @param {number} vehicle
   * @param {boolean} closeInstantly
   * @return {void}
   */
export const SET_VEHICLE_DOORS_SHUT = '0xa4ffcd645b11f25a';
/**
   * SET_VEHICLE_DOORS_TO_OPEN_AT_ANY_DISTANCE
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_DOORS_TO_OPEN_AT_ANY_DISTANCE = '0x362cedd2a41e0747';
/**
   * SET_VEHICLE_DOOR_BROKEN
   * doorId: see SET_VEHICLE_DOOR_SHUT
   *
   * @param {number} vehicle
   * @param {number} doorId
   * @param {boolean} deleteDoor
   * @return {void}
   */
export const SET_VEHICLE_DOOR_BROKEN = '0x9666cf20a1c6d780';
/**
   * SET_VEHICLE_DOOR_CONTROL
   * doorId: see SET_VEHICLE_DOOR_SHUT
   *
   * @param {number} vehicle
   * @param {number} doorId
   * @param {number} speed
   * @param {number} angle
   * @return {void}
   */
export const SET_VEHICLE_DOOR_CONTROL = '0xd57f10ebba814ecf';
/**
   * SET_VEHICLE_DOOR_LATCHED
   * doorId: see SET_VEHICLE_DOOR_SHUT
   *
   * @param {number} vehicle
   * @param {number} doorId
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const SET_VEHICLE_DOOR_LATCHED = '0x06f8a202eb312a3c';
/**
   * SET_VEHICLE_DOOR_OPEN
   * doorId: see SET_VEHICLE_DOOR_SHUT
   * Can also be used on trains and its wagons
   *
   * @param {number} vehicle
   * @param {number} doorId
   * @param {boolean} loose
   * @param {boolean} openInstantly
   * @return {void}
   */
export const SET_VEHICLE_DOOR_OPEN = '0x550ce392a4672412';
/**
   * SET_VEHICLE_DOOR_SHUT
   * doorId: enum eDoorId
   * {
   *   VEH_EXT_DOOR_INVALID_ID = -1,
   *   VEH_EXT_DOOR_DSIDE_F,
   *   VEH_EXT_DOOR_DSIDE_M,
   *   VEH_EXT_DOOR_DSIDE_M1,
   *   VEH_EXT_DOOR_DSIDE_M2,
   *   VEH_EXT_DOOR_DSIDE_R,
   *   VEH_EXT_DOOR_PSIDE_F,
   *   VEH_EXT_DOOR_PSIDE_M,
   *   VEH_EXT_DOOR_PSIDE_M1,
   *   VEH_EXT_DOOR_PSIDE_M2,
   *   VEH_EXT_DOOR_PSIDE_R,
   *   VEH_EXT_BONNET,
   *   VEH_EXT_BOOT
   * };
   *
   * @param {number} vehicle
   * @param {number} doorId
   * @param {boolean} closeInstantly
   * @return {void}
   */
export const SET_VEHICLE_DOOR_SHUT = '0x6a3c24b91fd0ea09';
/**
   * SET_VEHICLE_ENGINE_CAN_DEGRADE
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_ENGINE_CAN_DEGRADE = '0x48e4c137a71c2688';
/**
   * SET_VEHICLE_ENGINE_HEALTH
   * 1000 is max health
   * Begins leaking gas at around 650 health
   * -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
   * 
   * -------------------------
   * Minimum: -4000
   * Maximum: 1000
   * 
   * -4000: Engine is destroyed
   * 0 and below: Engine catches fire and health rapidly declines
   * 300: Engine is smoking and losing functionality
   * 1000: Engine is perfect
   *
   * @param {number} vehicle
   * @param {number} health
   * @return {void}
   */
export const SET_VEHICLE_ENGINE_HEALTH = '0x8bdc5b998b4654ef';
/**
   * SET_VEHICLE_ENGINE_ON
   * Starts or stops the engine on the specified vehicle.
   * 
   * vehicle: The vehicle to start or stop the engine on.
   * value: true to turn the vehicle on; false to turn it off.
   * instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
   *
   * @param {number} vehicle
   * @param {boolean} value
   * @param {boolean} instantly
   * @return {void}
   */
export const SET_VEHICLE_ENGINE_ON = '0xb64cfa14cb9a2e78';
/**
   * SET_VEHICLE_EXCLUSIVE_DRIVER
   * index: 0 - 1
   * 
   * Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
   *
   * @param {number} vehicle
   * @param {number} ped
   * @param {number} index
   * @return {void}
   */
export const SET_VEHICLE_EXCLUSIVE_DRIVER = '0xc6b9bf123b9463b6';
/**
   * SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE
   * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE = '0xa402939c6761e1a3';
/**
   * SET_VEHICLE_EXTRA
   * Note: only some vehicle have extras
   * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_extras.lua
   *
   * @param {number} vehicle
   * @param {number} extraId
   * @param {boolean} disable
   * @return {void}
   */
export const SET_VEHICLE_EXTRA = '0xbb6f89150bc9d16b';
/**
   * SET_VEHICLE_FIXED
   * This fixes a vehicle.
   * If the vehicle's engine's broken then you cannot fix it with this native.
   *
   * @param {number} vehicle
   * @return {void}
   */
export const SET_VEHICLE_FIXED = '0x79811282a9d1ae56';
/**
   * SET_VEHICLE_FORWARD_SPEED
   *
   * @param {number} vehicle
   * @param {number} speed
   * @return {void}
   */
export const SET_VEHICLE_FORWARD_SPEED = '0xf9f92af49f12f6e7';
/**
   * SET_VEHICLE_HANDBRAKE
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_HANDBRAKE = '0x91be51aec4e99710';
/**
   * SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER
   *
   * @param {number} vehicle
   * @param {boolean} owned
   * @return {void}
   */
export const SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER = '0xbb5a3fa8ed3979c5';
/**
   * SET_VEHICLE_HAS_STRONG_AXLES
   * if true, axles won't bend.
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_HAS_STRONG_AXLES = '0x252253c8a45aa1fc';
/**
   * SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS = '0xc903855e028a05f2';
/**
   * SET_VEHICLE_INACTIVE_DURING_PLAYBACK
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_INACTIVE_DURING_PLAYBACK = '0x4ea71b4c9db3c3f1';
/**
   * SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED
   * doorId: see SET_VEHICLE_DOOR_SHUT
   *
   * @param {number} vehicle
   * @param {number} doorId
   * @param {number} doorLockStatus
   * @return {void}
   */
export const SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED = '0xa9f1d75195cc40f6';
/**
   * SET_VEHICLE_INFLUENCES_WANTED_LEVEL
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_INFLUENCES_WANTED_LEVEL = '0xc1842f40fd501da2';
/**
   * SET_VEHICLE_IS_CONSIDERED_BY_PLAYER
   * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_IS_CONSIDERED_BY_PLAYER = '0x54800d386c5825e5';
/**
   * SET_VEHICLE_IS_STOLEN
   *
   * @param {number} vehicle
   * @param {boolean} isStolen
   * @return {void}
   */
export const SET_VEHICLE_IS_STOLEN = '0x6c32fc81dff25c9a';
/**
   * SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED = '0x1549ba7fe83a2383';
/**
   * SET_VEHICLE_LIGHTS
   * Sets the vehicle's lights state.
   *
   * @param {number} vehicle
   * @param {number} state
   * @return {void}
   */
export const SET_VEHICLE_LIGHTS = '0x629f0a0e952cae7d';
/**
   * SET_VEHICLE_LIMIT_SPEED_WHEN_PLAYER_INACTIVE
   * _SET_VEHICLE_LI*
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_VEHICLE_LIMIT_SPEED_WHEN_PLAYER_INACTIVE = '0x8f75941c86eebfca';
/**
   * SET_VEHICLE_LOD_MULTIPLIER
   *
   * @param {number} vehicle
   * @param {number} multiplier
   * @return {void}
   */
export const SET_VEHICLE_LOD_MULTIPLIER = '0x5f5e2b1b9eaecc0f';
/**
   * SET_VEHICLE_MAY_BE_USED_BY_GOTO_POINT_ANY_MEANS
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_VEHICLE_MAY_BE_USED_BY_GOTO_POINT_ANY_MEANS = '0x7549b9e841940695';
/**
   * SET_VEHICLE_NOT_STEALABLE_AMBIENTLY
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_VEHICLE_NOT_STEALABLE_AMBIENTLY = '0x09c970ae59abf6b2';
/**
   * SET_VEHICLE_ON_GROUND_PROPERLY
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {boolean}
   */
export const SET_VEHICLE_ON_GROUND_PROPERLY = '0x7263332501e07f52';
/**
   * SET_VEHICLE_PETROL_TANK_HEALTH
   * 1000 is max health
   *
   * @param {number} vehicle
   * @param {number} health
   * @return {void}
   */
export const SET_VEHICLE_PETROL_TANK_HEALTH = '0x6ab2918ee3bec94c';
/**
   * SET_VEHICLE_PROVIDES_COVER
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_PROVIDES_COVER = '0x652712478f1721f4';
/**
   * SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_VEHICLE_RESPECTS_LOCKS_WHEN_HAS_DRIVER = '0x33992a808df1c1ba';
/**
   * SET_VEHICLE_SHOOT_AT_TARGET
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {void}
   */
export const SET_VEHICLE_SHOOT_AT_TARGET = '0xb79be78c665b3e6d';
/**
   * SET_VEHICLE_STAYS_FROZEN_WHEN_CLEANED_UP
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_STAYS_FROZEN_WHEN_CLEANED_UP = '0x23a3ab86e0807721';
/**
   * SET_VEHICLE_STEER_BIAS
   * Locks the vehicle's steering to the desired angle, explained below.
   * 
   * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
   * 
   * Steer bias:
   * -1.0 = full right
   * 0.0 = centered steering
   * 1.0 = full left
   *
   * @param {number} vehicle
   * @param {number} value
   * @return {void}
   */
export const SET_VEHICLE_STEER_BIAS = '0x84daae11e9ee4fc3';
/**
   * SET_VEHICLE_STOP_INSTANTLY_WHEN_PLAYER_INACTIVE
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const SET_VEHICLE_STOP_INSTANTLY_WHEN_PLAYER_INACTIVE = '0xc84e138448507567';
/**
   * SET_VEHICLE_STRONG
   * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_STRONG = '0xab315515c9f8803d';
/**
   * SET_VEHICLE_TYRES_CAN_BURST
   * Allows you to toggle bulletproof tires.
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_TYRES_CAN_BURST = '0xebd0a4e935106fe5';
/**
   * SET_VEHICLE_UNDRIVEABLE
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_UNDRIVEABLE = '0x6e884bab713a2a94';
/**
   * SET_VEHICLE_WHEELS_CAN_BREAK
   *
   * @param {number} vehicle
   * @param {boolean} enabled
   * @return {void}
   */
export const SET_VEHICLE_WHEELS_CAN_BREAK = '0x839137c40275fb77';
/**
   * SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP = '0xc462c79379abbcb1';
/**
   * SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE
   * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
   *
   * @param {number} vehicle
   * @param {number} time
   * @return {void}
   */
export const SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE = '0x5f5e6379c59efc56';
/**
   * START_PLAYBACK_RECORDED_VEHICLE
   * p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).
   * 
   * See REQUEST_VEHICLE_RECORDING
   *
   * @param {number} vehicle
   * @param {number} recording
   * @param {string | number} script
   * @param {boolean} p3
   * @return {void}
   */
export const START_PLAYBACK_RECORDED_VEHICLE = '0x4932b84e3276508e';
/**
   * START_VEHICLE_HORN
   * Sounds the horn for the specified vehicle.
   * 
   * vehicle: The vehicle to activate the horn for.
   * mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
   * duration: The duration to sound the horn, in milliseconds.
   * 
   * Note: If a player is in the vehicle, it will only sound briefly.
   *
   * @param {number} vehicle
   * @param {number} duration
   * @param {number} mode
   * @param {boolean} forever
   * @return {void}
   */
export const START_VEHICLE_HORN = '0xb4e3bfc39ca16057';
/**
   * STOP_BRINGING_VEHICLE_TO_HALT
   * Old name: _STOP_BRING_VEHICLE_TO_HALT
   *
   * @param {number} vehicle
   * @return {void}
   */
export const STOP_BRINGING_VEHICLE_TO_HALT = '0x7c06330bfdda182e';
/**
   * STOP_PLAYBACK_RECORDED_VEHICLE
   *
   * @param {number} vehicle
   * @return {void}
   */
export const STOP_PLAYBACK_RECORDED_VEHICLE = '0xbf9b4d6267e8c26d';
/**
   * TRACK_VEHICLE_VISIBILITY
   *
   * @param {number} vehicle
   * @return {void}
   */
export const TRACK_VEHICLE_VISIBILITY = '0x1f3969b140dee157';
/**
   * _0x012701ED938B85DE
   * Only used in SP Scripts.
   * Related to Vehicle Speed.
   *
   * @param {number} p0
   * @param {number} p1
   * @return {void}
   */
export const _0x012701ED938B85DE = '0x012701ed938b85de';
/**
   * _0x0355FE37240E2C77
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0355FE37240E2C77 = '0x0355fe37240e2c77';
/**
   * _0x04F0579DBDD32F34
   * _SET_VEHICLE_*
   *
   * @param {number} vehicle
   * @return {void}
   */
export const _0x04F0579DBDD32F34 = '0x04f0579dbdd32f34';
/**
   * _0x0516FAE561276EFC
   * Takes value returned from 0x45853F4E17D847D5
   *
   * @param {number} trackIndex
   * @return {boolean}
   */
export const _0x0516FAE561276EFC = '0x0516fae561276efc';
/**
   * _0x06A09A6E0C6D2A84
   * _SET_TRAIN_*
   *
   * @param {number} train
   * @param {boolean} p1
   * @return {void}
   */
export const _0x06A09A6E0C6D2A84 = '0x06a09a6e0c6d2a84';
/**
   * _0x0794199B25E499E1
   * _SET_VEHICLE_S*
   *
   * @param {number} wagon
   * @param {boolean} p1
   * @return {void}
   */
export const _0x0794199B25E499E1 = '0x0794199b25e499e1';
/**
   * _0x07E2E21E799080A0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x07E2E21E799080A0 = '0x07e2e21e799080a0';
/**
   * _RETURN_TRAIN_INFO_FROM_HANDLE
   * Outputs track hash and junction index on given train vehicle handle.
   * _RESET_VEHICLE_* (?)
   *
   * @param {number} train
   * @return {[boolean, number, number]}
   */
export const _RETURN_TRAIN_INFO_FROM_HANDLE = '0x09034479e6e3e269';
/**
   * _0x0BA4250D20007C2E
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x0BA4250D20007C2E = '0x0ba4250d20007c2e';
/**
   * _0x0CD7914D17A970AB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x0CD7914D17A970AB = '0x0cd7914d17a970ab';
/**
   * _0x0D5FDF0D36FA10CD
   *
   * @param {number} trackIndex
   * @return {void}
   */
export const _0x0D5FDF0D36FA10CD = '0x0d5fdf0d36fa10cd';
/**
   * _0x0E558D3A49D759D6
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x0E558D3A49D759D6 = '0x0e558d3a49d759d6';
/**
   * _0x0F7F603BDE08C4D3
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x0F7F603BDE08C4D3 = '0x0f7f603bde08c4d3';
/**
   * _0x0FDDEE66E3465726
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x0FDDEE66E3465726 = '0x0fddee66e3465726';
/**
   * _0x104D9A7B1C0D0783
   *
   * @param {number} vehicle
   * @param {number} p1
   * @return {void}
   */
export const _0x104D9A7B1C0D0783 = '0x104d9a7b1c0d0783';
/**
   * _0x1121B07088ED3013
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x1121B07088ED3013 = '0x1121b07088ed3013';
/**
   * _0x1180A2974D251B7B
   * Returns p1 for 0xBA958F68031DDBFC (stationIndex)
   * _GET_N* (NEAREST_STATION_FOR_TRAIN?)
   *
   * @param {number} train
   * @return {number}
   */
export const _0x1180A2974D251B7B = '0x1180a2974d251b7b';
/**
   * _0x12F6C6ED3EFF42DE
   * Params: coords = GET_ENTITY_VELOCITY
   * _SET_VELOCITY*
   *
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _0x12F6C6ED3EFF42DE = '0x12f6c6ed3eff42de';
/**
   * _0x13C190302369308B
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x13C190302369308B = '0x13c190302369308b';
/**
   * _0x13EB275BF81636D1
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x13EB275BF81636D1 = '0x13eb275bf81636d1';
/**
   * _0x14DA8C4BC2CCD90A
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x14DA8C4BC2CCD90A = '0x14da8c4bc2ccd90a';
/**
   * _0x15206E88FF7617DF
   *
   * @param {number} trackIndex
   * @param {number} p1
   * @return {void}
   */
export const _0x15206E88FF7617DF = '0x15206e88ff7617df';
/**
   * _0x15CC8C33D7FFCC4A
   *
   * @param {number} vehicle
   * @param {number} p1
   * @return {void}
   */
export const _0x15CC8C33D7FFCC4A = '0x15cc8c33d7ffcc4a';
/**
   * _0x160C1B5AB48AB87C
   *
   * @param {number} train
   * @param {number} p1
   * @return {void}
   */
export const _0x160C1B5AB48AB87C = '0x160c1b5ab48ab87c';
/**
   * _0x165BE2001E5E4B75
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x165BE2001E5E4B75 = '0x165be2001e5e4b75';
/**
   * _0x16B86A49E072AA85
   *
  
   * @return {void}
   */
export const _0x16B86A49E072AA85 = '0x16b86a49e072aa85';
/**
   * _0x172E9DD35858DCD7
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x172E9DD35858DCD7 = '0x172e9dd35858dcd7';
/**
   * _ARE_ANY_VEHICLE_WHEELS_DESTROYED
   * returns true if any wheel is destroyed/detached
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _ARE_ANY_VEHICLE_WHEELS_DESTROYED = '0x18714953cced17d3';
/**
   * _0x1A861F899EBBE17C
   *
   * @param {number} train
   * @param {boolean} p1
   * @return {void}
   */
export const _0x1A861F899EBBE17C = '0x1a861f899ebbe17c';
/**
   * _0x1BFBAFCC6760FF02
   *
   * @param {number} train
   * @param {boolean} p1
   * @return {void}
   */
export const _0x1BFBAFCC6760FF02 = '0x1bfbafcc6760ff02';
/**
   * _0x2045429505158D1A
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x2045429505158D1A = '0x2045429505158d1a';
/**
   * _0x2200AB13CBD10F4E
   *
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} p4
   * @param {number} p5
   * @return {void}
   */
export const _0x2200AB13CBD10F4E = '0x2200ab13cbd10f4e';
/**
   * _0x23F66C36F8E5EAAB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x23F66C36F8E5EAAB = '0x23f66c36f8e5eaab';
/**
   * _0x27E3F2B57209FA54
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x27E3F2B57209FA54 = '0x27e3f2b57209fa54';
/**
   * _0x288CBB414C3C2FBB
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x288CBB414C3C2FBB = '0x288cbb414c3c2fbb';
/**
   * _0x2A7413168F6CD5A8
   *
  
   * @return {void}
   */
export const _0x2A7413168F6CD5A8 = '0x2a7413168f6cd5a8';
/**
   * _0x2BB2B5BCF0DF8008
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x2BB2B5BCF0DF8008 = '0x2bb2b5bcf0df8008';
/**
   * _0x2C46D2A591D8C322
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x2C46D2A591D8C322 = '0x2c46d2a591d8c322';
/**
   * _0x3053064F909B5F42
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3053064F909B5F42 = '0x3053064f909b5f42';
/**
   * _0x3137EDC899E6DAE4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3137EDC899E6DAE4 = '0x3137edc899e6dae4';
/**
   * _0x331CBD247FC5DAA8
   * Returns trackIndex
   *
   * @param {number} configHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} direction
   * @param {boolean} p5
   * @return {number}
   */
export const _0x331CBD247FC5DAA8 = '0x331cbd247fc5daa8';
/**
   * _0x34BCF6209B9668A7
   *
   * @param {number} trackIndex
   * @param {any} p1
   * @return {void}
   */
export const _0x34BCF6209B9668A7 = '0x34bcf6209b9668a7';
/**
   * _0x37D238BE69F7378A
   *
   * @param {number} trackIndex
   * @return {boolean}
   */
export const _0x37D238BE69F7378A = '0x37d238be69f7378a';
/**
   * _0x38E7DD70A242D5CB
   *
   * @param {number} trackIndex
   * @param {number} p1
   * @return {void}
   */
export const _0x38E7DD70A242D5CB = '0x38e7dd70a242d5cb';
/**
   * _0x3ABFA128F5BF5A70
   * Called together with 0xE6C5E2125EB210C1 in R* Script medium_update
   *
   * @param {number} trainTrack
   * @param {number} junctionIndex
   * @param {boolean} enabled
   * @return {void}
   */
export const _0x3ABFA128F5BF5A70 = '0x3abfa128f5bf5a70';
/**
   * _0x3D86997A86FEEF0D
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x3D86997A86FEEF0D = '0x3d86997a86feef0d';
/**
   * _0x41365DB586CD9E8E
   *
   * @param {number} trackIndex
   * @param {number} p1
   * @return {void}
   */
export const _0x41365DB586CD9E8E = '0x41365db586cd9e8e';
/**
   * _0x41F0B254DDF71473
   * _H*
   *
   * @param {number} wagon
   * @return {void}
   */
export const _0x41F0B254DDF71473 = '0x41f0b254ddf71473';
/**
   * _0x42404D57D621601A
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x42404D57D621601A = '0x42404d57d621601a';
/**
   * _0x427C919E9809E370
   *
   * @param {number} trackIndex
   * @param {number} p1
   * @return {void}
   */
export const _0x427C919E9809E370 = '0x427c919e9809e370';
/**
   * _0x485B05EF05B9AEE9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x485B05EF05B9AEE9 = '0x485b05ef05b9aee9';
/**
   * _0x4C05B42A8D937796
   *
  
   * @return {void}
   */
export const _0x4C05B42A8D937796 = '0x4c05b42a8d937796';
/**
   * _0x4C60C333F9CCA2B6
   * Params: p1 usually true in R* Scripts
   * _SET_DRAFT_VEHICLE_*
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0x4C60C333F9CCA2B6 = '0x4c60c333f9cca2b6';
/**
   * _0x51C7694E140FAE43
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x51C7694E140FAE43 = '0x51c7694e140fae43';
/**
   * _0x5AADC7BBBB1BCEEB
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {void}
   */
export const _0x5AADC7BBBB1BCEEB = '0x5aadc7bbbb1bceeb';
/**
   * _0x615B3B8E73634509
   *
   * @param {number} trackIndex
   * @param {number} p1
   * @return {void}
   */
export const _0x615B3B8E73634509 = '0x615b3b8e73634509';
/**
   * _0x63509DDF102E08E8
   *
   * @param {number} trackIndex
   * @param {number} p1
   * @return {void}
   */
export const _0x63509DDF102E08E8 = '0x63509ddf102e08e8';
/**
   * _0x6355602C02EDC6DF
   * Only used in R* Script beat_train_holdup: p1 = 1
   *
   * @param {number} entity
   * @param {any} p1
   * @return {void}
   */
export const _0x6355602C02EDC6DF = '0x6355602c02edc6df';
/**
   * _0x6703872EC09BC158
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x6703872EC09BC158 = '0x6703872ec09bc158';
/**
   * _0x6835AFEA10E186F4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x6835AFEA10E186F4 = '0x6835afea10e186f4';
/**
   * _0x68830738A6BFB370
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x68830738A6BFB370 = '0x68830738a6bfb370';
/**
   * _0x697DF68F3A761A50
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x697DF68F3A761A50 = '0x697df68f3a761a50';
/**
   * _0x6B34BE961F639E21
   *
   * @param {number} trackIndex
   * @param {number} p1
   * @return {void}
   */
export const _0x6B34BE961F639E21 = '0x6b34be961f639e21';
/**
   * _0x6B53F4B811E583D2
   *
   * @param {number} vehicle
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x6B53F4B811E583D2 = '0x6b53f4b811e583d2';
/**
   * _0x6C87F49BFA181DB5
   * Returns trackIndex
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const _0x6C87F49BFA181DB5 = '0x6c87f49bfa181db5';
/**
   * _0x6DE072AC8A95FFC1
   * _SET_INSTANTLY_* - _SET_MISSION_TRAIN*
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0x6DE072AC8A95FFC1 = '0x6de072ac8a95ffc1';
/**
   * _0x6EA1273D525427F4
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x6EA1273D525427F4 = '0x6ea1273d525427f4';
/**
   * _0x6FD7BDF10304363A
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x6FD7BDF10304363A = '0x6fd7bdf10304363a';
/**
   * _0x703D4FB366DA4452
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x703D4FB366DA4452 = '0x703d4fb366da4452';
/**
   * _0x718EB706B6E998A0
   *
   * @param {number} trackIndex
   * @return {void}
   */
export const _0x718EB706B6E998A0 = '0x718eb706b6e998a0';
/**
   * _0x73118A3EE9C9B6DB
   * _SET_VEHICLE_WHEELS_*
   *
   * @param {number} wagon
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _0x73118A3EE9C9B6DB = '0x73118a3ee9c9b6db';
/**
   * _0x7408B5C66BA31ADB
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @return {void}
   */
export const _0x7408B5C66BA31ADB = '0x7408b5c66ba31adb';
/**
   * _0x750D42C013F64AE7
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x750D42C013F64AE7 = '0x750d42c013f64ae7';
/**
   * _0x762FDC4C19E5A981
   * Seems to be related while setting a (door) state of specific trains (midlandboxcar05x, privateboxcar01x, privateboxcar02x, midlandrefrigeratorCar, privateArmoured, armoredCar01x)
   *
   * @param {number} trainCarriage
   * @param {boolean} p1
   * @return {void}
   */
export const _0x762FDC4C19E5A981 = '0x762fdc4c19e5a981';
/**
   * _0x7840576C50A13DBA
   *
   * @param {number} train
   * @param {boolean} p1
   * @return {void}
   */
export const _0x7840576C50A13DBA = '0x7840576c50a13dba';
/**
   * _0x785639D89F8451AB
   *
   * @param {any} p0
   * @param {any} p1
   * @return {Vector3}
   */
export const _0x785639D89F8451AB = '0x785639d89f8451ab';
/**
   * _0x7BE0746539DEF0C8
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x7BE0746539DEF0C8 = '0x7be0746539def0c8';
/**
   * _0x8379E05871AD24E0
   *
  
   * @return {void}
   */
export const _0x8379E05871AD24E0 = '0x8379e05871ad24e0';
/**
   * _0x850CE59DEC2028F3
   *
   * @param {number} vehicle
   * @param {any} p1
   * @return {void}
   */
export const _0x850CE59DEC2028F3 = '0x850ce59dec2028f3';
/**
   * _0x873AAF600CC36DAC
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x873AAF600CC36DAC = '0x873aaf600cc36dac';
/**
   * _0x877EA24EB1614495
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x877EA24EB1614495 = '0x877ea24eb1614495';
/**
   * _0x87B974E54C71BA7B
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0x87B974E54C71BA7B = '0x87b974e54c71ba7b';
/**
   * _0x8878FF3EEE2868A9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8878FF3EEE2868A9 = '0x8878ff3eee2868a9';
/**
   * _0x8DECD262602548B9
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x8DECD262602548B9 = '0x8decd262602548b9';
/**
   * _0x9868C0D0134855F7
   * nullsub, doesn't do anything
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9868C0D0134855F7 = '0x9868c0d0134855f7';
/**
   * _0x98A7598C579EE871
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x98A7598C579EE871 = '0x98a7598c579ee871';
/**
   * _0x9CC94A948EAF5372
   * _GET_P - _GET_T*
   *
   * @param {number} trackIndex
   * @param {number} stationIndex
   * @return {number}
   */
export const _0x9CC94A948EAF5372 = '0x9cc94a948eaf5372';
/**
   * _0x9D12796EF4BF9EA9
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x9D12796EF4BF9EA9 = '0x9d12796ef4bf9ea9';
/**
   * _0x9E8711C81AA17876
   * Forcing high LOD buoyancy for vehicle: p1 = false
   * _SET_A*
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0x9E8711C81AA17876 = '0x9e8711c81aa17876';
/**
   * _0xA13028E22564A1BD
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xA13028E22564A1BD = '0xa13028e22564a1bd';
/**
   * _0xA230A5DDE12ED374
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xA230A5DDE12ED374 = '0xa230a5dde12ed374';
/**
   * _0xA72B1BF3857B94D7
   *
   * @param {number} train
   * @param {boolean} p1
   * @return {void}
   */
export const _0xA72B1BF3857B94D7 = '0xa72b1bf3857b94d7';
/**
   * _0xA7966807953A18EE
   *
   * @param {number} trackIndex
   * @param {number} p1
   * @return {void}
   */
export const _0xA7966807953A18EE = '0xa7966807953a18ee';
/**
   * _0xA9E185D498B9AC67
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xA9E185D498B9AC67 = '0xa9e185d498b9ac67';
/**
   * _0xAE7E66A61E7C17A5
   * _SET_TRAIN_*
   *
   * @param {number} train
   * @param {boolean} p1
   * @return {void}
   */
export const _0xAE7E66A61E7C17A5 = '0xae7e66a61e7c17a5';
/**
   * _0xB4241AD8F5AEE9ED
   *
   * @param {number} trackIndex
   * @return {boolean}
   */
export const _0xB4241AD8F5AEE9ED = '0xb4241ad8f5aee9ed';
/**
   * _0xB42C87521D1BDD2F
   *
   * @param {number} vehicle
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _0xB42C87521D1BDD2F = '0xb42c87521d1bdd2f';
/**
   * _0xB961DD799A837BD7
   *
  
   * @return {void}
   */
export const _0xB961DD799A837BD7 = '0xb961dd799a837bd7';
/**
   * _0xC2E62678D602853C
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {void}
   */
export const _0xC2E62678D602853C = '0xc2e62678d602853c';
/**
   * _0xC325A6BAA62CF8A2
   * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0xC325A6BAA62CF8A2 = '0xc325a6baa62cf8a2';
/**
   * _0xC351394B932A6A50
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC351394B932A6A50 = '0xc351394b932a6a50';
/**
   * _0xC399CC89FBA05DA0
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0xC399CC89FBA05DA0 = '0xc399cc89fba05da0';
/**
   * _0xC4A2C11FC0D41916
   * _SET_DRAFT_VEHICLE_(STOP?)*
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0xC4A2C11FC0D41916 = '0xc4a2c11fc0d41916';
/**
   * _0xCACAB2B123BBDBD6
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xCACAB2B123BBDBD6 = '0xcacab2b123bbdbd6';
/**
   * _0xCAFF2C9747103C02
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0xCAFF2C9747103C02 = '0xcaff2c9747103c02';
/**
   * _0xCBC7B6F9A56B79F6
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCBC7B6F9A56B79F6 = '0xcbc7b6f9a56b79f6';
/**
   * _0xCBF88256E44D5D39
   * Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0xCBF88256E44D5D39 = '0xcbf88256e44d5d39';
/**
   * _0xCEB1F1EED484A5B4
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xCEB1F1EED484A5B4 = '0xceb1f1eed484a5b4';
/**
   * _0xCF342503CA4C8DF1
   *
   * @param {number} vehicle
   * @param {number} p1
   * @return {void}
   */
export const _0xCF342503CA4C8DF1 = '0xcf342503ca4c8df1';
/**
   * _REQUEST_VEHICLE_ASSET_ANIMS
   *
   * @param {number} ped
   * @param {number} entity
   * @param {number} vehicleAsset
   * @return {void}
   */
export const _REQUEST_VEHICLE_ASSET_ANIMS = '0xcf9da72002fc16bf';
/**
   * _0xD0116DF21E6C7B36
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xD0116DF21E6C7B36 = '0xd0116df21e6c7b36';
/**
   * _0xD0AABE5B9F8FA589
   *
   * @param {number} trackIndex
   * @param {number} p1
   * @return {void}
   */
export const _0xD0AABE5B9F8FA589 = '0xd0aabe5b9f8fa589';
/**
   * _0xD0BA1853D76683C8
   *
   * @param {number} trackIndex
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {any} p4
   * @return {void}
   */
export const _0xD0BA1853D76683C8 = '0xd0ba1853d76683c8';
/**
   * _0xD1DF5E54F4ACBE1A
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {any}
   */
export const _0xD1DF5E54F4ACBE1A = '0xd1df5e54f4acbe1a';
/**
   * _0xD1EFA8D68BF5D63D
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xD1EFA8D68BF5D63D = '0xd1efa8d68bf5d63d';
/**
   * _0xD21A3D421E7F09F7
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xD21A3D421E7F09F7 = '0xd21a3d421e7f09f7';
/**
   * _0xD4907EF4334C7602
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xD4907EF4334C7602 = '0xd4907ef4334c7602';
/**
   * _0xD826690B5CF3BEFF
   *
   * @param {number} vehicle
   * @param {any} p1
   * @return {void}
   */
export const _0xD826690B5CF3BEFF = '0xd826690b5cf3beff';
/**
   * _0xD9BF3ED8EFB67EA3
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {any}
   */
export const _0xD9BF3ED8EFB67EA3 = '0xd9bf3ed8efb67ea3';
/**
   * _0xDC0556D0F484ECAA
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xDC0556D0F484ECAA = '0xdc0556d0f484ecaa';
/**
   * _0xDC69F6913CCA0B99
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xDC69F6913CCA0B99 = '0xdc69f6913cca0b99';
/**
   * _0xDD100CE1EBBF37E3
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xDD100CE1EBBF37E3 = '0xdd100ce1ebbf37e3';
/**
   * _0xDE8C5B9F65017FA1
   *
   * @param {number} train
   * @return {any}
   */
export const _0xDE8C5B9F65017FA1 = '0xde8c5b9f65017fa1';
/**
   * _0xE12F5ED49F44D40D
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE12F5ED49F44D40D = '0xe12f5ed49f44d40d';
/**
   * _0xE1C0F8781BF130C2
   * Only used in R* SP Script rcm_abigail31: p1 = 5
   * _GET_VEHICLE_T* - _GET_VO*
   *
   * @param {number} wagon
   * @param {number} p1
   * @return {boolean}
   */
export const _0xE1C0F8781BF130C2 = '0xe1c0f8781bf130c2';
/**
   * _0xE682002DB1F30669
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE682002DB1F30669 = '0xe682002db1f30669';
/**
   * _0xE6BD7DD3FD474415
   *
   * @param {number} train
   * @param {boolean} p1
   * @return {void}
   */
export const _0xE6BD7DD3FD474415 = '0xe6bd7dd3fd474415';
/**
   * _0xE777DDF3E78397E8
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xE777DDF3E78397E8 = '0xe777ddf3e78397e8';
/**
   * _0xE78993FF9022C064
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xE78993FF9022C064 = '0xe78993ff9022c064';
/**
   * _0xEF28A614B4B264B8
   * _SET_TRAIN_*
   *
   * @param {number} train
   * @param {boolean} p1
   * @return {void}
   */
export const _0xEF28A614B4B264B8 = '0xef28a614b4b264b8';
/**
   * _0xF05DFAF1ADFEF2CD
   * _IS_* (related to CREATE_MISSION_TRAIN)
   *
   * @param {number} trainConfig
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} direction
   * @param {boolean} p5
   * @return {boolean}
   */
export const _0xF05DFAF1ADFEF2CD = '0xf05dfaf1adfef2cd';
/**
   * _0xF57DB8E83DCD8349
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xF57DB8E83DCD8349 = '0xf57db8e83dcd8349';
/**
   * _0xF5EA41C1408695FB
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {any}
   */
export const _0xF5EA41C1408695FB = '0xf5ea41c1408695fb';
/**
   * _0xF6E3D38869D0F7AD
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xF6E3D38869D0F7AD = '0xf6e3d38869d0f7ad';
/**
   * _0xF8F7DA13CFBD4532
   *
   * @param {number} trackIndex
   * @param {boolean} p1
   * @return {void}
   */
export const _0xF8F7DA13CFBD4532 = '0xf8f7da13cfbd4532';
/**
   * _0xFC4F15A7DDDC47B1
   * _SET_DRAFT_VEHICLE_*
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0xFC4F15A7DDDC47B1 = '0xfc4f15a7dddc47b1';
/**
   * _0xFF2B1F59FB892F14
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xFF2B1F59FB892F14 = '0xff2b1f59fb892f14';
/**
   * _0xFFFE15B433300B8C
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xFFFE15B433300B8C = '0xfffe15b433300b8c';
/**
   * _ADD_TRAIN_TEMPORARY_STOP
   *
   * @param {number} train
   * @param {number} trackIndex
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _ADD_TRAIN_TEMPORARY_STOP = '0x41503629d1139abc';
/**
   * _ATTACH_DRAFT_VEHICLE_HARNESS_PED
   *
   * @param {number} mount
   * @param {number} draft
   * @param {number} harnessId
   * @return {boolean}
   */
export const _ATTACH_DRAFT_VEHICLE_HARNESS_PED = '0x316cdb5b6e8f4110';
/**
   * _BREAK_OFF_DRAFT_WHEEL
   * Params: destroyingForce is usually 100f in R* Scripts
   * Similar to 0xD4F5EFB55769D272, _A*
   *
   * @param {number} vehicle
   * @param {number} wheelIndex
   * @param {number} destroyingForce
   * @return {void}
   */
export const _BREAK_OFF_DRAFT_WHEEL = '0xc372b6a88f6e4ad8';
/**
   * _BREAK_OFF_VEHICLE_WHEEL
   * wheelIndex 0: left, wheelIndex 1: right, 4 & 5: unknown
   *
   * @param {number} vehicle
   * @param {number} wheelIndex
   * @return {number}
   */
export const _BREAK_OFF_VEHICLE_WHEEL = '0xd4f5efb55769d272';
/**
   * _CREATE_DRAFT_VEHICLE
   * Identical to CREATE_VEHICLE but allows to set draftAnimalPopGroup (see popgroups.#mt for DRAFT_HORSES_*)
   *
   * @param {number} modelHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} heading
   * @param {boolean} isNetwork
   * @param {boolean} bScriptHostVeh
   * @param {boolean} bDontAutoCreateDraftAnimals
   * @param {number} draftAnimalPopGroup
   * @param {boolean} p9
   * @return {number}
   */
export const _CREATE_DRAFT_VEHICLE = '0x214651fb1dfeba89';
/**
   * _CREATE_MISSION_TRAIN
   * configHash: https://alloc8or.re/rdr3/doc/enums/eTrainConfig.txt
   * For more information, see trainconfigs.ymt
   * To make the train AI controlled, set conductor to true and set the speed once.
   *
   * @param {number} configHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} direction
   * @param {boolean} passengers
   * @param {boolean} p6
   * @param {boolean} conductor
   * @return {number}
   */
export const _CREATE_MISSION_TRAIN = '0xc239dbd9a57d2a71';
/**
   * _DELETE_VEHICLE_LANTERNS
   * Spawn without lanterns set
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _DELETE_VEHICLE_LANTERNS = '0xe1a83d4a3b5d7938';
/**
   * _DETACH_DRAFT_VEHICLE_HARNESS_FROM_INDEX
   *
   * @param {number} draft
   * @param {number} harnessId
   * @return {boolean}
   */
export const _DETACH_DRAFT_VEHICLE_HARNESS_FROM_INDEX = '0x4402960666000e62';
/**
   * _DETACH_DRAFT_VEHICLE_HARNESS_PED
   *
   * @param {number} draft
   * @param {number} ped
   * @return {boolean}
   */
export const _DETACH_DRAFT_VEHICLE_HARNESS_PED = '0xb36d3ec70963be60';
/**
   * _DETACH_WAGON_ENTITY_FROM_TRAIN
   * Only used in train_robbery4 R* Script
   * _C* - _DEL*
   *
   * @param {number} entity
   * @return {void}
   */
export const _DETACH_WAGON_ENTITY_FROM_TRAIN = '0x54cbdd6e1b4cb4df';
/**
   * _DOES_TRAIN_EXIST_ON_TRACK
   *
   * @param {number} trackIndex
   * @return {boolean}
   */
export const _DOES_TRAIN_EXIST_ON_TRACK = '0xc29996a337bdd099';
/**
   * _FADE_AND_DESTROY_VEHICLE
   *
  
   * @return {number}
   */
export const _FADE_AND_DESTROY_VEHICLE = '0x35dc1877312fba0f';
/**
   * _GET_BREAKABLE_VEHICLE_LOCKS_STATE
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_BREAKABLE_VEHICLE_LOCKS_STATE = '0xe015cf1f2c0959d8';
/**
   * _GET_BREAKABLE_VEHICLE_LOCK_OBJECT
   *
   * @param {number} vehicle
   * @param {number} index
   * @return {number}
   */
export const _GET_BREAKABLE_VEHICLE_LOCK_OBJECT = '0x58f2244c1286d09a';
/**
   * _GET_CHECKPOINT_TRAIN_SPAWN_LOCATION
   *
   * @param {number} trackIndex
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} distance
   * @param {boolean} direction
   * @return {Vector3}
   */
export const _GET_CHECKPOINT_TRAIN_SPAWN_LOCATION = '0x35d302397e524939';
/**
   * _GET_CURRENT_TRACK_FOR_TRAIN
   * Returns p0 for 0xBA958F68031DDBFC (trackIndex)
   *
   * @param {number} train
   * @return {number}
   */
export const _GET_CURRENT_TRACK_FOR_TRAIN = '0xaf787e081ac4a8ee';
/**
   * _GET_DRAFT_VEHICLE_DESIRED_SPEED
   * Returns rage::NumericLimits<float>::kMax (3.402823466e+38) if vehicle is not a valid vehicle of type VEHICLE_TYPE_DRAFT.
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_DRAFT_VEHICLE_DESIRED_SPEED = '0xc6d7ddc843176701';
/**
   * _GET_NEAREST_TRAIN_TRACK_POSITION
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {Vector3}
   */
export const _GET_NEAREST_TRAIN_TRACK_POSITION = '0x6de03bcc15e81710';
/**
   * _GET_NUM_BREAKABLE_VEHICLE_LOCK_OBJECTS
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_NUM_BREAKABLE_VEHICLE_LOCK_OBJECTS = '0x2fa86833e3617e2d';
/**
   * _GET_NUM_CARS_FROM_TRAIN_CONFIG
   * Returns amount for CAN_REGISTER_MISSION_VEHICLES
   *
   * @param {number} trainConfig
   * @return {number}
   */
export const _GET_NUM_CARS_FROM_TRAIN_CONFIG = '0x635423d55ca84fc8';
/**
   * _GET_NUM_DRAFT_VEHICLE_HARNESS_PED
   * Returns number of horses a wagon can have
   *
   * @param {number} modelHash
   * @return {number}
   */
export const _GET_NUM_DRAFT_VEHICLE_HARNESS_PED = '0x5b1a26bb18e7d451';
/**
   * _GET_PED_IN_DRAFT_HARNESS
   * enum eDraftHarness
   * {
   *   DRAFT_HARNESS_LR,
   *   DRAFT_HARNESS_RR,
   *   DRAFT_HARNESS_LM,
   *   DRAFT_HARNESS_RM,
   *   DRAFT_HARNESS_LF,
   *   DRAFT_HARNESS_RF,
   *   DRAFT_HARNESS_COUNT
   * };
   *
   * @param {number} vehicle
   * @param {number} harnessId
   * @return {number}
   */
export const _GET_PED_IN_DRAFT_HARNESS = '0xa8ba0bae0173457b';
/**
   * _GET_ROWING_OARS
   * Returns handles of boat paddles entities.
   *
   * @param {number} vehicle
   * @param {number} left
   * @param {number} right
   * @return {void}
   */
export const _GET_ROWING_OARS = '0xa6e210fb4283b767';
/**
   * _GET_STATION_COORDS_FROM_TRAIN_STATION_DATA
   * Returns Coords of vStation
   * p0 - NET_TRAIN_MANAGER_GET_TRAIN_STATION_DATA
   * _GET_P* - _GET_T*
   *
   * @param {number} trackIndex
   * @param {number} stationIndex
   * @return {Vector3}
   */
export const _GET_STATION_COORDS_FROM_TRAIN_STATION_DATA = '0xba958f68031ddbfc';
/**
   * _GET_TRACK_INDEX_FROM_COORDS
   * Returns trackIndex
   * _E* - _F*
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const _GET_TRACK_INDEX_FROM_COORDS = '0x85d39f5e3b6d7eb0';
/**
   * _GET_TRAIN_CAR
   * Returns train car, use GET_TRAIN_CARRIAGE when trailerNumber is bigger than 0
   *
   * @param {number} train
   * @return {number}
   */
export const _GET_TRAIN_CAR = '0x671a07c9a1cd50a5';
/**
   * _GET_TRAIN_CARRIAGE_TRAILER_NUMBER
   * Returns iNumCars - to be used with GET_TRAIN_CARRIAGE (trailerNumber)
   * _C* (O, P, Q, R)
   *
   * @param {number} train
   * @return {number}
   */
export const _GET_TRAIN_CARRIAGE_TRAILER_NUMBER = '0x60b7d1dcc312697d';
/**
   * _GET_TRAIN_DIRECTION
   *
   * @param {number} train
   * @return {boolean}
   */
export const _GET_TRAIN_DIRECTION = '0x3c9628a811cbd724';
/**
   * _GET_TRAIN_DIRECTION_FROM_INDEX
   * https://i.imgur.com/1rHibjW.jpg
   *
   * @param {number} trackIndex
   * @return {boolean}
   */
export const _GET_TRAIN_DIRECTION_FROM_INDEX = '0x67995318f5faa496';
/**
   * _GET_TRAIN_MODEL_FROM_TRAIN_CONFIG_BY_CAR_INDEX
   * Returns modelHash
   *
   * @param {number} trainConfig
   * @param {number} trainCarIndex
   * @return {number}
   */
export const _GET_TRAIN_MODEL_FROM_TRAIN_CONFIG_BY_CAR_INDEX = '0x8df5f6a19f99f0d5';
/**
   * _GET_TRAIN_POSITION_ON_TRACK
   *
   * @param {number} trackIndex
   * @return {Vector3}
   */
export const _GET_TRAIN_POSITION_ON_TRACK = '0x1e8a921112891651';
/**
   * _GET_TRAIN_TRACK_FROM_TRAIN_VEHICLE
   * Returns trackIndex
   *
   * @param {number} train
   * @return {number}
   */
export const _GET_TRAIN_TRACK_FROM_TRAIN_VEHICLE = '0x45853f4e17d847d5';
/**
   * _GET_TRAIN_TRACK_JUNCTION_AT_COORDS
   * Outputs junctionIndex, to be used with 0xE6C5E2125EB210C1
   *
   * @param {number} trainTrack
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {[boolean, number]}
   */
export const _GET_TRAIN_TRACK_JUNCTION_AT_COORDS = '0x86afc343cf7f0b34';
/**
   * _GET_TRAIN_VEHICLE_FROM_TRACK_INDEX
   * Returns train
   *
   * @param {number} trackIndex
   * @return {number}
   */
export const _GET_TRAIN_VEHICLE_FROM_TRACK_INDEX = '0x6e585a616abb8401';
/**
   * _GET_VEHICLE_DOORS_LOCKED_FOR_TEAM
   *
   * @param {number} vehicle
   * @param {number} team
   * @return {boolean}
   */
export const _GET_VEHICLE_DOORS_LOCKED_FOR_TEAM = '0xdd1e1393d966d39a';
/**
   * _GET_VEHICLE_IS_PROP_SET_APPLIED
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _GET_VEHICLE_IS_PROP_SET_APPLIED = '0xd798df5db67b1659';
/**
   * _GET_VEHICLE_LIVERY
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_VEHICLE_LIVERY = '0xbb765b8fd49a796c';
/**
   * _GET_VEHICLE_OWNER
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_VEHICLE_OWNER = '0xb729679356a889ae';
/**
   * _GET_VEHICLE_TINT
   *
   * @param {number} vehicle
   * @return {number}
   */
export const _GET_VEHICLE_TINT = '0xa44d65e6c624526f';
/**
   * _GET_VEHICLE_TURRET_SEAT
   *
   * @param {number} vehicle
   * @return {[boolean, number]}
   */
export const _GET_VEHICLE_TURRET_SEAT = '0xff5791b7639c2a46';
/**
   * _HAS_TRAIN_LOADED
   *
   * @param {number} train
   * @return {boolean}
   */
export const _HAS_TRAIN_LOADED = '0xbd3c4a2ed509205e';
/**
   * _HIDE_HORSE_REINS
   *
   * @param {number} vehicle
   * @return {void}
   */
export const _HIDE_HORSE_REINS = '0x201b8ed4ff7fe9f5';
/**
   * _IS_BOAT_GROUNDED
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _IS_BOAT_GROUNDED = '0x30d86b2b7622d0eb';
/**
   * _IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE
   *
   * @param {number} ped
   * @param {number} vehicle
   * @return {[boolean, number]}
   */
export const _IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE = '0xb213d2a560b2e48b';
/**
   * _IS_THIS_MODEL_A_DRAFT_VEHICLE
   *
   * @param {number} model
   * @return {boolean}
   */
export const _IS_THIS_MODEL_A_DRAFT_VEHICLE = '0xb9d5bdda88e1bb66';
/**
   * _IS_VEHICLE_BROUGHT_TO_HALT
   * Only returns true if BRING_VEHICLE_TO_HALT is called on vehicle beforehand
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _IS_VEHICLE_BROUGHT_TO_HALT = '0x404527bc03da0e6c';
/**
   * _IS_VEHICLE_DOOR_BROKEN
   * doorId: see SET_VEHICLE_DOOR_SHUT
   *
   * @param {number} vehicle
   * @param {number} doorId
   * @return {boolean}
   */
export const _IS_VEHICLE_DOOR_BROKEN = '0xe979bb5602ad3402';
/**
   * _IS_VEHICLE_FADING_OUT
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _IS_VEHICLE_FADING_OUT = '0x5136b284b67b35c7';
/**
   * _IS_VEHICLE_ON_FIRE
   *
   * @param {number} vehicle
   * @return {boolean}
   */
export const _IS_VEHICLE_ON_FIRE = '0x0e3bf7ed4169ec43';
/**
   * _IS_VEHICLE_WHEEL_DESTROYED
   *
   * @param {number} vehicle
   * @param {number} wheel
   * @return {boolean}
   */
export const _IS_VEHICLE_WHEEL_DESTROYED = '0xcb2ca620c48bc875';
/**
   * _SET_ALL_JUNCTIONS_CLEARED
   *
  
   * @return {void}
   */
export const _SET_ALL_JUNCTIONS_CLEARED = '0x138398153824e332';
/**
   * _SET_ALL_VEHICLE_GENERATORS_DISABLED_FOR_VOLUME
   *
   * @param {number} volume
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_ALL_VEHICLE_GENERATORS_DISABLED_FOR_VOLUME = '0x424ffcb9f0d2d4b5';
/**
   * _SET_BALLOON_HOVER_STATE
   * Params: 1.0f will make balloon hover
   *
   * @param {number} balloon
   * @param {number} p1
   * @return {void}
   */
export const _SET_BALLOON_HOVER_STATE = '0x7c9e45a4ced2e8da';
/**
   * _SET_BATCH_TARP_HEIGHT
   * Total height is calculated using: cargo ratio + pelt ratio (by pelt count)
   * Screenshot: https://imgur.com/a/nsomtiv
   *
   * @param {number} vehicle
   * @param {number} height
   * @param {boolean} immediately
   * @return {void}
   */
export const _SET_BATCH_TARP_HEIGHT = '0x31f343383f19c987';
/**
   * _SET_DRAFT_ANIMAL_RANDOM_SEED
   *
   * @param {number} vehicle
   * @param {number} seed
   * @return {void}
   */
export const _SET_DRAFT_ANIMAL_RANDOM_SEED = '0x8c6d9a399126c194';
/**
   * _SET_DRAFT_VEHICLE_ALLOW_DRAFT_ANIMAL_AUTO_CREATION
   *
   * @param {number} vehicle
   * @param {boolean} allow
   * @return {void}
   */
export const _SET_DRAFT_VEHICLE_ALLOW_DRAFT_ANIMAL_AUTO_CREATION = '0x87344305778e5415';
/**
   * _SET_DRAFT_VEHICLE_ANIMALS_CAN_DETACH
   *
   * @param {number} draft
   * @param {boolean} canDetach
   * @return {void}
   */
export const _SET_DRAFT_VEHICLE_ANIMALS_CAN_DETACH = '0x6090a031c69f384e';
/**
   * _SET_DRAFT_VEHICLE_DESIRED_SPEED
   *
   * @param {number} vehicle
   * @param {number} speed
   * @return {void}
   */
export const _SET_DRAFT_VEHICLE_DESIRED_SPEED = '0x0c3f0f7f92ca847c';
/**
   * _SET_DRAFT_VEHICLE_YOKE_CAN_BREAK
   *
   * @param {number} draft
   * @param {boolean} canBreak
   * @return {void}
   */
export const _SET_DRAFT_VEHICLE_YOKE_CAN_BREAK = '0x226c6a4e3346d288';
/**
   * _SET_FORCE_COACH_ROBBERY_LOOT
   * Hashes: COACH2_BOOT_LOOT_ITEMS_COACHROB_RSC, COACH2_BOOT_LOOT_ITEMS_COACHROB, COACH2_MARY3
   *
   * @param {number} vehicle
   * @param {number} coachrobberyLoot
   * @return {void}
   */
export const _SET_FORCE_COACH_ROBBERY_LOOT = '0xf489f94bfee12bb0';
/**
   * _SET_FORCE_HIGH_LOD_VEHICLE
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _SET_FORCE_HIGH_LOD_VEHICLE = '0x1098cda477890165';
/**
   * _SET_HORSE_TRAFFIC_GROUPING_DISTRIBUTION
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _SET_HORSE_TRAFFIC_GROUPING_DISTRIBUTION = '0xf5ffb08976911b50';
/**
   * _SET_MISSION_TRAIN_WARP_TO_COORDS
   * Notice: BOOL p4 was wrongly named takePassengers (?)
   * Can be used to rotate the train by setting the BOOL direction
   *
   * @param {number} train
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} direction
   * @return {void}
   */
export const _SET_MISSION_TRAIN_WARP_TO_COORDS = '0xc9ea26893c9e4024';
/**
   * _SET_TRAIN_HALT
   *
   * @param {number} train
   * @return {void}
   */
export const _SET_TRAIN_HALT = '0x3660bcab3a6bb734';
/**
   * _SET_TRAIN_LEAVE_STATION
   * Restarts the train
   *
   * @param {number} train
   * @return {void}
   */
export const _SET_TRAIN_LEAVE_STATION = '0x787e43477746876f';
/**
   * _SET_TRAIN_MAX_SPEED
   * Maximum possible speed is 30.0 (108 km/h)
   *
   * @param {number} train
   * @param {number} speed
   * @return {void}
   */
export const _SET_TRAIN_MAX_SPEED = '0x9f29999dfdf2aeb8';
/**
   * _SET_TRAIN_STOPS_FOR_STATIONS
   *
   * @param {number} train
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_TRAIN_STOPS_FOR_STATIONS = '0x4182c037aa1f0091';
/**
   * _SET_TRAIN_TRACK_JUNCTION_SWITCH
   * trainTrack: FREIGHT_GROUP, TRAINS3, BRAITHWAITES2_TRACK_CONFIG, TRAINS_OLD_WEST01, TRAINS_OLD_WEST03, TRAINS_NB1, TRAINS_INTERSECTION1_ANN
   *
   * @param {number} trainTrack
   * @param {number} junctionIndex
   * @param {boolean} enabled
   * @return {void}
   */
export const _SET_TRAIN_TRACK_JUNCTION_SWITCH = '0xe6c5e2125eb210c1';
/**
   * _SET_VEHICLE_DETERIORATION
   *
   * @param {number} vehicle
   * @param {number} amount
   * @param {number} p2
   * @param {boolean} p3
   * @return {void}
   */
export const _SET_VEHICLE_DETERIORATION = '0x8e5da070bad3279e';
/**
   * _SET_VEHICLE_DIRT_LEVEL_2
   * dirtLevel: 0.0 - 1.0
   *
   * @param {number} vehicle
   * @param {number} dirtLevel
   * @return {void}
   */
export const _SET_VEHICLE_DIRT_LEVEL_2 = '0xbae0eedf93f05eaa';
/**
   * _SET_VEHICLE_IS_IN_HURRY
   *
   * @param {number} vehicle
   * @param {boolean} enabled
   * @return {void}
   */
export const _SET_VEHICLE_IS_IN_HURRY = '0xce1531927ad6c9f8';
/**
   * _SET_VEHICLE_LIVERY
   * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_liveries.lua
   *
   * @param {number} vehicle
   * @param {number} liveryIndex
   * @return {void}
   */
export const _SET_VEHICLE_LIVERY = '0xf89d82a0582e46ed';
/**
   * _SET_VEHICLE_LOD_LEVEL
   * Ranges from -1 to 2? (internal type is int8)
   * https://imgur.com/a/bPzHcft
   *
   * @param {number} vehicle
   * @param {number} lodLevel
   * @return {void}
   */
export const _SET_VEHICLE_LOD_LEVEL = '0x3fa7d7d1e0ea809e';
/**
   * _SET_VEHICLE_MUD_LEVEL
   * mudLevel: 0.0 - 1.0
   *
   * @param {number} vehicle
   * @param {number} mudLevel
   * @return {void}
   */
export const _SET_VEHICLE_MUD_LEVEL = '0x4d15e49764cb328a';
/**
   * _SET_VEHICLE_SNOW_LEVEL
   * snowLevel: 0.0 - 1.0
   *
   * @param {number} vehicle
   * @param {number} snowLevel
   * @return {void}
   */
export const _SET_VEHICLE_SNOW_LEVEL = '0x6f73efab11651d7f';
/**
   * _SET_VEHICLE_TINT
   * https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_tints.lua
   *
   * @param {number} vehicle
   * @param {number} tintId
   * @return {void}
   */
export const _SET_VEHICLE_TINT = '0x8268b098f6fca4e2';
/**
   * _SET_VEHICLE_WET_LEVEL
   * wetLevel: 0.0 - 1.0
   *
   * @param {number} vehicle
   * @param {number} wetLevel
   * @return {void}
   */
export const _SET_VEHICLE_WET_LEVEL = '0x5aabb09f6fbd1f87';
/**
   * _SHOW_HORSE_REINS
   *
   * @param {number} vehicle
   * @return {void}
   */
export const _SHOW_HORSE_REINS = '0x41cda90ee3450921';
/**
   * _TRIGGER_TRAIN_WHISTLE
   * whistleSequence: ACKNOWLEDGE, BACKING_UP, CROSSING, DANGER, MOVING, NEXT_STATION, PASSING, STOPPED
   * p2 = true seems to mute the sound
   *
   * @param {number} train
   * @param {string | number} whistleSequence
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {void}
   */
export const _TRIGGER_TRAIN_WHISTLE = '0xcfe122ec635cc2b2';
/**
   * _0x08797A8C03868CB8
   *
   * @param {number} threshold
   * @return {void}
   */
export const _0x08797A8C03868CB8 = '0x08797a8c03868cb8';
/**
   * _0x0DED260A1958A82E
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x0DED260A1958A82E = '0x0ded260a1958a82e';
/**
   * _0x1C38C3577901AF1F
   *
  
   * @return {void}
   */
export const _0x1C38C3577901AF1F = '0x1c38c3577901af1f';
/**
   * _0x1FBF7F5BA7E4BE3A
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x1FBF7F5BA7E4BE3A = '0x1fbf7f5ba7e4be3a';
/**
   * _0x2F82CAB262C8AE26
   *
   * @param {number} player
   * @return {number}
   */
export const _0x2F82CAB262C8AE26 = '0x2f82cab262c8ae26';
/**
   * _0x356135B9B10A2A82
   *
   * @param {DataView} gamerHandle
   * @return {boolean}
   */
export const _0x356135B9B10A2A82 = '0x356135b9b10a2a82';
/**
   * _0x4791899615D70FA2
   * Params: p1 = 2; p2 = 3 in R* Script net_main_offline
   *
   * @param {number} player
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x4791899615D70FA2 = '0x4791899615d70fa2';
/**
   * _0x49623BCFC3A3D829
   *
   * @param {number} player
   * @param {boolean} muted
   * @return {boolean}
   */
export const _0x49623BCFC3A3D829 = '0x49623bcfc3a3d829';
/**
   * _0x58125B691F6827D5
   *
   * @param {number} proximity
   * @return {void}
   */
export const _0x58125B691F6827D5 = '0x58125b691f6827d5';
/**
   * _0x5CA7FB7D6DE49DCC
   *
   * @param {number} player
   * @return {number}
   */
export const _0x5CA7FB7D6DE49DCC = '0x5ca7fb7d6de49dcc';
/**
   * _0x767931C727DF2ED7
   * Returns p2 value of 0x4791899615D70FA2
   *
   * @param {number} player
   * @param {number} p1
   * @return {number}
   */
export const _0x767931C727DF2ED7 = '0x767931c727df2ed7';
/**
   * _0x79F478FF5F9F4F05
   *
   * @param {boolean} enabled
   * @return {void}
   */
export const _0x79F478FF5F9F4F05 = '0x79f478ff5f9f4f05';
/**
   * _0x8E462DB1EAA9C47C
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x8E462DB1EAA9C47C = '0x8e462db1eaa9c47c';
/**
   * _0x919AF2D93E9AA89D
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0x919AF2D93E9AA89D = '0x919af2d93e9aa89d';
/**
   * _0xAA35FD9ABAB490A3
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0xAA35FD9ABAB490A3 = '0xaa35fd9abab490a3';
/**
   * _0xB3E8841F6BDAF83E
   *
  
   * @return {void}
   */
export const _0xB3E8841F6BDAF83E = '0xb3e8841f6bdaf83e';
/**
   * _0xB6E79850B759A30E
   *
   * @param {number} teamId
   * @param {boolean} allow
   * @return {void}
   */
export const _0xB6E79850B759A30E = '0xb6e79850b759a30e';
/**
   * _0xB779F4FA19269AEC
   *
   * @param {boolean} flag
   * @return {void}
   */
export const _0xB779F4FA19269AEC = '0xb779f4fa19269aec';
/**
   * _0xCCF71FCFA0070B1A
   *
  
   * @return {boolean}
   */
export const _0xCCF71FCFA0070B1A = '0xccf71fcfa0070b1a';
/**
   * _0xDB622ECD3DCBE078
   *
   * @param {number} player
   * @return {any}
   */
export const _0xDB622ECD3DCBE078 = '0xdb622ecd3dcbe078';
/**
   * _0xDC9B361CB7776673
   *
   * @param {number} player
   * @return {void}
   */
export const _0xDC9B361CB7776673 = '0xdc9b361cb7776673';
/**
   * _0xEC8703E4536A9952
   *
  
   * @return {void}
   */
export const _0xEC8703E4536A9952 = '0xec8703e4536a9952';
/**
   * _0xEF6F2A35FAAF2ED7
   *
   * @param {number} player
   * @return {boolean}
   */
export const _0xEF6F2A35FAAF2ED7 = '0xef6f2a35faaf2ed7';
/**
   * _0xF8938CF3984092A5
   *
   * @param {number} player
   * @return {void}
   */
export const _0xF8938CF3984092A5 = '0xf8938cf3984092a5';
/**
   * CREATE_VOLUME_AGGREGATE
   *
  
   * @return {number}
   */
export const CREATE_VOLUME_AGGREGATE = '0x59f6f5c1d129f106';
/**
   * CREATE_VOLUME_BOX
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @return {number}
   */
export const CREATE_VOLUME_BOX = '0xdf85637f22706891';
/**
   * CREATE_VOLUME_CYLINDER
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @return {number}
   */
export const CREATE_VOLUME_CYLINDER = '0x0522d4774b82e3e6';
/**
   * CREATE_VOLUME_SPHERE
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @return {number}
   */
export const CREATE_VOLUME_SPHERE = '0xb3fb80a32bae3065';
/**
   * DELETE_VOLUME
   *
   * @param {number} volume
   * @return {void}
   */
export const DELETE_VOLUME = '0x43f867ef5c463a53';
/**
   * DOES_VOLUME_COLLIDE_WITH_ANY_VOLUME_LOCK
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {boolean} p4
   * @param {number} p5
   * @param {number} p6
   * @return {boolean}
   */
export const DOES_VOLUME_COLLIDE_WITH_ANY_VOLUME_LOCK = '0x397769175a7dbb30';
/**
   * DOES_VOLUME_EXIST
   *
   * @param {number} volume
   * @return {boolean}
   */
export const DOES_VOLUME_EXIST = '0x92a78d0bedb332a3';
/**
   * GET_VOLUME_COORDS
   *
   * @param {number} volume
   * @return {Vector3}
   */
export const GET_VOLUME_COORDS = '0xf70f00013a62f866';
/**
   * GET_VOLUME_LOCK_REQUEST_STATUS
   * enum eVolumeLockRequestStatus
   * {
   *   VOLUME_LOCK_REQUEST_STATUS_INVALID,
   *   VOLUME_LOCK_REQUEST_STATUS_READY,
   *   VOLUME_LOCK_REQUEST_STATUS_IN_PROGRESS,
   *   VOLUME_LOCK_REQUEST_STATUS_SUCCEEDED,
   *   VOLUME_LOCK_REQUEST_STATUS_FAILED
   * };
   *
   * @param {number} volLockRequestId
   * @return {number}
   */
export const GET_VOLUME_LOCK_REQUEST_STATUS = '0xb33a604345f58202';
/**
   * GET_VOLUME_ROTATION
   *
   * @param {number} volume
   * @return {Vector3}
   */
export const GET_VOLUME_ROTATION = '0x18675bc914891122';
/**
   * GET_VOLUME_SCALE
   *
   * @param {number} volume
   * @return {Vector3}
   */
export const GET_VOLUME_SCALE = '0x3e2a25b2416dd67e';
/**
   * IS_POINT_IN_VOLUME
   * Old name: _IS_POSITION_INSIDE_VOLUME
   *
   * @param {number} volume
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {boolean}
   */
export const IS_POINT_IN_VOLUME = '0xf256a75210c5c0eb';
/**
   * IS_VOLUME_LOCK_REQUEST_VALID
   *
   * @param {number} volLockRequestId
   * @return {boolean}
   */
export const IS_VOLUME_LOCK_REQUEST_VALID = '0xa4a4359320345b34';
/**
   * REQUEST_VOLUME_LOCK
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} p4
   * @param {number} p5
   * @return {number}
   */
export const REQUEST_VOLUME_LOCK = '0xf14bcef290f869e1';
/**
   * REQUEST_VOLUME_LOCK_WITH_ARGS
   *
   * @param {DataView} args
   * @return {number}
   */
export const REQUEST_VOLUME_LOCK_WITH_ARGS = '0x183c0b6cfeffcae4';
/**
   * SET_VOLUME_COORDS
   *
   * @param {number} volume
   * @param {number} posX
   * @param {number} posY
   * @param {number} posZ
   * @return {boolean}
   */
export const SET_VOLUME_COORDS = '0x541b8576615c33de';
/**
   * SET_VOLUME_OWNER_PERSISTENT_CHARACTER
   *
   * @param {number} volume
   * @param {number} persChar
   * @param {boolean} p2
   * @return {void}
   */
export const SET_VOLUME_OWNER_PERSISTENT_CHARACTER = '0xe2be6ffa4a13cbb0';
/**
   * SET_VOLUME_ROTATION
   *
   * @param {number} volume
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @return {boolean}
   */
export const SET_VOLUME_ROTATION = '0xa07cf1b21b56f041';
/**
   * SET_VOLUME_SCALE
   *
   * @param {number} volume
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @return {boolean}
   */
export const SET_VOLUME_SCALE = '0xa46e98bdc407e23d';
/**
   * _0x128FC3A893BF853A
   * nullsub, doesn't do anything
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x128FC3A893BF853A = '0x128fc3a893bf853a';
/**
   * _GET_VOLUME_AMOUNT_OF_INDEXED_ITEMS
   * Indexes items (including entyties and peds) in a set volume
   * Counts up as its the return value of how many items it writes to given itemSet
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} itemSet
   * @return {number}
   */
export const _GET_VOLUME_AMOUNT_OF_INDEXED_ITEMS = '0x2b32b11520626229';
/**
   * _0x351D71B8B72B858B
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x351D71B8B72B858B = '0x351d71b8b72b858b';
/**
   * _0x3EFABB21E14A6BD1
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x3EFABB21E14A6BD1 = '0x3efabb21e14a6bd1';
/**
   * _0x40F769D31A00D5A0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x40F769D31A00D5A0 = '0x40f769d31a00d5a0';
/**
   * _0x4A8FEFC43FD8AC9B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x4A8FEFC43FD8AC9B = '0x4a8fefc43fd8ac9b';
/**
   * _0x51E52C9687FCDEEC
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @return {any}
   */
export const _0x51E52C9687FCDEEC = '0x51e52c9687fcdeec';
/**
   * _0x52572B331E693AED
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0x52572B331E693AED = '0x52572b331e693aed';
/**
   * _0x53D05D60E5F5B40C
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0x53D05D60E5F5B40C = '0x53d05d60e5f5b40c';
/**
   * _0x695DAC2DB928F308
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x695DAC2DB928F308 = '0x695dac2db928f308';
/**
   * _0x6D5F9E69BA1BE783
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x6D5F9E69BA1BE783 = '0x6d5f9e69ba1be783';
/**
   * _0x748C5F51A18CB8F0
   * nullsub, doesn't do anything
   *
   * @param {boolean} p0
   * @return {void}
   */
export const _0x748C5F51A18CB8F0 = '0x748c5f51a18cb8f0';
/**
   * _0x7FD78DFD0C5D7B9B
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x7FD78DFD0C5D7B9B = '0x7fd78dfd0c5d7b9b';
/**
   * _0x870E9981ED27C815
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {any}
   */
export const _0x870E9981ED27C815 = '0x870e9981ed27c815';
/**
   * _0x998202B206872672
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x998202B206872672 = '0x998202b206872672';
/**
   * _0xAA9EE2AAFC717623
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @return {any}
   */
export const _0xAA9EE2AAFC717623 = '0xaa9ee2aafc717623';
/**
   * _0xAC355980681A7F89
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xAC355980681A7F89 = '0xac355980681a7f89';
/**
   * _0xB440F4E35393FC39
   *
   * @param {number} volume
   * @param {any} p1
   * @return {void}
   */
export const _0xB440F4E35393FC39 = '0xb440f4e35393fc39';
/**
   * _0xB469CFD9E065EB99
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xB469CFD9E065EB99 = '0xb469cfd9e065eb99';
/**
   * _0xC4019CF9AE8E931A
   *
   * @param {number} volLockRequestId
   * @return {Vector3}
   */
export const _0xC4019CF9AE8E931A = '0xc4019cf9ae8e931a';
/**
   * _0xC61E2FD926DBB406
   *
  
   * @return {void}
   */
export const _0xC61E2FD926DBB406 = '0xc61e2fd926dbb406';
/**
   * _0xCA5C90D40665D5CE
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xCA5C90D40665D5CE = '0xca5c90d40665d5ce';
/**
   * _0xD460135C98940274
   *
   * @param {number} volume
   * @param {any} p1
   * @return {void}
   */
export const _0xD460135C98940274 = '0xd460135c98940274';
/**
   * _0xD4FA73FE628FEC63
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xD4FA73FE628FEC63 = '0xd4fa73fe628fec63';
/**
   * _0xD52DF30355EA7C8E
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xD52DF30355EA7C8E = '0xd52df30355ea7c8e';
/**
   * _0xD882C5B3991575B7
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @return {Vector3}
   */
export const _0xD882C5B3991575B7 = '0xd882c5b3991575b7';
/**
   * _0xEBA87B9273835CF3
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xEBA87B9273835CF3 = '0xeba87b9273835cf3';
/**
   * _0xEE1D6FF54CAF7714
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xEE1D6FF54CAF7714 = '0xee1d6ff54caf7714';
/**
   * _0xF3A2FBA5985C8CD5
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @return {void}
   */
export const _0xF3A2FBA5985C8CD5 = '0xf3a2fba5985c8cd5';
/**
   * _0xF6CE6F9C3897804E
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xF6CE6F9C3897804E = '0xf6ce6f9c3897804e';
/**
   * _0xF6F5447D418DAA82
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xF6F5447D418DAA82 = '0xf6f5447d418daa82';
/**
   * _0xFA15C9A320E707B0
   * nullsub, doesn't do anything
   *
  
   * @return {void}
   */
export const _0xFA15C9A320E707B0 = '0xfa15c9a320e707b0';
/**
   * _ADD_BOUNDS_TO_AGGREGATE_VOLUME
   * _ADD_R* - _ADD_V(OLUME?)*
   *
   * @param {number} volume
   * @param {number} aggregate
   * @return {void}
   */
export const _ADD_BOUNDS_TO_AGGREGATE_VOLUME = '0x6e0d3c3f828da773';
/**
   * _ADD_BOX_VOLUME_TO_VOLUME_AGGREGATE
   *
   * @param {number} aggregate
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @return {void}
   */
export const _ADD_BOX_VOLUME_TO_VOLUME_AGGREGATE = '0x39816f6f94f385ad';
/**
   * _ADD_CYLINDER_VOLUME_TO_VOLUME_AGGREGATE
   *
   * @param {number} aggregate
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @return {void}
   */
export const _ADD_CYLINDER_VOLUME_TO_VOLUME_AGGREGATE = '0xbce668aaf83608be';
/**
   * _ADD_ENTRY_VOLUME_LOCK
   *
   * @param {DataView} args
   * @return {boolean}
   */
export const _ADD_ENTRY_VOLUME_LOCK = '0x58d3803fa639a3bb';
/**
   * _ADD_SPHERE_VOLUME_TO_VOLUME_AGGREGATE
   *
   * @param {number} aggregate
   * @param {number} p1
   * @param {number} p2
   * @param {number} p3
   * @param {number} p4
   * @param {number} p5
   * @param {number} p6
   * @param {number} p7
   * @param {number} p8
   * @param {number} p9
   * @return {void}
   */
export const _ADD_SPHERE_VOLUME_TO_VOLUME_AGGREGATE = '0x5b7d7bf36d2de18b';
/**
   * _ADD_VOLUME_TO_VOLUME_AGGREGATE
   *
   * @param {number} aggregate
   * @param {number} typeHash
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @return {void}
   */
export const _ADD_VOLUME_TO_VOLUME_AGGREGATE = '0x12fcaa23f2320422';
/**
   * _CREATE_ANTI_GRIEF_VOLUME
   *
   * @param {number} volumeType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @return {number}
   */
export const _CREATE_ANTI_GRIEF_VOLUME = '0x0eb78c2b156635b1';
/**
   * _CREATE_SPEED_VOLUME
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @param {any} p13
   * @param {any} p14
   * @return {number}
   */
export const _CREATE_SPEED_VOLUME = '0xbbe768e3ae76e07c';
/**
   * _CREATE_VOLUME_AGGREGATE_WITH_CUSTOM_NAME
   *
   * @param {string | number} name
   * @return {number}
   */
export const _CREATE_VOLUME_AGGREGATE_WITH_CUSTOM_NAME = '0x5d580de6398bb162';
/**
   * _CREATE_VOLUME_BOX_WITH_CUSTOM_NAME
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @param {string | number} name
   * @return {number}
   */
export const _CREATE_VOLUME_BOX_WITH_CUSTOM_NAME = '0xf68485c7495d848e';
/**
   * _CREATE_VOLUME_BY_HASH
   *
   * @param {number} volumeType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @return {number}
   */
export const _CREATE_VOLUME_BY_HASH = '0x502022fa1af9dc86';
/**
   * _CREATE_VOLUME_BY_HASH_WITH_CUSTOM_NAME
   *
   * @param {number} volumeType
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @param {string | number} name
   * @return {number}
   */
export const _CREATE_VOLUME_BY_HASH_WITH_CUSTOM_NAME = '0x1f85e4ac774a201e';
/**
   * _CREATE_VOLUME_CYLINDER_WITH_CUSTOM_NAME
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @param {string | number} name
   * @return {number}
   */
export const _CREATE_VOLUME_CYLINDER_WITH_CUSTOM_NAME = '0xdf1e350eddf06e59';
/**
   * _CREATE_VOLUME_LOCK
   * Params: p5 is always 0
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} flag
   * @param {any} p5
   * @return {number}
   */
export const _CREATE_VOLUME_LOCK = '0x00bbf7ceae8c666a';
/**
   * _CREATE_VOLUME_LOCK_ATTACHED_TO_ENTITY
   * Params: p3 is always 0
   *
   * @param {number} entity
   * @param {number} radius
   * @param {number} flag
   * @param {any} p3
   * @return {number}
   */
export const _CREATE_VOLUME_LOCK_ATTACHED_TO_ENTITY = '0xf383e96c4904df0c';
/**
   * _CREATE_VOLUME_SPHERE_WITH_CUSTOM_NAME
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} rotX
   * @param {number} rotY
   * @param {number} rotZ
   * @param {number} scaleX
   * @param {number} scaleY
   * @param {number} scaleZ
   * @param {string | number} name
   * @return {number}
   */
export const _CREATE_VOLUME_SPHERE_WITH_CUSTOM_NAME = '0x10157bc3247ff3ba';
/**
   * _CREATE_WALK_AND_TALK_VOLUME
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @param {any} p3
   * @param {any} p4
   * @param {any} p5
   * @param {any} p6
   * @param {any} p7
   * @param {any} p8
   * @param {any} p9
   * @param {any} p10
   * @param {any} p11
   * @param {any} p12
   * @return {number}
   */
export const _CREATE_WALK_AND_TALK_VOLUME = '0xfd0e389cd44434b6';
/**
   * _FIND_VOLUME_LOCK_REQUEST_ID_WITH_ARGS
   *
   * @param {DataView} args
   * @return {number}
   */
export const _FIND_VOLUME_LOCK_REQUEST_ID_WITH_ARGS = '0x77a6e4ad0c496f81';
/**
   * _GET_VOLUME_BOUNDS
   *
   * @param {number} volume
   * @return {[Vector3, Vector3]}
   */
export const _GET_VOLUME_BOUNDS = '0x5737199af2dc609f';
/**
   * _GET_VOLUME_RELATIONSHIP
   * Returns relationshipGroup Hash
   *
   * @param {number} volume
   * @return {number}
   */
export const _GET_VOLUME_RELATIONSHIP = '0x666c2f53abefc952';
/**
   * _IS_AGGREGATE_VOLUME
   *
   * @param {number} volume
   * @return {boolean}
   */
export const _IS_AGGREGATE_VOLUME = '0xfeff01b5725bcd22';
/**
   * _IS_POINT_NEAR_VOLUME_LOCK_CENTER
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} radius
   * @param {number} p4
   * @param {number} p5
   * @param {number} flags
   * @return {boolean}
   */
export const _IS_POINT_NEAR_VOLUME_LOCK_CENTER = '0x769bb7626b8cdb06';
/**
   * _IS_VOLUME_LOCK_REQUEST_VALID_2
   *
   * @param {number} volLockRequestId
   * @return {boolean}
   */
export const _IS_VOLUME_LOCK_REQUEST_VALID_2 = '0xf6a8a652a6b186cd';
/**
   * _MODIFY_VOLUME_LOCK_LOCATION
   *
   * @param {number} volLock
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {void}
   */
export const _MODIFY_VOLUME_LOCK_LOCATION = '0xec43c2ffb70e3f30';
/**
   * _RELEASE_LOCK_VOLUME
   *
   * @param {number} volLockRequestId
   * @return {void}
   */
export const _RELEASE_LOCK_VOLUME = '0xfdfecc6ee4491e11';
/**
   * _REMOVE_BOUNDS_FROM_AGGREGATE_VOLUME
   * _REMOVE_E* - _REMOVE_R*
   *
   * @param {number} volume
   * @param {number} aggregate
   * @return {void}
   */
export const _REMOVE_BOUNDS_FROM_AGGREGATE_VOLUME = '0xf92fa8890dececf6';
/**
   * _SET_ANTI_GRIEF_VOLUME_BLOCKS_HORSE
   *
   * @param {number} volume
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_ANTI_GRIEF_VOLUME_BLOCKS_HORSE = '0xbe551c2cc421185d';
/**
   * _SET_ANTI_GRIEF_VOLUME_BLOCKS_PLAYER
   *
   * @param {number} volume
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_ANTI_GRIEF_VOLUME_BLOCKS_PLAYER = '0x5b23dff8e0948bb2';
/**
   * _SET_VOLUME_RELATIONSHIP
   *
   * @param {number} volume
   * @param {number} relationshipGroup
   * @return {void}
   */
export const _SET_VOLUME_RELATIONSHIP = '0xfd010a2154b40676';
/**
   * DISABLE_WATER_LOOKUP
   * Must be called every frame to take full effect.
   *
  
   * @return {void}
   */
export const DISABLE_WATER_LOOKUP = '0x754616ec6965d1fb';
/**
   * ENABLE_WATER_LOOKUP
   *
  
   * @return {void}
   */
export const ENABLE_WATER_LOOKUP = '0x754616ec6965d1bf';
/**
   * GET_WATER_HEIGHT
   * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If that is set to one it will fail. Likely not the only issue but part of it.
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {[boolean, number]}
   */
export const GET_WATER_HEIGHT = '0xfca8b23f28813f69';
/**
   * GET_WATER_HEIGHT_NO_WAVES
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {[boolean, number]}
   */
export const GET_WATER_HEIGHT_NO_WAVES = '0xdcf3690aa262c03f';
/**
   * REMOVE_EXTRA_CALMING_QUAD
   * Only used in rcm_crackpot1 R* Script: p0 = 0
   *
   * @param {number} index
   * @return {void}
   */
export const REMOVE_EXTRA_CALMING_QUAD = '0x4bef8dd75af6c71c';
/**
   * TEST_PROBE_AGAINST_ALL_WATER
   * enum eScriptWaterTestResult
   * {
   *   SCRIPT_WATER_TEST_RESULT_NONE,
   *   SCRIPT_WATER_TEST_RESULT_WATER,
   *   SCRIPT_WATER_TEST_RESULT_BLOCKED,
   * };
   *
   * @param {number} x1
   * @param {number} y1
   * @param {number} z1
   * @param {number} x2
   * @param {number} y2
   * @param {number} z2
   * @param {number} flags
   * @return {[number, Vector3]}
   */
export const TEST_PROBE_AGAINST_ALL_WATER = '0x8974647ed222ea5f';
/**
   * TEST_VERTICAL_PROBE_AGAINST_ALL_WATER
   * Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If it's set to 1 (Guarma) it will fail.
   * 
   * See TEST_PROBE_AGAINST_ALL_WATER.
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} flags
   * @return {[number, number]}
   */
export const TEST_VERTICAL_PROBE_AGAINST_ALL_WATER = '0x2b3451fa1e3142e2';
/**
   * _0x09A1C7DFDCE54FBC
   * Called together with REMOVE_EXTRA_CALMING_QUAD in rcm_crackpot1 R* Script: p0 = 0
   * _REMOVE_*
   *
   * @param {number} p0
   * @return {void}
   */
export const _0x09A1C7DFDCE54FBC = '0x09a1c7dfdce54fbc';
/**
   * _0x0DCEC6A92E497E17
   * Only used in native_son1 R* Script: p1 = 1
   *
   * @param {number} entity
   * @param {number} p1
   * @return {void}
   */
export const _0x0DCEC6A92E497E17 = '0x0dcec6a92e497e17';
/**
   * _0xA33F5069B0CB89B8
   * Only used in fishing_core R* Script
   *
  
   * @return {void}
   */
export const _0xA33F5069B0CB89B8 = '0xa33f5069b0cb89b8';
/**
   * _0xB34A6009A0DB80B8
   * Used in bounty1, fanale3, sean1 R* Scripts
   *
   * @param {number} entity
   * @return {void}
   */
export const _0xB34A6009A0DB80B8 = '0xb34a6009a0db80b8';
/**
   * _0xE8126623008372AA
   * Only used in fussar1 / train_robbery2 R* Script
   *
  
   * @return {void}
   */
export const _0xE8126623008372AA = '0xe8126623008372aa';
/**
   * _0xF0FBF193F1F5C0EA
   * Only used in fishing_core R* Script
   *
   * @param {number} ped
   * @return {void}
   */
export const _0xF0FBF193F1F5C0EA = '0xf0fbf193f1f5c0ea';
/**
   * _GET_WORLD_WATER_TYPE
   *
  
   * @return {number}
   */
export const _GET_WORLD_WATER_TYPE = '0x189739a7631c1867';
/**
   * _RESET_GUARMA_WATER_STATE
   * Only used in guama1 / guama3 R* Script
   * _REQUEST_* or _RESET_*
   *
  
   * @return {void}
   */
export const _RESET_GUARMA_WATER_STATE = '0xc63540aef8384769';
/**
   * _SET_OCEAN_GUARMA_WATER_QUADRANT
   * Only used in R* Script guama1 this native allows to modify the ocean water in the guarma island. wave direction accepts 0, 1 and 2 values.
   *
   * @param {number} wavesHeight
   * @param {number} p1
   * @param {number} waveDirection
   * @param {number} p3
   * @param {number} waveAmmount
   * @param {number} p5
   * @param {number} waveSpeed
   * @param {number} wavesStrength
   * @param {number} p8
   * @return {void}
   */
export const _SET_OCEAN_GUARMA_WATER_QUADRANT = '0xc63540aef8384732';
/**
   * _SET_WORLD_WATER_TYPE
   * 0 = World
   * 1 = Guarma
   *
   * @param {number} waterType
   * @return {void}
   */
export const _SET_WORLD_WATER_TYPE = '0xe8770ee02aee45c2';
/**
   * GET_ALLOW_DUAL_WIELD
   *
   * @param {number} ped
   * @return {boolean}
   */
export const GET_ALLOW_DUAL_WIELD = '0x918990bd9ce08582';
/**
   * GET_AMMO_IN_CLIP
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {[boolean, number]}
   */
export const GET_AMMO_IN_CLIP = '0x2e1202248937775c';
/**
   * GET_AMMO_IN_PED_WEAPON
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {number}
   */
export const GET_AMMO_IN_PED_WEAPON = '0x015a522136d7f951';
/**
   * GET_BEST_PED_SHORTARM_GUID
   *
   * @param {number} ped
   * @param {DataView} outGuid
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {void}
   */
export const GET_BEST_PED_SHORTARM_GUID = '0xf52bd94b47ccf736';
/**
   * GET_BEST_PED_WEAPON
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {number}
   */
export const GET_BEST_PED_WEAPON = '0x8483e98e8b888ae2';
/**
   * GET_CURRENT_PED_VEHICLE_WEAPON
   *
   * @param {number} ped
   * @return {[boolean, number]}
   */
export const GET_CURRENT_PED_VEHICLE_WEAPON = '0x1017582bcd3832dc';
/**
   * GET_CURRENT_PED_WEAPON
   * attachPoint: see SET_CURRENT_PED_WEAPON
   *
   * @param {number} ped
   * @param {boolean} p2
   * @param {number} attachPoint
   * @param {boolean} p4
   * @return {[boolean, number]}
   */
export const GET_CURRENT_PED_WEAPON = '0x3a87e44bb9a01d54';
/**
   * GET_CURRENT_PED_WEAPON_ENTITY_INDEX
   * Returns weaponObject, attachPoint: see SET_CURRENT_PED_WEAPON
   *
   * @param {number} ped
   * @param {number} attachPoint
   * @return {number}
   */
export const GET_CURRENT_PED_WEAPON_ENTITY_INDEX = '0x3b390a939af0b5fc';
/**
   * GET_MAX_AMMO
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {[boolean, number]}
   */
export const GET_MAX_AMMO = '0xdc16122c7a20c933';
/**
   * GET_MAX_AMMO_IN_CLIP
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {boolean} p2
   * @return {number}
   */
export const GET_MAX_AMMO_IN_CLIP = '0xa38dcffcea8962fa';
/**
   * GET_PED_AMMO_BY_TYPE
   *
   * @param {number} ped
   * @param {number} ammoType
   * @return {number}
   */
export const GET_PED_AMMO_BY_TYPE = '0x39d22031557946c1';
/**
   * GET_PED_AMMO_TYPE_FROM_WEAPON
   * Returns the current ammo type of the specified ped's specified weapon.
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {number}
   */
export const GET_PED_AMMO_TYPE_FROM_WEAPON = '0x7fead38b326b9f74';
/**
   * GET_PED_BACKUP_WEAPON
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {number}
   */
export const GET_PED_BACKUP_WEAPON = '0xc71fe230a513c30f';
/**
   * GET_PED_LAST_WEAPON_IMPACT_COORD
   *
   * @param {number} ped
   * @return {[boolean, Vector3]}
   */
export const GET_PED_LAST_WEAPON_IMPACT_COORD = '0x6c4d0409ba1a2bc2';
/**
   * GET_PED_WEAPON_GUID_AT_ATTACH_POINT
   *
   * @param {number} ped
   * @param {number} attachPoint
   * @param {DataView} weaponGuid
   * @return {boolean}
   */
export const GET_PED_WEAPON_GUID_AT_ATTACH_POINT = '0x6929e22158e52265';
/**
   * GET_WEAPONTYPE_GROUP
   *
   * @param {number} weaponHash
   * @return {number}
   */
export const GET_WEAPONTYPE_GROUP = '0xedca14ca5199ff25';
/**
   * GET_WEAPON_CLIP_SIZE
   *
   * @param {number} weaponHash
   * @return {number}
   */
export const GET_WEAPON_CLIP_SIZE = '0xd3750ccc00635fc2';
/**
   * GET_WEAPON_DEGRADATION
   * 0.0: good condition, 1.0: poor condition
   *
   * @param {number} weaponObject
   * @return {number}
   */
export const GET_WEAPON_DEGRADATION = '0x0d78e1097f89e637';
/**
   * GET_WEAPON_PERMANENT_DEGRADATION
   * Related to rust of weapons
   *
   * @param {number} weaponObject
   * @return {number}
   */
export const GET_WEAPON_PERMANENT_DEGRADATION = '0xd56e5f336c675efa';
/**
   * GIVE_DELAYED_WEAPON_TO_PED
   * addReason: see _ADD_AMMO_TO_PED
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} ammoCount
   * @param {boolean} p3
   * @param {number} addReason
   * @return {void}
   */
export const GIVE_DELAYED_WEAPON_TO_PED = '0xb282dc6ebd803c75';
/**
   * GIVE_WEAPON_TO_PED
   * Gives the ped the weapon.
   * List: https://github.com/femga/rdr3_discoveries/blob/master/weapons/weapons.lua
   * 
   * Params: p7 is 0.5f, and p8 is 1.0f. p11 and p12 are both 0 in R* Scripts
   * attachPoint: see SET_CURRENT_PED_WEAPON
   * addReason: see _ADD_AMMO_TO_PED
   * permanentDegradation: default 0.5, any higher than 0 it will automatically make the weapon worn, you can also adjust the value to change the weapons maximum cleanliness
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} ammoCount
   * @param {boolean} bForceInHand
   * @param {boolean} bForceInHolster
   * @param {number} attachPoint
   * @param {boolean} bAllowMultipleCopies
   * @param {number} p7
   * @param {number} p8
   * @param {number} addReason
   * @param {boolean} bIgnoreUnlocks
   * @param {number} permanentDegradation
   * @param {boolean} p12
   * @return {number}
   */
export const GIVE_WEAPON_TO_PED = '0x5e3bddbcb83f3d84';
/**
   * GIVE_WEAPON_TO_PED_WITH_OPTIONS
   *
   * @param {number} ped
   * @param {DataView} data
   * @param {DataView} outData
   * @return {boolean}
   */
export const GIVE_WEAPON_TO_PED_WITH_OPTIONS = '0xbe7e42b07fd317ac';
/**
   * HAS_PED_GOT_WEAPON
   * onlyCheckPlayerInventory: If true, it will only check the players current inventory. If false, it also checks your horse inventory
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} p2
   * @param {boolean} onlyCheckPlayerInventory
   * @return {boolean}
   */
export const HAS_PED_GOT_WEAPON = '0x8decb02f88f428bc';
/**
   * HAS_WEAPON_GOT_WEAPON_COMPONENT
   *
   * @param {number} weapon
   * @param {number} addonHash
   * @return {boolean}
   */
export const HAS_WEAPON_GOT_WEAPON_COMPONENT = '0x76a18844e743bf91';
/**
   * HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE
   * Hides the ped's weapon during a cutscene.
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE = '0x6f6981d2253c208f';
/**
   * IS_PED_ARMED
   *
   * @param {number} ped
   * @param {number} flags
   * @return {boolean}
   */
export const IS_PED_ARMED = '0xcb690f680a3ea971';
/**
   * IS_PED_CARRYING_WEAPON
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_PED_CARRYING_WEAPON = '0xf29a186ed428b552';
/**
   * IS_PED_WEAPON_READY_TO_SHOOT
   *
   * @param {number} ped
   * @return {boolean}
   */
export const IS_PED_WEAPON_READY_TO_SHOOT = '0xb80ca294f2f26749';
/**
   * IS_WEAPON_A_GUN
   * Returns true if CWeaponInfoFlags::Flags::Gun is set.
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_WEAPON_A_GUN = '0x705be297eebdb95d';
/**
   * IS_WEAPON_BOW
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_WEAPON_BOW = '0xc4dec3ca8c365a5d';
/**
   * IS_WEAPON_MELEE_WEAPON
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_WEAPON_MELEE_WEAPON = '0x959383dcd42040da';
/**
   * IS_WEAPON_PISTOL
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_WEAPON_PISTOL = '0xddc64f5e31eedab6';
/**
   * IS_WEAPON_REPEATER
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_WEAPON_REPEATER = '0xddb2578e95ef7138';
/**
   * IS_WEAPON_REVOLVER
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_WEAPON_REVOLVER = '0xc212f1d05a8232bb';
/**
   * IS_WEAPON_RIFLE
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_WEAPON_RIFLE = '0x0a82317b7ebfc420';
/**
   * IS_WEAPON_SHOTGUN
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_WEAPON_SHOTGUN = '0xc75386174ece95d5';
/**
   * IS_WEAPON_VALID
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const IS_WEAPON_VALID = '0x937c71165cf334b3';
/**
   * MAKE_PED_DROP_WEAPON
   * Old name: _DROP_CURRENT_PED_WEAPON
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {number} attachPoint
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {number}
   */
export const MAKE_PED_DROP_WEAPON = '0xcef4c65de502d367';
/**
   * REMOVE_ALL_PED_WEAPONS
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @return {void}
   */
export const REMOVE_ALL_PED_WEAPONS = '0xf25df915fa38c5f3';
/**
   * REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT
   *
   * @param {number} weaponObject
   * @param {number} component
   * @return {void}
   */
export const REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT = '0xf7d82b0d66777611';
/**
   * REMOVE_WEAPON_FROM_PED
   * removeReason:
   * enum eRemoveItemReason : Hash
   * {
   *   REMOVE_REASON_CLIENT_PURGED = 0x4A4E94DC,
   *   REMOVE_REASON_COALESCE = 0x2ABE393E,
   *   REMOVE_REASON_DEBUG = 0xA07362E6,
   *   REMOVE_REASON_DEFAULT = 0xF77DE93D,
   *   REMOVE_REASON_DELETE_CHARACTER = 0x20AFBDE9,
   *   REMOVE_REASON_DROPPED = 0xEC7FB5D5,
   *   REMOVE_REASON_DUPLICATE = 0x19047132,
   *   REMOVE_REASON_GIFTED_INCORRECTLY = 0x9C4E3829,
   *   REMOVE_REASON_GIVEN = 0xAD5377D4,
   *   REMOVE_REASON_INSUFFICIENT_INVENTORY = 0x518D1AAE,
   *   REMOVE_REASON_ITEM_DOES_NOT_EXIST = 0xEAD5D889,
   *   REMOVE_REASON_LOADOUT = 0x1B94E3BA,
   *   REMOVE_REASON_SET_AMOUNT = 0x19D5CFA5,
   *   REMOVE_REASON_SOLD = 0x76C4B482,
   *   REMOVE_REASON_USED = 0x2188E0A3,
   *   REMOVE_REASON_USE_FAILED = 0x671F9EAD
   * };
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {boolean} p2
   * @param {number} removeReason
   * @return {void}
   */
export const REMOVE_WEAPON_FROM_PED = '0x4899cb088edf59b8';
/**
   * SET_ALLOW_ANY_WEAPON_DROP
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_ALLOW_ANY_WEAPON_DROP = '0x78030c7867d8b9b6';
/**
   * SET_AMMO_IN_CLIP
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} ammo
   * @return {boolean}
   */
export const SET_AMMO_IN_CLIP = '0xdcd2a934d65cb497';
/**
   * SET_CURRENT_PED_VEHICLE_WEAPON
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {boolean}
   */
export const SET_CURRENT_PED_VEHICLE_WEAPON = '0x75c55983c2c39daa';
/**
   * SET_CURRENT_PED_WEAPON
   * attachPoint:
   * enum eWeaponAttachPoint
   * {
   *   WEAPON_ATTACH_POINT_INVALID = -1,
   *   WEAPON_ATTACH_POINT_HAND_PRIMARY = 0,
   *   WEAPON_ATTACH_POINT_HAND_SECONDARY = 1,
   *   WEAPON_ATTACH_POINT_PISTOL_R = 2,
   *   MAX_HAND_WEAPON_ATTACH_POINTS = 2,
   *   WEAPON_ATTACH_POINT_PISTOL_L = 3,
   *   WEAPON_ATTACH_POINT_KNIFE = 4,
   *   WEAPON_ATTACH_POINT_LASSO = 5,
   *   WEAPON_ATTACH_POINT_THROWER = 6,
   *   WEAPON_ATTACH_POINT_BOW = 7,
   *   WEAPON_ATTACH_POINT_BOW_ALTERNATE = 8,
   *   WEAPON_ATTACH_POINT_RIFLE = 9,
   *   WEAPON_ATTACH_POINT_RIFLE_ALTERNATE = 10,
   *   WEAPON_ATTACH_POINT_LANTERN = 11,
   *   WEAPON_ATTACH_POINT_TEMP_LANTERN = 12,
   *   WEAPON_ATTACH_POINT_MELEE = 13,
   *   MAX_SYNCED_WEAPON_ATTACH_POINTS = 13,
   *   WEAPON_ATTACH_POINT_HIP = 14,
   *   WEAPON_ATTACH_POINT_BOOT = 15,
   *   WEAPON_ATTACH_POINT_BACK = 16,
   *   WEAPON_ATTACH_POINT_FRONT = 17,
   *   WEAPON_ATTACH_POINT_SHOULDERSLING = 18,
   *   WEAPON_ATTACH_POINT_LEFTBREAST = 19,
   *   WEAPON_ATTACH_POINT_RIGHTBREAST = 20,
   *   WEAPON_ATTACH_POINT_LEFTARMPIT = 21,
   *   WEAPON_ATTACH_POINT_RIGHTARMPIT = 22,
   *   WEAPON_ATTACH_POINT_LEFTARMPIT_RIFLE = 23,
   *   WEAPON_ATTACH_POINT_SATCHEL = 24,
   *   WEAPON_ATTACH_POINT_LEFTARMPIT_BOW = 25,
   *   WEAPON_ATTACH_POINT_RIGHT_HAND_EXTRA = 26,
   *   WEAPON_ATTACH_POINT_LEFT_HAND_EXTRA = 27,
   *   WEAPON_ATTACH_POINT_RIGHT_HAND_AUX = 28,
   *   MAX_WEAPON_ATTACH_POINTS = 29
   * };
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {boolean} equipNow
   * @param {number} attachPoint
   * @param {boolean} p4
   * @param {boolean} p5
   * @return {void}
   */
export const SET_CURRENT_PED_WEAPON = '0xadf692b254977c0c';
/**
   * SET_CURRENT_PED_WEAPON_BY_GUID
   * Equips a weapon from a weaponItem, similar to GIVE_WEAPON_TO_PED
   *
   * @param {number} ped
   * @param {DataView} weaponUid
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} p4
   * @param {boolean} p5
   * @return {void}
   */
export const SET_CURRENT_PED_WEAPON_BY_GUID = '0x12fb95fe3d579238';
/**
   * SET_INSTANTLY_EQUIP_WEAPON_PICKUPS
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_INSTANTLY_EQUIP_WEAPON_PICKUPS = '0x739b9c6d0e7f7f93';
/**
   * SET_PED_AMMO
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} ammo
   * @return {void}
   */
export const SET_PED_AMMO = '0x14e56bc5b5db6a19';
/**
   * SET_PED_AMMO_BY_TYPE
   *
   * @param {number} ped
   * @param {number} ammoType
   * @param {number} ammo
   * @return {void}
   */
export const SET_PED_AMMO_BY_TYPE = '0x5fd1e1f011e76d7e';
/**
   * SET_PED_AMMO_TO_DROP
   *
   * @param {number} ped
   * @param {number} p1
   * @param {number} p2
   * @return {void}
   */
export const SET_PED_AMMO_TO_DROP = '0xa4efef9440a5b0ef';
/**
   * SET_PED_CURRENT_WEAPON_VISIBLE
   *
   * @param {number} ped
   * @param {boolean} visible
   * @param {boolean} deselectWeapon
   * @param {boolean} p3
   * @param {boolean} p4
   * @return {void}
   */
export const SET_PED_CURRENT_WEAPON_VISIBLE = '0x0725a4ccfded9a70';
/**
   * SET_PED_DROPS_INVENTORY_WEAPON
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} xOffset
   * @param {number} yOffset
   * @param {number} zOffset
   * @param {number} ammoCount
   * @return {void}
   */
export const SET_PED_DROPS_INVENTORY_WEAPON = '0x208a1888007fc0e6';
/**
   * SET_PED_DROPS_WEAPONS_WHEN_DEAD
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const SET_PED_DROPS_WEAPONS_WHEN_DEAD = '0x476ae72c1d19d1a8';
/**
   * SET_PED_INFINITE_AMMO
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @param {number} weaponHash
   * @return {void}
   */
export const SET_PED_INFINITE_AMMO = '0x3edcb0505123623b';
/**
   * SET_PLAYER_PED_QUICK_SWAP_WEAPON_BY_GUID
   *
   * @param {number} ped
   * @param {DataView} guidPrimary
   * @param {DataView} guidSecondary
   * @return {void}
   */
export const SET_PLAYER_PED_QUICK_SWAP_WEAPON_BY_GUID = '0xec1f85da51d3d6c4';
/**
   * SET_VEHICLE_WEAPON_HEADING
   *
   * @param {number} vehicle
   * @param {number} seatIndex
   * @param {number} heading
   * @param {boolean} p3
   * @return {void}
   */
export const SET_VEHICLE_WEAPON_HEADING = '0x194d877fc5597b7d';
/**
   * SHOULD_WEAPON_BE_DISCARDED_WHEN_SWAPPED
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const SHOULD_WEAPON_BE_DISCARDED_WHEN_SWAPPED = '0x2c83212a7aa51d3d';
/**
   * _0x000FA7A4A8443AF7
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x000FA7A4A8443AF7 = '0x000fa7a4a8443af7';
/**
   * _IS_PED_HOLDING_WEAPON
   * Returns whether the specified ped is holding a weapon with the given hash.
   * only these weapons below return true
   *  WEAPON_BOW, WEAPON_KIT_METAL_DETECTOR, WEAPON_MELEE_CLEAVER, WEAPON_MELEE_DAVY_LANTERN, WEAPON_MELEE_HATCHET, WEAPON_MELEE_HATCHET_HUNTER, WEAPON_MELEE_KNIFE_JAWBONE, WEAPON_MELEE_LANTERN WEAPON_MELEE_TORCH, WEAPON_MOONSHINEJUG_MP, WEAPON_RIFLE_BOLTACTION, WEAPON_SHOTGUN_PUMP, WEAPON_THROWN_BOLAS, WEAPON_THROWN_MOLOTOV
   *
   * @param {number} ped
   * @param {number} weapon
   * @return {boolean}
   */
export const _IS_PED_HOLDING_WEAPON = '0x07e1c35f0078c3f9';
/**
   * _0x0DE0944ECCB3DF5D
   * _GET_D* - _GET_L*
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _0x0DE0944ECCB3DF5D = '0x0de0944eccb3df5d';
/**
   * _0x14FF0C2545527F9B
   * Puts the gun visibly in your horse's holster without having to be close to the horse. Use 0xE9BD19F8121ADE3E before using this native
   * _A* or _B*
   *
   * @param {number} horse
   * @param {number} weaponHash
   * @param {number} ped
   * @return {void}
   */
export const _0x14FF0C2545527F9B = '0x14ff0c2545527f9b';
/**
   * _0x16D9841A85FA627E
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x16D9841A85FA627E = '0x16d9841a85fa627e';
/**
   * _0x183CE355115B6E75
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x183CE355115B6E75 = '0x183ce355115b6e75';
/**
   * _0x23BF601A42F329A0
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x23BF601A42F329A0 = '0x23bf601a42f329a0';
/**
   * _0x2EBF70E1D8C06683
   * _SET_A* - _SET_B*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {void}
   */
export const _0x2EBF70E1D8C06683 = '0x2ebf70e1d8c06683';
/**
   * _0x3799EFCC3C8CD5E1
   *
   * @param {any} p0
   * @return {any}
   */
export const _0x3799EFCC3C8CD5E1 = '0x3799efcc3c8cd5e1';
/**
   * _0x404514D231DB27A0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x404514D231DB27A0 = '0x404514d231db27a0';
/**
   * _0x431240A58484D5D0
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x431240A58484D5D0 = '0x431240a58484d5d0';
/**
   * _0x44C8F4908F1B2622
   *
   * @param {number} ped
   * @param {number} ammoHash
   * @return {boolean}
   */
export const _0x44C8F4908F1B2622 = '0x44c8f4908f1b2622';
/**
   * _0x457B16951AD77C1B
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x457B16951AD77C1B = '0x457b16951ad77c1b';
/**
   * _0x45E57FDD531C9477
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _0x45E57FDD531C9477 = '0x45e57fdd531c9477';
/**
   * _GET_NUM_PEDS_RESTRAINED_FROM_WEAPON_BOLAS
   * returns the amount of peds that were restrained with the weapon thrown bolas
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_NUM_PEDS_RESTRAINED_FROM_WEAPON_BOLAS = '0x46d42883e873c1d7';
/**
   * _SET_PED_WEAPON_ON_BACK
   * Holster the holded shoulder weapon. Precisions: 0 means with anim while 1 means direct holster
   *
   * @param {number} ped
   * @param {boolean} disableAnim
   * @return {void}
   */
export const _SET_PED_WEAPON_ON_BACK = '0x4820a6939d7cef28';
/**
   * _0x4823F13A21F51964
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x4823F13A21F51964 = '0x4823f13a21f51964';
/**
   * _0x486C96A0DCD2BC92
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x486C96A0DCD2BC92 = '0x486c96a0dcd2bc92';
/**
   * _DOES_PED_HAVE_REPEATER
   * Returns whether the ped has a repeater p1: 0 or 1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _DOES_PED_HAVE_REPEATER = '0x495a04caec263af8';
/**
   * _GET_WEAPON_HAS_MULTIPLE_AMMO_TYPES
   * Returns whether the weapon has multiple ammo types or not.
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _GET_WEAPON_HAS_MULTIPLE_AMMO_TYPES = '0x58425fca3d3a2d15';
/**
   * _0x5A695BD328586B44
   * Returns true if ped is on a horse while inside of a town
   * Params: p1 = 0
   * GET_L* - GET_MA*
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _0x5A695BD328586B44 = '0x5a695bd328586b44';
/**
   * _DOES_PED_HAVE_REVOLVER
   * Returns whether the ped has a revolver p1: 0 or 1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _DOES_PED_HAVE_REVOLVER = '0x5b235f24472f2c3b';
/**
   * _0x63B83A526329AFBC
   * Only used in R* Script fme_escaped_convicts, p0 = 0
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x63B83A526329AFBC = '0x63b83a526329afbc';
/**
   * _0x641351E9AD103890
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x641351E9AD103890 = '0x641351e9ad103890';
/**
   * _GET_DEFAULT_WEAPON_ATTACH_POINT
   * Returns the attachpoint for a weapon hash. (returns -1 for melee as they can't be attached)
   *
   * @param {number} weaponHash
   * @return {number}
   */
export const _GET_DEFAULT_WEAPON_ATTACH_POINT = '0x65dc4ac5b96614cb';
/**
   * _0x74C2365FDD1BB48F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x74C2365FDD1BB48F = '0x74c2365fdd1bb48f';
/**
   * _0x74C8000FDD1BB111
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x74C8000FDD1BB111 = '0x74c8000fdd1bb111';
/**
   * _0x74C8000FDD1BB222
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0x74C8000FDD1BB222 = '0x74c8000fdd1bb222';
/**
   * _0x74C9080FDD1BB48E
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x74C9080FDD1BB48E = '0x74c9080fdd1bb48e';
/**
   * _0x74C9080FDD1BB48F
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0x74C9080FDD1BB48F = '0x74c9080fdd1bb48f';
/**
   * _0x74C90AAACC1DD48F
   *
   * @param {any} p0
   * @return {void}
   */
export const _0x74C90AAACC1DD48F = '0x74c90aaacc1dd48f';
/**
   * _DOES_PED_HAVE_SNIPER
   * Returns whether the ped has a sniper p1: 0 or 1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _DOES_PED_HAVE_SNIPER = '0x80bb243789008a82';
/**
   * _0x8A779706DA5CA3DD
   * Only used in R* SP Scripts native_son2, native_son3 and smuggler2
   * Params: p2 = -1
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {number} p2
   * @return {void}
   */
export const _0x8A779706DA5CA3DD = '0x8a779706da5ca3dd';
/**
   * _0x9409C62504A8F9E9
   * Only used in R* SP Script guama3
   *
   * @param {number} vehicle
   * @param {boolean} p1
   * @return {void}
   */
export const _0x9409C62504A8F9E9 = '0x9409c62504a8f9e9';
/**
   * _DOES_PED_HAVE_RIFLE
   * Returns whether the ped has a rifle p1: 0 or 1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _DOES_PED_HAVE_RIFLE = '0x95ca12e2c68043e5';
/**
   * _0x9CCA3131E6B53C68
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {any}
   */
export const _0x9CCA3131E6B53C68 = '0x9cca3131e6b53c68';
/**
   * _GET_WEAPON_FROM_DEFAULT_PED_WEAPON_COLLECTION
   * this native gets the weapon hash from the default ped weapon collection (see GetDefaultPedWeaponCollection for more info) will randomly return one of it's weapons
   *
   * @param {number} weaponCollection
   * @param {number} weaponGroup
   * @return {number}
   */
export const _GET_WEAPON_FROM_DEFAULT_PED_WEAPON_COLLECTION = '0x9eefd670f10656d7';
/**
   * _0x9F0E1892C7F228A8
   *
   * @param {boolean} p0
   * @return {any}
   */
export const _0x9F0E1892C7F228A8 = '0x9f0e1892c7f228a8';
/**
   * _0xA2091482ED42EF85
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xA2091482ED42EF85 = '0xa2091482ed42ef85';
/**
   * _0xA3716A77DCF17424
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xA3716A77DCF17424 = '0xa3716a77dcf17424';
/**
   * _0xA769D753922B031B
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xA769D753922B031B = '0xa769d753922b031b';
/**
   * _DOES_PED_HAVE_SHOTGUN
   * Returns whether the ped has a shotgun p1: 0 or 1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _DOES_PED_HAVE_SHOTGUN = '0xabc18a28bad4b46f';
/**
   * _0xAFFD0CCF31F469B8
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xAFFD0CCF31F469B8 = '0xaffd0ccf31f469b8';
/**
   * _0xB0FB9B196A3D13F0
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xB0FB9B196A3D13F0 = '0xb0fb9b196a3d13f0';
/**
   * _SET_INSTANTLY_STORE_LONGARMS_ON_DISMOUNT
   * Stores longarms to your horse on dismount
   * Params: p2 = 0
   * SET_[I - M]*
   *
   * @param {number} ped
   * @param {boolean} storeLongarms
   * @param {number} p2
   * @return {void}
   */
export const _SET_INSTANTLY_STORE_LONGARMS_ON_DISMOUNT = '0xb832f1a686b9b810';
/**
   * _0xBC9444F2FF94A9C0
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xBC9444F2FF94A9C0 = '0xbc9444f2ff94a9c0';
/**
   * _DOES_PED_HAVE_PISTOL
   * Returns whether the ped has a pistol p1: 0 or 1
   *
   * @param {number} ped
   * @param {number} p1
   * @return {boolean}
   */
export const _DOES_PED_HAVE_PISTOL = '0xbfca7afabf9d7967';
/**
   * _0xC5899C4CD2E2495D
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xC5899C4CD2E2495D = '0xc5899c4cd2e2495d';
/**
   * _0xD2209866B0CB72EA
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xD2209866B0CB72EA = '0xd2209866b0cb72ea';
/**
   * _0xD4C6E24D955FF061
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xD4C6E24D955FF061 = '0xd4c6e24d955ff061';
/**
   * _0xD53846B9C931C181
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xD53846B9C931C181 = '0xd53846b9c931c181';
/**
   * _0xD63B4BA3A02A99E0
   *
   * @param {any} p0
   * @param {any} p1
   * @return {void}
   */
export const _0xD63B4BA3A02A99E0 = '0xd63b4ba3a02a99e0';
/**
   * _0xE9B3FEC825668291
   *
   * @param {any} p0
   * @param {any} p1
   * @param {any} p2
   * @return {void}
   */
export const _0xE9B3FEC825668291 = '0xe9b3fec825668291';
/**
   * _IS_WEAPON_CLOSE_RANGE
   * _IS_WEAPON_CLOSE_RANGE?
   * returns true when it's lassos , melee, thrown weapons (matchetes and unarmed return false)
   * all guns ,bows and animal weapons return false
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_CLOSE_RANGE = '0xea522f991e120d45';
/**
   * _0xEC97101A8F311282
   *
   * @param {any} p0
   * @return {any}
   */
export const _0xEC97101A8F311282 = '0xec97101a8f311282';
/**
   * _0xECBB26529A737EF6
   *
   * @param {any} p0
   * @return {void}
   */
export const _0xECBB26529A737EF6 = '0xecbb26529a737ef6';
/**
   * _0xF08D8FEB455F2C8C
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _0xF08D8FEB455F2C8C = '0xf08d8feb455f2c8c';
/**
   * _0xF252A85B8F3F8C58
   *
   * @param {number} weaponCollection
   * @param {number} dualwieldVariant
   * @return {boolean}
   */
export const _0xF252A85B8F3F8C58 = '0xf252a85b8f3f8c58';
/**
   * _0xF2F585411E748B9C
   *
   * @param {any} p0
   * @param {any} p1
   * @return {any}
   */
export const _0xF2F585411E748B9C = '0xf2f585411e748b9c';
/**
   * _0xF8204EF17410BF43
   * Returns weaponHash
   *
   * @param {number} weaponGroupHash
   * @param {number} p1
   * @param {number} p2
   * @param {any} p3
   * @return {number}
   */
export const _0xF8204EF17410BF43 = '0xf8204ef17410bf43';
/**
   * _ADD_AMMO_TO_PED
   * addReason:
   * enum eAddItemReason : Hash
   * {
   *   ADD_REASON_AWARDS = 0xB784AD1E,
   *   ADD_REASON_CREATE_CHARACTER = 0xE2C4FF71,
   *   ADD_REASON_DEBUG = 0x5C05C64D,
   *   ADD_REASON_DEFAULT = 0x2CD419DC,
   *   ADD_REASON_GET_INVENTORY = 0xD8188685,
   *   ADD_REASON_INCENTIVE = 0x8ADC2E95,
   *   ADD_REASON_LOADOUT = 0xCA3454E6,
   *   ADD_REASON_LOAD_SAVEGAME = 0x56212906,
   *   ADD_REASON_LOOTED = 0xCA806A55,
   *   ADD_REASON_MELEE = 0x7B9BDCE7,
   *   ADD_REASON_MP_MISSION = 0xEC0E0194,
   *   ADD_REASON_NOTIFICATION = 0xC56292D2,
   *   ADD_REASON_PICKUP = 0x1A770E22,
   *   ADD_REASON_PURCHASED = 0x4A6726C9,
   *   ADD_REASON_SET_AMOUNT = 0x4504731E,
   *   ADD_REASON_SYNCING = 0x8D4B4FF4,
   *   ADD_REASON_USE_FAILED = 0xD385B670
   * };
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} amount
   * @param {number} addReason
   * @return {void}
   */
export const _ADD_AMMO_TO_PED = '0xb190bca3f4042f95';
/**
   * _ADD_AMMO_TO_PED_BY_TYPE
   * addReason: see _ADD_AMMO_TO_PED
   *
   * @param {number} ped
   * @param {number} ammoType
   * @param {number} amount
   * @param {number} addReason
   * @return {void}
   */
export const _ADD_AMMO_TO_PED_BY_TYPE = '0x106a811c6d3035f3';
/**
   * _CLEAR_PED_LAST_WEAPON_DAMAGE
   *
   * @param {number} ped
   * @return {void}
   */
export const _CLEAR_PED_LAST_WEAPON_DAMAGE = '0x087d8f4bc65f68e4';
/**
   * _CREATE_WEAPON_OBJECT
   *
   * @param {number} weaponHash
   * @param {number} ammoCount
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {boolean} showWorldModel
   * @param {number} scale
   * @return {number}
   */
export const _CREATE_WEAPON_OBJECT = '0x9888652b8ba77f73';
/**
   * _DISABLE_AMMO_TYPE_FOR_PED
   *
   * @param {number} ped
   * @param {number} ammoHash
   * @return {void}
   */
export const _DISABLE_AMMO_TYPE_FOR_PED = '0xaa5a52204e077883';
/**
   * _DISABLE_AMMO_TYPE_FOR_PED_WEAPON
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} ammoHash
   * @return {void}
   */
export const _DISABLE_AMMO_TYPE_FOR_PED_WEAPON = '0xf0d728eea3c99775';
/**
   * _ENABLE_AMMO_TYPE_FOR_PED
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {void}
   */
export const _ENABLE_AMMO_TYPE_FOR_PED = '0x3b7b7908b7adfb4b';
/**
   * _ENABLE_AMMO_TYPE_FOR_PED_WEAPON
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} ammoHash
   * @return {void}
   */
export const _ENABLE_AMMO_TYPE_FOR_PED_WEAPON = '0x23fb9faca28779c1';
/**
   * _ENABLE_WEAPON_RESTORE
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _ENABLE_WEAPON_RESTORE = '0xc395355843be134b';
/**
   * _GET_AMMO_IN_CLIP_BY_INVENTORY_UID
   *
   * @param {number} ped
   * @param {DataView} inventoryUid
   * @return {[boolean, number]}
   */
export const _GET_AMMO_IN_CLIP_BY_INVENTORY_UID = '0x678f00858980f516';
/**
   * _GET_AMMO_TYPE_FOR_WEAPON
   *
   * @param {number} weaponHash
   * @return {number}
   */
export const _GET_AMMO_TYPE_FOR_WEAPON = '0x5c2ea6c44f515f34';
/**
   * _GET_BEST_PED_WEAPON_IN_GROUP
   * If near your horse when called, weapons stored on your horse will be considered
   * Returns weaponHash
   *
   * @param {number} ped
   * @param {number} weaponGroup
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {number}
   */
export const _GET_BEST_PED_WEAPON_IN_GROUP = '0x9f67929d98e7c6e8';
/**
   * _GET_BEST_PED_WEAPON_IN_INVENTORY
   *
   * @param {number} ped
   * @param {any} p1
   * @param {DataView} guidPrimary
   * @return {any}
   */
export const _GET_BEST_PED_WEAPON_IN_INVENTORY = '0x7b98500614c8e8b8';
/**
   * _GET_CAN_TWIRL_WEAPON
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _GET_CAN_TWIRL_WEAPON = '0x6554ecce226f2a2a';
/**
   * _GET_CORRECT_KIT_EMOTE_TWIRL_GUN
   * _GET_BEST_* - _GET_CLOSEST_*
   *
   * @param {number} ped
   * @param {DataView} weaponGuid
   * @return {boolean}
   */
export const _GET_CORRECT_KIT_EMOTE_TWIRL_GUN = '0xcd356b42c57bfe01';
/**
   * _GET_CURRENT_AMMO_TYPE_FROM_GUID
   * Returns ammoHash
   *
   * @param {number} ped
   * @param {DataView} weaponGuid
   * @return {number}
   */
export const _GET_CURRENT_AMMO_TYPE_FROM_GUID = '0xaf9d167a5656d6a6';
/**
   * _GET_CURRENT_PED_WEAPON_AMMO_TYPE
   * Returns ammoHash from weaponObject (Returned by 0x6CA484C9A7377E4F)
   *
   * @param {number} ped
   * @param {number} weaponObject
   * @return {number}
   */
export const _GET_CURRENT_PED_WEAPON_AMMO_TYPE = '0x7e7b19a4355fee13';
/**
   * _GET_DEFAULT_PED_WEAPON_COLLECTION
   * Returns weaponCollection Hash
   * Example: RE_POLICECHASE_MALES_01: Carbine Repeater + Knife, LO_AGRO_PED
   *
   * @param {number} pedModel
   * @return {number}
   */
export const _GET_DEFAULT_PED_WEAPON_COLLECTION = '0xd42514c182121c23';
/**
   * _GET_DEFAULT_UNARMED_WEAPON_HASH
   * Returns the ped's default unarmed weapon hash as defined in CPedModelInfo (DefaultUnarmedWeapon).
   * Falls back to WEAPON_UNARMED if the ped doesn't have a valid model info pointer, or 0 if the ped doesn't exist.
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_DEFAULT_UNARMED_WEAPON_HASH = '0x08ff1099ed2e6e21';
/**
   * _GET_MAX_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_MAX_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON = '0x79b1a6e780266db0';
/**
   * _GET_PED_CURRENT_HELD_WEAPON
   * Returns eCurrentHeldWeapon
   * _GET_R* - _GET_T*
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_CURRENT_HELD_WEAPON = '0x8425c5f057012dab';
/**
   * _GET_PED_GUN_SPINNING_EQUIPPED_KIT_EMOTE_TWIRL
   * Returns emote Hash
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_GUN_SPINNING_EQUIPPED_KIT_EMOTE_TWIRL = '0x2c4fec3d0efa9fc0';
/**
   * _GET_PED_GUN_SPINNING_HASH_FROM_WEAPON_EMOTE_VARIATION
   * Returns iSpinHash / iVariationSpin
   *
   * @param {number} ped
   * @param {number} weaponEmoteVariation
   * @return {number}
   */
export const _GET_PED_GUN_SPINNING_HASH_FROM_WEAPON_EMOTE_VARIATION = '0xf3b1620b920d1708';
/**
   * _GET_PED_HOGTIE_WEAPON
   *
   * @param {number} ped
   * @return {number}
   */
export const _GET_PED_HOGTIE_WEAPON = '0x90eb1cb189923587';
/**
   * _GET_PED_WEAPON_IN_SLOT
   * slotHash is usually just the weaponHash name, but WEAPON_* is replaced with SLOT_*
   *
   * @param {number} ped
   * @param {number} slotHash
   * @return {number}
   */
export const _GET_PED_WEAPON_IN_SLOT = '0xdbc4b552b2ae9a83';
/**
   * _GET_PED_WEAPON_OBJECT
   * _GET_M* - _GET_PED_A*
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {number}
   */
export const _GET_PED_WEAPON_OBJECT = '0x6ca484c9a7377e4f';
/**
   * _GET_PED_WORST_WEAPON
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @return {number}
   */
export const _GET_PED_WORST_WEAPON = '0xda37a053c1522f5d';
/**
   * _GET_PLAYER_PED_QUICK_SWAP_WEAPON_BY_GUID
   * Outputs cached guids
   *
   * @param {number} ped
   * @param {DataView} guidPrimary
   * @param {DataView} guidSecondary
   * @return {void}
   */
export const _GET_PLAYER_PED_QUICK_SWAP_WEAPON_BY_GUID = '0xb7e52a058b07c7e2';
/**
   * _GET_WEAPONTYPE_MODEL
   * Gets the model hash from the weapon hash.
   *
   * @param {number} weaponHash
   * @return {number}
   */
export const _GET_WEAPONTYPE_MODEL = '0xf70825eb340e7d15';
/**
   * _GET_WEAPONTYPE_SLOT
   * Returns hash where WEAPON_ is replaced with SLOT_
   *
   * @param {number} weaponHash
   * @return {number}
   */
export const _GET_WEAPONTYPE_SLOT = '0x46f032b8ddf46cde';
/**
   * _GET_WEAPON_ATTACH_POINT
   * Returns WeaponAttachPoint
   *
   * @param {number} ped
   * @param {number} attachPoint
   * @return {number}
   */
export const _GET_WEAPON_ATTACH_POINT = '0xcad4fe9398820d24';
/**
   * _GET_WEAPON_COMPONENT_TYPE_MODEL
   *
   * @param {number} componentHash
   * @return {number}
   */
export const _GET_WEAPON_COMPONENT_TYPE_MODEL = '0x59de03442b6c9598';
/**
   * _GET_WEAPON_DAMAGE
   * Related to weapon visual damage, not actual damage.
   *
   * @param {number} weaponObject
   * @return {number}
   */
export const _GET_WEAPON_DAMAGE = '0x904103d5d2333977';
/**
   * _GET_WEAPON_DIRT
   *
   * @param {number} weaponObject
   * @return {number}
   */
export const _GET_WEAPON_DIRT = '0x810e8ae9afea7e54';
/**
   * _GET_WEAPON_EMOTE_VARIATION
   * Returns weaponEmoteVariation
   * 
   * WEAPON_EMOTE_VARIATION_INVALID = -2,
   * WEAPON_EMOTE_VARIATION_BASE,
   * WEAPON_EMOTE_VARIATION_A,
   * WEAPON_EMOTE_VARIATION_B,
   * WEAPON_EMOTE_VARIATION_C,
   * WEAPON_EMOTE_VARIATION_D,
   * WEAPON_EMOTE_VARIATION_PREVIEW,
   * WEAPON_EMOTE_NUM_VARIATIONS
   *
   * @param {number} ped
   * @param {number} variation
   * @return {number}
   */
export const _GET_WEAPON_EMOTE_VARIATION = '0x86147d05fa831d3a';
/**
   * _GET_WEAPON_GUN_SPINNING_WEAPON_EMOTE_TRICK_TYPE_HASH
   * Returns iSpinHash
   *
   * @param {number} emote
   * @param {number} weaponEmoteTrickType
   * @return {number}
   */
export const _GET_WEAPON_GUN_SPINNING_WEAPON_EMOTE_TRICK_TYPE_HASH = '0xf4601c1203b1a78d';
/**
   * _GET_WEAPON_NAME
   * Returns "WNS_INVALID" if the weapon is invalid/doesn't exist.
   *
   * @param {number} weaponHash
   * @return {string | number}
   */
export const _GET_WEAPON_NAME = '0x89cf5ff3d363311e';
/**
   * _GET_WEAPON_NAME_2
   *
   * @param {number} weaponHash
   * @return {string | number}
   */
export const _GET_WEAPON_NAME_2 = '0x6d3ac61694a791c5';
/**
   * _GET_WEAPON_NAME_WITH_PERMANENT_DEGRADATION
   *
   * @param {number} weaponHash
   * @param {number} permanentDegradationLevel
   * @return {string | number}
   */
export const _GET_WEAPON_NAME_WITH_PERMANENT_DEGRADATION = '0x7a56d66c78d8ef8e';
/**
   * _GET_WEAPON_OBJECT_FROM_PED
   * Detaches the weapon from the ped and actually removes the ped's weapon
   *
   * @param {number} ped
   * @param {boolean} p1
   * @return {number}
   */
export const _GET_WEAPON_OBJECT_FROM_PED = '0xc6a6789bb405d11c';
/**
   * _GET_WEAPON_SCALE
   *
   * @param {number} weaponObject
   * @return {number}
   */
export const _GET_WEAPON_SCALE = '0x22084ca699219624';
/**
   * _GET_WEAPON_SOOT
   *
   * @param {number} weaponObject
   * @return {number}
   */
export const _GET_WEAPON_SOOT = '0x4bf66f8878f67663';
/**
   * _GET_WEAPON_STAT_ID
   *
   * @param {number} weaponHash
   * @return {number}
   */
export const _GET_WEAPON_STAT_ID = '0x8ec44ae8decff841';
/**
   * _GET_WEAPON_TYPE_FROM_AMMO_TYPE
   *
   * @param {number} ammoType
   * @return {number}
   */
export const _GET_WEAPON_TYPE_FROM_AMMO_TYPE = '0x7aa043f6c41d151e';
/**
   * _GET_WEAPON_UNLOCK
   *
   * @param {number} weaponHash
   * @return {number}
   */
export const _GET_WEAPON_UNLOCK = '0x865f36299079fb75';
/**
   * _GIVE_WEAPON_COLLECTION_TO_PED
   *
   * @param {number} ped
   * @param {number} weaponCollection
   * @return {void}
   */
export const _GIVE_WEAPON_COLLECTION_TO_PED = '0x899a04afcc725d04';
/**
   * _GIVE_WEAPON_COMPONENT_TO_ENTITY
   * entity can be a ped or weapon object.
   *
   * @param {number} entity
   * @param {number} componentHash
   * @param {number} weaponHash
   * @param {boolean} p3
   * @return {void}
   */
export const _GIVE_WEAPON_COMPONENT_TO_ENTITY = '0x74c9090fdd1bb48e';
/**
   * _GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT
   *
   * @param {number} ped
   * @param {number} componentHash
   * @param {boolean} p3
   * @return {number}
   */
export const _GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT = '0x1a47699e8d533e8f';
/**
   * _HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON
   *
   * @param {number} entity
   * @param {number} weaponName
   * @param {number} weaponType
   * @return {boolean}
   */
export const _HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON = '0xdcf06d0cdff68424';
/**
   * _HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON_RECENTLY
   *
   * @param {number} entity
   * @param {number} weaponHash
   * @param {number} ms
   * @return {boolean}
   */
export const _HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON_RECENTLY = '0x9e2d5d6bc97a5f1e';
/**
   * _HAS_PED_GOT_WEAPON_COMPONENT
   *
   * @param {number} ped
   * @param {number} componentHash
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _HAS_PED_GOT_WEAPON_COMPONENT = '0xbbc67a6f965c688a';
/**
   * _HAS_WEAPON_ASSET_LOADED
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _HAS_WEAPON_ASSET_LOADED = '0xff07cf465f48b830';
/**
   * _HIDE_PED_WEAPONS
   * Unequip current weapon and set current weapon to WEAPON_UNARMED.
   * p0 usually 2 in R* scripts. Doesn't seem to have any effect if changed....
   * immediately: if true it will instantly switch to unarmed
   *
   * @param {number} ped
   * @param {number} p0
   * @param {boolean} immediately
   * @return {void}
   */
export const _HIDE_PED_WEAPONS = '0xfccc886ede3c63ec';
/**
   * _HOLSTER_PED_WEAPONS
   *
   * @param {number} ped
   * @param {boolean} p1
   * @param {boolean} p2
   * @param {boolean} p3
   * @param {boolean} immediately
   * @return {void}
   */
export const _HOLSTER_PED_WEAPONS = '0x94a3c1b804d291ec';
/**
   * _IS_AMMO_SILENT
   *
   * @param {number} ammoHash
   * @return {boolean}
   */
export const _IS_AMMO_SILENT = '0xd2866cba797e872e';
/**
   * _IS_AMMO_SILENT_2
   *
   * @param {number} ammoHash
   * @return {boolean}
   */
export const _IS_AMMO_SILENT_2 = '0x7efacc589b98c488';
/**
   * _IS_AMMO_TYPE_VALID_FOR_WEAPON
   *
   * @param {number} weaponHash
   * @param {number} ammoHash
   * @return {boolean}
   */
export const _IS_AMMO_TYPE_VALID_FOR_WEAPON = '0xc570b881754df609';
/**
   * _IS_AMMO_VALID
   *
   * @param {number} ammoHash
   * @return {boolean}
   */
export const _IS_AMMO_VALID = '0x1f7977c9101f807f';
/**
   * _IS_PED_CURRENT_WEAPON_HOLSTERED
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_PED_CURRENT_WEAPON_HOLSTERED = '0xbdd9c235d8d1052e';
/**
   * _IS_TARGET_PED_CONSTRAINED_BY_PED_USING_BOLAS
   *
   * @param {number} ped
   * @param {number} targetPed
   * @return {boolean}
   */
export const _IS_TARGET_PED_CONSTRAINED_BY_PED_USING_BOLAS = '0x8d50f43298ab9545';
/**
   * _IS_WEAPON_BINOCULARS
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_BINOCULARS = '0xc853230e76a152df';
/**
   * _IS_WEAPON_HOLSTER_STATE_CHANGING
   * Returns true if the ped is currently holstering or unholstering a weapon
   *
   * @param {number} ped
   * @return {boolean}
   */
export const _IS_WEAPON_HOLSTER_STATE_CHANGING = '0x2387d6e9c6b478aa';
/**
   * _IS_WEAPON_KIT
   * Returns true when the weapon passed is either a lasso, the camera or the binoculars
   * _IS_WEAPON_M* - _IS_WEAPON_P*
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_KIT = '0x6abad7b0a854f8fb';
/**
   * _IS_WEAPON_KIT_2
   * Returns true when the weapon passed is either the fishingrod, a lasso, the camera or the binoculars
   * _IS_WEAPON_M* - _IS_WEAPON_P*
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_KIT_2 = '0x49e40483948af062';
/**
   * _IS_WEAPON_KNIFE
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_KNIFE = '0x792e3ef76c911959';
/**
   * _IS_WEAPON_LANTERN
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_LANTERN = '0x79407d33328286c6';
/**
   * _IS_WEAPON_LASSO
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_LASSO = '0x6e4e1a82081eabed';
/**
   * _IS_WEAPON_ONE_HANDED
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_ONE_HANDED = '0xd955fee4b87afa07';
/**
   * _IS_WEAPON_SILENT
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_SILENT = '0x5809dbca0a37c82b';
/**
   * _IS_WEAPON_SNIPER
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_SNIPER = '0x6ad66548840472e5';
/**
   * _IS_WEAPON_THROWABLE
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_THROWABLE = '0x30e7c16b12da8211';
/**
   * _IS_WEAPON_TORCH
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_TORCH = '0x506f1de1bfc75304';
/**
   * _IS_WEAPON_TWO_HANDED
   *
   * @param {number} weaponHash
   * @return {boolean}
   */
export const _IS_WEAPON_TWO_HANDED = '0x0556e9d2ecf39d01';
/**
   * _LISTEN_PROJECTILE_HIT_EVENTS
   *
   * @param {boolean} listen
   * @return {void}
   */
export const _LISTEN_PROJECTILE_HIT_EVENTS = '0xda5d3f2c6dd5b5d4';
/**
   * _MAKE_PED_RELOAD
   *
   * @param {number} ped
   * @return {any}
   */
export const _MAKE_PED_RELOAD = '0x79e1e511ff7efb13';
/**
   * _REFILL_AMMO_IN_CLIP
   *
   * @param {number} ped
   * @param {DataView} clipInventoryUid
   * @param {number} p2
   * @return {any}
   */
export const _REFILL_AMMO_IN_CLIP = '0xdf4a3404d022adde';
/**
   * _REFILL_AMMO_IN_CURRENT_PED_WEAPON
   *
   * @param {number} ped
   * @return {any}
   */
export const _REFILL_AMMO_IN_CURRENT_PED_WEAPON = '0x0a2ab7b7abc055f4';
/**
   * _REMOVE_ALL_PED_AMMO
   *
   * @param {number} ped
   * @return {void}
   */
export const _REMOVE_ALL_PED_AMMO = '0x1b83c0deebcbb214';
/**
   * _REMOVE_AMMO_FROM_PED
   * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
   * 
   * removeReason: see REMOVE_WEAPON_FROM_PED
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} amount
   * @param {number} removeReason
   * @return {void}
   */
export const _REMOVE_AMMO_FROM_PED = '0xf4823c813cb8277d';
/**
   * _REMOVE_AMMO_FROM_PED_BY_TYPE
   * removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
   * 
   * removeReason: see REMOVE_WEAPON_FROM_PED
   *
   * @param {number} ped
   * @param {number} ammoHash
   * @param {number} amount
   * @param {number} removeReason
   * @return {void}
   */
export const _REMOVE_AMMO_FROM_PED_BY_TYPE = '0xb6cfec32e3742779';
/**
   * _REMOVE_WEAPON_ASSET
   *
   * @param {number} weaponHash
   * @return {void}
   */
export const _REMOVE_WEAPON_ASSET = '0xc3896d03e2852236';
/**
   * _REMOVE_WEAPON_COMPONENT_FROM_PED
   *
   * @param {number} ped
   * @param {number} componentHash
   * @param {number} weaponHash
   * @return {void}
   */
export const _REMOVE_WEAPON_COMPONENT_FROM_PED = '0x19f70c4d80494ff8';
/**
   * _REMOVE_WEAPON_FROM_PED_BY_GUID
   *
   * @param {number} ped
   * @param {DataView} weaponGuid
   * @param {number} removeReason
   * @return {void}
   */
export const _REMOVE_WEAPON_FROM_PED_BY_GUID = '0x51c3b71591811485';
/**
   * _REQUEST_WEAPON_ASSET
   *
   * @param {number} weaponHash
   * @param {number} p1
   * @param {boolean} p2
   * @return {void}
   */
export const _REQUEST_WEAPON_ASSET = '0x72d4cb5db927009c';
/**
   * _SEND_WEAPON_TO_INVENTORY
   * Appears to just send specified weapon to your horse holster without having to be close
   * However, the weapon is not visible on the horse holster, but you can reach the weapon on the weapon wheel
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @return {void}
   */
export const _SEND_WEAPON_TO_INVENTORY = '0xe9bd19f8121ade3e';
/**
   * _SET_ACTIVE_GUN_SPINNING_EQUIP_KIT_EMOTE_TWIRL
   * emote hashes: KIT_EMOTE_TWIRL_GUN, KIT_EMOTE_TWIRL_GUN_LEFT_HOLSTER, KIT_EMOTE_TWIRL_GUN_DUAL, 0 (to unequip)
   *
   * @param {number} ped
   * @param {number} emote
   * @return {void}
   */
export const _SET_ACTIVE_GUN_SPINNING_EQUIP_KIT_EMOTE_TWIRL = '0xcbcfff805f1b4596';
/**
   * _SET_ACTIVE_GUN_SPINNING_KIT_EMOTE_TWIRL
   * spinHash can be -1, 0 to disable
   *
   * @param {number} ped
   * @param {number} weaponEmoteTrickType
   * @param {number} spin
   * @return {void}
   */
export const _SET_ACTIVE_GUN_SPINNING_KIT_EMOTE_TWIRL = '0x01f661bb9c71b465';
/**
   * _SET_ALLOW_DUAL_WIELD
   *
   * @param {number} ped
   * @param {boolean} allow
   * @return {void}
   */
export const _SET_ALLOW_DUAL_WIELD = '0x83b8d50eb9446bba';
/**
   * _SET_AMMO_IN_TURRET
   * turretHash: WEAPON_TURRET_MAXIUM, WEAPON_TURRET_GATLING, WEAPON_TURRET_CANNON, WEAPON_TURRET_REVOLVING_CANNON
   *
   * @param {number} vehicle
   * @param {number} turretHash
   * @param {number} ammo
   * @return {void}
   */
export const _SET_AMMO_IN_TURRET = '0xbdda0c290c228159';
/**
   * _SET_AMMO_TYPE_FOR_PED_WEAPON
   *
   * @param {number} ped
   * @param {number} weaponHash
   * @param {number} ammoHash
   * @return {void}
   */
export const _SET_AMMO_TYPE_FOR_PED_WEAPON = '0xcc9c4393523833e2';
/**
   * _SET_AMMO_TYPE_FOR_PED_WEAPON_INVENTORY
   *
   * @param {number} ped
   * @param {DataView} weaponInventoryUid
   * @param {number} ammoHash
   * @return {void}
   */
export const _SET_AMMO_TYPE_FOR_PED_WEAPON_INVENTORY = '0xebe46b501bc3fbcf';
/**
   * _SET_FORCE_AUTO_EQUIP
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_FORCE_AUTO_EQUIP = '0xbe711b14a159e84f';
/**
   * _SET_FORCE_CURRENT_WEAPON_INTO_COCKED_STATE
   *
   * @param {number} ped
   * @param {number} attachPoint
   * @return {void}
   */
export const _SET_FORCE_CURRENT_WEAPON_INTO_COCKED_STATE = '0x5230d3f6ee56cfe6';
/**
   * _SET_GUN_SPINNING_INVENTORY_SLOT_ID_ACTIVATE
   * _STOP_* - _TEST_*
   *
   * @param {number} ped
   * @param {number} emoteType
   * @return {void}
   */
export const _SET_GUN_SPINNING_INVENTORY_SLOT_ID_ACTIVATE = '0x408cf580c5e96d49';
/**
   * _SET_PED_ALL_WEAPONS_VISIBILITY
   *
   * @param {number} ped
   * @param {boolean} visible
   * @return {void}
   */
export const _SET_PED_ALL_WEAPONS_VISIBILITY = '0x4f806a6cfed89468';
/**
   * _SET_PED_INFINITE_AMMO_CLIP
   *
   * @param {number} ped
   * @param {boolean} toggle
   * @return {void}
   */
export const _SET_PED_INFINITE_AMMO_CLIP = '0xfbaa1e06b6bca741';
/**
   * _SET_PED_WEAPON_ATTACH_POINT_VISIBILITY
   * attachPoint: see SET_CURRENT_PED_WEAPON
   *
   * @param {number} ped
   * @param {number} attachPoint
   * @param {boolean} visible
   * @return {void}
   */
export const _SET_PED_WEAPON_ATTACH_POINT_VISIBILITY = '0x67e21acc5c0c970c';
/**
   * _SET_VEHICLE_WEAPON_HEADING_LIMITS
   *
   * @param {number} vehicle
   * @param {number} p1
   * @param {number} minHeading
   * @param {number} maxHeading
   * @return {void}
   */
export const _SET_VEHICLE_WEAPON_HEADING_LIMITS = '0x56cb3b4305a4f7ce';
/**
   * _SET_VEHICLE_WEAPON_HEADING_LIMITS_2
   *
   * @param {number} vehicle
   * @param {number} p1
   * @param {number} minHeading
   * @param {number} maxHeading
   * @return {any}
   */
export const _SET_VEHICLE_WEAPON_HEADING_LIMITS_2 = '0xbf5987e1cde63501';
/**
   * _SET_WEAPON_DAMAGE
   * Related to weapon visual damage, not actual damage.
   *
   * @param {number} weaponObject
   * @param {number} level
   * @param {boolean} p2
   * @return {void}
   */
export const _SET_WEAPON_DAMAGE = '0xe22060121602493b';
/**
   * _SET_WEAPON_DEGRADATION
   *
   * @param {number} weaponObject
   * @param {number} level
   * @return {void}
   */
export const _SET_WEAPON_DEGRADATION = '0xa7a57e89e965d839';
/**
   * _SET_WEAPON_DIRT
   *
   * @param {number} weaponObject
   * @param {number} level
   * @param {boolean} p2
   * @return {void}
   */
export const _SET_WEAPON_DIRT = '0x812ce61debcab948';
/**
   * _SET_WEAPON_LEVEL_THRESHOLD
   * every other level will have the max value of (brokeLevel - threshold)
   *
   * @param {number} weaponObject
   * @param {number} threshold
   * @return {void}
   */
export const _SET_WEAPON_LEVEL_THRESHOLD = '0xd4071efc83794b2f';
/**
   * _SET_WEAPON_SCALE
   *
   * @param {number} weaponObject
   * @param {number} scale
   * @return {void}
   */
export const _SET_WEAPON_SCALE = '0xc3544ad0522e69b4';
/**
   * _SET_WEAPON_SOOT
   *
   * @param {number} weaponObject
   * @param {number} level
   * @param {boolean} p2
   * @return {void}
   */
export const _SET_WEAPON_SOOT = '0xa9ef4ad10bdddb57';
/**
   * _GET_MAP_ZONE_AT_COORDS
   * Returns name hash, see common:/data/levels/rdr3/mapzones.meta
   * 
   * type (-1 matches any type):
   * class CMapZone
   * {
   * public:
   *   enum class Type
   *   {
   *     STATE,
   *     TOWN,
   *     LAKE,
   *     RIVER,
   *     OIL_SPILL,
   *     SWAMP,
   *     OCEAN,
   *     CREEK,
   *     POND,
   *     GLACIER,
   *     DISTRICT,
   *     TEXT_PRINTED,
   *     TEXT_WRITTEN
   *   };
   * };
   * 
   * https://github.com/femga/rdr3_discoveries/tree/master/zones & https://alloc8or.re/rdr3/doc/enums/CMapZone__Type.txt
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @param {number} type
   * @return {number}
   */
export const _GET_MAP_ZONE_AT_COORDS = '0x43ad8fc02b429d33';
/**
   * _GET_WATER_MAP_ZONE_AT_COORDS
   * Returns the zone's name hash if its type matches one of the following:
   * - LAKE
   * - RIVER
   * - OIL_SPILL
   * - SWAMP
   * - OCEAN
   * - CREEK
   * - POND
   * - GLACIER
   *
   * @param {number} x
   * @param {number} y
   * @param {number} z
   * @return {number}
   */
export const _GET_WATER_MAP_ZONE_AT_COORDS = '0x5ba7a68a346a5a91';
/**
   * _REPORT_PLAYER_BAD_SPORT_BEHAVIOR
   * nullsub, doesn't do anything
   * however it is being used in tty scripts: [NET_BAD_SPORT_REPORT_PLAYER] Detected bad sport behavior from Player
   * badSportBehavior: BS_QUITTER = 0, BS_VEHICLE_DESTRUCTION = 1, BS_VOTED_OUT = 2
   *
   * @param {DataView} gamerHandle
   * @param {number} badSportBehaviorType
   * @return {void}
   */
export const _REPORT_PLAYER_BAD_SPORT_BEHAVIOR = '0xc31c44c43b48fde3';